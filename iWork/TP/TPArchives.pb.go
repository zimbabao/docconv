// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TPArchives.proto

package TP

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSA "github.com/zimbabao/docconv/iWork/TSA"
	TSCH "github.com/zimbabao/docconv/iWork/TSCH"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	TSWP "github.com/zimbabao/docconv/iWork/TSWP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ViewScaleMode int32

const (
	ViewScaleMode_ViewScaleMode_UserDefined ViewScaleMode = 0
	ViewScaleMode_ViewScaleMode_FitWidth    ViewScaleMode = 1
	ViewScaleMode_ViewScaleMode_FirPage     ViewScaleMode = 2
)

var ViewScaleMode_name = map[int32]string{
	0: "ViewScaleMode_UserDefined",
	1: "ViewScaleMode_FitWidth",
	2: "ViewScaleMode_FirPage",
}

var ViewScaleMode_value = map[string]int32{
	"ViewScaleMode_UserDefined": 0,
	"ViewScaleMode_FitWidth":    1,
	"ViewScaleMode_FirPage":     2,
}

func (x ViewScaleMode) Enum() *ViewScaleMode {
	p := new(ViewScaleMode)
	*p = x
	return p
}

func (x ViewScaleMode) String() string {
	return proto.EnumName(ViewScaleMode_name, int32(x))
}

func (x *ViewScaleMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ViewScaleMode_value, data, "ViewScaleMode")
	if err != nil {
		return err
	}
	*x = ViewScaleMode(value)
	return nil
}

func (ViewScaleMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{0}
}

type SettingsArchive_FootnoteKind int32

const (
	SettingsArchive_kFootnoteKindFootnotes        SettingsArchive_FootnoteKind = 0
	SettingsArchive_kFootnoteKindDocumentEndnotes SettingsArchive_FootnoteKind = 1
	SettingsArchive_kFootnoteKindSectionEndnotes  SettingsArchive_FootnoteKind = 2
)

var SettingsArchive_FootnoteKind_name = map[int32]string{
	0: "kFootnoteKindFootnotes",
	1: "kFootnoteKindDocumentEndnotes",
	2: "kFootnoteKindSectionEndnotes",
}

var SettingsArchive_FootnoteKind_value = map[string]int32{
	"kFootnoteKindFootnotes":        0,
	"kFootnoteKindDocumentEndnotes": 1,
	"kFootnoteKindSectionEndnotes":  2,
}

func (x SettingsArchive_FootnoteKind) Enum() *SettingsArchive_FootnoteKind {
	p := new(SettingsArchive_FootnoteKind)
	*p = x
	return p
}

func (x SettingsArchive_FootnoteKind) String() string {
	return proto.EnumName(SettingsArchive_FootnoteKind_name, int32(x))
}

func (x *SettingsArchive_FootnoteKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteKind_value, data, "SettingsArchive_FootnoteKind")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteKind(value)
	return nil
}

func (SettingsArchive_FootnoteKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{2, 0}
}

type SettingsArchive_FootnoteFormat int32

const (
	SettingsArchive_kFootnoteFormatNumeric             SettingsArchive_FootnoteFormat = 0
	SettingsArchive_kFootnoteFormatRoman               SettingsArchive_FootnoteFormat = 1
	SettingsArchive_kFootnoteFormatSymbolic            SettingsArchive_FootnoteFormat = 2
	SettingsArchive_kFootnoteFormatJapaneseNumeric     SettingsArchive_FootnoteFormat = 3
	SettingsArchive_kFootnoteFormatJapaneseIdeographic SettingsArchive_FootnoteFormat = 4
)

var SettingsArchive_FootnoteFormat_name = map[int32]string{
	0: "kFootnoteFormatNumeric",
	1: "kFootnoteFormatRoman",
	2: "kFootnoteFormatSymbolic",
	3: "kFootnoteFormatJapaneseNumeric",
	4: "kFootnoteFormatJapaneseIdeographic",
}

var SettingsArchive_FootnoteFormat_value = map[string]int32{
	"kFootnoteFormatNumeric":             0,
	"kFootnoteFormatRoman":               1,
	"kFootnoteFormatSymbolic":            2,
	"kFootnoteFormatJapaneseNumeric":     3,
	"kFootnoteFormatJapaneseIdeographic": 4,
}

func (x SettingsArchive_FootnoteFormat) Enum() *SettingsArchive_FootnoteFormat {
	p := new(SettingsArchive_FootnoteFormat)
	*p = x
	return p
}

func (x SettingsArchive_FootnoteFormat) String() string {
	return proto.EnumName(SettingsArchive_FootnoteFormat_name, int32(x))
}

func (x *SettingsArchive_FootnoteFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteFormat_value, data, "SettingsArchive_FootnoteFormat")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteFormat(value)
	return nil
}

func (SettingsArchive_FootnoteFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{2, 1}
}

type SettingsArchive_FootnoteNumbering int32

const (
	SettingsArchive_kFootnoteNumberingContinuous         SettingsArchive_FootnoteNumbering = 0
	SettingsArchive_kFootnoteNumberingRestartEachPage    SettingsArchive_FootnoteNumbering = 1
	SettingsArchive_kFootnoteNumberingRestartEachSection SettingsArchive_FootnoteNumbering = 2
)

var SettingsArchive_FootnoteNumbering_name = map[int32]string{
	0: "kFootnoteNumberingContinuous",
	1: "kFootnoteNumberingRestartEachPage",
	2: "kFootnoteNumberingRestartEachSection",
}

var SettingsArchive_FootnoteNumbering_value = map[string]int32{
	"kFootnoteNumberingContinuous":         0,
	"kFootnoteNumberingRestartEachPage":    1,
	"kFootnoteNumberingRestartEachSection": 2,
}

func (x SettingsArchive_FootnoteNumbering) Enum() *SettingsArchive_FootnoteNumbering {
	p := new(SettingsArchive_FootnoteNumbering)
	*p = x
	return p
}

func (x SettingsArchive_FootnoteNumbering) String() string {
	return proto.EnumName(SettingsArchive_FootnoteNumbering_name, int32(x))
}

func (x *SettingsArchive_FootnoteNumbering) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SettingsArchive_FootnoteNumbering_value, data, "SettingsArchive_FootnoteNumbering")
	if err != nil {
		return err
	}
	*x = SettingsArchive_FootnoteNumbering(value)
	return nil
}

func (SettingsArchive_FootnoteNumbering) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{2, 2}
}

type PageHintArchive_PageKind int32

const (
	PageHintArchive_kPageKindNone         PageHintArchive_PageKind = 0
	PageHintArchive_kPageKindText         PageHintArchive_PageKind = 1
	PageHintArchive_kPageKindFiller       PageHintArchive_PageKind = 2
	PageHintArchive_kPageKindOrphan       PageHintArchive_PageKind = 3
	PageHintArchive_kPageKindEndnote      PageHintArchive_PageKind = 4
	PageHintArchive_kPageKindDirty        PageHintArchive_PageKind = 5
	PageHintArchive_kTPPageKindPageLayout PageHintArchive_PageKind = 6
)

var PageHintArchive_PageKind_name = map[int32]string{
	0: "kPageKindNone",
	1: "kPageKindText",
	2: "kPageKindFiller",
	3: "kPageKindOrphan",
	4: "kPageKindEndnote",
	5: "kPageKindDirty",
	6: "kTPPageKindPageLayout",
}

var PageHintArchive_PageKind_value = map[string]int32{
	"kPageKindNone":         0,
	"kPageKindText":         1,
	"kPageKindFiller":       2,
	"kPageKindOrphan":       3,
	"kPageKindEndnote":      4,
	"kPageKindDirty":        5,
	"kTPPageKindPageLayout": 6,
}

func (x PageHintArchive_PageKind) Enum() *PageHintArchive_PageKind {
	p := new(PageHintArchive_PageKind)
	*p = x
	return p
}

func (x PageHintArchive_PageKind) String() string {
	return proto.EnumName(PageHintArchive_PageKind_name, int32(x))
}

func (x *PageHintArchive_PageKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PageHintArchive_PageKind_value, data, "PageHintArchive_PageKind")
	if err != nil {
		return err
	}
	*x = PageHintArchive_PageKind(value)
	return nil
}

func (PageHintArchive_PageKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{10, 0}
}

type DocumentArchive struct {
	Super                  *TSA.DocumentArchive `protobuf:"bytes,15,req,name=super" json:"super,omitempty"`
	Stylesheet             *TSP.Reference       `protobuf:"bytes,2,opt,name=stylesheet" json:"stylesheet,omitempty"`
	FloatingDrawables      *TSP.Reference       `protobuf:"bytes,3,opt,name=floating_drawables,json=floatingDrawables" json:"floating_drawables,omitempty"`
	BodyStorage            *TSP.Reference       `protobuf:"bytes,4,opt,name=body_storage,json=bodyStorage" json:"body_storage,omitempty"`
	Section                *TSP.Reference       `protobuf:"bytes,5,opt,name=section" json:"section,omitempty"`
	Theme                  *TSP.Reference       `protobuf:"bytes,6,opt,name=theme" json:"theme,omitempty"`
	Settings               *TSP.Reference       `protobuf:"bytes,7,opt,name=settings" json:"settings,omitempty"`
	DeprecatedLayoutState  *TSP.Reference       `protobuf:"bytes,11,opt,name=deprecated_layout_state,json=deprecatedLayoutState" json:"deprecated_layout_state,omitempty"`
	DeprecatedViewState    *TSP.Reference       `protobuf:"bytes,12,opt,name=deprecated_view_state,json=deprecatedViewState" json:"deprecated_view_state,omitempty"`
	CitationRecords        []*TSP.Reference     `protobuf:"bytes,13,rep,name=citation_records,json=citationRecords" json:"citation_records,omitempty"`
	TocStyles              []*TSP.Reference     `protobuf:"bytes,14,rep,name=toc_styles,json=tocStyles" json:"toc_styles,omitempty"`
	ChangeSessions         []*TSP.Reference     `protobuf:"bytes,16,rep,name=change_sessions,json=changeSessions" json:"change_sessions,omitempty"`
	DrawablesZorder        *TSP.Reference       `protobuf:"bytes,20,opt,name=drawables_zorder,json=drawablesZorder" json:"drawables_zorder,omitempty"`
	UsesSingleHeaderFooter *bool                `protobuf:"varint,21,opt,name=uses_single_header_footer,json=usesSingleHeaderFooter" json:"uses_single_header_footer,omitempty"`
	PageWidth              *float32             `protobuf:"fixed32,30,opt,name=page_width,json=pageWidth" json:"page_width,omitempty"`
	PageHeight             *float32             `protobuf:"fixed32,31,opt,name=page_height,json=pageHeight" json:"page_height,omitempty"`
	LeftMargin             *float32             `protobuf:"fixed32,32,opt,name=left_margin,json=leftMargin" json:"left_margin,omitempty"`
	RightMargin            *float32             `protobuf:"fixed32,33,opt,name=right_margin,json=rightMargin" json:"right_margin,omitempty"`
	TopMargin              *float32             `protobuf:"fixed32,34,opt,name=top_margin,json=topMargin" json:"top_margin,omitempty"`
	BottomMargin           *float32             `protobuf:"fixed32,35,opt,name=bottom_margin,json=bottomMargin" json:"bottom_margin,omitempty"`
	HeaderMargin           *float32             `protobuf:"fixed32,36,opt,name=header_margin,json=headerMargin" json:"header_margin,omitempty"`
	FooterMargin           *float32             `protobuf:"fixed32,37,opt,name=footer_margin,json=footerMargin" json:"footer_margin,omitempty"`
	PageScale              *float32             `protobuf:"fixed32,38,opt,name=page_scale,json=pageScale" json:"page_scale,omitempty"`
	LayoutBodyVertically   *bool                `protobuf:"varint,39,opt,name=layout_body_vertically,json=layoutBodyVertically" json:"layout_body_vertically,omitempty"`
	ChangeTrackingEnabled  *bool                `protobuf:"varint,40,opt,name=change_tracking_enabled,json=changeTrackingEnabled" json:"change_tracking_enabled,omitempty"`
	TablesCustomFormatList *TSP.Reference       `protobuf:"bytes,41,opt,name=tables_custom_format_list,json=tablesCustomFormatList" json:"tables_custom_format_list,omitempty"`
	Orientation            *uint32              `protobuf:"varint,42,opt,name=orientation,def=0" json:"orientation,omitempty"`
	PrinterId              *string              `protobuf:"bytes,43,opt,name=printer_id,json=printerId" json:"printer_id,omitempty"`
	PaperId                *string              `protobuf:"bytes,44,opt,name=paper_id,json=paperId" json:"paper_id,omitempty"`
	ChangeTrackingPaused   *bool                `protobuf:"varint,45,opt,name=change_tracking_paused,json=changeTrackingPaused" json:"change_tracking_paused,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *DocumentArchive) Reset()         { *m = DocumentArchive{} }
func (m *DocumentArchive) String() string { return proto.CompactTextString(m) }
func (*DocumentArchive) ProtoMessage()    {}
func (*DocumentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{0}
}

func (m *DocumentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentArchive.Unmarshal(m, b)
}
func (m *DocumentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentArchive.Marshal(b, m, deterministic)
}
func (m *DocumentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentArchive.Merge(m, src)
}
func (m *DocumentArchive) XXX_Size() int {
	return xxx_messageInfo_DocumentArchive.Size(m)
}
func (m *DocumentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentArchive proto.InternalMessageInfo

const Default_DocumentArchive_Orientation uint32 = 0

func (m *DocumentArchive) GetSuper() *TSA.DocumentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DocumentArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *DocumentArchive) GetFloatingDrawables() *TSP.Reference {
	if m != nil {
		return m.FloatingDrawables
	}
	return nil
}

func (m *DocumentArchive) GetBodyStorage() *TSP.Reference {
	if m != nil {
		return m.BodyStorage
	}
	return nil
}

func (m *DocumentArchive) GetSection() *TSP.Reference {
	if m != nil {
		return m.Section
	}
	return nil
}

func (m *DocumentArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *DocumentArchive) GetSettings() *TSP.Reference {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *DocumentArchive) GetDeprecatedLayoutState() *TSP.Reference {
	if m != nil {
		return m.DeprecatedLayoutState
	}
	return nil
}

func (m *DocumentArchive) GetDeprecatedViewState() *TSP.Reference {
	if m != nil {
		return m.DeprecatedViewState
	}
	return nil
}

func (m *DocumentArchive) GetCitationRecords() []*TSP.Reference {
	if m != nil {
		return m.CitationRecords
	}
	return nil
}

func (m *DocumentArchive) GetTocStyles() []*TSP.Reference {
	if m != nil {
		return m.TocStyles
	}
	return nil
}

func (m *DocumentArchive) GetChangeSessions() []*TSP.Reference {
	if m != nil {
		return m.ChangeSessions
	}
	return nil
}

func (m *DocumentArchive) GetDrawablesZorder() *TSP.Reference {
	if m != nil {
		return m.DrawablesZorder
	}
	return nil
}

func (m *DocumentArchive) GetUsesSingleHeaderFooter() bool {
	if m != nil && m.UsesSingleHeaderFooter != nil {
		return *m.UsesSingleHeaderFooter
	}
	return false
}

func (m *DocumentArchive) GetPageWidth() float32 {
	if m != nil && m.PageWidth != nil {
		return *m.PageWidth
	}
	return 0
}

func (m *DocumentArchive) GetPageHeight() float32 {
	if m != nil && m.PageHeight != nil {
		return *m.PageHeight
	}
	return 0
}

func (m *DocumentArchive) GetLeftMargin() float32 {
	if m != nil && m.LeftMargin != nil {
		return *m.LeftMargin
	}
	return 0
}

func (m *DocumentArchive) GetRightMargin() float32 {
	if m != nil && m.RightMargin != nil {
		return *m.RightMargin
	}
	return 0
}

func (m *DocumentArchive) GetTopMargin() float32 {
	if m != nil && m.TopMargin != nil {
		return *m.TopMargin
	}
	return 0
}

func (m *DocumentArchive) GetBottomMargin() float32 {
	if m != nil && m.BottomMargin != nil {
		return *m.BottomMargin
	}
	return 0
}

func (m *DocumentArchive) GetHeaderMargin() float32 {
	if m != nil && m.HeaderMargin != nil {
		return *m.HeaderMargin
	}
	return 0
}

func (m *DocumentArchive) GetFooterMargin() float32 {
	if m != nil && m.FooterMargin != nil {
		return *m.FooterMargin
	}
	return 0
}

func (m *DocumentArchive) GetPageScale() float32 {
	if m != nil && m.PageScale != nil {
		return *m.PageScale
	}
	return 0
}

func (m *DocumentArchive) GetLayoutBodyVertically() bool {
	if m != nil && m.LayoutBodyVertically != nil {
		return *m.LayoutBodyVertically
	}
	return false
}

func (m *DocumentArchive) GetChangeTrackingEnabled() bool {
	if m != nil && m.ChangeTrackingEnabled != nil {
		return *m.ChangeTrackingEnabled
	}
	return false
}

func (m *DocumentArchive) GetTablesCustomFormatList() *TSP.Reference {
	if m != nil {
		return m.TablesCustomFormatList
	}
	return nil
}

func (m *DocumentArchive) GetOrientation() uint32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return Default_DocumentArchive_Orientation
}

func (m *DocumentArchive) GetPrinterId() string {
	if m != nil && m.PrinterId != nil {
		return *m.PrinterId
	}
	return ""
}

func (m *DocumentArchive) GetPaperId() string {
	if m != nil && m.PaperId != nil {
		return *m.PaperId
	}
	return ""
}

func (m *DocumentArchive) GetChangeTrackingPaused() bool {
	if m != nil && m.ChangeTrackingPaused != nil {
		return *m.ChangeTrackingPaused
	}
	return false
}

type ThemeArchive struct {
	Super                *TSS.ThemeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ThemeArchive) Reset()         { *m = ThemeArchive{} }
func (m *ThemeArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeArchive) ProtoMessage()    {}
func (*ThemeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{1}
}

func (m *ThemeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThemeArchive.Unmarshal(m, b)
}
func (m *ThemeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThemeArchive.Marshal(b, m, deterministic)
}
func (m *ThemeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeArchive.Merge(m, src)
}
func (m *ThemeArchive) XXX_Size() int {
	return xxx_messageInfo_ThemeArchive.Size(m)
}
func (m *ThemeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeArchive proto.InternalMessageInfo

func (m *ThemeArchive) GetSuper() *TSS.ThemeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type SettingsArchive struct {
	Body                 *bool                              `protobuf:"varint,1,opt,name=body,def=1" json:"body,omitempty"`
	Headers              *bool                              `protobuf:"varint,2,opt,name=headers,def=1" json:"headers,omitempty"`
	Footers              *bool                              `protobuf:"varint,3,opt,name=footers,def=1" json:"footers,omitempty"`
	Preview              *bool                              `protobuf:"varint,4,opt,name=preview,def=1" json:"preview,omitempty"`
	CopyMovies           *bool                              `protobuf:"varint,5,opt,name=copy_movies,json=copyMovies,def=1" json:"copy_movies,omitempty"`
	CopyAssets           *bool                              `protobuf:"varint,6,opt,name=copy_assets,json=copyAssets,def=1" json:"copy_assets,omitempty"`
	PlaceholderAuthoring *bool                              `protobuf:"varint,7,opt,name=placeholder_authoring,json=placeholderAuthoring,def=0" json:"placeholder_authoring,omitempty"`
	LinksEnabled         *bool                              `protobuf:"varint,8,opt,name=links_enabled,json=linksEnabled,def=1" json:"links_enabled,omitempty"`
	Hyphenation          *bool                              `protobuf:"varint,9,opt,name=hyphenation,def=0" json:"hyphenation,omitempty"`
	UseLigatures         *bool                              `protobuf:"varint,10,opt,name=use_ligatures,json=useLigatures,def=0" json:"use_ligatures,omitempty"`
	TocLinksEnabled      *bool                              `protobuf:"varint,11,opt,name=toc_links_enabled,json=tocLinksEnabled,def=0" json:"toc_links_enabled,omitempty"`
	ShowCtMarkup         *bool                              `protobuf:"varint,12,opt,name=show_ct_markup,json=showCtMarkup,def=1" json:"show_ct_markup,omitempty"`
	ShowCtDeletions      *bool                              `protobuf:"varint,13,opt,name=show_ct_deletions,json=showCtDeletions,def=1" json:"show_ct_deletions,omitempty"`
	CtBubblesVisibility  *int32                             `protobuf:"varint,14,opt,name=ct_bubbles_visibility,json=ctBubblesVisibility" json:"ct_bubbles_visibility,omitempty"`
	ChangeBarsVisible    *bool                              `protobuf:"varint,15,opt,name=change_bars_visible,json=changeBarsVisible,def=1" json:"change_bars_visible,omitempty"`
	FormatChangesVisible *bool                              `protobuf:"varint,16,opt,name=format_changes_visible,json=formatChangesVisible,def=1" json:"format_changes_visible,omitempty"`
	AnnotationsVisible   *bool                              `protobuf:"varint,17,opt,name=annotations_visible,json=annotationsVisible,def=1" json:"annotations_visible,omitempty"`
	DocumentIsRtl        *bool                              `protobuf:"varint,18,opt,name=document_is_rtl,json=documentIsRtl,def=0" json:"document_is_rtl,omitempty"`
	DecimalTab           *string                            `protobuf:"bytes,20,opt,name=decimal_tab,json=decimalTab" json:"decimal_tab,omitempty"`
	Language             *string                            `protobuf:"bytes,21,opt,name=language" json:"language,omitempty"`
	HyphenationLanguage  *string                            `protobuf:"bytes,22,opt,name=hyphenation_language,json=hyphenationLanguage" json:"hyphenation_language,omitempty"`
	CreationLocale       *string                            `protobuf:"bytes,23,opt,name=creation_locale,json=creationLocale" json:"creation_locale,omitempty"`
	LastLocale           *string                            `protobuf:"bytes,24,opt,name=last_locale,json=lastLocale" json:"last_locale,omitempty"`
	OrigTemplate         *string                            `protobuf:"bytes,25,opt,name=orig_template,json=origTemplate" json:"orig_template,omitempty"`
	CreationDate         *string                            `protobuf:"bytes,26,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
	BibliographyFormat   *string                            `protobuf:"bytes,27,opt,name=bibliography_format,json=bibliographyFormat" json:"bibliography_format,omitempty"`
	FootnoteKind         *SettingsArchive_FootnoteKind      `protobuf:"varint,30,opt,name=footnote_kind,json=footnoteKind,enum=TP.SettingsArchive_FootnoteKind" json:"footnote_kind,omitempty"`
	FootnoteFormat       *SettingsArchive_FootnoteFormat    `protobuf:"varint,31,opt,name=footnote_format,json=footnoteFormat,enum=TP.SettingsArchive_FootnoteFormat" json:"footnote_format,omitempty"`
	FootnoteNumbering    *SettingsArchive_FootnoteNumbering `protobuf:"varint,32,opt,name=footnote_numbering,json=footnoteNumbering,enum=TP.SettingsArchive_FootnoteNumbering" json:"footnote_numbering,omitempty"`
	FootnoteGap          *int32                             `protobuf:"varint,33,opt,name=footnote_gap,json=footnoteGap" json:"footnote_gap,omitempty"`
	SectionAuthoring     *bool                              `protobuf:"varint,40,opt,name=section_authoring,json=sectionAuthoring,def=0" json:"section_authoring,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SettingsArchive) Reset()         { *m = SettingsArchive{} }
func (m *SettingsArchive) String() string { return proto.CompactTextString(m) }
func (*SettingsArchive) ProtoMessage()    {}
func (*SettingsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{2}
}

func (m *SettingsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsArchive.Unmarshal(m, b)
}
func (m *SettingsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsArchive.Marshal(b, m, deterministic)
}
func (m *SettingsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsArchive.Merge(m, src)
}
func (m *SettingsArchive) XXX_Size() int {
	return xxx_messageInfo_SettingsArchive.Size(m)
}
func (m *SettingsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsArchive proto.InternalMessageInfo

const Default_SettingsArchive_Body bool = true
const Default_SettingsArchive_Headers bool = true
const Default_SettingsArchive_Footers bool = true
const Default_SettingsArchive_Preview bool = true
const Default_SettingsArchive_CopyMovies bool = true
const Default_SettingsArchive_CopyAssets bool = true
const Default_SettingsArchive_PlaceholderAuthoring bool = false
const Default_SettingsArchive_LinksEnabled bool = true
const Default_SettingsArchive_Hyphenation bool = false
const Default_SettingsArchive_UseLigatures bool = false
const Default_SettingsArchive_TocLinksEnabled bool = false
const Default_SettingsArchive_ShowCtMarkup bool = true
const Default_SettingsArchive_ShowCtDeletions bool = true
const Default_SettingsArchive_ChangeBarsVisible bool = true
const Default_SettingsArchive_FormatChangesVisible bool = true
const Default_SettingsArchive_AnnotationsVisible bool = true
const Default_SettingsArchive_DocumentIsRtl bool = false
const Default_SettingsArchive_SectionAuthoring bool = false

func (m *SettingsArchive) GetBody() bool {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return Default_SettingsArchive_Body
}

func (m *SettingsArchive) GetHeaders() bool {
	if m != nil && m.Headers != nil {
		return *m.Headers
	}
	return Default_SettingsArchive_Headers
}

func (m *SettingsArchive) GetFooters() bool {
	if m != nil && m.Footers != nil {
		return *m.Footers
	}
	return Default_SettingsArchive_Footers
}

func (m *SettingsArchive) GetPreview() bool {
	if m != nil && m.Preview != nil {
		return *m.Preview
	}
	return Default_SettingsArchive_Preview
}

func (m *SettingsArchive) GetCopyMovies() bool {
	if m != nil && m.CopyMovies != nil {
		return *m.CopyMovies
	}
	return Default_SettingsArchive_CopyMovies
}

func (m *SettingsArchive) GetCopyAssets() bool {
	if m != nil && m.CopyAssets != nil {
		return *m.CopyAssets
	}
	return Default_SettingsArchive_CopyAssets
}

func (m *SettingsArchive) GetPlaceholderAuthoring() bool {
	if m != nil && m.PlaceholderAuthoring != nil {
		return *m.PlaceholderAuthoring
	}
	return Default_SettingsArchive_PlaceholderAuthoring
}

func (m *SettingsArchive) GetLinksEnabled() bool {
	if m != nil && m.LinksEnabled != nil {
		return *m.LinksEnabled
	}
	return Default_SettingsArchive_LinksEnabled
}

func (m *SettingsArchive) GetHyphenation() bool {
	if m != nil && m.Hyphenation != nil {
		return *m.Hyphenation
	}
	return Default_SettingsArchive_Hyphenation
}

func (m *SettingsArchive) GetUseLigatures() bool {
	if m != nil && m.UseLigatures != nil {
		return *m.UseLigatures
	}
	return Default_SettingsArchive_UseLigatures
}

func (m *SettingsArchive) GetTocLinksEnabled() bool {
	if m != nil && m.TocLinksEnabled != nil {
		return *m.TocLinksEnabled
	}
	return Default_SettingsArchive_TocLinksEnabled
}

func (m *SettingsArchive) GetShowCtMarkup() bool {
	if m != nil && m.ShowCtMarkup != nil {
		return *m.ShowCtMarkup
	}
	return Default_SettingsArchive_ShowCtMarkup
}

func (m *SettingsArchive) GetShowCtDeletions() bool {
	if m != nil && m.ShowCtDeletions != nil {
		return *m.ShowCtDeletions
	}
	return Default_SettingsArchive_ShowCtDeletions
}

func (m *SettingsArchive) GetCtBubblesVisibility() int32 {
	if m != nil && m.CtBubblesVisibility != nil {
		return *m.CtBubblesVisibility
	}
	return 0
}

func (m *SettingsArchive) GetChangeBarsVisible() bool {
	if m != nil && m.ChangeBarsVisible != nil {
		return *m.ChangeBarsVisible
	}
	return Default_SettingsArchive_ChangeBarsVisible
}

func (m *SettingsArchive) GetFormatChangesVisible() bool {
	if m != nil && m.FormatChangesVisible != nil {
		return *m.FormatChangesVisible
	}
	return Default_SettingsArchive_FormatChangesVisible
}

func (m *SettingsArchive) GetAnnotationsVisible() bool {
	if m != nil && m.AnnotationsVisible != nil {
		return *m.AnnotationsVisible
	}
	return Default_SettingsArchive_AnnotationsVisible
}

func (m *SettingsArchive) GetDocumentIsRtl() bool {
	if m != nil && m.DocumentIsRtl != nil {
		return *m.DocumentIsRtl
	}
	return Default_SettingsArchive_DocumentIsRtl
}

func (m *SettingsArchive) GetDecimalTab() string {
	if m != nil && m.DecimalTab != nil {
		return *m.DecimalTab
	}
	return ""
}

func (m *SettingsArchive) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *SettingsArchive) GetHyphenationLanguage() string {
	if m != nil && m.HyphenationLanguage != nil {
		return *m.HyphenationLanguage
	}
	return ""
}

func (m *SettingsArchive) GetCreationLocale() string {
	if m != nil && m.CreationLocale != nil {
		return *m.CreationLocale
	}
	return ""
}

func (m *SettingsArchive) GetLastLocale() string {
	if m != nil && m.LastLocale != nil {
		return *m.LastLocale
	}
	return ""
}

func (m *SettingsArchive) GetOrigTemplate() string {
	if m != nil && m.OrigTemplate != nil {
		return *m.OrigTemplate
	}
	return ""
}

func (m *SettingsArchive) GetCreationDate() string {
	if m != nil && m.CreationDate != nil {
		return *m.CreationDate
	}
	return ""
}

func (m *SettingsArchive) GetBibliographyFormat() string {
	if m != nil && m.BibliographyFormat != nil {
		return *m.BibliographyFormat
	}
	return ""
}

func (m *SettingsArchive) GetFootnoteKind() SettingsArchive_FootnoteKind {
	if m != nil && m.FootnoteKind != nil {
		return *m.FootnoteKind
	}
	return SettingsArchive_kFootnoteKindFootnotes
}

func (m *SettingsArchive) GetFootnoteFormat() SettingsArchive_FootnoteFormat {
	if m != nil && m.FootnoteFormat != nil {
		return *m.FootnoteFormat
	}
	return SettingsArchive_kFootnoteFormatNumeric
}

func (m *SettingsArchive) GetFootnoteNumbering() SettingsArchive_FootnoteNumbering {
	if m != nil && m.FootnoteNumbering != nil {
		return *m.FootnoteNumbering
	}
	return SettingsArchive_kFootnoteNumberingContinuous
}

func (m *SettingsArchive) GetFootnoteGap() int32 {
	if m != nil && m.FootnoteGap != nil {
		return *m.FootnoteGap
	}
	return 0
}

func (m *SettingsArchive) GetSectionAuthoring() bool {
	if m != nil && m.SectionAuthoring != nil {
		return *m.SectionAuthoring
	}
	return Default_SettingsArchive_SectionAuthoring
}

type PlaceholderArchive struct {
	Super                *TSWP.ShapeInfoArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PlaceholderArchive) Reset()         { *m = PlaceholderArchive{} }
func (m *PlaceholderArchive) String() string { return proto.CompactTextString(m) }
func (*PlaceholderArchive) ProtoMessage()    {}
func (*PlaceholderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{3}
}

func (m *PlaceholderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaceholderArchive.Unmarshal(m, b)
}
func (m *PlaceholderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaceholderArchive.Marshal(b, m, deterministic)
}
func (m *PlaceholderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceholderArchive.Merge(m, src)
}
func (m *PlaceholderArchive) XXX_Size() int {
	return xxx_messageInfo_PlaceholderArchive.Size(m)
}
func (m *PlaceholderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceholderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceholderArchive proto.InternalMessageInfo

func (m *PlaceholderArchive) GetSuper() *TSWP.ShapeInfoArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type FloatingDrawablesArchive struct {
	PageGroups           []*FloatingDrawablesArchive_PageGroup `protobuf:"bytes,1,rep,name=page_groups,json=pageGroups" json:"page_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *FloatingDrawablesArchive) Reset()         { *m = FloatingDrawablesArchive{} }
func (m *FloatingDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive) ProtoMessage()    {}
func (*FloatingDrawablesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{4}
}

func (m *FloatingDrawablesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatingDrawablesArchive.Unmarshal(m, b)
}
func (m *FloatingDrawablesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatingDrawablesArchive.Marshal(b, m, deterministic)
}
func (m *FloatingDrawablesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatingDrawablesArchive.Merge(m, src)
}
func (m *FloatingDrawablesArchive) XXX_Size() int {
	return xxx_messageInfo_FloatingDrawablesArchive.Size(m)
}
func (m *FloatingDrawablesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatingDrawablesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FloatingDrawablesArchive proto.InternalMessageInfo

func (m *FloatingDrawablesArchive) GetPageGroups() []*FloatingDrawablesArchive_PageGroup {
	if m != nil {
		return m.PageGroups
	}
	return nil
}

type FloatingDrawablesArchive_DrawableEntry struct {
	Drawable             *TSP.Reference `protobuf:"bytes,1,opt,name=drawable" json:"drawable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FloatingDrawablesArchive_DrawableEntry) Reset() {
	*m = FloatingDrawablesArchive_DrawableEntry{}
}
func (m *FloatingDrawablesArchive_DrawableEntry) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive_DrawableEntry) ProtoMessage()    {}
func (*FloatingDrawablesArchive_DrawableEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{4, 0}
}

func (m *FloatingDrawablesArchive_DrawableEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry.Unmarshal(m, b)
}
func (m *FloatingDrawablesArchive_DrawableEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry.Marshal(b, m, deterministic)
}
func (m *FloatingDrawablesArchive_DrawableEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry.Merge(m, src)
}
func (m *FloatingDrawablesArchive_DrawableEntry) XXX_Size() int {
	return xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry.Size(m)
}
func (m *FloatingDrawablesArchive_DrawableEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FloatingDrawablesArchive_DrawableEntry proto.InternalMessageInfo

func (m *FloatingDrawablesArchive_DrawableEntry) GetDrawable() *TSP.Reference {
	if m != nil {
		return m.Drawable
	}
	return nil
}

type FloatingDrawablesArchive_PageGroup struct {
	PageIndex            *uint32                                   `protobuf:"varint,1,req,name=page_index,json=pageIndex" json:"page_index,omitempty"`
	BackgroundDrawables  []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,2,rep,name=background_drawables,json=backgroundDrawables" json:"background_drawables,omitempty"`
	ForegroundDrawables  []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,3,rep,name=foreground_drawables,json=foregroundDrawables" json:"foreground_drawables,omitempty"`
	Drawables            []*FloatingDrawablesArchive_DrawableEntry `protobuf:"bytes,4,rep,name=drawables" json:"drawables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *FloatingDrawablesArchive_PageGroup) Reset()         { *m = FloatingDrawablesArchive_PageGroup{} }
func (m *FloatingDrawablesArchive_PageGroup) String() string { return proto.CompactTextString(m) }
func (*FloatingDrawablesArchive_PageGroup) ProtoMessage()    {}
func (*FloatingDrawablesArchive_PageGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{4, 1}
}

func (m *FloatingDrawablesArchive_PageGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatingDrawablesArchive_PageGroup.Unmarshal(m, b)
}
func (m *FloatingDrawablesArchive_PageGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatingDrawablesArchive_PageGroup.Marshal(b, m, deterministic)
}
func (m *FloatingDrawablesArchive_PageGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatingDrawablesArchive_PageGroup.Merge(m, src)
}
func (m *FloatingDrawablesArchive_PageGroup) XXX_Size() int {
	return xxx_messageInfo_FloatingDrawablesArchive_PageGroup.Size(m)
}
func (m *FloatingDrawablesArchive_PageGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatingDrawablesArchive_PageGroup.DiscardUnknown(m)
}

var xxx_messageInfo_FloatingDrawablesArchive_PageGroup proto.InternalMessageInfo

func (m *FloatingDrawablesArchive_PageGroup) GetPageIndex() uint32 {
	if m != nil && m.PageIndex != nil {
		return *m.PageIndex
	}
	return 0
}

func (m *FloatingDrawablesArchive_PageGroup) GetBackgroundDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.BackgroundDrawables
	}
	return nil
}

func (m *FloatingDrawablesArchive_PageGroup) GetForegroundDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.ForegroundDrawables
	}
	return nil
}

func (m *FloatingDrawablesArchive_PageGroup) GetDrawables() []*FloatingDrawablesArchive_DrawableEntry {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type DrawablesZOrderArchive struct {
	Drawables            []*TSP.Reference `protobuf:"bytes,1,rep,name=drawables" json:"drawables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DrawablesZOrderArchive) Reset()         { *m = DrawablesZOrderArchive{} }
func (m *DrawablesZOrderArchive) String() string { return proto.CompactTextString(m) }
func (*DrawablesZOrderArchive) ProtoMessage()    {}
func (*DrawablesZOrderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{5}
}

func (m *DrawablesZOrderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrawablesZOrderArchive.Unmarshal(m, b)
}
func (m *DrawablesZOrderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrawablesZOrderArchive.Marshal(b, m, deterministic)
}
func (m *DrawablesZOrderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrawablesZOrderArchive.Merge(m, src)
}
func (m *DrawablesZOrderArchive) XXX_Size() int {
	return xxx_messageInfo_DrawablesZOrderArchive.Size(m)
}
func (m *DrawablesZOrderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DrawablesZOrderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DrawablesZOrderArchive proto.InternalMessageInfo

func (m *DrawablesZOrderArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type PageMasterArchive struct {
	Headers              []*TSP.Reference `protobuf:"bytes,1,rep,name=headers" json:"headers,omitempty"`
	Footers              []*TSP.Reference `protobuf:"bytes,2,rep,name=footers" json:"footers,omitempty"`
	MasterDrawables      []*TSP.Reference `protobuf:"bytes,3,rep,name=master_drawables,json=masterDrawables" json:"master_drawables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PageMasterArchive) Reset()         { *m = PageMasterArchive{} }
func (m *PageMasterArchive) String() string { return proto.CompactTextString(m) }
func (*PageMasterArchive) ProtoMessage()    {}
func (*PageMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{6}
}

func (m *PageMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageMasterArchive.Unmarshal(m, b)
}
func (m *PageMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageMasterArchive.Marshal(b, m, deterministic)
}
func (m *PageMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageMasterArchive.Merge(m, src)
}
func (m *PageMasterArchive) XXX_Size() int {
	return xxx_messageInfo_PageMasterArchive.Size(m)
}
func (m *PageMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PageMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PageMasterArchive proto.InternalMessageInfo

func (m *PageMasterArchive) GetHeaders() []*TSP.Reference {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *PageMasterArchive) GetFooters() []*TSP.Reference {
	if m != nil {
		return m.Footers
	}
	return nil
}

func (m *PageMasterArchive) GetMasterDrawables() []*TSP.Reference {
	if m != nil {
		return m.MasterDrawables
	}
	return nil
}

type SectionArchive struct {
	OBSOLETEShowsHeader                  *bool            `protobuf:"varint,1,opt,name=OBSOLETE_shows_header,json=OBSOLETEShowsHeader" json:"OBSOLETE_shows_header,omitempty"`
	OBSOLETEShowsFooter                  *bool            `protobuf:"varint,2,opt,name=OBSOLETE_shows_footer,json=OBSOLETEShowsFooter" json:"OBSOLETE_shows_footer,omitempty"`
	OBSOLETEHeaders                      []*TSP.Reference `protobuf:"bytes,3,rep,name=OBSOLETE_headers,json=OBSOLETEHeaders" json:"OBSOLETE_headers,omitempty"`
	OBSOLETEFooters                      []*TSP.Reference `protobuf:"bytes,4,rep,name=OBSOLETE_footers,json=OBSOLETEFooters" json:"OBSOLETE_footers,omitempty"`
	OBSOLETELeftMargin                   *float32         `protobuf:"fixed32,5,opt,name=OBSOLETE_left_margin,json=OBSOLETELeftMargin" json:"OBSOLETE_left_margin,omitempty"`
	OBSOLETERightMargin                  *float32         `protobuf:"fixed32,6,opt,name=OBSOLETE_right_margin,json=OBSOLETERightMargin" json:"OBSOLETE_right_margin,omitempty"`
	OBSOLETETopMargin                    *float32         `protobuf:"fixed32,7,opt,name=OBSOLETE_top_margin,json=OBSOLETETopMargin" json:"OBSOLETE_top_margin,omitempty"`
	OBSOLETEBottomMargin                 *float32         `protobuf:"fixed32,8,opt,name=OBSOLETE_bottom_margin,json=OBSOLETEBottomMargin" json:"OBSOLETE_bottom_margin,omitempty"`
	OBSOLETEHeaderPadding                *float32         `protobuf:"fixed32,9,opt,name=OBSOLETE_header_padding,json=OBSOLETEHeaderPadding" json:"OBSOLETE_header_padding,omitempty"`
	OBSOLETEFooterPadding                *float32         `protobuf:"fixed32,10,opt,name=OBSOLETE_footer_padding,json=OBSOLETEFooterPadding" json:"OBSOLETE_footer_padding,omitempty"`
	OBSOLETEPaperWidth                   *float32         `protobuf:"fixed32,11,opt,name=OBSOLETE_paper_width,json=OBSOLETEPaperWidth" json:"OBSOLETE_paper_width,omitempty"`
	OBSOLETEPaperHeight                  *float32         `protobuf:"fixed32,12,opt,name=OBSOLETE_paper_height,json=OBSOLETEPaperHeight" json:"OBSOLETE_paper_height,omitempty"`
	OBSOLETELandscapeMode                *bool            `protobuf:"varint,13,opt,name=OBSOLETE_landscape_mode,json=OBSOLETELandscapeMode" json:"OBSOLETE_landscape_mode,omitempty"`
	OBSOLETEMasterDrawables              []*TSP.Reference `protobuf:"bytes,14,rep,name=OBSOLETE_master_drawables,json=OBSOLETEMasterDrawables" json:"OBSOLETE_master_drawables,omitempty"`
	OBSOLETEHeaderMargin                 *float32         `protobuf:"fixed32,15,opt,name=OBSOLETE_header_margin,json=OBSOLETEHeaderMargin" json:"OBSOLETE_header_margin,omitempty"`
	OBSOLETEFooterMargin                 *float32         `protobuf:"fixed32,16,opt,name=OBSOLETE_footer_margin,json=OBSOLETEFooterMargin" json:"OBSOLETE_footer_margin,omitempty"`
	InheritPreviousHeaderFooter          *bool            `protobuf:"varint,17,opt,name=inherit_previous_header_footer,json=inheritPreviousHeaderFooter" json:"inherit_previous_header_footer,omitempty"`
	PageMasterFirstPageDifferent         *bool            `protobuf:"varint,18,opt,name=page_master_first_page_different,json=pageMasterFirstPageDifferent" json:"page_master_first_page_different,omitempty"`
	PageMasterEvenOddPagesDifferent      *bool            `protobuf:"varint,19,opt,name=page_master_even_odd_pages_different,json=pageMasterEvenOddPagesDifferent" json:"page_master_even_odd_pages_different,omitempty"`
	SectionStartKind                     *uint32          `protobuf:"varint,20,opt,name=section_start_kind,json=sectionStartKind" json:"section_start_kind,omitempty"`
	SectionPageNumberKind                *uint32          `protobuf:"varint,21,opt,name=section_page_number_kind,json=sectionPageNumberKind" json:"section_page_number_kind,omitempty"`
	SectionPageNumberStart               *uint32          `protobuf:"varint,22,opt,name=section_page_number_start,json=sectionPageNumberStart" json:"section_page_number_start,omitempty"`
	FirstPageMaster                      *TSP.Reference   `protobuf:"bytes,23,opt,name=first_page_master,json=firstPageMaster" json:"first_page_master,omitempty"`
	EvenPageMaster                       *TSP.Reference   `protobuf:"bytes,24,opt,name=even_page_master,json=evenPageMaster" json:"even_page_master,omitempty"`
	OddPageMaster                        *TSP.Reference   `protobuf:"bytes,25,opt,name=odd_page_master,json=oddPageMaster" json:"odd_page_master,omitempty"`
	Name                                 *string          `protobuf:"bytes,26,opt,name=name" json:"name,omitempty"`
	PageMasterFirstPageHidesHeaderFooter *bool            `protobuf:"varint,28,opt,name=page_master_first_page_hides_header_footer,json=pageMasterFirstPageHidesHeaderFooter" json:"page_master_first_page_hides_header_footer,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}         `json:"-"`
	XXX_unrecognized                     []byte           `json:"-"`
	XXX_sizecache                        int32            `json:"-"`
}

func (m *SectionArchive) Reset()         { *m = SectionArchive{} }
func (m *SectionArchive) String() string { return proto.CompactTextString(m) }
func (*SectionArchive) ProtoMessage()    {}
func (*SectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{7}
}

func (m *SectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SectionArchive.Unmarshal(m, b)
}
func (m *SectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SectionArchive.Marshal(b, m, deterministic)
}
func (m *SectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SectionArchive.Merge(m, src)
}
func (m *SectionArchive) XXX_Size() int {
	return xxx_messageInfo_SectionArchive.Size(m)
}
func (m *SectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SectionArchive proto.InternalMessageInfo

func (m *SectionArchive) GetOBSOLETEShowsHeader() bool {
	if m != nil && m.OBSOLETEShowsHeader != nil {
		return *m.OBSOLETEShowsHeader
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEShowsFooter() bool {
	if m != nil && m.OBSOLETEShowsFooter != nil {
		return *m.OBSOLETEShowsFooter
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEHeaders() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEHeaders
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETEFooters() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEFooters
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETELeftMargin() float32 {
	if m != nil && m.OBSOLETELeftMargin != nil {
		return *m.OBSOLETELeftMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETERightMargin() float32 {
	if m != nil && m.OBSOLETERightMargin != nil {
		return *m.OBSOLETERightMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETETopMargin() float32 {
	if m != nil && m.OBSOLETETopMargin != nil {
		return *m.OBSOLETETopMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEBottomMargin() float32 {
	if m != nil && m.OBSOLETEBottomMargin != nil {
		return *m.OBSOLETEBottomMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEHeaderPadding() float32 {
	if m != nil && m.OBSOLETEHeaderPadding != nil {
		return *m.OBSOLETEHeaderPadding
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEFooterPadding() float32 {
	if m != nil && m.OBSOLETEFooterPadding != nil {
		return *m.OBSOLETEFooterPadding
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEPaperWidth() float32 {
	if m != nil && m.OBSOLETEPaperWidth != nil {
		return *m.OBSOLETEPaperWidth
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEPaperHeight() float32 {
	if m != nil && m.OBSOLETEPaperHeight != nil {
		return *m.OBSOLETEPaperHeight
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETELandscapeMode() bool {
	if m != nil && m.OBSOLETELandscapeMode != nil {
		return *m.OBSOLETELandscapeMode
	}
	return false
}

func (m *SectionArchive) GetOBSOLETEMasterDrawables() []*TSP.Reference {
	if m != nil {
		return m.OBSOLETEMasterDrawables
	}
	return nil
}

func (m *SectionArchive) GetOBSOLETEHeaderMargin() float32 {
	if m != nil && m.OBSOLETEHeaderMargin != nil {
		return *m.OBSOLETEHeaderMargin
	}
	return 0
}

func (m *SectionArchive) GetOBSOLETEFooterMargin() float32 {
	if m != nil && m.OBSOLETEFooterMargin != nil {
		return *m.OBSOLETEFooterMargin
	}
	return 0
}

func (m *SectionArchive) GetInheritPreviousHeaderFooter() bool {
	if m != nil && m.InheritPreviousHeaderFooter != nil {
		return *m.InheritPreviousHeaderFooter
	}
	return false
}

func (m *SectionArchive) GetPageMasterFirstPageDifferent() bool {
	if m != nil && m.PageMasterFirstPageDifferent != nil {
		return *m.PageMasterFirstPageDifferent
	}
	return false
}

func (m *SectionArchive) GetPageMasterEvenOddPagesDifferent() bool {
	if m != nil && m.PageMasterEvenOddPagesDifferent != nil {
		return *m.PageMasterEvenOddPagesDifferent
	}
	return false
}

func (m *SectionArchive) GetSectionStartKind() uint32 {
	if m != nil && m.SectionStartKind != nil {
		return *m.SectionStartKind
	}
	return 0
}

func (m *SectionArchive) GetSectionPageNumberKind() uint32 {
	if m != nil && m.SectionPageNumberKind != nil {
		return *m.SectionPageNumberKind
	}
	return 0
}

func (m *SectionArchive) GetSectionPageNumberStart() uint32 {
	if m != nil && m.SectionPageNumberStart != nil {
		return *m.SectionPageNumberStart
	}
	return 0
}

func (m *SectionArchive) GetFirstPageMaster() *TSP.Reference {
	if m != nil {
		return m.FirstPageMaster
	}
	return nil
}

func (m *SectionArchive) GetEvenPageMaster() *TSP.Reference {
	if m != nil {
		return m.EvenPageMaster
	}
	return nil
}

func (m *SectionArchive) GetOddPageMaster() *TSP.Reference {
	if m != nil {
		return m.OddPageMaster
	}
	return nil
}

func (m *SectionArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SectionArchive) GetPageMasterFirstPageHidesHeaderFooter() bool {
	if m != nil && m.PageMasterFirstPageHidesHeaderFooter != nil {
		return *m.PageMasterFirstPageHidesHeaderFooter
	}
	return false
}

type AnchorPosArchive struct {
	Attachment           *TSP.Reference `protobuf:"bytes,1,opt,name=attachment" json:"attachment,omitempty"`
	Position             *TSP.Point     `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AnchorPosArchive) Reset()         { *m = AnchorPosArchive{} }
func (m *AnchorPosArchive) String() string { return proto.CompactTextString(m) }
func (*AnchorPosArchive) ProtoMessage()    {}
func (*AnchorPosArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{8}
}

func (m *AnchorPosArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorPosArchive.Unmarshal(m, b)
}
func (m *AnchorPosArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorPosArchive.Marshal(b, m, deterministic)
}
func (m *AnchorPosArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorPosArchive.Merge(m, src)
}
func (m *AnchorPosArchive) XXX_Size() int {
	return xxx_messageInfo_AnchorPosArchive.Size(m)
}
func (m *AnchorPosArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorPosArchive.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorPosArchive proto.InternalMessageInfo

func (m *AnchorPosArchive) GetAttachment() *TSP.Reference {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *AnchorPosArchive) GetPosition() *TSP.Point {
	if m != nil {
		return m.Position
	}
	return nil
}

type TargetHintArchive struct {
	FrameOrigin                     *TSP.Point `protobuf:"bytes,1,opt,name=frame_origin,json=frameOrigin" json:"frame_origin,omitempty"`
	FrameSize                       *TSP.Size  `protobuf:"bytes,2,opt,name=frame_size,json=frameSize" json:"frame_size,omitempty"`
	Range                           *TSP.Range `protobuf:"bytes,3,opt,name=range" json:"range,omitempty"`
	NextWidowPullsDownFromCharIndex *int32     `protobuf:"varint,4,opt,name=next_widow_pulls_down_from_char_index,json=nextWidowPullsDownFromCharIndex" json:"next_widow_pulls_down_from_char_index,omitempty"`
	AnchoredRange                   *TSP.Range `protobuf:"bytes,5,opt,name=anchored_range,json=anchoredRange" json:"anchored_range,omitempty"`
	ColumnCount                     *int32     `protobuf:"varint,6,opt,name=column_count,json=columnCount" json:"column_count,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}   `json:"-"`
	XXX_unrecognized                []byte     `json:"-"`
	XXX_sizecache                   int32      `json:"-"`
}

func (m *TargetHintArchive) Reset()         { *m = TargetHintArchive{} }
func (m *TargetHintArchive) String() string { return proto.CompactTextString(m) }
func (*TargetHintArchive) ProtoMessage()    {}
func (*TargetHintArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{9}
}

func (m *TargetHintArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetHintArchive.Unmarshal(m, b)
}
func (m *TargetHintArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetHintArchive.Marshal(b, m, deterministic)
}
func (m *TargetHintArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetHintArchive.Merge(m, src)
}
func (m *TargetHintArchive) XXX_Size() int {
	return xxx_messageInfo_TargetHintArchive.Size(m)
}
func (m *TargetHintArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetHintArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TargetHintArchive proto.InternalMessageInfo

func (m *TargetHintArchive) GetFrameOrigin() *TSP.Point {
	if m != nil {
		return m.FrameOrigin
	}
	return nil
}

func (m *TargetHintArchive) GetFrameSize() *TSP.Size {
	if m != nil {
		return m.FrameSize
	}
	return nil
}

func (m *TargetHintArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TargetHintArchive) GetNextWidowPullsDownFromCharIndex() int32 {
	if m != nil && m.NextWidowPullsDownFromCharIndex != nil {
		return *m.NextWidowPullsDownFromCharIndex
	}
	return 0
}

func (m *TargetHintArchive) GetAnchoredRange() *TSP.Range {
	if m != nil {
		return m.AnchoredRange
	}
	return nil
}

func (m *TargetHintArchive) GetColumnCount() int32 {
	if m != nil && m.ColumnCount != nil {
		return *m.ColumnCount
	}
	return 0
}

type PageHintArchive struct {
	PageKind                *PageHintArchive_PageKind `protobuf:"varint,1,opt,name=page_kind,json=pageKind,enum=TP.PageHintArchive_PageKind" json:"page_kind,omitempty"`
	TargetHints             []*TargetHintArchive      `protobuf:"bytes,2,rep,name=target_hints,json=targetHints" json:"target_hints,omitempty"`
	FootnoteAutoNumberRange *TSP.Range                `protobuf:"bytes,3,opt,name=footnote_auto_number_range,json=footnoteAutoNumberRange" json:"footnote_auto_number_range,omitempty"`
	FootnoteLayoutRange     *TSP.Range                `protobuf:"bytes,4,opt,name=footnote_layout_range,json=footnoteLayoutRange" json:"footnote_layout_range,omitempty"`
	FirstChildHint          *TSP.Reference            `protobuf:"bytes,6,opt,name=first_child_hint,json=firstChildHint" json:"first_child_hint,omitempty"`
	LastChildHint           *TSP.Reference            `protobuf:"bytes,7,opt,name=last_child_hint,json=lastChildHint" json:"last_child_hint,omitempty"`
	AnchoredAttachmentsMap  []*AnchorPosArchive       `protobuf:"bytes,8,rep,name=anchored_attachments_map,json=anchoredAttachmentsMap" json:"anchored_attachments_map,omitempty"`
	TopicNumbers            *TopicNumberHintsArchive  `protobuf:"bytes,9,opt,name=topic_numbers,json=topicNumbers" json:"topic_numbers,omitempty"`
	VersionNumber           *uint32                   `protobuf:"varint,10,opt,name=version_number,json=versionNumber" json:"version_number,omitempty"`
	PlatformId              *uint32                   `protobuf:"varint,11,opt,name=platform_id,json=platformId" json:"platform_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *PageHintArchive) Reset()         { *m = PageHintArchive{} }
func (m *PageHintArchive) String() string { return proto.CompactTextString(m) }
func (*PageHintArchive) ProtoMessage()    {}
func (*PageHintArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{10}
}

func (m *PageHintArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageHintArchive.Unmarshal(m, b)
}
func (m *PageHintArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageHintArchive.Marshal(b, m, deterministic)
}
func (m *PageHintArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageHintArchive.Merge(m, src)
}
func (m *PageHintArchive) XXX_Size() int {
	return xxx_messageInfo_PageHintArchive.Size(m)
}
func (m *PageHintArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PageHintArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PageHintArchive proto.InternalMessageInfo

func (m *PageHintArchive) GetPageKind() PageHintArchive_PageKind {
	if m != nil && m.PageKind != nil {
		return *m.PageKind
	}
	return PageHintArchive_kPageKindNone
}

func (m *PageHintArchive) GetTargetHints() []*TargetHintArchive {
	if m != nil {
		return m.TargetHints
	}
	return nil
}

func (m *PageHintArchive) GetFootnoteAutoNumberRange() *TSP.Range {
	if m != nil {
		return m.FootnoteAutoNumberRange
	}
	return nil
}

func (m *PageHintArchive) GetFootnoteLayoutRange() *TSP.Range {
	if m != nil {
		return m.FootnoteLayoutRange
	}
	return nil
}

func (m *PageHintArchive) GetFirstChildHint() *TSP.Reference {
	if m != nil {
		return m.FirstChildHint
	}
	return nil
}

func (m *PageHintArchive) GetLastChildHint() *TSP.Reference {
	if m != nil {
		return m.LastChildHint
	}
	return nil
}

func (m *PageHintArchive) GetAnchoredAttachmentsMap() []*AnchorPosArchive {
	if m != nil {
		return m.AnchoredAttachmentsMap
	}
	return nil
}

func (m *PageHintArchive) GetTopicNumbers() *TopicNumberHintsArchive {
	if m != nil {
		return m.TopicNumbers
	}
	return nil
}

func (m *PageHintArchive) GetVersionNumber() uint32 {
	if m != nil && m.VersionNumber != nil {
		return *m.VersionNumber
	}
	return 0
}

func (m *PageHintArchive) GetPlatformId() uint32 {
	if m != nil && m.PlatformId != nil {
		return *m.PlatformId
	}
	return 0
}

type SectionHintArchive struct {
	PageHints            []*PageHintArchive `protobuf:"bytes,1,rep,name=page_hints,json=pageHints" json:"page_hints,omitempty"`
	StartPageIndex       *uint32            `protobuf:"varint,2,opt,name=start_page_index,json=startPageIndex" json:"start_page_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SectionHintArchive) Reset()         { *m = SectionHintArchive{} }
func (m *SectionHintArchive) String() string { return proto.CompactTextString(m) }
func (*SectionHintArchive) ProtoMessage()    {}
func (*SectionHintArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{11}
}

func (m *SectionHintArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SectionHintArchive.Unmarshal(m, b)
}
func (m *SectionHintArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SectionHintArchive.Marshal(b, m, deterministic)
}
func (m *SectionHintArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SectionHintArchive.Merge(m, src)
}
func (m *SectionHintArchive) XXX_Size() int {
	return xxx_messageInfo_SectionHintArchive.Size(m)
}
func (m *SectionHintArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SectionHintArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SectionHintArchive proto.InternalMessageInfo

func (m *SectionHintArchive) GetPageHints() []*PageHintArchive {
	if m != nil {
		return m.PageHints
	}
	return nil
}

func (m *SectionHintArchive) GetStartPageIndex() uint32 {
	if m != nil && m.StartPageIndex != nil {
		return *m.StartPageIndex
	}
	return 0
}

type TextboxHintArchive struct {
	Range                *TSP.Range `protobuf:"bytes,1,req,name=range" json:"range,omitempty"`
	Size                 *TSP.Size  `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TextboxHintArchive) Reset()         { *m = TextboxHintArchive{} }
func (m *TextboxHintArchive) String() string { return proto.CompactTextString(m) }
func (*TextboxHintArchive) ProtoMessage()    {}
func (*TextboxHintArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{12}
}

func (m *TextboxHintArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextboxHintArchive.Unmarshal(m, b)
}
func (m *TextboxHintArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextboxHintArchive.Marshal(b, m, deterministic)
}
func (m *TextboxHintArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextboxHintArchive.Merge(m, src)
}
func (m *TextboxHintArchive) XXX_Size() int {
	return xxx_messageInfo_TextboxHintArchive.Size(m)
}
func (m *TextboxHintArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TextboxHintArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TextboxHintArchive proto.InternalMessageInfo

func (m *TextboxHintArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *TextboxHintArchive) GetSize() *TSP.Size {
	if m != nil {
		return m.Size
	}
	return nil
}

type TopicNumberEntryArchive struct {
	ListStyle            *TSP.Reference `protobuf:"bytes,1,req,name=list_style,json=listStyle" json:"list_style,omitempty"`
	TopicNumber          []uint32       `protobuf:"varint,2,rep,name=topic_number,json=topicNumber" json:"topic_number,omitempty"`
	CharacterIndex       []uint32       `protobuf:"varint,3,rep,name=character_index,json=characterIndex" json:"character_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TopicNumberEntryArchive) Reset()         { *m = TopicNumberEntryArchive{} }
func (m *TopicNumberEntryArchive) String() string { return proto.CompactTextString(m) }
func (*TopicNumberEntryArchive) ProtoMessage()    {}
func (*TopicNumberEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{13}
}

func (m *TopicNumberEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicNumberEntryArchive.Unmarshal(m, b)
}
func (m *TopicNumberEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicNumberEntryArchive.Marshal(b, m, deterministic)
}
func (m *TopicNumberEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicNumberEntryArchive.Merge(m, src)
}
func (m *TopicNumberEntryArchive) XXX_Size() int {
	return xxx_messageInfo_TopicNumberEntryArchive.Size(m)
}
func (m *TopicNumberEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicNumberEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TopicNumberEntryArchive proto.InternalMessageInfo

func (m *TopicNumberEntryArchive) GetListStyle() *TSP.Reference {
	if m != nil {
		return m.ListStyle
	}
	return nil
}

func (m *TopicNumberEntryArchive) GetTopicNumber() []uint32 {
	if m != nil {
		return m.TopicNumber
	}
	return nil
}

func (m *TopicNumberEntryArchive) GetCharacterIndex() []uint32 {
	if m != nil {
		return m.CharacterIndex
	}
	return nil
}

type TopicNumberHintsArchive struct {
	CharIndex             *uint32                    `protobuf:"varint,1,opt,name=charIndex" json:"charIndex,omitempty"`
	TopicNumbersMap       []*TopicNumberEntryArchive `protobuf:"bytes,2,rep,name=topic_numbers_map,json=topicNumbersMap" json:"topic_numbers_map,omitempty"`
	ValidThroughCharIndex *uint32                    `protobuf:"varint,3,opt,name=valid_through_char_index,json=validThroughCharIndex" json:"valid_through_char_index,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                   `json:"-"`
	XXX_unrecognized      []byte                     `json:"-"`
	XXX_sizecache         int32                      `json:"-"`
}

func (m *TopicNumberHintsArchive) Reset()         { *m = TopicNumberHintsArchive{} }
func (m *TopicNumberHintsArchive) String() string { return proto.CompactTextString(m) }
func (*TopicNumberHintsArchive) ProtoMessage()    {}
func (*TopicNumberHintsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{14}
}

func (m *TopicNumberHintsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicNumberHintsArchive.Unmarshal(m, b)
}
func (m *TopicNumberHintsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicNumberHintsArchive.Marshal(b, m, deterministic)
}
func (m *TopicNumberHintsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicNumberHintsArchive.Merge(m, src)
}
func (m *TopicNumberHintsArchive) XXX_Size() int {
	return xxx_messageInfo_TopicNumberHintsArchive.Size(m)
}
func (m *TopicNumberHintsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicNumberHintsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TopicNumberHintsArchive proto.InternalMessageInfo

func (m *TopicNumberHintsArchive) GetCharIndex() uint32 {
	if m != nil && m.CharIndex != nil {
		return *m.CharIndex
	}
	return 0
}

func (m *TopicNumberHintsArchive) GetTopicNumbersMap() []*TopicNumberEntryArchive {
	if m != nil {
		return m.TopicNumbersMap
	}
	return nil
}

func (m *TopicNumberHintsArchive) GetValidThroughCharIndex() uint32 {
	if m != nil && m.ValidThroughCharIndex != nil {
		return *m.ValidThroughCharIndex
	}
	return 0
}

type LayoutStateArchive struct {
	SectionIndex         *uint32               `protobuf:"varint,1,opt,name=section_index,json=sectionIndex" json:"section_index,omitempty"`
	SectionPageIndex     *uint32               `protobuf:"varint,2,opt,name=section_page_index,json=sectionPageIndex" json:"section_page_index,omitempty"`
	DocumentPageIndex    *uint32               `protobuf:"varint,3,opt,name=document_page_index,json=documentPageIndex" json:"document_page_index,omitempty"`
	LastPageCount        *uint32               `protobuf:"varint,4,opt,name=last_page_count,json=lastPageCount" json:"last_page_count,omitempty"`
	SectionHints         []*SectionHintArchive `protobuf:"bytes,5,rep,name=section_hints,json=sectionHints" json:"section_hints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LayoutStateArchive) Reset()         { *m = LayoutStateArchive{} }
func (m *LayoutStateArchive) String() string { return proto.CompactTextString(m) }
func (*LayoutStateArchive) ProtoMessage()    {}
func (*LayoutStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{15}
}

func (m *LayoutStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LayoutStateArchive.Unmarshal(m, b)
}
func (m *LayoutStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LayoutStateArchive.Marshal(b, m, deterministic)
}
func (m *LayoutStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LayoutStateArchive.Merge(m, src)
}
func (m *LayoutStateArchive) XXX_Size() int {
	return xxx_messageInfo_LayoutStateArchive.Size(m)
}
func (m *LayoutStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LayoutStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LayoutStateArchive proto.InternalMessageInfo

func (m *LayoutStateArchive) GetSectionIndex() uint32 {
	if m != nil && m.SectionIndex != nil {
		return *m.SectionIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetSectionPageIndex() uint32 {
	if m != nil && m.SectionPageIndex != nil {
		return *m.SectionPageIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetDocumentPageIndex() uint32 {
	if m != nil && m.DocumentPageIndex != nil {
		return *m.DocumentPageIndex
	}
	return 0
}

func (m *LayoutStateArchive) GetLastPageCount() uint32 {
	if m != nil && m.LastPageCount != nil {
		return *m.LastPageCount
	}
	return 0
}

func (m *LayoutStateArchive) GetSectionHints() []*SectionHintArchive {
	if m != nil {
		return m.SectionHints
	}
	return nil
}

type CanvasSelectionArchive struct {
	Type                   *TSWP.SelectionType          `protobuf:"varint,1,req,name=type,enum=TSWP.SelectionType" json:"type,omitempty"`
	Range                  *TSP.Range                   `protobuf:"bytes,2,req,name=range" json:"range,omitempty"`
	StyleInsertionBehavior *TSWP.StyleInsertionBehavior `protobuf:"varint,3,req,name=style_insertion_behavior,json=styleInsertionBehavior,enum=TSWP.StyleInsertionBehavior" json:"style_insertion_behavior,omitempty"`
	CaretAffinity          *TSWP.CaretAffinity          `protobuf:"varint,4,req,name=caret_affinity,json=caretAffinity,enum=TSWP.CaretAffinity" json:"caret_affinity,omitempty"`
	Infos                  []*TSP.Reference             `protobuf:"bytes,5,rep,name=infos" json:"infos,omitempty"`
	ExcludedInfos          []*TSP.Reference             `protobuf:"bytes,6,rep,name=excluded_infos,json=excludedInfos" json:"excluded_infos,omitempty"`
	AdditionalInfos        []*TSP.Reference             `protobuf:"bytes,7,rep,name=additional_infos,json=additionalInfos" json:"additional_infos,omitempty"`
	Container              *TSP.Reference               `protobuf:"bytes,8,opt,name=container" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                     `json:"-"`
	XXX_unrecognized       []byte                       `json:"-"`
	XXX_sizecache          int32                        `json:"-"`
}

func (m *CanvasSelectionArchive) Reset()         { *m = CanvasSelectionArchive{} }
func (m *CanvasSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*CanvasSelectionArchive) ProtoMessage()    {}
func (*CanvasSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{16}
}

func (m *CanvasSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanvasSelectionArchive.Unmarshal(m, b)
}
func (m *CanvasSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanvasSelectionArchive.Marshal(b, m, deterministic)
}
func (m *CanvasSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanvasSelectionArchive.Merge(m, src)
}
func (m *CanvasSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_CanvasSelectionArchive.Size(m)
}
func (m *CanvasSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CanvasSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CanvasSelectionArchive proto.InternalMessageInfo

func (m *CanvasSelectionArchive) GetType() TSWP.SelectionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TSWP.SelectionType_SelectionType_Normal
}

func (m *CanvasSelectionArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *CanvasSelectionArchive) GetStyleInsertionBehavior() TSWP.StyleInsertionBehavior {
	if m != nil && m.StyleInsertionBehavior != nil {
		return *m.StyleInsertionBehavior
	}
	return TSWP.StyleInsertionBehavior_StyleInsertionBehavior_NoGrow
}

func (m *CanvasSelectionArchive) GetCaretAffinity() TSWP.CaretAffinity {
	if m != nil && m.CaretAffinity != nil {
		return *m.CaretAffinity
	}
	return TSWP.CaretAffinity_CaretAffinity_Start
}

func (m *CanvasSelectionArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetExcludedInfos() []*TSP.Reference {
	if m != nil {
		return m.ExcludedInfos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetAdditionalInfos() []*TSP.Reference {
	if m != nil {
		return m.AdditionalInfos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetContainer() *TSP.Reference {
	if m != nil {
		return m.Container
	}
	return nil
}

type ViewStateArchive struct {
	OBSOLETEViewScale                        *float32             `protobuf:"fixed32,1,opt,name=OBSOLETE_view_scale,json=OBSOLETEViewScale" json:"OBSOLETE_view_scale,omitempty"`
	VisibleRectOrigin                        *TSP.Point           `protobuf:"bytes,2,opt,name=visible_rect_origin,json=visibleRectOrigin" json:"visible_rect_origin,omitempty"`
	OBSOLETELandscape                        *bool                `protobuf:"varint,3,opt,name=OBSOLETE_landscape,json=OBSOLETELandscape" json:"OBSOLETE_landscape,omitempty"`
	Selection                                *TSP.Reference       `protobuf:"bytes,4,opt,name=selection" json:"selection,omitempty"`
	SelectionModel                           *TSP.Reference       `protobuf:"bytes,5,opt,name=selection_model,json=selectionModel" json:"selection_model,omitempty"`
	MasterDrawablesSelectable                *bool                `protobuf:"varint,6,opt,name=master_drawables_selectable,json=masterDrawablesSelectable" json:"master_drawables_selectable,omitempty"`
	VisibleRectSize                          *TSP.Size            `protobuf:"bytes,7,opt,name=visible_rect_size,json=visibleRectSize" json:"visible_rect_size,omitempty"`
	ChartUiState                             []*TSCH.ChartUIState `protobuf:"bytes,8,rep,name=chart_ui_state,json=chartUiState" json:"chart_ui_state,omitempty"`
	RulerVisible                             *bool                `protobuf:"varint,9,opt,name=ruler_visible,json=rulerVisible,def=1" json:"ruler_visible,omitempty"`
	LayoutBordersVisible                     *bool                `protobuf:"varint,10,opt,name=layout_borders_visible,json=layoutBordersVisible,def=0" json:"layout_borders_visible,omitempty"`
	WordCountHudVisible                      *bool                `protobuf:"varint,11,opt,name=word_count_hud_visible,json=wordCountHudVisible,def=0" json:"word_count_hud_visible,omitempty"`
	ShowsComments                            *bool                `protobuf:"varint,12,opt,name=shows_comments,json=showsComments,def=1" json:"shows_comments,omitempty"`
	ShowsPageNavigator                       *bool                `protobuf:"varint,13,opt,name=shows_page_navigator,json=showsPageNavigator,def=0" json:"shows_page_navigator,omitempty"`
	ViewScaleMode                            *ViewScaleMode       `protobuf:"varint,14,opt,name=view_scale_mode,json=viewScaleMode,enum=TP.ViewScaleMode,def=0" json:"view_scale_mode,omitempty"`
	ViewScale                                *float32             `protobuf:"fixed32,15,opt,name=view_scale,json=viewScale,def=1.25" json:"view_scale,omitempty"`
	WindowFrameOrigin                        *TSP.Point           `protobuf:"bytes,16,opt,name=window_frame_origin,json=windowFrameOrigin" json:"window_frame_origin,omitempty"`
	WindowFrameSize                          *TSP.Size            `protobuf:"bytes,17,opt,name=window_frame_size,json=windowFrameSize" json:"window_frame_size,omitempty"`
	SelectedInspectorSwitchSegmentIdentifier *string              `protobuf:"bytes,18,opt,name=selected_inspector_switch_segment_identifier,json=selectedInspectorSwitchSegmentIdentifier" json:"selected_inspector_switch_segment_identifier,omitempty"`
	InspectorHidden                          *bool                `protobuf:"varint,19,opt,name=inspector_hidden,json=inspectorHidden" json:"inspector_hidden,omitempty"`
	XXX_NoUnkeyedLiteral                     struct{}             `json:"-"`
	XXX_unrecognized                         []byte               `json:"-"`
	XXX_sizecache                            int32                `json:"-"`
}

func (m *ViewStateArchive) Reset()         { *m = ViewStateArchive{} }
func (m *ViewStateArchive) String() string { return proto.CompactTextString(m) }
func (*ViewStateArchive) ProtoMessage()    {}
func (*ViewStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{17}
}

func (m *ViewStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewStateArchive.Unmarshal(m, b)
}
func (m *ViewStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewStateArchive.Marshal(b, m, deterministic)
}
func (m *ViewStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewStateArchive.Merge(m, src)
}
func (m *ViewStateArchive) XXX_Size() int {
	return xxx_messageInfo_ViewStateArchive.Size(m)
}
func (m *ViewStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ViewStateArchive proto.InternalMessageInfo

const Default_ViewStateArchive_RulerVisible bool = true
const Default_ViewStateArchive_LayoutBordersVisible bool = false
const Default_ViewStateArchive_WordCountHudVisible bool = false
const Default_ViewStateArchive_ShowsComments bool = true
const Default_ViewStateArchive_ShowsPageNavigator bool = false
const Default_ViewStateArchive_ViewScaleMode ViewScaleMode = ViewScaleMode_ViewScaleMode_UserDefined
const Default_ViewStateArchive_ViewScale float32 = 1.25

func (m *ViewStateArchive) GetOBSOLETEViewScale() float32 {
	if m != nil && m.OBSOLETEViewScale != nil {
		return *m.OBSOLETEViewScale
	}
	return 0
}

func (m *ViewStateArchive) GetVisibleRectOrigin() *TSP.Point {
	if m != nil {
		return m.VisibleRectOrigin
	}
	return nil
}

func (m *ViewStateArchive) GetOBSOLETELandscape() bool {
	if m != nil && m.OBSOLETELandscape != nil {
		return *m.OBSOLETELandscape
	}
	return false
}

func (m *ViewStateArchive) GetSelection() *TSP.Reference {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ViewStateArchive) GetSelectionModel() *TSP.Reference {
	if m != nil {
		return m.SelectionModel
	}
	return nil
}

func (m *ViewStateArchive) GetMasterDrawablesSelectable() bool {
	if m != nil && m.MasterDrawablesSelectable != nil {
		return *m.MasterDrawablesSelectable
	}
	return false
}

func (m *ViewStateArchive) GetVisibleRectSize() *TSP.Size {
	if m != nil {
		return m.VisibleRectSize
	}
	return nil
}

func (m *ViewStateArchive) GetChartUiState() []*TSCH.ChartUIState {
	if m != nil {
		return m.ChartUiState
	}
	return nil
}

func (m *ViewStateArchive) GetRulerVisible() bool {
	if m != nil && m.RulerVisible != nil {
		return *m.RulerVisible
	}
	return Default_ViewStateArchive_RulerVisible
}

func (m *ViewStateArchive) GetLayoutBordersVisible() bool {
	if m != nil && m.LayoutBordersVisible != nil {
		return *m.LayoutBordersVisible
	}
	return Default_ViewStateArchive_LayoutBordersVisible
}

func (m *ViewStateArchive) GetWordCountHudVisible() bool {
	if m != nil && m.WordCountHudVisible != nil {
		return *m.WordCountHudVisible
	}
	return Default_ViewStateArchive_WordCountHudVisible
}

func (m *ViewStateArchive) GetShowsComments() bool {
	if m != nil && m.ShowsComments != nil {
		return *m.ShowsComments
	}
	return Default_ViewStateArchive_ShowsComments
}

func (m *ViewStateArchive) GetShowsPageNavigator() bool {
	if m != nil && m.ShowsPageNavigator != nil {
		return *m.ShowsPageNavigator
	}
	return Default_ViewStateArchive_ShowsPageNavigator
}

func (m *ViewStateArchive) GetViewScaleMode() ViewScaleMode {
	if m != nil && m.ViewScaleMode != nil {
		return *m.ViewScaleMode
	}
	return Default_ViewStateArchive_ViewScaleMode
}

func (m *ViewStateArchive) GetViewScale() float32 {
	if m != nil && m.ViewScale != nil {
		return *m.ViewScale
	}
	return Default_ViewStateArchive_ViewScale
}

func (m *ViewStateArchive) GetWindowFrameOrigin() *TSP.Point {
	if m != nil {
		return m.WindowFrameOrigin
	}
	return nil
}

func (m *ViewStateArchive) GetWindowFrameSize() *TSP.Size {
	if m != nil {
		return m.WindowFrameSize
	}
	return nil
}

func (m *ViewStateArchive) GetSelectedInspectorSwitchSegmentIdentifier() string {
	if m != nil && m.SelectedInspectorSwitchSegmentIdentifier != nil {
		return *m.SelectedInspectorSwitchSegmentIdentifier
	}
	return ""
}

func (m *ViewStateArchive) GetInspectorHidden() bool {
	if m != nil && m.InspectorHidden != nil {
		return *m.InspectorHidden
	}
	return false
}

type UIStateArchive struct {
	LayoutState          *TSP.Reference `protobuf:"bytes,1,opt,name=layout_state,json=layoutState" json:"layout_state,omitempty"`
	ViewState            *TSP.Reference `protobuf:"bytes,2,opt,name=view_state,json=viewState" json:"view_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UIStateArchive) Reset()         { *m = UIStateArchive{} }
func (m *UIStateArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateArchive) ProtoMessage()    {}
func (*UIStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9194985f5737bc3d, []int{18}
}

func (m *UIStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIStateArchive.Unmarshal(m, b)
}
func (m *UIStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIStateArchive.Marshal(b, m, deterministic)
}
func (m *UIStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIStateArchive.Merge(m, src)
}
func (m *UIStateArchive) XXX_Size() int {
	return xxx_messageInfo_UIStateArchive.Size(m)
}
func (m *UIStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UIStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UIStateArchive proto.InternalMessageInfo

func (m *UIStateArchive) GetLayoutState() *TSP.Reference {
	if m != nil {
		return m.LayoutState
	}
	return nil
}

func (m *UIStateArchive) GetViewState() *TSP.Reference {
	if m != nil {
		return m.ViewState
	}
	return nil
}

func init() {
	proto.RegisterEnum("TP.ViewScaleMode", ViewScaleMode_name, ViewScaleMode_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteKind", SettingsArchive_FootnoteKind_name, SettingsArchive_FootnoteKind_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteFormat", SettingsArchive_FootnoteFormat_name, SettingsArchive_FootnoteFormat_value)
	proto.RegisterEnum("TP.SettingsArchive_FootnoteNumbering", SettingsArchive_FootnoteNumbering_name, SettingsArchive_FootnoteNumbering_value)
	proto.RegisterEnum("TP.PageHintArchive_PageKind", PageHintArchive_PageKind_name, PageHintArchive_PageKind_value)
	proto.RegisterType((*DocumentArchive)(nil), "TP.DocumentArchive")
	proto.RegisterType((*ThemeArchive)(nil), "TP.ThemeArchive")
	proto.RegisterType((*SettingsArchive)(nil), "TP.SettingsArchive")
	proto.RegisterType((*PlaceholderArchive)(nil), "TP.PlaceholderArchive")
	proto.RegisterType((*FloatingDrawablesArchive)(nil), "TP.FloatingDrawablesArchive")
	proto.RegisterType((*FloatingDrawablesArchive_DrawableEntry)(nil), "TP.FloatingDrawablesArchive.DrawableEntry")
	proto.RegisterType((*FloatingDrawablesArchive_PageGroup)(nil), "TP.FloatingDrawablesArchive.PageGroup")
	proto.RegisterType((*DrawablesZOrderArchive)(nil), "TP.DrawablesZOrderArchive")
	proto.RegisterType((*PageMasterArchive)(nil), "TP.PageMasterArchive")
	proto.RegisterType((*SectionArchive)(nil), "TP.SectionArchive")
	proto.RegisterType((*AnchorPosArchive)(nil), "TP.AnchorPosArchive")
	proto.RegisterType((*TargetHintArchive)(nil), "TP.TargetHintArchive")
	proto.RegisterType((*PageHintArchive)(nil), "TP.PageHintArchive")
	proto.RegisterType((*SectionHintArchive)(nil), "TP.SectionHintArchive")
	proto.RegisterType((*TextboxHintArchive)(nil), "TP.TextboxHintArchive")
	proto.RegisterType((*TopicNumberEntryArchive)(nil), "TP.TopicNumberEntryArchive")
	proto.RegisterType((*TopicNumberHintsArchive)(nil), "TP.TopicNumberHintsArchive")
	proto.RegisterType((*LayoutStateArchive)(nil), "TP.LayoutStateArchive")
	proto.RegisterType((*CanvasSelectionArchive)(nil), "TP.CanvasSelectionArchive")
	proto.RegisterType((*ViewStateArchive)(nil), "TP.ViewStateArchive")
	proto.RegisterType((*UIStateArchive)(nil), "TP.UIStateArchive")
}

func init() { proto.RegisterFile("TPArchives.proto", fileDescriptor_9194985f5737bc3d) }

var fileDescriptor_9194985f5737bc3d = []byte{
	// 3648 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x5a, 0xdb, 0x6e, 0x1c, 0x39,
	0x73, 0xde, 0xd1, 0x61, 0x2d, 0x95, 0x34, 0x27, 0xea, 0xe0, 0x96, 0x0f, 0x6b, 0xed, 0xf8, 0xa4,
	0xf5, 0x6f, 0x8f, 0xd7, 0xc6, 0x7a, 0xbd, 0xd6, 0x22, 0x3f, 0x62, 0xcb, 0x96, 0xa5, 0xff, 0xf7,
	0x41, 0xe8, 0x99, 0xdd, 0x0d, 0x16, 0xf8, 0xd3, 0xe0, 0x74, 0x73, 0x66, 0x18, 0xf5, 0x34, 0x07,
	0xdd, 0x1c, 0xc9, 0xda, 0x07, 0xc8, 0x13, 0xe4, 0x2a, 0x37, 0x01, 0xf2, 0x02, 0x01, 0x82, 0xdc,
	0xe4, 0x22, 0xf7, 0x79, 0x80, 0xe4, 0x6d, 0x12, 0x24, 0x60, 0x91, 0xec, 0x66, 0xcf, 0x8c, 0x0c,
	0xec, 0x95, 0x35, 0x55, 0x5f, 0x15, 0xc9, 0xea, 0x62, 0xb1, 0x3e, 0xd2, 0xd0, 0xe8, 0x9e, 0xbc,
	0x4c, 0xc3, 0x21, 0x3f, 0x63, 0x59, 0x7b, 0x9c, 0x0a, 0x29, 0xc8, 0x42, 0xf7, 0xe4, 0x5a, 0xb3,
	0xdb, 0x39, 0x79, 0xcf, 0xb2, 0x8c, 0x0e, 0xac, 0xf8, 0x1a, 0xe9, 0x76, 0x7e, 0x99, 0x82, 0x2a,
	0x58, 0x67, 0x56, 0xf4, 0x72, 0x4a, 0x44, 0xba, 0x9d, 0x83, 0xa3, 0xb2, 0xac, 0xf5, 0x7f, 0x00,
	0xf5, 0xd7, 0x22, 0x9c, 0x8c, 0x58, 0x22, 0x8d, 0x8a, 0x3c, 0x80, 0xe5, 0x6c, 0x32, 0x66, 0xa9,
	0x57, 0xdf, 0x5d, 0xd8, 0x5b, 0x7b, 0xba, 0xd9, 0xee, 0x76, 0x5e, 0xb6, 0xa7, 0x40, 0xbe, 0x86,
	0x90, 0x36, 0x40, 0x26, 0x2f, 0x62, 0x96, 0x0d, 0x19, 0x93, 0xde, 0xc2, 0x6e, 0x65, 0x6f, 0xed,
	0x69, 0xad, 0xdd, 0xed, 0x9c, 0xb4, 0x7d, 0xd6, 0x67, 0x29, 0x4b, 0x42, 0xe6, 0x3b, 0x08, 0xf2,
	0x57, 0x40, 0xfa, 0xb1, 0xa0, 0x92, 0x27, 0x83, 0x20, 0x4a, 0xe9, 0x39, 0xed, 0xc5, 0x2c, 0xf3,
	0x16, 0xe7, 0xda, 0x35, 0x2d, 0xf2, 0xb5, 0x05, 0x92, 0x27, 0xb0, 0xde, 0x13, 0xd1, 0x45, 0x90,
	0x49, 0x91, 0xd2, 0x01, 0xf3, 0x96, 0xe6, 0x1a, 0xae, 0x29, 0x4c, 0x47, 0x43, 0xc8, 0x1e, 0x5c,
	0xc9, 0x58, 0x28, 0xb9, 0x48, 0xbc, 0xe5, 0xb9, 0x68, 0xab, 0x26, 0x77, 0x60, 0x59, 0x0e, 0xd9,
	0x88, 0x79, 0x5f, 0xce, 0xc5, 0x69, 0x25, 0x79, 0x00, 0x2b, 0x19, 0x93, 0x6a, 0x5a, 0x99, 0x77,
	0x65, 0x2e, 0x30, 0xd7, 0x93, 0x43, 0xb8, 0x1a, 0xb1, 0x71, 0xca, 0x42, 0x2a, 0x59, 0x14, 0xc4,
	0xf4, 0x42, 0x4c, 0x64, 0x90, 0x49, 0x2a, 0x99, 0xb7, 0x36, 0xd7, 0x74, 0xab, 0x80, 0xbf, 0x43,
	0x74, 0x47, 0x81, 0xc9, 0x2b, 0x70, 0x14, 0xc1, 0x19, 0x67, 0xe7, 0xc6, 0xcb, 0xfa, 0x5c, 0x2f,
	0x1b, 0x05, 0xf8, 0x67, 0xce, 0xce, 0xb5, 0x8f, 0x17, 0xd0, 0x08, 0xb9, 0xa4, 0x6a, 0xa5, 0x41,
	0xca, 0x42, 0x91, 0x46, 0x99, 0x57, 0xdd, 0x5d, 0x9c, 0x63, 0x5e, 0xb7, 0x38, 0x5f, 0xc3, 0xc8,
	0x23, 0x00, 0x29, 0xc2, 0x40, 0x7f, 0x46, 0xaf, 0x36, 0xd7, 0x68, 0x55, 0x8a, 0xb0, 0x83, 0x00,
	0xf2, 0x1c, 0xea, 0xe1, 0x90, 0x26, 0x03, 0x16, 0x64, 0x2c, 0xcb, 0xb8, 0x48, 0x32, 0xaf, 0x31,
	0xd7, 0xa6, 0xa6, 0x61, 0x1d, 0x83, 0x52, 0x53, 0xcc, 0x73, 0x22, 0xf8, 0x4d, 0xa4, 0x11, 0x4b,
	0xbd, 0xcd, 0xb9, 0x2b, 0xac, 0xe7, 0xb8, 0x5f, 0x11, 0x46, 0x5e, 0xc0, 0xce, 0x24, 0x63, 0x59,
	0x90, 0xf1, 0x64, 0x10, 0xb3, 0x60, 0xc8, 0x68, 0xc4, 0xd2, 0xa0, 0x2f, 0x84, 0x64, 0xa9, 0xb7,
	0xb5, 0x5b, 0xd9, 0x5b, 0xf1, 0xb7, 0x15, 0xa0, 0x83, 0xfa, 0x23, 0x54, 0x1f, 0xa2, 0x96, 0xdc,
	0x04, 0x18, 0xd3, 0x01, 0x0b, 0xce, 0x79, 0x24, 0x87, 0xde, 0x57, 0xbb, 0x95, 0xbd, 0x05, 0x7f,
	0x55, 0x49, 0x7e, 0x51, 0x02, 0x72, 0x0b, 0xd6, 0x50, 0x3d, 0x64, 0x7c, 0x30, 0x94, 0xde, 0x2d,
	0xd4, 0xa3, 0xc5, 0x11, 0x4a, 0x14, 0x20, 0x66, 0x7d, 0x19, 0x8c, 0x68, 0x3a, 0xe0, 0x89, 0xb7,
	0xab, 0x01, 0x4a, 0xf4, 0x1e, 0x25, 0xe4, 0x6b, 0x58, 0x4f, 0x15, 0xd2, 0x22, 0xbe, 0x46, 0xc4,
	0x1a, 0xca, 0x0c, 0xe4, 0xa6, 0x8a, 0xf0, 0xd8, 0x02, 0x5a, 0x7a, 0x0e, 0x52, 0x8c, 0x8d, 0xfa,
	0x36, 0x54, 0x7b, 0x42, 0x4a, 0x31, 0xb2, 0x88, 0xdb, 0x88, 0x58, 0xd7, 0xc2, 0x02, 0x64, 0x96,
	0x6d, 0x40, 0x77, 0x34, 0x48, 0x0b, 0x0b, 0x90, 0x0e, 0x8a, 0x05, 0xdd, 0xd5, 0x20, 0x2d, 0x2c,
	0x66, 0x83, 0x4b, 0xce, 0x42, 0x1a, 0x33, 0xef, 0x5e, 0x11, 0x91, 0x8e, 0x12, 0x90, 0xef, 0x60,
	0xdb, 0xa4, 0x32, 0xee, 0xc5, 0x33, 0x96, 0x4a, 0x1e, 0xd2, 0x38, 0xbe, 0xf0, 0xee, 0x63, 0xa0,
	0x37, 0xb5, 0xf6, 0x95, 0x88, 0x2e, 0x7e, 0xce, 0x75, 0xe4, 0x7b, 0xb8, 0x6a, 0xb2, 0x42, 0xa6,
	0x34, 0x3c, 0x55, 0x05, 0x80, 0x25, 0xea, 0x13, 0x46, 0xde, 0x1e, 0x9a, 0x6d, 0x69, 0x75, 0xd7,
	0x68, 0xdf, 0x68, 0x25, 0x39, 0x86, 0x1d, 0xa9, 0x33, 0x22, 0x9c, 0x64, 0x2a, 0x04, 0x7d, 0x91,
	0x8e, 0xa8, 0x0c, 0x62, 0x9e, 0x49, 0xef, 0x9b, 0xb9, 0xd9, 0xb1, 0xad, 0x0d, 0x0e, 0x10, 0x7f,
	0x88, 0xf0, 0x77, 0x3c, 0x93, 0xe4, 0x36, 0xac, 0x89, 0x94, 0xb3, 0x44, 0x67, 0xb7, 0xf7, 0x60,
	0xb7, 0xb2, 0x57, 0xdd, 0xaf, 0x7c, 0xeb, 0xbb, 0x52, 0x5c, 0x7c, 0xca, 0x13, 0x15, 0x22, 0x1e,
	0x79, 0x7f, 0xd8, 0xad, 0xec, 0xad, 0xfa, 0xab, 0x46, 0x72, 0x1c, 0x91, 0x1d, 0x58, 0x19, 0xd3,
	0xb1, 0x56, 0x3e, 0x44, 0xe5, 0x15, 0xfc, 0x7d, 0x1c, 0xa9, 0xb8, 0x4c, 0xaf, 0x70, 0x4c, 0x27,
	0x19, 0x8b, 0xbc, 0x47, 0x3a, 0x2e, 0xe5, 0x05, 0x9e, 0xa0, 0xae, 0xf5, 0x1c, 0xd6, 0xbb, 0xaa,
	0xb0, 0xd8, 0xea, 0x7b, 0xdf, 0x56, 0xdf, 0x0a, 0x56, 0xdf, 0x66, 0xbb, 0xdb, 0xe9, 0xb4, 0x5d,
	0x84, 0x29, 0xbd, 0xad, 0xff, 0xaa, 0x41, 0xbd, 0x63, 0x2a, 0x8d, 0x35, 0xf6, 0x60, 0x49, 0x7d,
	0x13, 0xaf, 0xa2, 0x06, 0xdc, 0x5f, 0x92, 0xe9, 0x84, 0xf9, 0x28, 0x21, 0x5f, 0xc1, 0x15, 0x9d,
	0x08, 0x19, 0x56, 0x69, 0xab, 0xb4, 0x42, 0xa5, 0xd7, 0x39, 0xa0, 0xab, 0x71, 0xae, 0x37, 0x42,
	0xa5, 0x1f, 0xa7, 0x4c, 0x95, 0x1e, 0x2c, 0xba, 0xb9, 0xde, 0x08, 0xc9, 0x5d, 0x58, 0x0b, 0xc5,
	0xf8, 0x22, 0x18, 0x89, 0x33, 0xce, 0x32, 0x2c, 0xb5, 0x16, 0x03, 0x4a, 0xf1, 0x1e, 0xe5, 0x39,
	0x8c, 0x66, 0x19, 0x93, 0x19, 0x56, 0xda, 0x12, 0xec, 0x25, 0xca, 0xc9, 0x3e, 0x6c, 0x8d, 0x63,
	0x1a, 0xb2, 0xa1, 0x88, 0x55, 0x42, 0xd3, 0x89, 0x1c, 0x8a, 0x94, 0x27, 0x03, 0xac, 0xb8, 0x2b,
	0xfb, 0xcb, 0x7d, 0x1a, 0x67, 0xcc, 0xdf, 0x74, 0x30, 0x2f, 0x2d, 0x84, 0x7c, 0x03, 0xd5, 0x98,
	0x27, 0xa7, 0x59, 0x9e, 0x5e, 0x2b, 0xce, 0x20, 0xeb, 0xa8, 0xb2, 0xb9, 0x75, 0x1f, 0xd6, 0x86,
	0x17, 0xe3, 0x21, 0x4b, 0x74, 0x42, 0xac, 0xba, 0xce, 0x5d, 0x0d, 0x79, 0x00, 0xd5, 0x49, 0xc6,
	0x82, 0x98, 0x0f, 0xa8, 0x9c, 0xa4, 0x2c, 0xf3, 0xc0, 0x85, 0xae, 0x4f, 0x32, 0xf6, 0xce, 0xaa,
	0xc8, 0x13, 0x68, 0xaa, 0x6a, 0x59, 0x9e, 0xc3, 0x9a, 0x8b, 0xaf, 0x4b, 0x11, 0xbe, 0x73, 0xe7,
	0xf1, 0x00, 0x6a, 0xd9, 0x50, 0x9c, 0x07, 0x21, 0xd6, 0x88, 0xd3, 0xc9, 0x18, 0x0b, 0x7b, 0x3e,
	0x67, 0xa5, 0x3b, 0x50, 0xa5, 0xe2, 0x74, 0x32, 0x26, 0xdf, 0x42, 0xd3, 0x62, 0x23, 0x16, 0x33,
	0x89, 0xf5, 0xb5, 0xea, 0xc0, 0xeb, 0x1a, 0xfe, 0xda, 0x2a, 0xc9, 0x53, 0xd8, 0x0a, 0x65, 0xd0,
	0x9b, 0xf4, 0x70, 0x17, 0x9d, 0xf1, 0x8c, 0xf7, 0x78, 0xcc, 0xe5, 0x85, 0x57, 0xdb, 0xad, 0xec,
	0x2d, 0xfb, 0x1b, 0xa1, 0x7c, 0xa5, 0x75, 0x3f, 0xe7, 0x2a, 0xf2, 0x1d, 0x6c, 0x98, 0x5c, 0xee,
	0xd1, 0xd4, 0x18, 0xc5, 0xcc, 0xab, 0x3b, 0xe3, 0x34, 0x35, 0xe0, 0x15, 0x4d, 0xb5, 0x61, 0xcc,
	0xc8, 0x3e, 0x6c, 0x9b, 0xdd, 0xa9, 0x75, 0x85, 0x61, 0xc3, 0x31, 0xdc, 0xd4, 0x98, 0x03, 0x0d,
	0xb1, 0xb6, 0xcf, 0x60, 0x83, 0x26, 0x89, 0xd0, 0xbb, 0xb0, 0x30, 0x6c, 0x3a, 0x86, 0xc4, 0x01,
	0x58, 0xb3, 0x47, 0x50, 0x8f, 0x4c, 0x6b, 0x12, 0xf0, 0x2c, 0x48, 0x65, 0xec, 0x11, 0x37, 0xd6,
	0x55, 0xab, 0x3d, 0xce, 0x7c, 0x19, 0xab, 0x62, 0x1d, 0xb1, 0x90, 0x8f, 0x68, 0x1c, 0x48, 0xda,
	0xc3, 0xd3, 0x65, 0xd5, 0x07, 0x23, 0xea, 0xd2, 0x1e, 0xb9, 0x06, 0x2b, 0x31, 0x4d, 0x06, 0x13,
	0xd5, 0x5d, 0x6c, 0xa1, 0x36, 0xff, 0x4d, 0x9e, 0xc0, 0xa6, 0x93, 0x14, 0x41, 0x8e, 0xdb, 0x46,
	0xdc, 0x86, 0xa3, 0x7b, 0x67, 0x4d, 0xee, 0x43, 0x3d, 0x4c, 0x99, 0xc1, 0x0b, 0xac, 0xa7, 0x57,
	0x11, 0x5d, 0xb3, 0xe2, 0x77, 0x28, 0xc5, 0x53, 0x84, 0x66, 0xd2, 0x82, 0x3c, 0x3d, 0x31, 0x25,
	0x32, 0x80, 0xdb, 0x50, 0x15, 0x29, 0x1f, 0x04, 0x92, 0x8d, 0xc6, 0xb1, 0x3a, 0xfb, 0x77, 0x10,
	0xb2, 0xae, 0x84, 0x5d, 0x23, 0x53, 0xa0, 0x7c, 0xb8, 0x48, 0x81, 0xae, 0x69, 0x90, 0x15, 0xbe,
	0x56, 0xa0, 0xc7, 0xb0, 0xd1, 0xe3, 0xbd, 0x98, 0x8b, 0x41, 0x4a, 0xc7, 0xc3, 0x0b, 0x53, 0x50,
	0xbd, 0xeb, 0x08, 0x25, 0xae, 0x4a, 0xd7, 0x4e, 0xf2, 0x46, 0x1f, 0x1a, 0x89, 0x90, 0x2c, 0x38,
	0xe5, 0x49, 0x84, 0x87, 0x64, 0xed, 0xe9, 0x6e, 0xbb, 0x7b, 0xd2, 0x9e, 0xaa, 0x40, 0xed, 0x43,
	0x03, 0xfc, 0x33, 0x4f, 0x22, 0x7d, 0xac, 0xd8, 0x5f, 0xe4, 0xcf, 0x50, 0xcf, 0xdd, 0x98, 0x31,
	0x6f, 0xa1, 0xa3, 0xd6, 0xe7, 0x1c, 0xe9, 0x39, 0xf8, 0xb5, 0x7e, 0xe9, 0x37, 0xe9, 0x02, 0xc9,
	0x9d, 0x25, 0x93, 0x51, 0x8f, 0x61, 0x79, 0xd8, 0x45, 0x7f, 0x77, 0x3f, 0xe7, 0xef, 0x83, 0x05,
	0xfb, 0xcd, 0xfe, 0xb4, 0x48, 0x1d, 0xd5, 0xb9, 0xd7, 0x01, 0x1d, 0xe3, 0x51, 0xbd, 0xec, 0xaf,
	0x59, 0xd9, 0x5b, 0x3a, 0x26, 0x4f, 0xa1, 0x69, 0x1a, 0x46, 0xa7, 0x2c, 0xed, 0xb9, 0x29, 0xd7,
	0x30, 0xfa, 0xbc, 0x24, 0xb5, 0x04, 0xac, 0xbb, 0x71, 0x21, 0xd7, 0x60, 0xfb, 0xd4, 0x15, 0xd8,
	0xbf, 0xb3, 0xc6, 0x17, 0xe4, 0x6b, 0xb8, 0x59, 0xd2, 0xd9, 0xc6, 0xfb, 0x4d, 0x12, 0x69, 0x48,
	0x85, 0xec, 0xc2, 0x8d, 0x12, 0xa4, 0xa3, 0xc7, 0xcb, 0x11, 0x0b, 0xad, 0x7f, 0xa9, 0x40, 0xad,
	0x1c, 0xc0, 0xd2, 0x98, 0x5a, 0xf4, 0x61, 0x32, 0x62, 0x29, 0x0f, 0x1b, 0x5f, 0x10, 0x0f, 0x36,
	0xa7, 0x74, 0xbe, 0x18, 0xd1, 0xa4, 0x51, 0x21, 0xd7, 0xe1, 0xea, 0x94, 0xa6, 0x73, 0x31, 0xea,
	0x89, 0x98, 0x87, 0x8d, 0x05, 0xd2, 0x82, 0xaf, 0xa6, 0x94, 0x7f, 0xa2, 0x63, 0x9a, 0xb0, 0x8c,
	0x59, 0xd7, 0x8b, 0xe4, 0x1e, 0xb4, 0x2e, 0xc1, 0x1c, 0x47, 0x4c, 0xa7, 0x19, 0x0f, 0x1b, 0x4b,
	0xad, 0xbf, 0xaf, 0x40, 0x73, 0xe6, 0x13, 0x95, 0x56, 0x9a, 0x4b, 0x0f, 0x44, 0x22, 0x79, 0x32,
	0x11, 0x13, 0x15, 0xae, 0xbb, 0xf0, 0xf5, 0x2c, 0xc2, 0x67, 0x99, 0xa4, 0xa9, 0x7c, 0x43, 0xc3,
	0xe1, 0x09, 0x1d, 0xb0, 0x46, 0x85, 0xec, 0xc1, 0x9d, 0xcf, 0xc2, 0x4c, 0x08, 0x1b, 0x0b, 0xad,
	0x57, 0x40, 0x4e, 0x9c, 0x63, 0xc5, 0x1c, 0xac, 0x0f, 0xcb, 0xa7, 0xf2, 0x76, 0x5b, 0xb1, 0xb0,
	0x76, 0x67, 0x48, 0xc7, 0xec, 0x38, 0xe9, 0x8b, 0xa9, 0xa3, 0xf9, 0xbf, 0x17, 0xc1, 0x3b, 0x9c,
	0x26, 0x2f, 0xd6, 0xd5, 0x5b, 0xd3, 0x50, 0x0e, 0x52, 0x31, 0x19, 0x67, 0x5e, 0x05, 0x5b, 0xe3,
	0x7b, 0x2a, 0x65, 0x2f, 0x33, 0x69, 0xab, 0x45, 0xbc, 0x55, 0x70, 0xdd, 0x78, 0xe2, 0x9f, 0xd9,
	0xb5, 0x1f, 0xa1, 0x6a, 0x91, 0x6f, 0x12, 0x99, 0x5e, 0x28, 0x6a, 0x62, 0xfb, 0x62, 0xec, 0x00,
	0xe6, 0x50, 0x13, 0xab, 0xbf, 0xf6, 0xaf, 0x0b, 0xb0, 0x9a, 0xbb, 0xcd, 0x3b, 0x3e, 0x9e, 0x44,
	0xec, 0x13, 0xae, 0xb1, 0xaa, 0x3b, 0xbe, 0x63, 0x25, 0x20, 0x7f, 0x81, 0xcd, 0x1e, 0x0d, 0x4f,
	0xd5, 0x8c, 0x93, 0xc8, 0xe1, 0x6d, 0x0b, 0x38, 0xf7, 0x07, 0x9f, 0x9d, 0x7b, 0x69, 0x8a, 0xfe,
	0x46, 0xe1, 0xa7, 0x60, 0x75, 0x7f, 0x01, 0x75, 0x24, 0xb0, 0x19, 0xf7, 0x8b, 0xbf, 0xdf, 0x7d,
	0xe1, 0xa7, 0x70, 0x7f, 0x04, 0xab, 0x85, 0xcf, 0xa5, 0xdf, 0xed, 0xb3, 0x30, 0x6e, 0x1d, 0xc2,
	0x76, 0x0e, 0xfe, 0xf5, 0x63, 0x5a, 0xca, 0x0f, 0x67, 0x8c, 0xca, 0x7c, 0x86, 0x54, 0xf8, 0xf9,
	0xe7, 0x0a, 0x34, 0x55, 0xf0, 0xdf, 0xd3, 0x4c, 0x16, 0x3e, 0xf6, 0x8a, 0x16, 0x6d, 0xbe, 0x87,
	0xbc, 0x59, 0xdb, 0x2b, 0x9a, 0xb5, 0x85, 0xf9, 0x48, 0xdb, 0xb6, 0xbd, 0x80, 0xc6, 0x08, 0x07,
	0x99, 0x09, 0xeb, 0x0c, 0xa5, 0xd2, 0xb8, 0x7c, 0x7d, 0xad, 0x7f, 0x5c, 0x87, 0x9a, 0xd9, 0x16,
	0x76, 0x86, 0x4f, 0x61, 0xeb, 0xe3, 0xab, 0xce, 0xc7, 0x77, 0x6f, 0xba, 0x6f, 0x02, 0xd5, 0x65,
	0x64, 0x86, 0x68, 0xe9, 0x7e, 0xd3, 0xdf, 0xb0, 0xca, 0x8e, 0xd2, 0x69, 0x92, 0x35, 0xc7, 0xc6,
	0xb0, 0xb2, 0x85, 0x39, 0x36, 0x86, 0x92, 0xbd, 0x80, 0x46, 0x6e, 0x63, 0x43, 0x72, 0xc9, 0xac,
	0x2d, 0xee, 0xc8, 0x84, 0xc6, 0x35, 0xb5, 0x31, 0x5a, 0xfa, 0xbc, 0xe9, 0xa1, 0x89, 0xd5, 0xb7,
	0xb0, 0x99, 0x9b, 0xba, 0x8c, 0x6e, 0x19, 0x09, 0x10, 0xb1, 0xba, 0x77, 0x05, 0xb3, 0x73, 0xd7,
	0x56, 0xa2, 0x78, 0x5f, 0xa2, 0x49, 0xbe, 0x36, 0xdf, 0xa1, 0x7a, 0x6d, 0xc8, 0xc5, 0x81, 0xc3,
	0xf9, 0xae, 0xa0, 0x45, 0xd3, 0xaa, 0xba, 0x39, 0xf7, 0xfb, 0x0e, 0xb6, 0x73, 0x7c, 0x99, 0x04,
	0xae, 0xa0, 0x49, 0x3e, 0xe7, 0x57, 0x2e, 0x19, 0xfc, 0x1e, 0xae, 0x4e, 0x45, 0x30, 0x18, 0xd3,
	0x28, 0x52, 0x67, 0xd5, 0x2a, 0x9a, 0x6d, 0x95, 0x03, 0x77, 0xa2, 0x95, 0x25, 0x3b, 0x43, 0x14,
	0xad, 0x1d, 0x94, 0xed, 0x74, 0xd4, 0xac, 0x9d, 0x1b, 0x3b, 0xcd, 0x8f, 0x34, 0x9d, 0x5e, 0x2b,
	0xc7, 0xee, 0x44, 0xa9, 0x34, 0xaf, 0x76, 0x63, 0xa7, 0x2d, 0x0c, 0xc3, 0x5e, 0x2f, 0xc7, 0x0e,
	0x4d, 0x0c, 0xd5, 0x76, 0x67, 0x17, 0xd3, 0x24, 0xca, 0x42, 0x3a, 0x66, 0xc1, 0x48, 0x44, 0x4c,
	0x77, 0xc0, 0xc5, 0xec, 0xde, 0x59, 0xed, 0x7b, 0x11, 0x31, 0xf2, 0x27, 0xd8, 0xc9, 0xed, 0x66,
	0xb6, 0xc3, 0xfc, 0xfb, 0x8c, 0x7c, 0xa0, 0xf7, 0xe5, 0x6d, 0x51, 0xfa, 0x1e, 0x65, 0xbe, 0x5d,
	0x2f, 0x7f, 0x8f, 0x23, 0x97, 0x77, 0xbb, 0x56, 0x65, 0x02, 0xde, 0x28, 0x5b, 0x1d, 0xba, 0x44,
	0xfc, 0x00, 0xbe, 0xe2, 0xc9, 0x90, 0xa5, 0x5c, 0x06, 0xc8, 0xb3, 0xc4, 0x24, 0x9b, 0xba, 0xda,
	0xc0, 0xf6, 0xd8, 0xbf, 0x6e, 0x50, 0x27, 0x06, 0x54, 0xba, 0xdf, 0x38, 0x84, 0x5d, 0xac, 0xed,
	0x66, 0xe1, 0x7d, 0x9e, 0x66, 0x32, 0x40, 0x49, 0xc4, 0xfb, 0xb8, 0x5c, 0xa9, 0x5b, 0x66, 0xff,
	0xc6, 0x38, 0xaf, 0x49, 0x87, 0x0a, 0xa5, 0x4a, 0xd4, 0x6b, 0x8b, 0x21, 0xef, 0xe1, 0x8e, 0xeb,
	0x87, 0x9d, 0xb1, 0x24, 0x10, 0x51, 0x84, 0xae, 0x32, 0xc7, 0xd7, 0x06, 0xfa, 0xba, 0x55, 0xf8,
	0x7a, 0x73, 0xc6, 0x92, 0x8f, 0x51, 0xa4, 0xbc, 0x65, 0x85, 0xbb, 0x87, 0x40, 0x6c, 0x1f, 0x85,
	0xa7, 0xb0, 0xee, 0x2c, 0x55, 0x43, 0x5e, 0xcd, 0x3b, 0xa8, 0x8e, 0x52, 0x60, 0xc7, 0xf4, 0x1c,
	0x3c, 0x8b, 0xc6, 0x49, 0xe8, 0x96, 0x4f, 0xdb, 0x6c, 0xa1, 0xcd, 0x96, 0xd1, 0xab, 0x61, 0xf4,
	0x09, 0x8f, 0x86, 0x2f, 0x60, 0x67, 0x9e, 0x21, 0x0e, 0x89, 0x8d, 0x7b, 0xd5, 0xdf, 0x9e, 0xb1,
	0xc4, 0x71, 0xc9, 0x3e, 0x34, 0x9d, 0x60, 0xe9, 0x65, 0x63, 0xf7, 0x3e, 0xa7, 0x96, 0xf4, 0x6d,
	0xbc, 0xf4, 0x92, 0xc9, 0x0f, 0xd0, 0xc0, 0x00, 0xb9, 0xa6, 0xde, 0x5c, 0xd3, 0x9a, 0xc2, 0x39,
	0x96, 0xdf, 0x43, 0xdd, 0x46, 0xd5, 0x1a, 0xee, 0xcc, 0x35, 0xac, 0x0a, 0x1d, 0x53, 0x63, 0x47,
	0x60, 0x29, 0xa1, 0x23, 0xdb, 0xf1, 0xe3, 0xdf, 0xe4, 0x6f, 0xe0, 0xc1, 0x25, 0x9f, 0x7e, 0xc8,
	0x23, 0x36, 0x9d, 0x4b, 0x37, 0xf0, 0xc3, 0xdd, 0x99, 0x93, 0x04, 0x47, 0x0a, 0xed, 0x26, 0x55,
	0xeb, 0xef, 0xa0, 0xf1, 0x32, 0x09, 0x87, 0x22, 0x3d, 0x11, 0x79, 0x63, 0xd3, 0x06, 0xa0, 0x52,
	0xd2, 0x70, 0xa8, 0xda, 0xd5, 0x4b, 0x1a, 0x10, 0x07, 0x41, 0xee, 0xc1, 0xca, 0x58, 0x64, 0x1c,
	0xa9, 0xb7, 0xbe, 0x39, 0x06, 0x44, 0x9f, 0x08, 0x9e, 0x48, 0x3f, 0xd7, 0xb5, 0xfe, 0x6d, 0x01,
	0x9a, 0x5d, 0x9a, 0x0e, 0x98, 0x3c, 0xe2, 0xc5, 0x2d, 0xf5, 0x23, 0x58, 0xef, 0xa7, 0x74, 0xc4,
	0x02, 0x45, 0x80, 0x78, 0x62, 0xc6, 0x73, 0x3d, 0xac, 0xa1, 0xfe, 0x23, 0xaa, 0xc9, 0x1e, 0x80,
	0x86, 0x67, 0xfc, 0x37, 0x66, 0x86, 0x5b, 0x45, 0x70, 0x87, 0xff, 0xc6, 0xfc, 0x55, 0x54, 0xaa,
	0x3f, 0xc9, 0x2e, 0x2c, 0xa7, 0x8a, 0x99, 0x9a, 0x5b, 0x69, 0xed, 0xd1, 0x57, 0x12, 0x5f, 0x2b,
	0xc8, 0x07, 0xb8, 0x9b, 0xb0, 0x4f, 0x52, 0x95, 0x38, 0x71, 0x1e, 0x8c, 0x27, 0x71, 0x9c, 0x05,
	0x91, 0x38, 0x4f, 0x82, 0x7e, 0x2a, 0x46, 0x8a, 0xfa, 0xa6, 0xa6, 0x91, 0x5a, 0x42, 0xfa, 0x70,
	0x4b, 0x81, 0x7f, 0x51, 0xd8, 0x13, 0x05, 0x7d, 0x2d, 0xce, 0x93, 0xc3, 0x54, 0x8c, 0x0e, 0x86,
	0x34, 0xd5, 0xed, 0xd5, 0x13, 0xa8, 0x51, 0x0c, 0x26, 0x8b, 0x02, 0x3d, 0xf4, 0xf2, 0xcc, 0xd0,
	0x55, 0x8b, 0xc0, 0x9f, 0x8a, 0xa8, 0x84, 0x22, 0x9e, 0x8c, 0x92, 0x20, 0x14, 0x93, 0x44, 0xe2,
	0x81, 0xb3, 0xec, 0xaf, 0x69, 0xd9, 0x81, 0x12, 0xb5, 0xfe, 0x77, 0x19, 0xea, 0xfa, 0xe3, 0x15,
	0x41, 0x7b, 0x01, 0xd8, 0xd5, 0xe9, 0x7d, 0x53, 0x41, 0xb2, 0x74, 0x43, 0xb5, 0x42, 0x53, 0x38,
	0xfc, 0x8d, 0x0c, 0x6e, 0x65, 0x6c, 0xfe, 0x22, 0x3f, 0xc0, 0xba, 0xc4, 0x8f, 0x10, 0x0c, 0x79,
	0x22, 0x6d, 0xe3, 0xb1, 0xa5, 0xac, 0x67, 0x3e, 0x8e, 0xbf, 0x26, 0x73, 0x51, 0x46, 0xde, 0xc2,
	0xb5, 0x9c, 0x54, 0xd1, 0x89, 0x14, 0x76, 0x0f, 0x5e, 0x16, 0xe5, 0xab, 0x16, 0xfd, 0x72, 0x22,
	0x85, 0xde, 0x90, 0x7a, 0xd1, 0x7f, 0x84, 0xad, 0xdc, 0x91, 0xb9, 0x81, 0xd4, 0x3e, 0x96, 0x66,
	0x7c, 0x6c, 0x58, 0xa0, 0xbe, 0x46, 0xd7, 0xf6, 0x3f, 0x40, 0x43, 0x6f, 0x81, 0x70, 0xc8, 0xe3,
	0x08, 0xd7, 0x71, 0xc9, 0x5d, 0x7f, 0x0d, 0x71, 0x07, 0x0a, 0xa6, 0xd6, 0xa0, 0x36, 0x25, 0xb2,
	0x73, 0xc7, 0x70, 0xfe, 0xdd, 0x7f, 0x55, 0xc1, 0x0a, 0xbb, 0x0f, 0xe0, 0xe5, 0x5f, 0xb6, 0xc8,
	0xfc, 0x2c, 0x18, 0xd1, 0xb1, 0xb7, 0x82, 0x01, 0xdc, 0x54, 0x01, 0x9c, 0xde, 0x4a, 0xfe, 0xb6,
	0xb5, 0x7a, 0x59, 0x18, 0xbd, 0xa7, 0x63, 0xf2, 0xd7, 0x50, 0x95, 0x62, 0xcc, 0x43, 0x13, 0xc2,
	0x0c, 0x0f, 0xf3, 0xb5, 0xa7, 0xd7, 0xf1, 0x2b, 0x28, 0x85, 0x0e, 0x17, 0xc6, 0xdd, 0xfa, 0x5a,
	0x97, 0x85, 0x22, 0x23, 0x77, 0xa1, 0x76, 0xc6, 0xd2, 0x4c, 0xd5, 0x43, 0xed, 0x03, 0xcf, 0xf5,
	0xaa, 0x5f, 0x35, 0x52, 0x8d, 0xc3, 0x5b, 0xef, 0x98, 0x4a, 0x45, 0xd3, 0x03, 0xae, 0xaf, 0xaf,
	0xaa, 0x3e, 0x58, 0xd1, 0x71, 0xd4, 0xfa, 0xa7, 0x0a, 0xac, 0xd8, 0x2c, 0x21, 0x4d, 0xa8, 0x9e,
	0xda, 0x1f, 0x1f, 0x44, 0xc2, 0x1a, 0x5f, 0x94, 0x44, 0x5d, 0xf6, 0x49, 0x36, 0x2a, 0x64, 0x03,
	0xea, 0xb9, 0xe8, 0x90, 0xc7, 0x31, 0x4b, 0x1b, 0x0b, 0x25, 0xe1, 0xc7, 0x74, 0x3c, 0xa4, 0x49,
	0x63, 0x91, 0x6c, 0x42, 0x23, 0x17, 0x1a, 0x56, 0xdb, 0x58, 0x22, 0x04, 0x6a, 0xb9, 0xf4, 0x35,
	0x4f, 0xe5, 0x45, 0x63, 0x99, 0xec, 0xc0, 0xd6, 0x69, 0xf7, 0xc4, 0x4a, 0xd5, 0xbf, 0xfa, 0x83,
	0x37, 0xbe, 0x6c, 0xa5, 0x40, 0x4c, 0xfb, 0xea, 0xee, 0x80, 0xa7, 0x86, 0xe9, 0xe8, 0x24, 0xd6,
	0x7d, 0xf6, 0xc6, 0x9c, 0x2d, 0xa0, 0xe9, 0x8f, 0x4e, 0xe0, 0x3d, 0x68, 0xe8, 0x23, 0xca, 0xe1,
	0x48, 0x0b, 0x18, 0x91, 0x1a, 0xca, 0x4f, 0x2c, 0x51, 0x6a, 0xfd, 0x04, 0x44, 0x2d, 0xb6, 0x27,
	0x3e, 0xb9, 0x63, 0xe6, 0x15, 0x45, 0x93, 0xc7, 0x39, 0x15, 0xe5, 0x26, 0x2c, 0x99, 0xba, 0xb4,
	0x50, 0xae, 0x4b, 0x28, 0x6e, 0xfd, 0x43, 0x05, 0xae, 0x3a, 0x9f, 0x17, 0x79, 0x49, 0x51, 0x07,
	0x21, 0xe6, 0x99, 0xd4, 0xaf, 0x33, 0x66, 0x84, 0x19, 0xea, 0xa1, 0x10, 0xf8, 0x3a, 0xa3, 0x0a,
	0x87, 0x9b, 0x41, 0xb8, 0x8d, 0xab, 0xfe, 0x9a, 0x93, 0x23, 0x78, 0x67, 0x35, 0xa4, 0x29, 0x0d,
	0xf1, 0x0e, 0x1c, 0x57, 0xbb, 0x88, 0xa8, 0x5a, 0x2e, 0xd6, 0xab, 0xfd, 0xf7, 0xf2, 0xb4, 0xdc,
	0xac, 0x23, 0x37, 0x60, 0x35, 0xb4, 0x05, 0x0e, 0x2b, 0x4d, 0xd5, 0x2f, 0x04, 0xe4, 0x2d, 0x34,
	0x4b, 0x79, 0x8c, 0x1b, 0x42, 0x57, 0x94, 0xe9, 0x5c, 0x76, 0x17, 0xeb, 0xd7, 0xdd, 0x5c, 0x56,
	0x1b, 0xe2, 0x39, 0x78, 0x67, 0x34, 0xe6, 0x51, 0x20, 0x87, 0xa9, 0x98, 0x0c, 0x86, 0x6e, 0xf5,
	0x5d, 0xd4, 0x7d, 0x01, 0xea, 0xbb, 0x5a, 0x9d, 0xd7, 0xdc, 0xd6, 0xff, 0x54, 0x80, 0x38, 0x4f,
	0x6c, 0x76, 0xda, 0xb7, 0xa1, 0x6a, 0xdb, 0x05, 0xee, 0x4c, 0x7d, 0xdd, 0x08, 0xf5, 0xec, 0x9d,
	0xd6, 0x65, 0x26, 0x23, 0x1a, 0x4e, 0x33, 0xa1, 0xd1, 0x6d, 0xd8, 0xc8, 0x6f, 0x28, 0x1d, 0xb8,
	0x9e, 0x5d, 0xd3, 0xaa, 0x0a, 0xfc, 0x3d, 0x53, 0x6b, 0x10, 0xab, 0xab, 0xfb, 0x92, 0xde, 0xa2,
	0x4a, 0xac, 0x70, 0x58, 0xdf, 0xc9, 0x8f, 0xc5, 0x54, 0x75, 0x32, 0x2f, 0x63, 0xfc, 0xb6, 0xf5,
	0xe5, 0xd7, 0x74, 0xe2, 0xe7, 0x4b, 0xc0, 0xaf, 0xd4, 0xfa, 0x8f, 0x45, 0xd8, 0x3e, 0xa0, 0xc9,
	0x19, 0xcd, 0x3a, 0x2c, 0x2e, 0x93, 0xbc, 0xfb, 0xb0, 0x24, 0x2f, 0xc6, 0x3a, 0x95, 0x6a, 0x6a,
	0x6f, 0xe0, 0x4d, 0x87, 0x45, 0x75, 0x2f, 0xc6, 0xcc, 0x47, 0x40, 0x91, 0xd6, 0x0b, 0x97, 0xa5,
	0xf5, 0xcf, 0xe0, 0x61, 0x5a, 0x06, 0x3c, 0xc9, 0x58, 0x8a, 0x53, 0xed, 0xb1, 0x21, 0x3d, 0xe3,
	0x22, 0xf5, 0x16, 0xd1, 0xfd, 0x0d, 0xe3, 0x5e, 0xa1, 0x8e, 0x2d, 0xe8, 0x95, 0xc1, 0xf8, 0xdb,
	0xd9, 0x5c, 0x39, 0xd9, 0x87, 0x5a, 0x48, 0x53, 0x26, 0x03, 0xda, 0xef, 0xf3, 0x84, 0xcb, 0x0b,
	0x6f, 0xc9, 0x9d, 0xec, 0x81, 0xd2, 0xbd, 0x34, 0x2a, 0xbf, 0x1a, 0xba, 0x3f, 0xc9, 0x1d, 0x58,
	0xe6, 0x49, 0x5f, 0xd8, 0x70, 0xcd, 0xbc, 0xf2, 0xa2, 0x92, 0x3c, 0x83, 0x1a, 0xfb, 0x14, 0xc6,
	0x93, 0x88, 0x45, 0x81, 0x86, 0x7f, 0x39, 0x17, 0x5e, 0xb5, 0xa8, 0x63, 0x34, 0x7b, 0x01, 0x0d,
	0x45, 0x88, 0xd4, 0x64, 0x69, 0x6c, 0x0c, 0xaf, 0xcc, 0x67, 0x9f, 0x05, 0x4e, 0x9b, 0x3e, 0x84,
	0xd5, 0x50, 0x24, 0x92, 0xf2, 0x84, 0xa5, 0x48, 0xed, 0xe6, 0x6c, 0xe3, 0x1c, 0xd0, 0xfa, 0xcf,
	0x15, 0x68, 0xe4, 0x6f, 0xbb, 0x45, 0x03, 0x56, 0x50, 0x4b, 0xfd, 0x48, 0x8c, 0x77, 0xc9, 0x95,
	0x32, 0xb5, 0x44, 0x33, 0xbc, 0x52, 0xde, 0x87, 0x0d, 0x73, 0xcd, 0x1e, 0xa4, 0x2c, 0x94, 0xb6,
	0x93, 0x9a, 0xed, 0xc5, 0x9a, 0x06, 0xe6, 0xb3, 0x50, 0x9a, 0x7e, 0xea, 0x11, 0x90, 0x59, 0x2a,
	0xa6, 0x9f, 0x8e, 0x8a, 0xa1, 0x72, 0x16, 0xa6, 0x56, 0x97, 0xd9, 0x14, 0xba, 0xe4, 0xd5, 0xbe,
	0x00, 0x90, 0xe7, 0x50, 0xcf, 0x7f, 0x20, 0xbd, 0x8b, 0x2f, 0x79, 0xbb, 0xaf, 0xe5, 0x30, 0xc5,
	0xf3, 0x62, 0xf2, 0x47, 0xb8, 0x3e, 0xcd, 0xef, 0x02, 0x0d, 0xc1, 0x4b, 0x31, 0x7c, 0x6e, 0xf2,
	0x77, 0xa6, 0x6e, 0x3a, 0x3a, 0x39, 0x80, 0x3c, 0x83, 0x66, 0x29, 0x22, 0x58, 0x94, 0xaf, 0x4c,
	0x37, 0x8b, 0x75, 0x27, 0x1c, 0xd8, 0x32, 0xfe, 0x00, 0x58, 0x1a, 0x65, 0x30, 0xe1, 0xe6, 0x61,
	0x5e, 0x1f, 0xee, 0xa4, 0xdd, 0xed, 0x1c, 0x1c, 0xb5, 0x55, 0xd5, 0x91, 0x3f, 0x1d, 0xe3, 0xb7,
	0xf2, 0xd7, 0x11, 0xf9, 0x13, 0xd7, 0xaf, 0xf2, 0xdf, 0x40, 0x35, 0x9d, 0xc4, 0x2c, 0xcd, 0xdf,
	0x3b, 0x56, 0xdd, 0x87, 0x1f, 0x54, 0xd9, 0x97, 0x8e, 0x1f, 0x9d, 0x67, 0xd7, 0x34, 0x62, 0xce,
	0xab, 0x4c, 0xe9, 0x31, 0x2a, 0x7f, 0x7d, 0x45, 0x8c, 0xf3, 0x32, 0x73, 0x2e, 0xd2, 0x48, 0xd7,
	0x93, 0x60, 0x38, 0x89, 0x72, 0xe3, 0xd2, 0xcb, 0xd4, 0x86, 0x02, 0x61, 0x79, 0x39, 0x9a, 0x44,
	0xd6, 0xf6, 0x0f, 0xfa, 0x75, 0x2a, 0x0b, 0x42, 0x31, 0xc2, 0x4e, 0xa4, 0xf4, 0x3a, 0x55, 0x45,
	0xdd, 0x81, 0x51, 0x91, 0xe7, 0xb0, 0xa9, 0xc1, 0x9a, 0x6d, 0xd1, 0x33, 0x3e, 0xa0, 0x52, 0xa4,
	0xe6, 0x85, 0xca, 0x0c, 0x43, 0x10, 0x82, 0x7c, 0xcb, 0x02, 0x48, 0x17, 0xea, 0x45, 0xce, 0x6a,
	0x4e, 0x5f, 0xc3, 0x06, 0xb5, 0xa9, 0x0a, 0x5a, 0x9e, 0xb4, 0xea, 0x3b, 0xef, 0xef, 0x94, 0x7e,
	0x06, 0x3f, 0x65, 0x2c, 0x7d, 0xcd, 0xfa, 0x3c, 0x61, 0x91, 0x5f, 0x3d, 0x73, 0x55, 0xe4, 0x36,
	0x80, 0xb3, 0x13, 0x90, 0xa1, 0xef, 0x2f, 0x3d, 0x69, 0x3f, 0x7d, 0xe6, 0xaf, 0x9e, 0xb9, 0xfb,
	0xe0, 0x9c, 0x27, 0xaa, 0x97, 0x2f, 0x31, 0x8a, 0xc6, 0xec, 0x3e, 0xd0, 0xb0, 0x43, 0x87, 0x57,
	0x3c, 0x83, 0x66, 0xc9, 0x16, 0x33, 0xa6, 0x39, 0x93, 0x31, 0x8e, 0x21, 0x66, 0xcc, 0xdf, 0xc2,
	0x43, 0x9d, 0x97, 0x58, 0x5f, 0xb2, 0x31, 0x0b, 0xa5, 0x48, 0x83, 0xec, 0x9c, 0xcb, 0x70, 0x18,
	0x64, 0x6c, 0xa0, 0xdf, 0xb3, 0x22, 0x96, 0x48, 0xde, 0xe7, 0x2c, 0x45, 0x82, 0xbe, 0xea, 0xef,
	0x59, 0x9b, 0x63, 0x6b, 0xd2, 0x41, 0x8b, 0x8e, 0x36, 0x38, 0xce, 0xf1, 0xe4, 0x1b, 0x68, 0x14,
	0x6e, 0x87, 0x3c, 0x8a, 0x58, 0x62, 0x88, 0x79, 0x3d, 0x97, 0x1f, 0xa1, 0xb8, 0x95, 0x42, 0xcd,
	0xe4, 0xa6, 0xad, 0x23, 0x4f, 0x60, 0xbd, 0xf4, 0x7f, 0x55, 0xe6, 0x53, 0xb9, 0xb5, 0xd8, 0xf9,
	0x1f, 0x2a, 0x8f, 0x6c, 0x9c, 0xd1, 0x60, 0xfe, 0xff, 0x03, 0xd2, 0x11, 0x57, 0x80, 0x07, 0x0c,
	0xaa, 0xa5, 0x4f, 0x48, 0x6e, 0xc2, 0xe5, 0xdf, 0xb4, 0xf1, 0x05, 0xb9, 0x06, 0xdb, 0x65, 0xf5,
	0x21, 0x97, 0x78, 0x8d, 0xd4, 0xa8, 0xa8, 0x16, 0x70, 0x5a, 0x97, 0xe2, 0xad, 0xff, 0xc2, 0xab,
	0x7b, 0xbf, 0xde, 0x19, 0x70, 0x39, 0x9c, 0xf4, 0xda, 0xa1, 0x18, 0x3d, 0xfe, 0x8d, 0x8f, 0x7a,
	0xb4, 0x47, 0xc5, 0xe3, 0x48, 0x84, 0xa1, 0x48, 0xce, 0x1e, 0xf3, 0x5f, 0x44, 0x7a, 0xfa, 0xb8,
	0x7b, 0xf2, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x65, 0x8f, 0x14, 0x7d, 0x25, 0x00, 0x00,
}
