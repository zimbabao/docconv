// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSCHArchives.proto

package TSCH

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/zimbabao/docconv/iWork/TSCH/Generated"
	_ "github.com/zimbabao/docconv/iWork/TSCH/PreUFF"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSK "github.com/zimbabao/docconv/iWork/TSK"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChartDrawableArchive struct {
	Super                        *TSD.DrawableArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}             `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartDrawableArchive) Reset()         { *m = ChartDrawableArchive{} }
func (m *ChartDrawableArchive) String() string { return proto.CompactTextString(m) }
func (*ChartDrawableArchive) ProtoMessage()    {}
func (*ChartDrawableArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{0}
}

var extRange_ChartDrawableArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartDrawableArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartDrawableArchive
}

func (m *ChartDrawableArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartDrawableArchive.Unmarshal(m, b)
}
func (m *ChartDrawableArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartDrawableArchive.Marshal(b, m, deterministic)
}
func (m *ChartDrawableArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartDrawableArchive.Merge(m, src)
}
func (m *ChartDrawableArchive) XXX_Size() int {
	return xxx_messageInfo_ChartDrawableArchive.Size(m)
}
func (m *ChartDrawableArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartDrawableArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartDrawableArchive proto.InternalMessageInfo

func (m *ChartDrawableArchive) GetSuper() *TSD.DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartArchive struct {
	ChartType                           *ChartType                `protobuf:"varint,1,opt,name=chart_type,json=chartType,enum=TSCH.ChartType" json:"chart_type,omitempty"`
	ScatterFormat                       *ScatterFormat            `protobuf:"varint,2,opt,name=scatter_format,json=scatterFormat,enum=TSCH.ScatterFormat" json:"scatter_format,omitempty"`
	LegendFrame                         *RectArchive              `protobuf:"bytes,3,opt,name=legend_frame,json=legendFrame" json:"legend_frame,omitempty"`
	Preset                              *TSP.Reference            `protobuf:"bytes,4,opt,name=preset" json:"preset,omitempty"`
	SeriesDirection                     *SeriesDirection          `protobuf:"varint,5,opt,name=series_direction,json=seriesDirection,enum=TSCH.SeriesDirection" json:"series_direction,omitempty"`
	ContainsDefaultData                 *bool                     `protobuf:"varint,6,opt,name=contains_default_data,json=containsDefaultData" json:"contains_default_data,omitempty"`
	Grid                                *ChartGridArchive         `protobuf:"bytes,7,opt,name=grid" json:"grid,omitempty"`
	Mediator                            *TSP.Reference            `protobuf:"bytes,8,opt,name=mediator" json:"mediator,omitempty"`
	ChartStyle                          *TSP.Reference            `protobuf:"bytes,9,opt,name=chart_style,json=chartStyle" json:"chart_style,omitempty"`
	ChartNonStyle                       *TSP.Reference            `protobuf:"bytes,10,opt,name=chart_non_style,json=chartNonStyle" json:"chart_non_style,omitempty"`
	LegendStyle                         *TSP.Reference            `protobuf:"bytes,11,opt,name=legend_style,json=legendStyle" json:"legend_style,omitempty"`
	LegendNonStyle                      *TSP.Reference            `protobuf:"bytes,12,opt,name=legend_non_style,json=legendNonStyle" json:"legend_non_style,omitempty"`
	ValueAxisStyles                     []*TSP.Reference          `protobuf:"bytes,13,rep,name=value_axis_styles,json=valueAxisStyles" json:"value_axis_styles,omitempty"`
	ValueAxisNonstyles                  []*TSP.Reference          `protobuf:"bytes,14,rep,name=value_axis_nonstyles,json=valueAxisNonstyles" json:"value_axis_nonstyles,omitempty"`
	CategoryAxisStyles                  []*TSP.Reference          `protobuf:"bytes,15,rep,name=category_axis_styles,json=categoryAxisStyles" json:"category_axis_styles,omitempty"`
	CategoryAxisNonstyles               []*TSP.Reference          `protobuf:"bytes,16,rep,name=category_axis_nonstyles,json=categoryAxisNonstyles" json:"category_axis_nonstyles,omitempty"`
	SeriesThemeStyles                   []*TSP.Reference          `protobuf:"bytes,17,rep,name=series_theme_styles,json=seriesThemeStyles" json:"series_theme_styles,omitempty"`
	SeriesPrivateStyles                 *TSP.SparseReferenceArray `protobuf:"bytes,18,opt,name=series_private_styles,json=seriesPrivateStyles" json:"series_private_styles,omitempty"`
	SeriesNonStyles                     *TSP.SparseReferenceArray `protobuf:"bytes,19,opt,name=series_non_styles,json=seriesNonStyles" json:"series_non_styles,omitempty"`
	ParagraphStyles                     []*TSP.Reference          `protobuf:"bytes,20,rep,name=paragraph_styles,json=paragraphStyles" json:"paragraph_styles,omitempty"`
	MultidatasetIndex                   *uint32                   `protobuf:"varint,21,opt,name=multidataset_index,json=multidatasetIndex" json:"multidataset_index,omitempty"`
	NeedsCalcEngineDeferredImportAction *bool                     `protobuf:"varint,22,opt,name=needs_calc_engine_deferred_import_action,json=needsCalcEngineDeferredImportAction" json:"needs_calc_engine_deferred_import_action,omitempty"`
	OwnedPreset                         *TSP.Reference            `protobuf:"bytes,23,opt,name=owned_preset,json=ownedPreset" json:"owned_preset,omitempty"`
	IsDirty                             *bool                     `protobuf:"varint,24,opt,name=is_dirty,json=isDirty" json:"is_dirty,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                  `json:"-"`
	proto.XXX_InternalExtensions        `json:"-"`
	XXX_unrecognized                    []byte `json:"-"`
	XXX_sizecache                       int32  `json:"-"`
}

func (m *ChartArchive) Reset()         { *m = ChartArchive{} }
func (m *ChartArchive) String() string { return proto.CompactTextString(m) }
func (*ChartArchive) ProtoMessage()    {}
func (*ChartArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{1}
}

var extRange_ChartArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartArchive
}

func (m *ChartArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartArchive.Unmarshal(m, b)
}
func (m *ChartArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartArchive.Marshal(b, m, deterministic)
}
func (m *ChartArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartArchive.Merge(m, src)
}
func (m *ChartArchive) XXX_Size() int {
	return xxx_messageInfo_ChartArchive.Size(m)
}
func (m *ChartArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartArchive proto.InternalMessageInfo

func (m *ChartArchive) GetChartType() ChartType {
	if m != nil && m.ChartType != nil {
		return *m.ChartType
	}
	return ChartType_undefinedChartType
}

func (m *ChartArchive) GetScatterFormat() ScatterFormat {
	if m != nil && m.ScatterFormat != nil {
		return *m.ScatterFormat
	}
	return ScatterFormat_scatter_format_unknown
}

func (m *ChartArchive) GetLegendFrame() *RectArchive {
	if m != nil {
		return m.LegendFrame
	}
	return nil
}

func (m *ChartArchive) GetPreset() *TSP.Reference {
	if m != nil {
		return m.Preset
	}
	return nil
}

func (m *ChartArchive) GetSeriesDirection() SeriesDirection {
	if m != nil && m.SeriesDirection != nil {
		return *m.SeriesDirection
	}
	return SeriesDirection_series_direction_unknown
}

func (m *ChartArchive) GetContainsDefaultData() bool {
	if m != nil && m.ContainsDefaultData != nil {
		return *m.ContainsDefaultData
	}
	return false
}

func (m *ChartArchive) GetGrid() *ChartGridArchive {
	if m != nil {
		return m.Grid
	}
	return nil
}

func (m *ChartArchive) GetMediator() *TSP.Reference {
	if m != nil {
		return m.Mediator
	}
	return nil
}

func (m *ChartArchive) GetChartStyle() *TSP.Reference {
	if m != nil {
		return m.ChartStyle
	}
	return nil
}

func (m *ChartArchive) GetChartNonStyle() *TSP.Reference {
	if m != nil {
		return m.ChartNonStyle
	}
	return nil
}

func (m *ChartArchive) GetLegendStyle() *TSP.Reference {
	if m != nil {
		return m.LegendStyle
	}
	return nil
}

func (m *ChartArchive) GetLegendNonStyle() *TSP.Reference {
	if m != nil {
		return m.LegendNonStyle
	}
	return nil
}

func (m *ChartArchive) GetValueAxisStyles() []*TSP.Reference {
	if m != nil {
		return m.ValueAxisStyles
	}
	return nil
}

func (m *ChartArchive) GetValueAxisNonstyles() []*TSP.Reference {
	if m != nil {
		return m.ValueAxisNonstyles
	}
	return nil
}

func (m *ChartArchive) GetCategoryAxisStyles() []*TSP.Reference {
	if m != nil {
		return m.CategoryAxisStyles
	}
	return nil
}

func (m *ChartArchive) GetCategoryAxisNonstyles() []*TSP.Reference {
	if m != nil {
		return m.CategoryAxisNonstyles
	}
	return nil
}

func (m *ChartArchive) GetSeriesThemeStyles() []*TSP.Reference {
	if m != nil {
		return m.SeriesThemeStyles
	}
	return nil
}

func (m *ChartArchive) GetSeriesPrivateStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.SeriesPrivateStyles
	}
	return nil
}

func (m *ChartArchive) GetSeriesNonStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.SeriesNonStyles
	}
	return nil
}

func (m *ChartArchive) GetParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.ParagraphStyles
	}
	return nil
}

func (m *ChartArchive) GetMultidatasetIndex() uint32 {
	if m != nil && m.MultidatasetIndex != nil {
		return *m.MultidatasetIndex
	}
	return 0
}

func (m *ChartArchive) GetNeedsCalcEngineDeferredImportAction() bool {
	if m != nil && m.NeedsCalcEngineDeferredImportAction != nil {
		return *m.NeedsCalcEngineDeferredImportAction
	}
	return false
}

func (m *ChartArchive) GetOwnedPreset() *TSP.Reference {
	if m != nil {
		return m.OwnedPreset
	}
	return nil
}

func (m *ChartArchive) GetIsDirty() bool {
	if m != nil && m.IsDirty != nil {
		return *m.IsDirty
	}
	return false
}

var E_ChartArchive_Unity = &proto.ExtensionDesc{
	ExtendedType:  (*ChartDrawableArchive)(nil),
	ExtensionType: (*ChartArchive)(nil),
	Field:         10000,
	Name:          "TSCH.ChartArchive.unity",
	Tag:           "bytes,10000,opt,name=unity",
	Filename:      "TSCHArchives.proto",
}

type ChartMultiDataIndexUpgrade struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartMultiDataIndexUpgrade) Reset()         { *m = ChartMultiDataIndexUpgrade{} }
func (m *ChartMultiDataIndexUpgrade) String() string { return proto.CompactTextString(m) }
func (*ChartMultiDataIndexUpgrade) ProtoMessage()    {}
func (*ChartMultiDataIndexUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{2}
}

func (m *ChartMultiDataIndexUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartMultiDataIndexUpgrade.Unmarshal(m, b)
}
func (m *ChartMultiDataIndexUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartMultiDataIndexUpgrade.Marshal(b, m, deterministic)
}
func (m *ChartMultiDataIndexUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartMultiDataIndexUpgrade.Merge(m, src)
}
func (m *ChartMultiDataIndexUpgrade) XXX_Size() int {
	return xxx_messageInfo_ChartMultiDataIndexUpgrade.Size(m)
}
func (m *ChartMultiDataIndexUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartMultiDataIndexUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_ChartMultiDataIndexUpgrade proto.InternalMessageInfo

var E_ChartMultiDataIndexUpgrade_UpgradedToUiState = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10021,
	Name:          "TSCH.ChartMultiDataIndexUpgrade.upgraded_to_ui_state",
	Tag:           "varint,10021,opt,name=upgraded_to_ui_state",
	Filename:      "TSCHArchives.proto",
}

type ChartGarlicMinMaxUpgrade struct {
	HorizontalMin        *float64 `protobuf:"fixed64,1,opt,name=horizontal_min,json=horizontalMin" json:"horizontal_min,omitempty"`
	HorizontalMax        *float64 `protobuf:"fixed64,2,opt,name=horizontal_max,json=horizontalMax" json:"horizontal_max,omitempty"`
	ValueMin             *float64 `protobuf:"fixed64,3,opt,name=value_min,json=valueMin" json:"value_min,omitempty"`
	ValueMax             *float64 `protobuf:"fixed64,4,opt,name=value_max,json=valueMax" json:"value_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartGarlicMinMaxUpgrade) Reset()         { *m = ChartGarlicMinMaxUpgrade{} }
func (m *ChartGarlicMinMaxUpgrade) String() string { return proto.CompactTextString(m) }
func (*ChartGarlicMinMaxUpgrade) ProtoMessage()    {}
func (*ChartGarlicMinMaxUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{3}
}

func (m *ChartGarlicMinMaxUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartGarlicMinMaxUpgrade.Unmarshal(m, b)
}
func (m *ChartGarlicMinMaxUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartGarlicMinMaxUpgrade.Marshal(b, m, deterministic)
}
func (m *ChartGarlicMinMaxUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartGarlicMinMaxUpgrade.Merge(m, src)
}
func (m *ChartGarlicMinMaxUpgrade) XXX_Size() int {
	return xxx_messageInfo_ChartGarlicMinMaxUpgrade.Size(m)
}
func (m *ChartGarlicMinMaxUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartGarlicMinMaxUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_ChartGarlicMinMaxUpgrade proto.InternalMessageInfo

func (m *ChartGarlicMinMaxUpgrade) GetHorizontalMin() float64 {
	if m != nil && m.HorizontalMin != nil {
		return *m.HorizontalMin
	}
	return 0
}

func (m *ChartGarlicMinMaxUpgrade) GetHorizontalMax() float64 {
	if m != nil && m.HorizontalMax != nil {
		return *m.HorizontalMax
	}
	return 0
}

func (m *ChartGarlicMinMaxUpgrade) GetValueMin() float64 {
	if m != nil && m.ValueMin != nil {
		return *m.ValueMin
	}
	return 0
}

func (m *ChartGarlicMinMaxUpgrade) GetValueMax() float64 {
	if m != nil && m.ValueMax != nil {
		return *m.ValueMax
	}
	return 0
}

var E_ChartGarlicMinMaxUpgrade_GarlicMinMaxUpgrade = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*ChartGarlicMinMaxUpgrade)(nil),
	Field:         10010,
	Name:          "TSCH.ChartGarlicMinMaxUpgrade.garlic_min_max_upgrade",
	Tag:           "bytes,10010,opt,name=garlic_min_max_upgrade",
	Filename:      "TSCHArchives.proto",
}

type ChartGarlicLabelFormatUpgrade struct {
	ValuePrefix            *string  `protobuf:"bytes,1,opt,name=value_prefix,json=valuePrefix" json:"value_prefix,omitempty"`
	ValueSuffix            *string  `protobuf:"bytes,2,opt,name=value_suffix,json=valueSuffix" json:"value_suffix,omitempty"`
	ValueUseSeparator      *bool    `protobuf:"varint,3,opt,name=value_use_separator,json=valueUseSeparator" json:"value_use_separator,omitempty"`
	HorizontalPrefix       *string  `protobuf:"bytes,4,opt,name=horizontal_prefix,json=horizontalPrefix" json:"horizontal_prefix,omitempty"`
	HorizontalSuffix       *string  `protobuf:"bytes,5,opt,name=horizontal_suffix,json=horizontalSuffix" json:"horizontal_suffix,omitempty"`
	HorizontalUseSeparator *bool    `protobuf:"varint,6,opt,name=horizontal_use_separator,json=horizontalUseSeparator" json:"horizontal_use_separator,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ChartGarlicLabelFormatUpgrade) Reset()         { *m = ChartGarlicLabelFormatUpgrade{} }
func (m *ChartGarlicLabelFormatUpgrade) String() string { return proto.CompactTextString(m) }
func (*ChartGarlicLabelFormatUpgrade) ProtoMessage()    {}
func (*ChartGarlicLabelFormatUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{4}
}

func (m *ChartGarlicLabelFormatUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartGarlicLabelFormatUpgrade.Unmarshal(m, b)
}
func (m *ChartGarlicLabelFormatUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartGarlicLabelFormatUpgrade.Marshal(b, m, deterministic)
}
func (m *ChartGarlicLabelFormatUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartGarlicLabelFormatUpgrade.Merge(m, src)
}
func (m *ChartGarlicLabelFormatUpgrade) XXX_Size() int {
	return xxx_messageInfo_ChartGarlicLabelFormatUpgrade.Size(m)
}
func (m *ChartGarlicLabelFormatUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartGarlicLabelFormatUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_ChartGarlicLabelFormatUpgrade proto.InternalMessageInfo

func (m *ChartGarlicLabelFormatUpgrade) GetValuePrefix() string {
	if m != nil && m.ValuePrefix != nil {
		return *m.ValuePrefix
	}
	return ""
}

func (m *ChartGarlicLabelFormatUpgrade) GetValueSuffix() string {
	if m != nil && m.ValueSuffix != nil {
		return *m.ValueSuffix
	}
	return ""
}

func (m *ChartGarlicLabelFormatUpgrade) GetValueUseSeparator() bool {
	if m != nil && m.ValueUseSeparator != nil {
		return *m.ValueUseSeparator
	}
	return false
}

func (m *ChartGarlicLabelFormatUpgrade) GetHorizontalPrefix() string {
	if m != nil && m.HorizontalPrefix != nil {
		return *m.HorizontalPrefix
	}
	return ""
}

func (m *ChartGarlicLabelFormatUpgrade) GetHorizontalSuffix() string {
	if m != nil && m.HorizontalSuffix != nil {
		return *m.HorizontalSuffix
	}
	return ""
}

func (m *ChartGarlicLabelFormatUpgrade) GetHorizontalUseSeparator() bool {
	if m != nil && m.HorizontalUseSeparator != nil {
		return *m.HorizontalUseSeparator
	}
	return false
}

var E_ChartGarlicLabelFormatUpgrade_GarlicLabelFormatUpgrade = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*ChartGarlicLabelFormatUpgrade)(nil),
	Field:         10011,
	Name:          "TSCH.ChartGarlicLabelFormatUpgrade.garlic_label_format_upgrade",
	Tag:           "bytes,10011,opt,name=garlic_label_format_upgrade",
	Filename:      "TSCHArchives.proto",
}

type ChartPasteboardAdditionsArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartPasteboardAdditionsArchive) Reset()         { *m = ChartPasteboardAdditionsArchive{} }
func (m *ChartPasteboardAdditionsArchive) String() string { return proto.CompactTextString(m) }
func (*ChartPasteboardAdditionsArchive) ProtoMessage()    {}
func (*ChartPasteboardAdditionsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{5}
}

func (m *ChartPasteboardAdditionsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartPasteboardAdditionsArchive.Unmarshal(m, b)
}
func (m *ChartPasteboardAdditionsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartPasteboardAdditionsArchive.Marshal(b, m, deterministic)
}
func (m *ChartPasteboardAdditionsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartPasteboardAdditionsArchive.Merge(m, src)
}
func (m *ChartPasteboardAdditionsArchive) XXX_Size() int {
	return xxx_messageInfo_ChartPasteboardAdditionsArchive.Size(m)
}
func (m *ChartPasteboardAdditionsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartPasteboardAdditionsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartPasteboardAdditionsArchive proto.InternalMessageInfo

var E_ChartPasteboardAdditionsArchive_PresetIndexForPasteboard = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         10000,
	Name:          "TSCH.ChartPasteboardAdditionsArchive.preset_index_for_pasteboard",
	Tag:           "varint,10000,opt,name=preset_index_for_pasteboard",
	Filename:      "TSCHArchives.proto",
}

var E_ChartPasteboardAdditionsArchive_PresetUuidForPasteboard = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: ([]byte)(nil),
	Field:         10001,
	Name:          "TSCH.ChartPasteboardAdditionsArchive.preset_uuid_for_pasteboard",
	Tag:           "bytes,10001,opt,name=preset_uuid_for_pasteboard",
	Filename:      "TSCHArchives.proto",
}

var E_ChartPasteboardAdditionsArchive_CustomFormatListForPasteboard = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*TSP.Reference)(nil),
	Field:         10003,
	Name:          "TSCH.ChartPasteboardAdditionsArchive.custom_format_list_for_pasteboard",
	Tag:           "bytes,10003,opt,name=custom_format_list_for_pasteboard",
	Filename:      "TSCHArchives.proto",
}

type ChartPreserveAppearanceForPresetArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartPreserveAppearanceForPresetArchive) Reset() {
	*m = ChartPreserveAppearanceForPresetArchive{}
}
func (m *ChartPreserveAppearanceForPresetArchive) String() string { return proto.CompactTextString(m) }
func (*ChartPreserveAppearanceForPresetArchive) ProtoMessage()    {}
func (*ChartPreserveAppearanceForPresetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{6}
}

func (m *ChartPreserveAppearanceForPresetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartPreserveAppearanceForPresetArchive.Unmarshal(m, b)
}
func (m *ChartPreserveAppearanceForPresetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartPreserveAppearanceForPresetArchive.Marshal(b, m, deterministic)
}
func (m *ChartPreserveAppearanceForPresetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartPreserveAppearanceForPresetArchive.Merge(m, src)
}
func (m *ChartPreserveAppearanceForPresetArchive) XXX_Size() int {
	return xxx_messageInfo_ChartPreserveAppearanceForPresetArchive.Size(m)
}
func (m *ChartPreserveAppearanceForPresetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartPreserveAppearanceForPresetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartPreserveAppearanceForPresetArchive proto.InternalMessageInfo

var E_ChartPreserveAppearanceForPresetArchive_AppearancePreservedForPreset = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10023,
	Name:          "TSCH.ChartPreserveAppearanceForPresetArchive.appearance_preserved_for_preset",
	Tag:           "varint,10023,opt,name=appearance_preserved_for_preset",
	Filename:      "TSCHArchives.proto",
}

type ChartSupportsProportionalBendedCalloutLinesArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartSupportsProportionalBendedCalloutLinesArchive) Reset() {
	*m = ChartSupportsProportionalBendedCalloutLinesArchive{}
}
func (m *ChartSupportsProportionalBendedCalloutLinesArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ChartSupportsProportionalBendedCalloutLinesArchive) ProtoMessage() {}
func (*ChartSupportsProportionalBendedCalloutLinesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{7}
}

func (m *ChartSupportsProportionalBendedCalloutLinesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive.Unmarshal(m, b)
}
func (m *ChartSupportsProportionalBendedCalloutLinesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive.Marshal(b, m, deterministic)
}
func (m *ChartSupportsProportionalBendedCalloutLinesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive.Merge(m, src)
}
func (m *ChartSupportsProportionalBendedCalloutLinesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive.Size(m)
}
func (m *ChartSupportsProportionalBendedCalloutLinesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSupportsProportionalBendedCalloutLinesArchive proto.InternalMessageInfo

var E_ChartSupportsProportionalBendedCalloutLinesArchive_SupportsProportionalBendedCalloutLines = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10024,
	Name:          "TSCH.ChartSupportsProportionalBendedCalloutLinesArchive.supports_proportional_bended_callout_lines",
	Tag:           "varint,10024,opt,name=supports_proportional_bended_callout_lines",
	Filename:      "TSCHArchives.proto",
}

type ChartSupportsRoundedCornersArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartSupportsRoundedCornersArchive) Reset()         { *m = ChartSupportsRoundedCornersArchive{} }
func (m *ChartSupportsRoundedCornersArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSupportsRoundedCornersArchive) ProtoMessage()    {}
func (*ChartSupportsRoundedCornersArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{8}
}

func (m *ChartSupportsRoundedCornersArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSupportsRoundedCornersArchive.Unmarshal(m, b)
}
func (m *ChartSupportsRoundedCornersArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSupportsRoundedCornersArchive.Marshal(b, m, deterministic)
}
func (m *ChartSupportsRoundedCornersArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSupportsRoundedCornersArchive.Merge(m, src)
}
func (m *ChartSupportsRoundedCornersArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSupportsRoundedCornersArchive.Size(m)
}
func (m *ChartSupportsRoundedCornersArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSupportsRoundedCornersArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSupportsRoundedCornersArchive proto.InternalMessageInfo

var E_ChartSupportsRoundedCornersArchive_DeprecatedSupportsRoundedCorners = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10025,
	Name:          "TSCH.ChartSupportsRoundedCornersArchive.deprecated_supports_rounded_corners",
	Tag:           "varint,10025,opt,name=deprecated_supports_rounded_corners",
	Filename:      "TSCHArchives.proto",
}

var E_ChartSupportsRoundedCornersArchive_SupportsRoundedCorners = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10026,
	Name:          "TSCH.ChartSupportsRoundedCornersArchive.supports_rounded_corners",
	Tag:           "varint,10026,opt,name=supports_rounded_corners",
	Filename:      "TSCHArchives.proto",
}

type ChartGridArchive struct {
	RowName              []string                                  `protobuf:"bytes,1,rep,name=row_name,json=rowName" json:"row_name,omitempty"`
	ColumnName           []string                                  `protobuf:"bytes,2,rep,name=column_name,json=columnName" json:"column_name,omitempty"`
	GridRow              []*GridRow                                `protobuf:"bytes,3,rep,name=grid_row,json=gridRow" json:"grid_row,omitempty"`
	IdMap                *ChartGridArchive_ChartGridRowColumnIdMap `protobuf:"bytes,4,opt,name=idMap" json:"idMap,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ChartGridArchive) Reset()         { *m = ChartGridArchive{} }
func (m *ChartGridArchive) String() string { return proto.CompactTextString(m) }
func (*ChartGridArchive) ProtoMessage()    {}
func (*ChartGridArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{9}
}

func (m *ChartGridArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartGridArchive.Unmarshal(m, b)
}
func (m *ChartGridArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartGridArchive.Marshal(b, m, deterministic)
}
func (m *ChartGridArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartGridArchive.Merge(m, src)
}
func (m *ChartGridArchive) XXX_Size() int {
	return xxx_messageInfo_ChartGridArchive.Size(m)
}
func (m *ChartGridArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartGridArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartGridArchive proto.InternalMessageInfo

func (m *ChartGridArchive) GetRowName() []string {
	if m != nil {
		return m.RowName
	}
	return nil
}

func (m *ChartGridArchive) GetColumnName() []string {
	if m != nil {
		return m.ColumnName
	}
	return nil
}

func (m *ChartGridArchive) GetGridRow() []*GridRow {
	if m != nil {
		return m.GridRow
	}
	return nil
}

func (m *ChartGridArchive) GetIdMap() *ChartGridArchive_ChartGridRowColumnIdMap {
	if m != nil {
		return m.IdMap
	}
	return nil
}

type ChartGridArchive_ChartGridRowColumnIdMap struct {
	RowIdMap             []*ChartGridArchive_ChartGridRowColumnIdMap_Entry `protobuf:"bytes,1,rep,name=row_id_map,json=rowIdMap" json:"row_id_map,omitempty"`
	ColumnIdMap          []*ChartGridArchive_ChartGridRowColumnIdMap_Entry `protobuf:"bytes,2,rep,name=column_id_map,json=columnIdMap" json:"column_id_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap) Reset() {
	*m = ChartGridArchive_ChartGridRowColumnIdMap{}
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap) String() string { return proto.CompactTextString(m) }
func (*ChartGridArchive_ChartGridRowColumnIdMap) ProtoMessage()    {}
func (*ChartGridArchive_ChartGridRowColumnIdMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{9, 0}
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap.Unmarshal(m, b)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap.Marshal(b, m, deterministic)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap.Merge(m, src)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap) XXX_Size() int {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap.Size(m)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap.DiscardUnknown(m)
}

var xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap proto.InternalMessageInfo

func (m *ChartGridArchive_ChartGridRowColumnIdMap) GetRowIdMap() []*ChartGridArchive_ChartGridRowColumnIdMap_Entry {
	if m != nil {
		return m.RowIdMap
	}
	return nil
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap) GetColumnIdMap() []*ChartGridArchive_ChartGridRowColumnIdMap_Entry {
	if m != nil {
		return m.ColumnIdMap
	}
	return nil
}

type ChartGridArchive_ChartGridRowColumnIdMap_Entry struct {
	UniqueId             *string  `protobuf:"bytes,1,req,name=uniqueId" json:"uniqueId,omitempty"`
	Index                *uint32  `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) Reset() {
	*m = ChartGridArchive_ChartGridRowColumnIdMap_Entry{}
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) String() string {
	return proto.CompactTextString(m)
}
func (*ChartGridArchive_ChartGridRowColumnIdMap_Entry) ProtoMessage() {}
func (*ChartGridArchive_ChartGridRowColumnIdMap_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{9, 0, 0}
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry.Unmarshal(m, b)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry.Marshal(b, m, deterministic)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry.Merge(m, src)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) XXX_Size() int {
	return xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry.Size(m)
}
func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_ChartGridArchive_ChartGridRowColumnIdMap_Entry proto.InternalMessageInfo

func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) GetUniqueId() string {
	if m != nil && m.UniqueId != nil {
		return *m.UniqueId
	}
	return ""
}

func (m *ChartGridArchive_ChartGridRowColumnIdMap_Entry) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type ChartMediatorArchive struct {
	Info                 *TSP.Reference `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	LocalSeriesIndexes   []uint32       `protobuf:"varint,2,rep,name=local_series_indexes,json=localSeriesIndexes" json:"local_series_indexes,omitempty"`
	RemoteSeriesIndexes  []uint32       `protobuf:"varint,3,rep,name=remote_series_indexes,json=remoteSeriesIndexes" json:"remote_series_indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChartMediatorArchive) Reset()         { *m = ChartMediatorArchive{} }
func (m *ChartMediatorArchive) String() string { return proto.CompactTextString(m) }
func (*ChartMediatorArchive) ProtoMessage()    {}
func (*ChartMediatorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{10}
}

func (m *ChartMediatorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartMediatorArchive.Unmarshal(m, b)
}
func (m *ChartMediatorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartMediatorArchive.Marshal(b, m, deterministic)
}
func (m *ChartMediatorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartMediatorArchive.Merge(m, src)
}
func (m *ChartMediatorArchive) XXX_Size() int {
	return xxx_messageInfo_ChartMediatorArchive.Size(m)
}
func (m *ChartMediatorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartMediatorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartMediatorArchive proto.InternalMessageInfo

func (m *ChartMediatorArchive) GetInfo() *TSP.Reference {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ChartMediatorArchive) GetLocalSeriesIndexes() []uint32 {
	if m != nil {
		return m.LocalSeriesIndexes
	}
	return nil
}

func (m *ChartMediatorArchive) GetRemoteSeriesIndexes() []uint32 {
	if m != nil {
		return m.RemoteSeriesIndexes
	}
	return nil
}

type ChartFillSetArchive struct {
	Identifier                *string          `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	LookupString              *string          `protobuf:"bytes,2,req,name=lookup_string,json=lookupString" json:"lookup_string,omitempty"`
	NumberOfThemeSeriesStyles *uint32          `protobuf:"varint,3,opt,name=number_of_theme_series_styles,json=numberOfThemeSeriesStyles" json:"number_of_theme_series_styles,omitempty"`
	SeriesStyles              []*TSP.Reference `protobuf:"bytes,4,rep,name=series_styles,json=seriesStyles" json:"series_styles,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}         `json:"-"`
	XXX_unrecognized          []byte           `json:"-"`
	XXX_sizecache             int32            `json:"-"`
}

func (m *ChartFillSetArchive) Reset()         { *m = ChartFillSetArchive{} }
func (m *ChartFillSetArchive) String() string { return proto.CompactTextString(m) }
func (*ChartFillSetArchive) ProtoMessage()    {}
func (*ChartFillSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{11}
}

func (m *ChartFillSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartFillSetArchive.Unmarshal(m, b)
}
func (m *ChartFillSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartFillSetArchive.Marshal(b, m, deterministic)
}
func (m *ChartFillSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartFillSetArchive.Merge(m, src)
}
func (m *ChartFillSetArchive) XXX_Size() int {
	return xxx_messageInfo_ChartFillSetArchive.Size(m)
}
func (m *ChartFillSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartFillSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartFillSetArchive proto.InternalMessageInfo

func (m *ChartFillSetArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *ChartFillSetArchive) GetLookupString() string {
	if m != nil && m.LookupString != nil {
		return *m.LookupString
	}
	return ""
}

func (m *ChartFillSetArchive) GetNumberOfThemeSeriesStyles() uint32 {
	if m != nil && m.NumberOfThemeSeriesStyles != nil {
		return *m.NumberOfThemeSeriesStyles
	}
	return 0
}

func (m *ChartFillSetArchive) GetSeriesStyles() []*TSP.Reference {
	if m != nil {
		return m.SeriesStyles
	}
	return nil
}

type ChartStylePreset struct {
	ChartStyle                   *TSP.Reference   `protobuf:"bytes,1,opt,name=chart_style,json=chartStyle" json:"chart_style,omitempty"`
	LegendStyle                  *TSP.Reference   `protobuf:"bytes,2,opt,name=legend_style,json=legendStyle" json:"legend_style,omitempty"`
	ValueAxisStyles              []*TSP.Reference `protobuf:"bytes,3,rep,name=value_axis_styles,json=valueAxisStyles" json:"value_axis_styles,omitempty"`
	CategoryAxisStyles           []*TSP.Reference `protobuf:"bytes,4,rep,name=category_axis_styles,json=categoryAxisStyles" json:"category_axis_styles,omitempty"`
	SeriesStyles                 []*TSP.Reference `protobuf:"bytes,5,rep,name=series_styles,json=seriesStyles" json:"series_styles,omitempty"`
	ParagraphStyles              []*TSP.Reference `protobuf:"bytes,6,rep,name=paragraph_styles,json=paragraphStyles" json:"paragraph_styles,omitempty"`
	Uuid                         []byte           `protobuf:"bytes,7,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}         `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartStylePreset) Reset()         { *m = ChartStylePreset{} }
func (m *ChartStylePreset) String() string { return proto.CompactTextString(m) }
func (*ChartStylePreset) ProtoMessage()    {}
func (*ChartStylePreset) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{12}
}

var extRange_ChartStylePreset = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartStylePreset) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartStylePreset
}

func (m *ChartStylePreset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartStylePreset.Unmarshal(m, b)
}
func (m *ChartStylePreset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartStylePreset.Marshal(b, m, deterministic)
}
func (m *ChartStylePreset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartStylePreset.Merge(m, src)
}
func (m *ChartStylePreset) XXX_Size() int {
	return xxx_messageInfo_ChartStylePreset.Size(m)
}
func (m *ChartStylePreset) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartStylePreset.DiscardUnknown(m)
}

var xxx_messageInfo_ChartStylePreset proto.InternalMessageInfo

func (m *ChartStylePreset) GetChartStyle() *TSP.Reference {
	if m != nil {
		return m.ChartStyle
	}
	return nil
}

func (m *ChartStylePreset) GetLegendStyle() *TSP.Reference {
	if m != nil {
		return m.LegendStyle
	}
	return nil
}

func (m *ChartStylePreset) GetValueAxisStyles() []*TSP.Reference {
	if m != nil {
		return m.ValueAxisStyles
	}
	return nil
}

func (m *ChartStylePreset) GetCategoryAxisStyles() []*TSP.Reference {
	if m != nil {
		return m.CategoryAxisStyles
	}
	return nil
}

func (m *ChartStylePreset) GetSeriesStyles() []*TSP.Reference {
	if m != nil {
		return m.SeriesStyles
	}
	return nil
}

func (m *ChartStylePreset) GetParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.ParagraphStyles
	}
	return nil
}

func (m *ChartStylePreset) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type ChartPresetsArchive struct {
	ChartPresets         []*TSP.Reference `protobuf:"bytes,1,rep,name=chart_presets,json=chartPresets" json:"chart_presets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChartPresetsArchive) Reset()         { *m = ChartPresetsArchive{} }
func (m *ChartPresetsArchive) String() string { return proto.CompactTextString(m) }
func (*ChartPresetsArchive) ProtoMessage()    {}
func (*ChartPresetsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{13}
}

func (m *ChartPresetsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartPresetsArchive.Unmarshal(m, b)
}
func (m *ChartPresetsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartPresetsArchive.Marshal(b, m, deterministic)
}
func (m *ChartPresetsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartPresetsArchive.Merge(m, src)
}
func (m *ChartPresetsArchive) XXX_Size() int {
	return xxx_messageInfo_ChartPresetsArchive.Size(m)
}
func (m *ChartPresetsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartPresetsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartPresetsArchive proto.InternalMessageInfo

func (m *ChartPresetsArchive) GetChartPresets() []*TSP.Reference {
	if m != nil {
		return m.ChartPresets
	}
	return nil
}

var E_ChartPresetsArchive_Extension = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.ThemeArchive)(nil),
	ExtensionType: (*ChartPresetsArchive)(nil),
	Field:         120,
	Name:          "TSCH.ChartPresetsArchive.extension",
	Tag:           "bytes,120,opt,name=extension",
	Filename:      "TSCHArchives.proto",
}

type PropertyValueStorageContainerArchive struct {
	ChartStyle                   *TSP.Reference            `protobuf:"bytes,1,opt,name=chart_style,json=chartStyle" json:"chart_style,omitempty"`
	ChartNonstyle                *TSP.Reference            `protobuf:"bytes,2,opt,name=chart_nonstyle,json=chartNonstyle" json:"chart_nonstyle,omitempty"`
	LegendStyle                  *TSP.Reference            `protobuf:"bytes,3,opt,name=legend_style,json=legendStyle" json:"legend_style,omitempty"`
	LegendNonstyle               *TSP.Reference            `protobuf:"bytes,4,opt,name=legend_nonstyle,json=legendNonstyle" json:"legend_nonstyle,omitempty"`
	ValueAxisStyles              *TSP.SparseReferenceArray `protobuf:"bytes,5,opt,name=value_axis_styles,json=valueAxisStyles" json:"value_axis_styles,omitempty"`
	ValueAxisNonstyles           *TSP.SparseReferenceArray `protobuf:"bytes,6,opt,name=value_axis_nonstyles,json=valueAxisNonstyles" json:"value_axis_nonstyles,omitempty"`
	CategoryAxisStyles           *TSP.SparseReferenceArray `protobuf:"bytes,7,opt,name=category_axis_styles,json=categoryAxisStyles" json:"category_axis_styles,omitempty"`
	CategoryAxisNonstyles        *TSP.SparseReferenceArray `protobuf:"bytes,8,opt,name=category_axis_nonstyles,json=categoryAxisNonstyles" json:"category_axis_nonstyles,omitempty"`
	SeriesThemeStyles            *TSP.SparseReferenceArray `protobuf:"bytes,9,opt,name=series_theme_styles,json=seriesThemeStyles" json:"series_theme_styles,omitempty"`
	SeriesPrivateStyles          *TSP.SparseReferenceArray `protobuf:"bytes,10,opt,name=series_private_styles,json=seriesPrivateStyles" json:"series_private_styles,omitempty"`
	SeriesNonstyles              *TSP.SparseReferenceArray `protobuf:"bytes,11,opt,name=series_nonstyles,json=seriesNonstyles" json:"series_nonstyles,omitempty"`
	ParagraphStyles              *TSP.SparseReferenceArray `protobuf:"bytes,12,opt,name=paragraph_styles,json=paragraphStyles" json:"paragraph_styles,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                  `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *PropertyValueStorageContainerArchive) Reset()         { *m = PropertyValueStorageContainerArchive{} }
func (m *PropertyValueStorageContainerArchive) String() string { return proto.CompactTextString(m) }
func (*PropertyValueStorageContainerArchive) ProtoMessage()    {}
func (*PropertyValueStorageContainerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{14}
}

var extRange_PropertyValueStorageContainerArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*PropertyValueStorageContainerArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_PropertyValueStorageContainerArchive
}

func (m *PropertyValueStorageContainerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyValueStorageContainerArchive.Unmarshal(m, b)
}
func (m *PropertyValueStorageContainerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyValueStorageContainerArchive.Marshal(b, m, deterministic)
}
func (m *PropertyValueStorageContainerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyValueStorageContainerArchive.Merge(m, src)
}
func (m *PropertyValueStorageContainerArchive) XXX_Size() int {
	return xxx_messageInfo_PropertyValueStorageContainerArchive.Size(m)
}
func (m *PropertyValueStorageContainerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyValueStorageContainerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyValueStorageContainerArchive proto.InternalMessageInfo

func (m *PropertyValueStorageContainerArchive) GetChartStyle() *TSP.Reference {
	if m != nil {
		return m.ChartStyle
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetChartNonstyle() *TSP.Reference {
	if m != nil {
		return m.ChartNonstyle
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetLegendStyle() *TSP.Reference {
	if m != nil {
		return m.LegendStyle
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetLegendNonstyle() *TSP.Reference {
	if m != nil {
		return m.LegendNonstyle
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetValueAxisStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.ValueAxisStyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetValueAxisNonstyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.ValueAxisNonstyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetCategoryAxisStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.CategoryAxisStyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetCategoryAxisNonstyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.CategoryAxisNonstyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetSeriesThemeStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.SeriesThemeStyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetSeriesPrivateStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.SeriesPrivateStyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetSeriesNonstyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.SeriesNonstyles
	}
	return nil
}

func (m *PropertyValueStorageContainerArchive) GetParagraphStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.ParagraphStyles
	}
	return nil
}

type StylePasteboardDataArchive struct {
	Super                 *TSS.StyleArchive                     `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	StyleNetwork          *PropertyValueStorageContainerArchive `protobuf:"bytes,2,opt,name=style_network,json=styleNetwork" json:"style_network,omitempty"`
	CopiedFromEntireChart *bool                                 `protobuf:"varint,3,opt,name=copied_from_entire_chart,json=copiedFromEntireChart" json:"copied_from_entire_chart,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                              `json:"-"`
	XXX_unrecognized      []byte                                `json:"-"`
	XXX_sizecache         int32                                 `json:"-"`
}

func (m *StylePasteboardDataArchive) Reset()         { *m = StylePasteboardDataArchive{} }
func (m *StylePasteboardDataArchive) String() string { return proto.CompactTextString(m) }
func (*StylePasteboardDataArchive) ProtoMessage()    {}
func (*StylePasteboardDataArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{15}
}

func (m *StylePasteboardDataArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StylePasteboardDataArchive.Unmarshal(m, b)
}
func (m *StylePasteboardDataArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StylePasteboardDataArchive.Marshal(b, m, deterministic)
}
func (m *StylePasteboardDataArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StylePasteboardDataArchive.Merge(m, src)
}
func (m *StylePasteboardDataArchive) XXX_Size() int {
	return xxx_messageInfo_StylePasteboardDataArchive.Size(m)
}
func (m *StylePasteboardDataArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StylePasteboardDataArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StylePasteboardDataArchive proto.InternalMessageInfo

func (m *StylePasteboardDataArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *StylePasteboardDataArchive) GetStyleNetwork() *PropertyValueStorageContainerArchive {
	if m != nil {
		return m.StyleNetwork
	}
	return nil
}

func (m *StylePasteboardDataArchive) GetCopiedFromEntireChart() bool {
	if m != nil && m.CopiedFromEntireChart != nil {
		return *m.CopiedFromEntireChart
	}
	return false
}

type ChartSelectionPathTypeArchive struct {
	PathType             *string  `protobuf:"bytes,1,opt,name=path_type,json=pathType" json:"path_type,omitempty"`
	PathName             *string  `protobuf:"bytes,2,opt,name=path_name,json=pathName" json:"path_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartSelectionPathTypeArchive) Reset()         { *m = ChartSelectionPathTypeArchive{} }
func (m *ChartSelectionPathTypeArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSelectionPathTypeArchive) ProtoMessage()    {}
func (*ChartSelectionPathTypeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{16}
}

func (m *ChartSelectionPathTypeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSelectionPathTypeArchive.Unmarshal(m, b)
}
func (m *ChartSelectionPathTypeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSelectionPathTypeArchive.Marshal(b, m, deterministic)
}
func (m *ChartSelectionPathTypeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSelectionPathTypeArchive.Merge(m, src)
}
func (m *ChartSelectionPathTypeArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSelectionPathTypeArchive.Size(m)
}
func (m *ChartSelectionPathTypeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSelectionPathTypeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSelectionPathTypeArchive proto.InternalMessageInfo

func (m *ChartSelectionPathTypeArchive) GetPathType() string {
	if m != nil && m.PathType != nil {
		return *m.PathType
	}
	return ""
}

func (m *ChartSelectionPathTypeArchive) GetPathName() string {
	if m != nil && m.PathName != nil {
		return *m.PathName
	}
	return ""
}

type ChartAxisIDArchive struct {
	AxisType             *AxisType `protobuf:"varint,1,opt,name=axis_type,json=axisType,enum=TSCH.AxisType" json:"axis_type,omitempty"`
	Ordinal              *uint32   `protobuf:"varint,2,opt,name=ordinal" json:"ordinal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChartAxisIDArchive) Reset()         { *m = ChartAxisIDArchive{} }
func (m *ChartAxisIDArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisIDArchive) ProtoMessage()    {}
func (*ChartAxisIDArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{17}
}

func (m *ChartAxisIDArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisIDArchive.Unmarshal(m, b)
}
func (m *ChartAxisIDArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisIDArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisIDArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisIDArchive.Merge(m, src)
}
func (m *ChartAxisIDArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisIDArchive.Size(m)
}
func (m *ChartAxisIDArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisIDArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisIDArchive proto.InternalMessageInfo

func (m *ChartAxisIDArchive) GetAxisType() AxisType {
	if m != nil && m.AxisType != nil {
		return *m.AxisType
	}
	return AxisType_axis_type_unknown
}

func (m *ChartAxisIDArchive) GetOrdinal() uint32 {
	if m != nil && m.Ordinal != nil {
		return *m.Ordinal
	}
	return 0
}

type ChartSelectionPathArgumentArchive struct {
	Number               *uint32             `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	AxisId               *ChartAxisIDArchive `protobuf:"bytes,2,opt,name=axis_id,json=axisId" json:"axis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ChartSelectionPathArgumentArchive) Reset()         { *m = ChartSelectionPathArgumentArchive{} }
func (m *ChartSelectionPathArgumentArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSelectionPathArgumentArchive) ProtoMessage()    {}
func (*ChartSelectionPathArgumentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{18}
}

func (m *ChartSelectionPathArgumentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSelectionPathArgumentArchive.Unmarshal(m, b)
}
func (m *ChartSelectionPathArgumentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSelectionPathArgumentArchive.Marshal(b, m, deterministic)
}
func (m *ChartSelectionPathArgumentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSelectionPathArgumentArchive.Merge(m, src)
}
func (m *ChartSelectionPathArgumentArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSelectionPathArgumentArchive.Size(m)
}
func (m *ChartSelectionPathArgumentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSelectionPathArgumentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSelectionPathArgumentArchive proto.InternalMessageInfo

func (m *ChartSelectionPathArgumentArchive) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *ChartSelectionPathArgumentArchive) GetAxisId() *ChartAxisIDArchive {
	if m != nil {
		return m.AxisId
	}
	return nil
}

type ChartSelectionPathArchive struct {
	PathType             *ChartSelectionPathTypeArchive       `protobuf:"bytes,1,opt,name=path_type,json=pathType" json:"path_type,omitempty"`
	SubSelection         *ChartSelectionPathArchive           `protobuf:"bytes,2,opt,name=sub_selection,json=subSelection" json:"sub_selection,omitempty"`
	Arguments            []*ChartSelectionPathArgumentArchive `protobuf:"bytes,3,rep,name=arguments" json:"arguments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ChartSelectionPathArchive) Reset()         { *m = ChartSelectionPathArchive{} }
func (m *ChartSelectionPathArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSelectionPathArchive) ProtoMessage()    {}
func (*ChartSelectionPathArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{19}
}

func (m *ChartSelectionPathArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSelectionPathArchive.Unmarshal(m, b)
}
func (m *ChartSelectionPathArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSelectionPathArchive.Marshal(b, m, deterministic)
}
func (m *ChartSelectionPathArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSelectionPathArchive.Merge(m, src)
}
func (m *ChartSelectionPathArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSelectionPathArchive.Size(m)
}
func (m *ChartSelectionPathArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSelectionPathArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSelectionPathArchive proto.InternalMessageInfo

func (m *ChartSelectionPathArchive) GetPathType() *ChartSelectionPathTypeArchive {
	if m != nil {
		return m.PathType
	}
	return nil
}

func (m *ChartSelectionPathArchive) GetSubSelection() *ChartSelectionPathArchive {
	if m != nil {
		return m.SubSelection
	}
	return nil
}

func (m *ChartSelectionPathArchive) GetArguments() []*ChartSelectionPathArgumentArchive {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type ChartSelectionArchive struct {
	Super                *TSD.DrawableSelectionArchive `protobuf:"bytes,3,opt,name=super" json:"super,omitempty"`
	Chart                *TSP.Reference                `protobuf:"bytes,1,opt,name=chart" json:"chart,omitempty"`
	Paths                []*ChartSelectionPathArchive  `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ChartSelectionArchive) Reset()         { *m = ChartSelectionArchive{} }
func (m *ChartSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSelectionArchive) ProtoMessage()    {}
func (*ChartSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{20}
}

func (m *ChartSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSelectionArchive.Unmarshal(m, b)
}
func (m *ChartSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSelectionArchive.Marshal(b, m, deterministic)
}
func (m *ChartSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSelectionArchive.Merge(m, src)
}
func (m *ChartSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSelectionArchive.Size(m)
}
func (m *ChartSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSelectionArchive proto.InternalMessageInfo

func (m *ChartSelectionArchive) GetSuper() *TSD.DrawableSelectionArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ChartSelectionArchive) GetChart() *TSP.Reference {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *ChartSelectionArchive) GetPaths() []*ChartSelectionPathArchive {
	if m != nil {
		return m.Paths
	}
	return nil
}

type ChartCDESelectionArchive struct {
	Chart                *TSP.Reference `protobuf:"bytes,1,opt,name=chart" json:"chart,omitempty"`
	SelectionType        *int32         `protobuf:"varint,2,opt,name=selection_type,json=selectionType" json:"selection_type,omitempty"`
	RowLocation          *uint32        `protobuf:"varint,3,opt,name=row_location,json=rowLocation" json:"row_location,omitempty"`
	RowLength            *uint32        `protobuf:"varint,4,opt,name=row_length,json=rowLength" json:"row_length,omitempty"`
	ColumnLocation       *uint32        `protobuf:"varint,5,opt,name=column_location,json=columnLocation" json:"column_location,omitempty"`
	ColumnLength         *uint32        `protobuf:"varint,6,opt,name=column_length,json=columnLength" json:"column_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChartCDESelectionArchive) Reset()         { *m = ChartCDESelectionArchive{} }
func (m *ChartCDESelectionArchive) String() string { return proto.CompactTextString(m) }
func (*ChartCDESelectionArchive) ProtoMessage()    {}
func (*ChartCDESelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{21}
}

func (m *ChartCDESelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartCDESelectionArchive.Unmarshal(m, b)
}
func (m *ChartCDESelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartCDESelectionArchive.Marshal(b, m, deterministic)
}
func (m *ChartCDESelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartCDESelectionArchive.Merge(m, src)
}
func (m *ChartCDESelectionArchive) XXX_Size() int {
	return xxx_messageInfo_ChartCDESelectionArchive.Size(m)
}
func (m *ChartCDESelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartCDESelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartCDESelectionArchive proto.InternalMessageInfo

func (m *ChartCDESelectionArchive) GetChart() *TSP.Reference {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *ChartCDESelectionArchive) GetSelectionType() int32 {
	if m != nil && m.SelectionType != nil {
		return *m.SelectionType
	}
	return 0
}

func (m *ChartCDESelectionArchive) GetRowLocation() uint32 {
	if m != nil && m.RowLocation != nil {
		return *m.RowLocation
	}
	return 0
}

func (m *ChartCDESelectionArchive) GetRowLength() uint32 {
	if m != nil && m.RowLength != nil {
		return *m.RowLength
	}
	return 0
}

func (m *ChartCDESelectionArchive) GetColumnLocation() uint32 {
	if m != nil && m.ColumnLocation != nil {
		return *m.ColumnLocation
	}
	return 0
}

func (m *ChartCDESelectionArchive) GetColumnLength() uint32 {
	if m != nil && m.ColumnLength != nil {
		return *m.ColumnLength
	}
	return 0
}

type ChartUIState struct {
	Chart                        *TSP.Reference `protobuf:"bytes,1,opt,name=chart" json:"chart,omitempty"`
	CdeLastRowSelected           *int32         `protobuf:"varint,2,opt,name=cde_last_row_selected,json=cdeLastRowSelected" json:"cde_last_row_selected,omitempty"`
	CdeLastColSelected           *int32         `protobuf:"varint,3,opt,name=cde_last_col_selected,json=cdeLastColSelected" json:"cde_last_col_selected,omitempty"`
	CdeLastRowCount              *int32         `protobuf:"varint,4,opt,name=cde_last_row_count,json=cdeLastRowCount" json:"cde_last_row_count,omitempty"`
	CdeLastColCount              *int32         `protobuf:"varint,5,opt,name=cde_last_col_count,json=cdeLastColCount" json:"cde_last_col_count,omitempty"`
	CdeUseFullKeyboard           *bool          `protobuf:"varint,6,opt,name=cde_use_full_keyboard,json=cdeUseFullKeyboard" json:"cde_use_full_keyboard,omitempty"`
	MultiDataSetIndex            *int32         `protobuf:"varint,7,opt,name=multi_data_set_index,json=multiDataSetIndex" json:"multi_data_set_index,omitempty"`
	IsValidMultiDataSetIndex     *bool          `protobuf:"varint,8,opt,name=is_valid_multi_data_set_index,json=isValidMultiDataSetIndex" json:"is_valid_multi_data_set_index,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}       `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartUIState) Reset()         { *m = ChartUIState{} }
func (m *ChartUIState) String() string { return proto.CompactTextString(m) }
func (*ChartUIState) ProtoMessage()    {}
func (*ChartUIState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{22}
}

var extRange_ChartUIState = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartUIState) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartUIState
}

func (m *ChartUIState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartUIState.Unmarshal(m, b)
}
func (m *ChartUIState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartUIState.Marshal(b, m, deterministic)
}
func (m *ChartUIState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartUIState.Merge(m, src)
}
func (m *ChartUIState) XXX_Size() int {
	return xxx_messageInfo_ChartUIState.Size(m)
}
func (m *ChartUIState) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartUIState.DiscardUnknown(m)
}

var xxx_messageInfo_ChartUIState proto.InternalMessageInfo

func (m *ChartUIState) GetChart() *TSP.Reference {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *ChartUIState) GetCdeLastRowSelected() int32 {
	if m != nil && m.CdeLastRowSelected != nil {
		return *m.CdeLastRowSelected
	}
	return 0
}

func (m *ChartUIState) GetCdeLastColSelected() int32 {
	if m != nil && m.CdeLastColSelected != nil {
		return *m.CdeLastColSelected
	}
	return 0
}

func (m *ChartUIState) GetCdeLastRowCount() int32 {
	if m != nil && m.CdeLastRowCount != nil {
		return *m.CdeLastRowCount
	}
	return 0
}

func (m *ChartUIState) GetCdeLastColCount() int32 {
	if m != nil && m.CdeLastColCount != nil {
		return *m.CdeLastColCount
	}
	return 0
}

func (m *ChartUIState) GetCdeUseFullKeyboard() bool {
	if m != nil && m.CdeUseFullKeyboard != nil {
		return *m.CdeUseFullKeyboard
	}
	return false
}

func (m *ChartUIState) GetMultiDataSetIndex() int32 {
	if m != nil && m.MultiDataSetIndex != nil {
		return *m.MultiDataSetIndex
	}
	return 0
}

func (m *ChartUIState) GetIsValidMultiDataSetIndex() bool {
	if m != nil && m.IsValidMultiDataSetIndex != nil {
		return *m.IsValidMultiDataSetIndex
	}
	return false
}

type ChartUIStateMultiDataIndexUpgrade struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartUIStateMultiDataIndexUpgrade) Reset()         { *m = ChartUIStateMultiDataIndexUpgrade{} }
func (m *ChartUIStateMultiDataIndexUpgrade) String() string { return proto.CompactTextString(m) }
func (*ChartUIStateMultiDataIndexUpgrade) ProtoMessage()    {}
func (*ChartUIStateMultiDataIndexUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{23}
}

func (m *ChartUIStateMultiDataIndexUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade.Unmarshal(m, b)
}
func (m *ChartUIStateMultiDataIndexUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade.Marshal(b, m, deterministic)
}
func (m *ChartUIStateMultiDataIndexUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade.Merge(m, src)
}
func (m *ChartUIStateMultiDataIndexUpgrade) XXX_Size() int {
	return xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade.Size(m)
}
func (m *ChartUIStateMultiDataIndexUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_ChartUIStateMultiDataIndexUpgrade proto.InternalMessageInfo

var E_ChartUIStateMultiDataIndexUpgrade_UpgradedFromModel = &proto.ExtensionDesc{
	ExtendedType:  (*ChartUIState)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10022,
	Name:          "TSCH.ChartUIStateMultiDataIndexUpgrade.upgraded_from_model",
	Tag:           "varint,10022,opt,name=upgraded_from_model",
	Filename:      "TSCHArchives.proto",
}

type ChartFormatStructExtensions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartFormatStructExtensions) Reset()         { *m = ChartFormatStructExtensions{} }
func (m *ChartFormatStructExtensions) String() string { return proto.CompactTextString(m) }
func (*ChartFormatStructExtensions) ProtoMessage()    {}
func (*ChartFormatStructExtensions) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{24}
}

func (m *ChartFormatStructExtensions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartFormatStructExtensions.Unmarshal(m, b)
}
func (m *ChartFormatStructExtensions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartFormatStructExtensions.Marshal(b, m, deterministic)
}
func (m *ChartFormatStructExtensions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartFormatStructExtensions.Merge(m, src)
}
func (m *ChartFormatStructExtensions) XXX_Size() int {
	return xxx_messageInfo_ChartFormatStructExtensions.Size(m)
}
func (m *ChartFormatStructExtensions) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartFormatStructExtensions.DiscardUnknown(m)
}

var xxx_messageInfo_ChartFormatStructExtensions proto.InternalMessageInfo

var E_ChartFormatStructExtensions_Prefix = &proto.ExtensionDesc{
	ExtendedType:  (*TSK.FormatStructArchive)(nil),
	ExtensionType: (*string)(nil),
	Field:         10000,
	Name:          "TSCH.ChartFormatStructExtensions.prefix",
	Tag:           "bytes,10000,opt,name=prefix",
	Filename:      "TSCHArchives.proto",
}

var E_ChartFormatStructExtensions_Suffix = &proto.ExtensionDesc{
	ExtendedType:  (*TSK.FormatStructArchive)(nil),
	ExtensionType: (*string)(nil),
	Field:         10001,
	Name:          "TSCH.ChartFormatStructExtensions.suffix",
	Tag:           "bytes,10001,opt,name=suffix",
	Filename:      "TSCHArchives.proto",
}

type ChartReferenceLineNonStyleItem struct {
	NonStyle             *TSP.Reference `protobuf:"bytes,1,req,name=non_style,json=nonStyle" json:"non_style,omitempty"`
	Uuid                 *TSP.UUID      `protobuf:"bytes,2,req,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChartReferenceLineNonStyleItem) Reset()         { *m = ChartReferenceLineNonStyleItem{} }
func (m *ChartReferenceLineNonStyleItem) String() string { return proto.CompactTextString(m) }
func (*ChartReferenceLineNonStyleItem) ProtoMessage()    {}
func (*ChartReferenceLineNonStyleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{25}
}

func (m *ChartReferenceLineNonStyleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartReferenceLineNonStyleItem.Unmarshal(m, b)
}
func (m *ChartReferenceLineNonStyleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartReferenceLineNonStyleItem.Marshal(b, m, deterministic)
}
func (m *ChartReferenceLineNonStyleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartReferenceLineNonStyleItem.Merge(m, src)
}
func (m *ChartReferenceLineNonStyleItem) XXX_Size() int {
	return xxx_messageInfo_ChartReferenceLineNonStyleItem.Size(m)
}
func (m *ChartReferenceLineNonStyleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartReferenceLineNonStyleItem.DiscardUnknown(m)
}

var xxx_messageInfo_ChartReferenceLineNonStyleItem proto.InternalMessageInfo

func (m *ChartReferenceLineNonStyleItem) GetNonStyle() *TSP.Reference {
	if m != nil {
		return m.NonStyle
	}
	return nil
}

func (m *ChartReferenceLineNonStyleItem) GetUuid() *TSP.UUID {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type ChartAxisReferenceLineNonStylesArchive struct {
	AxisId                     *ChartAxisIDArchive               `protobuf:"bytes,1,req,name=axis_id,json=axisId" json:"axis_id,omitempty"`
	ReferenceLineNonStyleItems []*ChartReferenceLineNonStyleItem `protobuf:"bytes,2,rep,name=reference_line_non_style_items,json=referenceLineNonStyleItems" json:"reference_line_non_style_items,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *ChartAxisReferenceLineNonStylesArchive) Reset() {
	*m = ChartAxisReferenceLineNonStylesArchive{}
}
func (m *ChartAxisReferenceLineNonStylesArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisReferenceLineNonStylesArchive) ProtoMessage()    {}
func (*ChartAxisReferenceLineNonStylesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{26}
}

func (m *ChartAxisReferenceLineNonStylesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive.Unmarshal(m, b)
}
func (m *ChartAxisReferenceLineNonStylesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisReferenceLineNonStylesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive.Merge(m, src)
}
func (m *ChartAxisReferenceLineNonStylesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive.Size(m)
}
func (m *ChartAxisReferenceLineNonStylesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisReferenceLineNonStylesArchive proto.InternalMessageInfo

func (m *ChartAxisReferenceLineNonStylesArchive) GetAxisId() *ChartAxisIDArchive {
	if m != nil {
		return m.AxisId
	}
	return nil
}

func (m *ChartAxisReferenceLineNonStylesArchive) GetReferenceLineNonStyleItems() []*ChartReferenceLineNonStyleItem {
	if m != nil {
		return m.ReferenceLineNonStyleItems
	}
	return nil
}

type ChartAxisReferenceLineStylesArchive struct {
	AxisId               *ChartAxisIDArchive       `protobuf:"bytes,1,req,name=axis_id,json=axisId" json:"axis_id,omitempty"`
	ReferenceLineStyles  *TSP.SparseReferenceArray `protobuf:"bytes,2,opt,name=reference_line_styles,json=referenceLineStyles" json:"reference_line_styles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ChartAxisReferenceLineStylesArchive) Reset()         { *m = ChartAxisReferenceLineStylesArchive{} }
func (m *ChartAxisReferenceLineStylesArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisReferenceLineStylesArchive) ProtoMessage()    {}
func (*ChartAxisReferenceLineStylesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{27}
}

func (m *ChartAxisReferenceLineStylesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisReferenceLineStylesArchive.Unmarshal(m, b)
}
func (m *ChartAxisReferenceLineStylesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisReferenceLineStylesArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisReferenceLineStylesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisReferenceLineStylesArchive.Merge(m, src)
}
func (m *ChartAxisReferenceLineStylesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisReferenceLineStylesArchive.Size(m)
}
func (m *ChartAxisReferenceLineStylesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisReferenceLineStylesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisReferenceLineStylesArchive proto.InternalMessageInfo

func (m *ChartAxisReferenceLineStylesArchive) GetAxisId() *ChartAxisIDArchive {
	if m != nil {
		return m.AxisId
	}
	return nil
}

func (m *ChartAxisReferenceLineStylesArchive) GetReferenceLineStyles() *TSP.SparseReferenceArray {
	if m != nil {
		return m.ReferenceLineStyles
	}
	return nil
}

type ChartReferenceLinesArchive struct {
	ReferenceLineNonStylesMap     []*ChartAxisReferenceLineNonStylesArchive `protobuf:"bytes,1,rep,name=reference_line_non_styles_map,json=referenceLineNonStylesMap" json:"reference_line_non_styles_map,omitempty"`
	ReferenceLineStylesMap        []*ChartAxisReferenceLineStylesArchive    `protobuf:"bytes,2,rep,name=reference_line_styles_map,json=referenceLineStylesMap" json:"reference_line_styles_map,omitempty"`
	ThemePresetReferenceLineStyle *TSP.Reference                            `protobuf:"bytes,3,opt,name=theme_preset_reference_line_style,json=themePresetReferenceLineStyle" json:"theme_preset_reference_line_style,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                                  `json:"-"`
	XXX_unrecognized              []byte                                    `json:"-"`
	XXX_sizecache                 int32                                     `json:"-"`
}

func (m *ChartReferenceLinesArchive) Reset()         { *m = ChartReferenceLinesArchive{} }
func (m *ChartReferenceLinesArchive) String() string { return proto.CompactTextString(m) }
func (*ChartReferenceLinesArchive) ProtoMessage()    {}
func (*ChartReferenceLinesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{28}
}

func (m *ChartReferenceLinesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartReferenceLinesArchive.Unmarshal(m, b)
}
func (m *ChartReferenceLinesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartReferenceLinesArchive.Marshal(b, m, deterministic)
}
func (m *ChartReferenceLinesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartReferenceLinesArchive.Merge(m, src)
}
func (m *ChartReferenceLinesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartReferenceLinesArchive.Size(m)
}
func (m *ChartReferenceLinesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartReferenceLinesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartReferenceLinesArchive proto.InternalMessageInfo

func (m *ChartReferenceLinesArchive) GetReferenceLineNonStylesMap() []*ChartAxisReferenceLineNonStylesArchive {
	if m != nil {
		return m.ReferenceLineNonStylesMap
	}
	return nil
}

func (m *ChartReferenceLinesArchive) GetReferenceLineStylesMap() []*ChartAxisReferenceLineStylesArchive {
	if m != nil {
		return m.ReferenceLineStylesMap
	}
	return nil
}

func (m *ChartReferenceLinesArchive) GetThemePresetReferenceLineStyle() *TSP.Reference {
	if m != nil {
		return m.ThemePresetReferenceLineStyle
	}
	return nil
}

type ChartPresetReferenceLineStylesArchive struct {
	ReferenceLineStyles  []*TSP.Reference `protobuf:"bytes,1,rep,name=reference_line_styles,json=referenceLineStyles" json:"reference_line_styles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChartPresetReferenceLineStylesArchive) Reset()         { *m = ChartPresetReferenceLineStylesArchive{} }
func (m *ChartPresetReferenceLineStylesArchive) String() string { return proto.CompactTextString(m) }
func (*ChartPresetReferenceLineStylesArchive) ProtoMessage()    {}
func (*ChartPresetReferenceLineStylesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{29}
}

func (m *ChartPresetReferenceLineStylesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartPresetReferenceLineStylesArchive.Unmarshal(m, b)
}
func (m *ChartPresetReferenceLineStylesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartPresetReferenceLineStylesArchive.Marshal(b, m, deterministic)
}
func (m *ChartPresetReferenceLineStylesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartPresetReferenceLineStylesArchive.Merge(m, src)
}
func (m *ChartPresetReferenceLineStylesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartPresetReferenceLineStylesArchive.Size(m)
}
func (m *ChartPresetReferenceLineStylesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartPresetReferenceLineStylesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartPresetReferenceLineStylesArchive proto.InternalMessageInfo

func (m *ChartPresetReferenceLineStylesArchive) GetReferenceLineStyles() []*TSP.Reference {
	if m != nil {
		return m.ReferenceLineStyles
	}
	return nil
}

type ChartAxisReferenceLineSparseNonStylesArchive struct {
	AxisId                     *ChartAxisIDArchive               `protobuf:"bytes,1,req,name=axis_id,json=axisId" json:"axis_id,omitempty"`
	ReferenceLineNonStyleItems []*ChartReferenceLineNonStyleItem `protobuf:"bytes,2,rep,name=reference_line_non_style_items,json=referenceLineNonStyleItems" json:"reference_line_non_style_items,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *ChartAxisReferenceLineSparseNonStylesArchive) Reset() {
	*m = ChartAxisReferenceLineSparseNonStylesArchive{}
}
func (m *ChartAxisReferenceLineSparseNonStylesArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ChartAxisReferenceLineSparseNonStylesArchive) ProtoMessage() {}
func (*ChartAxisReferenceLineSparseNonStylesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{30}
}

func (m *ChartAxisReferenceLineSparseNonStylesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive.Unmarshal(m, b)
}
func (m *ChartAxisReferenceLineSparseNonStylesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisReferenceLineSparseNonStylesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive.Merge(m, src)
}
func (m *ChartAxisReferenceLineSparseNonStylesArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive.Size(m)
}
func (m *ChartAxisReferenceLineSparseNonStylesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisReferenceLineSparseNonStylesArchive proto.InternalMessageInfo

func (m *ChartAxisReferenceLineSparseNonStylesArchive) GetAxisId() *ChartAxisIDArchive {
	if m != nil {
		return m.AxisId
	}
	return nil
}

func (m *ChartAxisReferenceLineSparseNonStylesArchive) GetReferenceLineNonStyleItems() []*ChartReferenceLineNonStyleItem {
	if m != nil {
		return m.ReferenceLineNonStyleItems
	}
	return nil
}

type PropertyValueStorageContainerReferenceLinesArchive struct {
	ReferenceLineNonStylesMap     []*ChartAxisReferenceLineSparseNonStylesArchive `protobuf:"bytes,1,rep,name=reference_line_non_styles_map,json=referenceLineNonStylesMap" json:"reference_line_non_styles_map,omitempty"`
	ReferenceLineStylesMap        []*ChartAxisReferenceLineStylesArchive          `protobuf:"bytes,2,rep,name=reference_line_styles_map,json=referenceLineStylesMap" json:"reference_line_styles_map,omitempty"`
	ThemePresetReferenceLineStyle *TSP.Reference                                  `protobuf:"bytes,3,opt,name=theme_preset_reference_line_style,json=themePresetReferenceLineStyle" json:"theme_preset_reference_line_style,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                                        `json:"-"`
	XXX_unrecognized              []byte                                          `json:"-"`
	XXX_sizecache                 int32                                           `json:"-"`
}

func (m *PropertyValueStorageContainerReferenceLinesArchive) Reset() {
	*m = PropertyValueStorageContainerReferenceLinesArchive{}
}
func (m *PropertyValueStorageContainerReferenceLinesArchive) String() string {
	return proto.CompactTextString(m)
}
func (*PropertyValueStorageContainerReferenceLinesArchive) ProtoMessage() {}
func (*PropertyValueStorageContainerReferenceLinesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3f71bb80926da11, []int{31}
}

func (m *PropertyValueStorageContainerReferenceLinesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive.Unmarshal(m, b)
}
func (m *PropertyValueStorageContainerReferenceLinesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive.Marshal(b, m, deterministic)
}
func (m *PropertyValueStorageContainerReferenceLinesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive.Merge(m, src)
}
func (m *PropertyValueStorageContainerReferenceLinesArchive) XXX_Size() int {
	return xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive.Size(m)
}
func (m *PropertyValueStorageContainerReferenceLinesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyValueStorageContainerReferenceLinesArchive proto.InternalMessageInfo

func (m *PropertyValueStorageContainerReferenceLinesArchive) GetReferenceLineNonStylesMap() []*ChartAxisReferenceLineSparseNonStylesArchive {
	if m != nil {
		return m.ReferenceLineNonStylesMap
	}
	return nil
}

func (m *PropertyValueStorageContainerReferenceLinesArchive) GetReferenceLineStylesMap() []*ChartAxisReferenceLineStylesArchive {
	if m != nil {
		return m.ReferenceLineStylesMap
	}
	return nil
}

func (m *PropertyValueStorageContainerReferenceLinesArchive) GetThemePresetReferenceLineStyle() *TSP.Reference {
	if m != nil {
		return m.ThemePresetReferenceLineStyle
	}
	return nil
}

var E_Scene3DSettingsConstantDepth = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10002,
	Name:          "TSCH.scene3d_settings_constant_depth",
	Tag:           "varint,10002,opt,name=scene3d_settings_constant_depth",
	Filename:      "TSCHArchives.proto",
}

var E_LastAppliedFillSetLookupString = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*string)(nil),
	Field:         10004,
	Name:          "TSCH.last_applied_fill_set_lookup_string",
	Tag:           "bytes,10004,opt,name=last_applied_fill_set_lookup_string",
	Filename:      "TSCHArchives.proto",
}

var E_SeriesSupportsDonut = &proto.ExtensionDesc{
	ExtendedType:  (*ChartSeriesStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10001,
	Name:          "TSCH.series_supports_donut",
	Tag:           "varint,10001,opt,name=series_supports_donut",
	Filename:      "TSCHArchives.proto",
}

var E_SeriesSupportsCustomNumberFormat = &proto.ExtensionDesc{
	ExtendedType:  (*ChartSeriesNonStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10001,
	Name:          "TSCH.series_supports_custom_number_format",
	Tag:           "varint,10001,opt,name=series_supports_custom_number_format",
	Filename:      "TSCHArchives.proto",
}

var E_SeriesSupportsCustomDateFormat = &proto.ExtensionDesc{
	ExtendedType:  (*ChartSeriesNonStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10002,
	Name:          "TSCH.series_supports_custom_date_format",
	Tag:           "varint,10002,opt,name=series_supports_custom_date_format",
	Filename:      "TSCHArchives.proto",
}

var E_SeriesSupportsCalloutLines = &proto.ExtensionDesc{
	ExtendedType:  (*ChartSeriesNonStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10003,
	Name:          "TSCH.series_supports_callout_lines",
	Tag:           "varint,10003,opt,name=series_supports_callout_lines",
	Filename:      "TSCHArchives.proto",
}

var E_AxisSupportsCustomNumberFormat = &proto.ExtensionDesc{
	ExtendedType:  (*ChartAxisNonStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10001,
	Name:          "TSCH.axis_supports_custom_number_format",
	Tag:           "varint,10001,opt,name=axis_supports_custom_number_format",
	Filename:      "TSCHArchives.proto",
}

var E_AxisSupportsCustomDateFormat = &proto.ExtensionDesc{
	ExtendedType:  (*ChartAxisNonStyleArchive)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10002,
	Name:          "TSCH.axis_supports_custom_date_format",
	Tag:           "varint,10002,opt,name=axis_supports_custom_date_format",
	Filename:      "TSCHArchives.proto",
}

var E_ReferenceLines = &proto.ExtensionDesc{
	ExtendedType:  (*ChartArchive)(nil),
	ExtensionType: (*ChartReferenceLinesArchive)(nil),
	Field:         10005,
	Name:          "TSCH.reference_lines",
	Tag:           "bytes,10005,opt,name=reference_lines",
	Filename:      "TSCHArchives.proto",
}

var E_PresetReferenceLineStyles = &proto.ExtensionDesc{
	ExtendedType:  (*ChartStylePreset)(nil),
	ExtensionType: (*ChartPresetReferenceLineStylesArchive)(nil),
	Field:         10000,
	Name:          "TSCH.preset_reference_line_styles",
	Tag:           "bytes,10000,opt,name=preset_reference_line_styles",
	Filename:      "TSCHArchives.proto",
}

var E_PropertyValueStorageContainerReferenceLines = &proto.ExtensionDesc{
	ExtendedType:  (*PropertyValueStorageContainerArchive)(nil),
	ExtensionType: (*PropertyValueStorageContainerReferenceLinesArchive)(nil),
	Field:         10000,
	Name:          "TSCH.property_value_storage_container_reference_lines",
	Tag:           "bytes,10000,opt,name=property_value_storage_container_reference_lines",
	Filename:      "TSCHArchives.proto",
}

func init() {
	proto.RegisterType((*ChartDrawableArchive)(nil), "TSCH.ChartDrawableArchive")
	proto.RegisterExtension(E_ChartArchive_Unity)
	proto.RegisterType((*ChartArchive)(nil), "TSCH.ChartArchive")
	proto.RegisterExtension(E_ChartMultiDataIndexUpgrade_UpgradedToUiState)
	proto.RegisterType((*ChartMultiDataIndexUpgrade)(nil), "TSCH.ChartMultiDataIndexUpgrade")
	proto.RegisterExtension(E_ChartGarlicMinMaxUpgrade_GarlicMinMaxUpgrade)
	proto.RegisterType((*ChartGarlicMinMaxUpgrade)(nil), "TSCH.ChartGarlicMinMaxUpgrade")
	proto.RegisterExtension(E_ChartGarlicLabelFormatUpgrade_GarlicLabelFormatUpgrade)
	proto.RegisterType((*ChartGarlicLabelFormatUpgrade)(nil), "TSCH.ChartGarlicLabelFormatUpgrade")
	proto.RegisterExtension(E_ChartPasteboardAdditionsArchive_PresetIndexForPasteboard)
	proto.RegisterExtension(E_ChartPasteboardAdditionsArchive_PresetUuidForPasteboard)
	proto.RegisterExtension(E_ChartPasteboardAdditionsArchive_CustomFormatListForPasteboard)
	proto.RegisterType((*ChartPasteboardAdditionsArchive)(nil), "TSCH.ChartPasteboardAdditionsArchive")
	proto.RegisterExtension(E_ChartPreserveAppearanceForPresetArchive_AppearancePreservedForPreset)
	proto.RegisterType((*ChartPreserveAppearanceForPresetArchive)(nil), "TSCH.ChartPreserveAppearanceForPresetArchive")
	proto.RegisterExtension(E_ChartSupportsProportionalBendedCalloutLinesArchive_SupportsProportionalBendedCalloutLines)
	proto.RegisterType((*ChartSupportsProportionalBendedCalloutLinesArchive)(nil), "TSCH.ChartSupportsProportionalBendedCalloutLinesArchive")
	proto.RegisterExtension(E_ChartSupportsRoundedCornersArchive_DeprecatedSupportsRoundedCorners)
	proto.RegisterExtension(E_ChartSupportsRoundedCornersArchive_SupportsRoundedCorners)
	proto.RegisterType((*ChartSupportsRoundedCornersArchive)(nil), "TSCH.ChartSupportsRoundedCornersArchive")
	proto.RegisterType((*ChartGridArchive)(nil), "TSCH.ChartGridArchive")
	proto.RegisterType((*ChartGridArchive_ChartGridRowColumnIdMap)(nil), "TSCH.ChartGridArchive.ChartGridRowColumnIdMap")
	proto.RegisterType((*ChartGridArchive_ChartGridRowColumnIdMap_Entry)(nil), "TSCH.ChartGridArchive.ChartGridRowColumnIdMap.Entry")
	proto.RegisterType((*ChartMediatorArchive)(nil), "TSCH.ChartMediatorArchive")
	proto.RegisterType((*ChartFillSetArchive)(nil), "TSCH.ChartFillSetArchive")
	proto.RegisterType((*ChartStylePreset)(nil), "TSCH.ChartStylePreset")
	proto.RegisterExtension(E_ChartPresetsArchive_Extension)
	proto.RegisterType((*ChartPresetsArchive)(nil), "TSCH.ChartPresetsArchive")
	proto.RegisterType((*PropertyValueStorageContainerArchive)(nil), "TSCH.PropertyValueStorageContainerArchive")
	proto.RegisterType((*StylePasteboardDataArchive)(nil), "TSCH.StylePasteboardDataArchive")
	proto.RegisterType((*ChartSelectionPathTypeArchive)(nil), "TSCH.ChartSelectionPathTypeArchive")
	proto.RegisterType((*ChartAxisIDArchive)(nil), "TSCH.ChartAxisIDArchive")
	proto.RegisterType((*ChartSelectionPathArgumentArchive)(nil), "TSCH.ChartSelectionPathArgumentArchive")
	proto.RegisterType((*ChartSelectionPathArchive)(nil), "TSCH.ChartSelectionPathArchive")
	proto.RegisterType((*ChartSelectionArchive)(nil), "TSCH.ChartSelectionArchive")
	proto.RegisterType((*ChartCDESelectionArchive)(nil), "TSCH.ChartCDESelectionArchive")
	proto.RegisterType((*ChartUIState)(nil), "TSCH.ChartUIState")
	proto.RegisterExtension(E_ChartUIStateMultiDataIndexUpgrade_UpgradedFromModel)
	proto.RegisterType((*ChartUIStateMultiDataIndexUpgrade)(nil), "TSCH.ChartUIStateMultiDataIndexUpgrade")
	proto.RegisterExtension(E_ChartFormatStructExtensions_Prefix)
	proto.RegisterExtension(E_ChartFormatStructExtensions_Suffix)
	proto.RegisterType((*ChartFormatStructExtensions)(nil), "TSCH.ChartFormatStructExtensions")
	proto.RegisterType((*ChartReferenceLineNonStyleItem)(nil), "TSCH.ChartReferenceLineNonStyleItem")
	proto.RegisterType((*ChartAxisReferenceLineNonStylesArchive)(nil), "TSCH.ChartAxisReferenceLineNonStylesArchive")
	proto.RegisterType((*ChartAxisReferenceLineStylesArchive)(nil), "TSCH.ChartAxisReferenceLineStylesArchive")
	proto.RegisterType((*ChartReferenceLinesArchive)(nil), "TSCH.ChartReferenceLinesArchive")
	proto.RegisterType((*ChartPresetReferenceLineStylesArchive)(nil), "TSCH.ChartPresetReferenceLineStylesArchive")
	proto.RegisterType((*ChartAxisReferenceLineSparseNonStylesArchive)(nil), "TSCH.ChartAxisReferenceLineSparseNonStylesArchive")
	proto.RegisterType((*PropertyValueStorageContainerReferenceLinesArchive)(nil), "TSCH.PropertyValueStorageContainerReferenceLinesArchive")
	proto.RegisterExtension(E_Scene3DSettingsConstantDepth)
	proto.RegisterExtension(E_LastAppliedFillSetLookupString)
	proto.RegisterExtension(E_SeriesSupportsDonut)
	proto.RegisterExtension(E_SeriesSupportsCustomNumberFormat)
	proto.RegisterExtension(E_SeriesSupportsCustomDateFormat)
	proto.RegisterExtension(E_SeriesSupportsCalloutLines)
	proto.RegisterExtension(E_AxisSupportsCustomNumberFormat)
	proto.RegisterExtension(E_AxisSupportsCustomDateFormat)
	proto.RegisterExtension(E_ReferenceLines)
	proto.RegisterExtension(E_PresetReferenceLineStyles)
	proto.RegisterExtension(E_PropertyValueStorageContainerReferenceLines)
}

func init() { proto.RegisterFile("TSCHArchives.proto", fileDescriptor_e3f71bb80926da11) }

var fileDescriptor_e3f71bb80926da11 = []byte{
	// 3164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0x4f, 0x73, 0x1b, 0xc7,
	0xb1, 0x2f, 0x80, 0x04, 0x49, 0x34, 0x09, 0x52, 0x5c, 0xfe, 0xd1, 0x92, 0x32, 0x29, 0x6a, 0x25,
	0x4b, 0x7c, 0x92, 0x1f, 0x64, 0xc1, 0xf6, 0xb3, 0xcd, 0xc3, 0x8b, 0x68, 0x80, 0x74, 0x18, 0x09,
	0x34, 0xb3, 0x20, 0x9d, 0xc4, 0xa9, 0xca, 0x66, 0xb8, 0x3b, 0x04, 0xb7, 0xb4, 0xd8, 0x59, 0xcf,
	0xec, 0x8a, 0xa4, 0x4f, 0xaa, 0xb8, 0x7c, 0xcb, 0xc1, 0x8e, 0x93, 0x1c, 0x92, 0x4b, 0x2a, 0x15,
	0xc7, 0x71, 0x3e, 0x40, 0x2e, 0x39, 0xa6, 0x72, 0x8a, 0xab, 0x52, 0x39, 0xe5, 0x98, 0xbb, 0xbf,
	0x40, 0xae, 0xa9, 0xf9, 0xb3, 0x8b, 0x5d, 0x60, 0x41, 0x40, 0xf1, 0x29, 0x39, 0x11, 0x3b, 0xdd,
	0xbf, 0xee, 0x9e, 0x9e, 0x99, 0x9e, 0xee, 0x1e, 0x82, 0x76, 0xd8, 0xaa, 0x7f, 0x73, 0x9b, 0xda,
	0xa7, 0xee, 0x53, 0xcc, 0xaa, 0x01, 0x25, 0x21, 0xd1, 0xc6, 0xf9, 0xd8, 0xea, 0xfc, 0x61, 0xeb,
	0xa0, 0x89, 0x19, 0x43, 0xed, 0x98, 0xc0, 0x87, 0x1e, 0x65, 0x79, 0xf9, 0x50, 0xa3, 0x7f, 0xa8,
	0xd5, 0x33, 0xb4, 0x92, 0xd6, 0x62, 0xd5, 0x49, 0xa7, 0x43, 0x7c, 0x45, 0x5a, 0xce, 0x90, 0xde,
	0xde, 0xd9, 0x57, 0xe3, 0x8b, 0x7c, 0xfc, 0x95, 0x5e, 0xd9, 0x3a, 0x1f, 0x3d, 0xa0, 0xf8, 0x68,
	0x77, 0x37, 0x4b, 0x31, 0x9a, 0xb0, 0x58, 0x3f, 0x45, 0x34, 0x6c, 0x50, 0x74, 0x86, 0x8e, 0x3d,
	0xac, 0xc8, 0xda, 0x5d, 0x28, 0xb1, 0x28, 0xc0, 0x54, 0x2f, 0x6c, 0x14, 0x36, 0xa7, 0x6b, 0x8b,
	0xd5, 0xc3, 0x56, 0xa3, 0xda, 0xc3, 0x64, 0x4a, 0x96, 0xbb, 0xe5, 0xa9, 0x8f, 0xf7, 0xaf, 0x3c,
	0x7b, 0xf6, 0xec, 0x59, 0xd1, 0xf8, 0xe3, 0x34, 0xcc, 0x08, 0x79, 0xb1, 0x9c, 0x2a, 0x80, 0xcd,
	0xbf, 0xad, 0xf0, 0x22, 0xc0, 0x42, 0xd8, 0x6c, 0x6d, 0xae, 0xca, 0xcd, 0xa9, 0x0a, 0xbe, 0xc3,
	0x8b, 0x00, 0x9b, 0x65, 0x3b, 0xfe, 0xa9, 0x6d, 0xc1, 0x2c, 0xb3, 0x51, 0x18, 0x62, 0x6a, 0x9d,
	0x10, 0xda, 0x41, 0xa1, 0x5e, 0x14, 0x98, 0x05, 0x89, 0x69, 0x49, 0xda, 0xae, 0x20, 0x99, 0x15,
	0x96, 0xfe, 0xd4, 0x5e, 0x85, 0x19, 0x0f, 0xb7, 0xb1, 0xef, 0x58, 0x27, 0x14, 0x75, 0xb0, 0x3e,
	0x26, 0x4c, 0x9f, 0x97, 0x48, 0x13, 0xdb, 0xb1, 0x51, 0xe6, 0xb4, 0x64, 0xdb, 0xe5, 0x5c, 0xda,
	0x6d, 0x98, 0x08, 0x28, 0x66, 0x38, 0xd4, 0xc7, 0x05, 0xff, 0x6c, 0xf5, 0xb0, 0x75, 0x50, 0x35,
	0xf1, 0x09, 0xa6, 0xd8, 0xb7, 0xb1, 0xa9, 0xa8, 0xda, 0x43, 0xb8, 0xc2, 0x30, 0x75, 0x31, 0xb3,
	0x1c, 0x97, 0x62, 0x3b, 0x74, 0x89, 0xaf, 0x97, 0x84, 0x6d, 0x4b, 0xca, 0x36, 0x41, 0x6d, 0xc4,
	0x44, 0x73, 0x8e, 0x65, 0x07, 0xb4, 0x1a, 0x2c, 0xd9, 0xc4, 0x0f, 0x91, 0xeb, 0x33, 0xcb, 0xc1,
	0x27, 0x28, 0xf2, 0x42, 0xcb, 0x41, 0x21, 0xd2, 0x27, 0x36, 0x0a, 0x9b, 0x53, 0xe6, 0x42, 0x4c,
	0x6c, 0x48, 0x5a, 0x03, 0x85, 0x48, 0xbb, 0x0b, 0xe3, 0x6d, 0xea, 0x3a, 0xfa, 0xa4, 0xb0, 0x6d,
	0x39, 0xe5, 0xb9, 0xb7, 0xa9, 0xeb, 0xc4, 0x13, 0x12, 0x3c, 0xda, 0x5d, 0x98, 0xea, 0x60, 0xc7,
	0x45, 0x21, 0xa1, 0xfa, 0x54, 0xee, 0x5c, 0x12, 0xba, 0x76, 0x1f, 0xa6, 0xe5, 0xba, 0xb0, 0xf0,
	0xc2, 0xc3, 0x7a, 0x39, 0x97, 0x5d, 0x2e, 0x5d, 0x8b, 0x73, 0x68, 0xff, 0x07, 0x73, 0x12, 0xe0,
	0x13, 0x5f, 0x81, 0x20, 0x17, 0x54, 0x11, 0x6c, 0xfb, 0xc4, 0x97, 0xb8, 0x07, 0xc9, 0xa2, 0x48,
	0xd0, 0x74, 0x2e, 0x48, 0xad, 0x88, 0x84, 0xbc, 0x01, 0x57, 0x14, 0xa4, 0xab, 0x6b, 0x26, 0x17,
	0x36, 0x2b, 0xf9, 0x12, 0x65, 0x5b, 0x30, 0xff, 0x14, 0x79, 0x11, 0xb6, 0xd0, 0xb9, 0xcb, 0x24,
	0x92, 0xe9, 0x95, 0x8d, 0xb1, 0x1c, 0xe8, 0x9c, 0x60, 0xdc, 0x3e, 0x77, 0x99, 0x80, 0x32, 0xed,
	0x21, 0x2c, 0xa6, 0xb0, 0x3e, 0xf1, 0x15, 0x7c, 0x36, 0x17, 0xae, 0x25, 0xf0, 0xfd, 0x98, 0x93,
	0x4b, 0xb0, 0x51, 0x88, 0xdb, 0x84, 0x5e, 0x64, 0x0c, 0x98, 0xcb, 0x97, 0x10, 0xf3, 0xa6, 0x6c,
	0xd8, 0x85, 0xab, 0x59, 0x09, 0x5d, 0x33, 0xae, 0xe4, 0x0a, 0x59, 0x4a, 0x0b, 0xe9, 0x5a, 0xf2,
	0xff, 0xb0, 0xa0, 0xf6, 0x6a, 0x78, 0x8a, 0x3b, 0x38, 0x36, 0x64, 0x3e, 0x57, 0xc6, 0xbc, 0x64,
	0x3d, 0xe4, 0x9c, 0xca, 0x8e, 0x26, 0x2c, 0x29, 0x7c, 0x40, 0xdd, 0xa7, 0x28, 0x4c, 0x24, 0x68,
	0x62, 0x19, 0x56, 0x84, 0x84, 0x56, 0x80, 0x28, 0xc3, 0x89, 0x9c, 0x6d, 0x4a, 0xd1, 0x85, 0xa9,
	0xf4, 0x1e, 0x48, 0x98, 0x12, 0xb7, 0x03, 0x4a, 0x47, 0x77, 0x41, 0x99, 0xbe, 0x30, 0x4c, 0x94,
	0x3a, 0x3f, 0xf1, 0xe2, 0x32, 0xed, 0x4d, 0xb8, 0x12, 0x20, 0x8a, 0xda, 0x14, 0x05, 0xa7, 0xb1,
	0x94, 0xc5, 0xfc, 0xc5, 0x4d, 0xf8, 0x14, 0xf4, 0x7f, 0x41, 0xeb, 0x44, 0x5e, 0xe8, 0xf2, 0xe3,
	0xc6, 0x70, 0x68, 0xb9, 0xbe, 0x83, 0xcf, 0xf5, 0xa5, 0x8d, 0xc2, 0x66, 0xc5, 0x9c, 0x4f, 0x53,
	0xf6, 0x38, 0x41, 0x3b, 0x82, 0x4d, 0x1f, 0x63, 0x87, 0x59, 0x36, 0xf2, 0x6c, 0x0b, 0xfb, 0x6d,
	0xd7, 0xc7, 0xfc, 0xc8, 0x62, 0x4a, 0xb1, 0x63, 0xb9, 0x9d, 0x80, 0xd0, 0xd0, 0x42, 0x32, 0x06,
	0x2c, 0x8b, 0xc3, 0x7b, 0x53, 0xf0, 0xd7, 0x91, 0x67, 0xef, 0x08, 0xee, 0x86, 0x62, 0xde, 0x13,
	0xbc, 0xdb, 0x32, 0x00, 0x3c, 0x80, 0x19, 0x72, 0xe6, 0x63, 0xc7, 0x52, 0x01, 0xe7, 0x6a, 0xfe,
	0x59, 0x10, 0x3c, 0x07, 0x32, 0xea, 0xac, 0xc0, 0x94, 0x2b, 0x22, 0x4e, 0x78, 0xa1, 0xeb, 0x42,
	0xd3, 0xa4, 0xcb, 0x43, 0x4a, 0x78, 0x91, 0x0a, 0xbb, 0xb5, 0x1d, 0x28, 0x45, 0xbe, 0x1b, 0x5e,
	0x68, 0xab, 0xa9, 0x00, 0xd1, 0x13, 0xad, 0xf5, 0x8f, 0xf7, 0x85, 0x3a, 0x2d, 0xc5, 0x92, 0x04,
	0x72, 0x81, 0x36, 0x8e, 0x61, 0x55, 0x0c, 0x37, 0xb9, 0x43, 0x78, 0xf8, 0x11, 0xde, 0x38, 0x0a,
	0xda, 0x14, 0x39, 0xb8, 0xd6, 0x80, 0xc5, 0x48, 0xfe, 0x74, 0xac, 0x90, 0x58, 0x91, 0x6b, 0xb1,
	0x10, 0x85, 0x58, 0xcb, 0x11, 0xa8, 0x7f, 0xb6, 0x2f, 0x6c, 0x9d, 0x8f, 0x01, 0x87, 0xe4, 0xc8,
	0x6d, 0x71, 0x6e, 0xe3, 0xc7, 0x45, 0xd0, 0x65, 0xfc, 0x42, 0xd4, 0x73, 0xed, 0xa6, 0xeb, 0x37,
	0x51, 0xac, 0x42, 0x7b, 0x11, 0x66, 0x4f, 0x09, 0x75, 0x3f, 0xe0, 0x81, 0xd0, 0xb3, 0x3a, 0xae,
	0x2f, 0x6e, 0x8c, 0x82, 0x59, 0xe9, 0x8e, 0x36, 0x5d, 0xbf, 0x97, 0x0d, 0x9d, 0x8b, 0x4b, 0x22,
	0xcb, 0x86, 0xce, 0xb5, 0x6b, 0x50, 0x96, 0x27, 0x9a, 0x0b, 0x1a, 0x13, 0x1c, 0x53, 0x62, 0x80,
	0xcb, 0xe8, 0x12, 0xd1, 0xb9, 0x88, 0xfc, 0x09, 0x11, 0x9d, 0xd7, 0x4e, 0x61, 0xb9, 0x2d, 0xcc,
	0xe3, 0x50, 0xce, 0x61, 0xa9, 0x89, 0xe4, 0x4e, 0xf6, 0x17, 0xd2, 0xb1, 0xeb, 0xe9, 0xe0, 0xdc,
	0x3f, 0x39, 0x73, 0xa1, 0xdd, 0x3f, 0x68, 0xfc, 0x7a, 0x0c, 0xd6, 0x52, 0x88, 0xc7, 0xe8, 0x18,
	0x7b, 0xf2, 0x3a, 0x8b, 0x7d, 0x72, 0x03, 0x66, 0xa4, 0xa1, 0x01, 0xc5, 0x27, 0xee, 0xb9, 0xf0,
	0x48, 0xd9, 0x9c, 0x16, 0x63, 0x07, 0x62, 0xa8, 0xcb, 0xc2, 0xa2, 0x13, 0xce, 0x52, 0x4c, 0xb1,
	0xb4, 0xc4, 0x90, 0x56, 0x85, 0x05, 0xc9, 0x12, 0x31, 0x6c, 0x31, 0xcc, 0xcf, 0x07, 0xbf, 0x26,
	0xc6, 0xe4, 0x32, 0x09, 0xd2, 0x11, 0xc3, 0xad, 0x98, 0xa0, 0xdd, 0x83, 0xf9, 0x94, 0x8b, 0x95,
	0xea, 0x71, 0x21, 0xf7, 0x4a, 0x97, 0xa0, 0xf4, 0x67, 0x99, 0x95, 0x11, 0xa5, 0x5e, 0x66, 0x65,
	0xc9, 0x1b, 0xa0, 0xa7, 0x98, 0xb3, 0xe6, 0xc8, 0x8b, 0x70, 0xb9, 0x4b, 0x4f, 0xdb, 0x54, 0x3b,
	0x83, 0x6b, 0x6a, 0x55, 0x3c, 0xee, 0x26, 0x95, 0x20, 0x5c, 0xba, 0x34, 0xbf, 0x94, 0x4b, 0x73,
	0xb3, 0x6f, 0x69, 0xfa, 0x1d, 0x6d, 0xea, 0xed, 0x01, 0x14, 0xe3, 0x0f, 0x45, 0xb8, 0x2e, 0xb0,
	0x07, 0x88, 0x85, 0xf8, 0x98, 0x20, 0xea, 0x6c, 0x3b, 0x8e, 0xcb, 0xcf, 0x34, 0x53, 0x9a, 0x6a,
	0x26, 0x5c, 0x93, 0xa7, 0x5a, 0xc6, 0x16, 0x6e, 0x9c, 0x15, 0x24, 0xec, 0xb9, 0xc6, 0x89, 0x03,
	0x59, 0x31, 0x75, 0x89, 0x13, 0x67, 0x6d, 0x97, 0xd0, 0xae, 0x8e, 0xda, 0x01, 0xac, 0x2a, 0x99,
	0x51, 0xe4, 0x3a, 0xa3, 0x88, 0xfc, 0x84, 0x8b, 0x9c, 0x31, 0xaf, 0x4a, 0xd8, 0x51, 0xe4, 0x3a,
	0x59, 0x89, 0x1d, 0xb8, 0x61, 0x47, 0x2c, 0x24, 0x9d, 0xd8, 0x79, 0x9e, 0xcb, 0xc2, 0x51, 0x04,
	0x7f, 0xba, 0x9f, 0x1b, 0xab, 0xd6, 0xa4, 0x34, 0xe9, 0xae, 0xc7, 0x2e, 0x0b, 0x33, 0xea, 0x8c,
	0x8f, 0x0a, 0x70, 0x47, 0x3a, 0x8e, 0xdb, 0x43, 0x9f, 0xe2, 0xed, 0x20, 0xc0, 0x88, 0x22, 0xdf,
	0xc6, 0x9c, 0x51, 0x18, 0x19, 0x3b, 0xf0, 0x3d, 0xb8, 0x8e, 0x12, 0xaa, 0x8c, 0x90, 0xf4, 0x29,
	0x56, 0xb3, 0x96, 0xc1, 0x30, 0xcf, 0xb0, 0xcf, 0x65, 0xa4, 0x79, 0xa1, 0x8b, 0x8d, 0x75, 0x39,
	0x89, 0x0a, 0xe3, 0xb3, 0x02, 0xd4, 0x04, 0xaa, 0x15, 0x05, 0x3c, 0x1e, 0xb3, 0x03, 0x4a, 0xf8,
	0x5f, 0x97, 0xf8, 0xc8, 0x7b, 0x0b, 0xfb, 0x0e, 0x76, 0xea, 0xc8, 0xf3, 0x48, 0x14, 0x3e, 0x76,
	0x7d, 0x9c, 0xac, 0x29, 0x81, 0xbb, 0x4c, 0x01, 0xac, 0x20, 0x85, 0xb0, 0x8e, 0x05, 0x84, 0xdf,
	0x0e, 0x1c, 0x63, 0x79, 0x1c, 0x94, 0x6b, 0xdd, 0xef, 0xa4, 0x75, 0xb7, 0xd9, 0x48, 0x7a, 0x8d,
	0xbf, 0x17, 0xc0, 0xc8, 0xd8, 0x69, 0x92, 0x48, 0x30, 0x11, 0xea, 0x63, 0x9a, 0xd8, 0x75, 0x0c,
	0x37, 0x1d, 0x1c, 0x50, 0xcc, 0x2f, 0x7f, 0xc7, 0x4a, 0x4c, 0xa4, 0x92, 0xd9, 0xb2, 0x25, 0x77,
	0xae, 0x41, 0x5f, 0x48, 0x83, 0x36, 0xba, 0xf8, 0x7c, 0x55, 0xb5, 0x26, 0xe8, 0xcf, 0x25, 0xf8,
	0xf7, 0x52, 0xf0, 0x32, 0xcb, 0x15, 0x67, 0xfc, 0x69, 0x0c, 0xae, 0xf4, 0xa6, 0xad, 0xfc, 0x72,
	0xa3, 0xe4, 0xcc, 0xf2, 0x79, 0xb2, 0x5e, 0xd8, 0x18, 0xdb, 0x2c, 0x9b, 0x93, 0x94, 0x9c, 0xed,
	0xf3, 0xac, 0xfc, 0x3a, 0x4c, 0xdb, 0xc4, 0x8b, 0x3a, 0xbe, 0xa4, 0x16, 0x05, 0x15, 0xe4, 0x90,
	0x60, 0xd8, 0x84, 0x29, 0x9e, 0xf4, 0x5a, 0x94, 0x9c, 0xe9, 0x63, 0x22, 0x09, 0xa8, 0x48, 0xab,
	0xb8, 0x02, 0x93, 0x9c, 0x99, 0x93, 0x6d, 0xf9, 0x43, 0x6b, 0x40, 0xc9, 0x75, 0x9a, 0x28, 0x50,
	0xf9, 0x7d, 0x35, 0x3f, 0x87, 0xee, 0x0e, 0x98, 0xe4, 0xac, 0x2e, 0xf4, 0xec, 0x71, 0x94, 0x29,
	0xc1, 0xab, 0x3f, 0x2a, 0xc2, 0xd5, 0x01, 0x2c, 0x9a, 0x09, 0xc0, 0xe7, 0xe1, 0x3a, 0x56, 0x07,
	0x05, 0x62, 0x26, 0xd3, 0xb5, 0x57, 0x9f, 0x4f, 0x4d, 0x75, 0xc7, 0x0f, 0xe9, 0x85, 0xc9, 0xfd,
	0x21, 0x65, 0x7e, 0x17, 0x2a, 0xca, 0x01, 0x4a, 0x6c, 0xf1, 0x6b, 0x88, 0x55, 0xbe, 0x14, 0x43,
	0xab, 0x6f, 0x42, 0x49, 0x8c, 0x6a, 0xab, 0x30, 0x15, 0xf9, 0xee, 0xfb, 0x11, 0xde, 0x73, 0xf4,
	0xc2, 0x46, 0x71, 0xb3, 0x6c, 0x26, 0xdf, 0xda, 0x22, 0x94, 0x64, 0x8e, 0x54, 0xdc, 0x28, 0x6e,
	0x56, 0x4c, 0xf9, 0x61, 0xfc, 0xaa, 0xa0, 0xca, 0xc5, 0xa6, 0xaa, 0x23, 0xe2, 0x95, 0x34, 0x60,
	0xdc, 0xf5, 0x4f, 0x88, 0xaa, 0x16, 0x7b, 0xa3, 0x84, 0xa0, 0x69, 0x2f, 0xc3, 0xa2, 0x47, 0x6c,
	0x7e, 0x41, 0xc8, 0x5c, 0x50, 0x88, 0xc4, 0x4c, 0x4c, 0xac, 0x62, 0x6a, 0x82, 0x26, 0x6b, 0xa8,
	0x3d, 0x49, 0xe1, 0x05, 0x13, 0xc5, 0x1d, 0xc2, 0xd3, 0xcf, 0x2c, 0x64, 0x4c, 0x40, 0x16, 0x24,
	0x31, 0x83, 0x31, 0xfe, 0x56, 0x80, 0x05, 0x61, 0xe2, 0xae, 0xeb, 0x79, 0xad, 0x24, 0xbc, 0x68,
	0xeb, 0x00, 0xae, 0x83, 0xfd, 0xd0, 0x3d, 0x71, 0x45, 0x55, 0xcb, 0xa7, 0x9b, 0x1a, 0xd1, 0x6e,
	0x42, 0xc5, 0x23, 0xe4, 0x49, 0x14, 0x58, 0x2c, 0xa4, 0xae, 0xdf, 0x16, 0x13, 0x2f, 0x9b, 0x33,
	0x72, 0xb0, 0x25, 0xc6, 0xb4, 0x87, 0xb0, 0xe6, 0x47, 0x9d, 0x63, 0x4c, 0x2d, 0x72, 0x12, 0xa7,
	0xd6, 0xd2, 0x32, 0x95, 0x8e, 0x8e, 0x89, 0x88, 0xbe, 0x22, 0x99, 0xde, 0x39, 0x91, 0x39, 0xb5,
	0xe0, 0x50, 0x89, 0xe8, 0x2b, 0x50, 0xc9, 0x22, 0xc6, 0x73, 0x13, 0xd8, 0x19, 0x96, 0x02, 0x19,
	0x1f, 0xc6, 0x87, 0x47, 0x7c, 0xab, 0xcc, 0xb0, 0xa7, 0x82, 0x2b, 0x0c, 0xad, 0xe0, 0x7a, 0x2b,
	0xb1, 0xe2, 0xf0, 0x4a, 0x2c, 0xb7, 0x9e, 0x1a, 0x1b, 0xb9, 0x9e, 0xca, 0xad, 0x86, 0xc6, 0x47,
	0xae, 0x86, 0xfa, 0x7c, 0x55, 0x1a, 0xee, 0xab, 0xdc, 0x22, 0x61, 0x62, 0xb4, 0x22, 0x41, 0x83,
	0x71, 0x7e, 0xcf, 0x8a, 0x5a, 0x7b, 0xc6, 0x14, 0xbf, 0xd3, 0xbd, 0x8d, 0x9f, 0xc7, 0x3b, 0x4b,
	0x2e, 0x40, 0x1c, 0x8d, 0xb9, 0x99, 0x72, 0x21, 0xe4, 0x2d, 0xc5, 0x54, 0x00, 0xe8, 0x33, 0xd3,
	0x4e, 0x61, 0x6b, 0xdf, 0x82, 0x32, 0x3e, 0x0f, 0xb1, 0xcf, 0x78, 0x5d, 0x30, 0x5f, 0x3d, 0x6c,
	0xb5, 0xaa, 0x62, 0xb3, 0xc4, 0xe1, 0xf4, 0x3c, 0xa9, 0x8e, 0xe2, 0xd3, 0x9e, 0xd5, 0x6a, 0x76,
	0xe1, 0xc6, 0x3f, 0x26, 0xe0, 0x16, 0xbf, 0x58, 0x30, 0x0d, 0x2f, 0xde, 0x15, 0x39, 0x5f, 0x48,
	0x28, 0x6a, 0xe3, 0xba, 0xec, 0x27, 0xe0, 0xe4, 0x94, 0x3e, 0xf7, 0x96, 0x79, 0x0d, 0x66, 0x93,
	0xa2, 0xff, 0xb2, 0x4d, 0x93, 0xd4, 0xfc, 0x2c, 0x77, 0xa7, 0x8d, 0x0d, 0xdf, 0x69, 0xaf, 0xc3,
	0x5c, 0xb7, 0xe6, 0x97, 0xa8, 0xf1, 0x21, 0x25, 0xbf, 0xd4, 0xb5, 0x93, 0xb7, 0x45, 0x4b, 0x43,
	0x6b, 0xcb, 0xde, 0xdd, 0xfa, 0x68, 0x40, 0xf5, 0x3f, 0x31, 0x4c, 0x52, 0x5e, 0x23, 0xe0, 0xd1,
	0x80, 0xad, 0x3f, 0x39, 0x54, 0x58, 0xce, 0x29, 0xf8, 0xf6, 0xe0, 0x9e, 0xc0, 0xd4, 0x30, 0x79,
	0x03, 0xda, 0x03, 0x7b, 0xf9, 0xed, 0x81, 0xf2, 0x30, 0x71, 0xcf, 0xd3, 0x29, 0x80, 0x7f, 0xab,
	0x53, 0xd0, 0x48, 0x9a, 0x6c, 0xdd, 0x59, 0x4e, 0x8f, 0xde, 0x28, 0x60, 0x89, 0x94, 0xbe, 0x18,
	0x30, 0x33, 0x54, 0x4a, 0x4f, 0x38, 0x48, 0x1f, 0xfd, 0xbf, 0x16, 0x60, 0x55, 0xc6, 0xde, 0x24,
	0xb7, 0xe5, 0xe5, 0x71, 0x7c, 0xae, 0xee, 0x64, 0x9b, 0xa5, 0xf2, 0x38, 0x0b, 0xfe, 0x6c, 0xa7,
	0x54, 0x7b, 0x07, 0x2a, 0xc2, 0x1c, 0xcb, 0xc7, 0xe1, 0x19, 0xa1, 0x4f, 0xd4, 0x71, 0xba, 0x2b,
	0x8f, 0xf9, 0x28, 0x67, 0xd8, 0x9c, 0x11, 0x02, 0xf6, 0x25, 0x5e, 0x7b, 0x1d, 0x74, 0x9b, 0x04,
	0x2e, 0x4f, 0x93, 0x29, 0xe9, 0x58, 0xfc, 0x36, 0xa3, 0xd8, 0x12, 0xa7, 0x51, 0xd5, 0x76, 0x4b,
	0x92, 0xbe, 0x4b, 0x49, 0x67, 0x47, 0x50, 0x45, 0x30, 0x31, 0xbe, 0xa7, 0xca, 0xce, 0x16, 0xf6,
	0x64, 0x77, 0xf2, 0x00, 0x85, 0xa7, 0x87, 0x17, 0x41, 0xd2, 0x00, 0xbe, 0x06, 0xe5, 0x00, 0x85,
	0xa7, 0xdd, 0xbe, 0x6d, 0xd9, 0x9c, 0x0a, 0x14, 0x4f, 0x42, 0x54, 0xb9, 0x59, 0x42, 0xe4, 0x99,
	0x99, 0xf1, 0x7d, 0xd0, 0x64, 0x66, 0x78, 0xee, 0xb2, 0xbd, 0xb8, 0x13, 0xad, 0xdd, 0x83, 0xb2,
	0xd8, 0xbd, 0xa9, 0x3e, 0xf0, 0xac, 0x9c, 0x36, 0xe7, 0x13, 0x6d, 0xe0, 0x29, 0xa4, 0x7e, 0x69,
	0x3a, 0x4c, 0x12, 0xea, 0xb8, 0x3e, 0xf2, 0x84, 0xf4, 0x8a, 0x19, 0x7f, 0x1a, 0x3e, 0xdc, 0xe8,
	0xb7, 0x7b, 0x9b, 0xb6, 0xa3, 0x0e, 0xf6, 0x93, 0xbb, 0x7e, 0x19, 0x26, 0xe4, 0x0d, 0x2c, 0x14,
	0x55, 0x4c, 0xf5, 0xa5, 0x3d, 0x80, 0x49, 0x61, 0x83, 0xeb, 0x28, 0xc7, 0xeb, 0xe9, 0x44, 0x36,
	0x6d, 0xae, 0x39, 0xc1, 0x19, 0xf7, 0x1c, 0xe3, 0xab, 0x02, 0xac, 0xe4, 0x29, 0x94, 0x8a, 0x1e,
	0xf6, 0x3a, 0x29, 0x5b, 0x6a, 0x0e, 0x72, 0x6e, 0xca, 0x93, 0x0d, 0xa8, 0xb0, 0xe8, 0xd8, 0x62,
	0x31, 0xa7, 0x32, 0xec, 0xfa, 0x20, 0x29, 0xdd, 0x6d, 0x10, 0x1d, 0x27, 0x04, 0x6d, 0x07, 0xca,
	0x48, 0xf9, 0x20, 0xbe, 0x9f, 0xef, 0x0c, 0x96, 0x90, 0x71, 0x96, 0xd9, 0x45, 0x1a, 0x5f, 0x14,
	0x60, 0x29, 0x0b, 0xe8, 0xde, 0x71, 0x6a, 0x87, 0xcb, 0x50, 0xbe, 0x96, 0x79, 0x0e, 0xe8, 0xe5,
	0x8e, 0x77, 0xfb, 0x2d, 0x28, 0xc9, 0x9d, 0x98, 0x7f, 0xd1, 0x48, 0xa2, 0xf6, 0x1a, 0x94, 0xb8,
	0x37, 0x98, 0x4a, 0x70, 0x87, 0xce, 0x5c, 0x72, 0x1b, 0xff, 0x2c, 0xa8, 0x3e, 0x52, 0xbd, 0xb1,
	0xd3, 0x67, 0xee, 0x68, 0x9a, 0x5f, 0x84, 0xd9, 0xc4, 0xef, 0x72, 0x09, 0xb9, 0xf3, 0x4b, 0x66,
	0x25, 0x19, 0x15, 0x4b, 0x74, 0x03, 0x66, 0x78, 0x76, 0xcf, 0xf3, 0x53, 0xb1, 0x42, 0x32, 0xc7,
	0x9b, 0xa6, 0xe4, 0xec, 0xb1, 0x1a, 0xd2, 0xd6, 0x64, 0x01, 0xe0, 0x61, 0xbf, 0x1d, 0x9e, 0x8a,
	0x8b, 0xab, 0x62, 0x96, 0x39, 0x83, 0x18, 0xd0, 0xee, 0xc0, 0x9c, 0xca, 0xe5, 0x13, 0x21, 0x25,
	0xc1, 0x33, 0x2b, 0x87, 0x13, 0x39, 0x37, 0x93, 0xa4, 0x5f, 0x89, 0x9a, 0x10, 0x6c, 0x33, 0x8a,
	0x4d, 0x8c, 0x19, 0xbf, 0x19, 0x53, 0x6f, 0x2c, 0x47, 0x7b, 0xa2, 0xa5, 0x36, 0xe2, 0x6c, 0x1f,
	0xc0, 0x92, 0xed, 0x60, 0xcb, 0x43, 0x2c, 0xe4, 0x45, 0x93, 0xda, 0x72, 0xd8, 0x51, 0x93, 0xd6,
	0x6c, 0x07, 0x3f, 0x46, 0x2c, 0x34, 0xc9, 0x59, 0x4b, 0x51, 0x32, 0x10, 0x9b, 0x78, 0x5d, 0xc8,
	0x58, 0x06, 0x52, 0x27, 0x5e, 0x02, 0xb9, 0x07, 0x5a, 0x46, 0x8b, 0x4d, 0x22, 0x5f, 0xbe, 0xac,
	0x94, 0xcc, 0xb9, 0xae, 0x8a, 0x3a, 0x1f, 0xce, 0x30, 0x73, 0xf9, 0x92, 0xb9, 0x94, 0x61, 0xae,
	0x13, 0x4f, 0x32, 0x2b, 0x63, 0x22, 0x86, 0xad, 0x93, 0xc8, 0xf3, 0xac, 0x27, 0xf8, 0x42, 0x04,
	0x62, 0xd5, 0x34, 0xe2, 0x92, 0x8e, 0x18, 0xde, 0x8d, 0x3c, 0xef, 0x91, 0xa2, 0x68, 0xf7, 0x61,
	0x51, 0xf4, 0x76, 0xc5, 0x2b, 0x8b, 0xd5, 0xed, 0xfb, 0x4e, 0x0a, 0x0d, 0xb2, 0xef, 0xcb, 0xe3,
	0x78, 0x2b, 0xee, 0xfb, 0x7e, 0x03, 0xd6, 0x5c, 0x66, 0x3d, 0x45, 0x1e, 0xaf, 0xb9, 0xf2, 0x90,
	0x53, 0x42, 0x97, 0xee, 0xb2, 0x77, 0x39, 0x4f, 0xb3, 0x57, 0x40, 0xfa, 0xce, 0x38, 0x55, 0x91,
	0x4a, 0xad, 0x52, 0x7e, 0x4f, 0xb5, 0x0e, 0x0b, 0x49, 0x4f, 0x55, 0x44, 0xf0, 0x0e, 0x71, 0xb0,
	0x97, 0x29, 0xb0, 0x15, 0x5e, 0xff, 0x6d, 0x4f, 0x4b, 0x95, 0x47, 0xf4, 0x26, 0xe7, 0x36, 0x3e,
	0x2c, 0xc0, 0x35, 0x59, 0xf2, 0x88, 0x36, 0x4c, 0x2b, 0xa4, 0x91, 0x1d, 0xee, 0xc4, 0xe9, 0x21,
	0xab, 0x3d, 0x10, 0x2f, 0x5c, 0x27, 0xee, 0xb9, 0xc6, 0xe3, 0xdd, 0xa3, 0x6a, 0x9a, 0x2d, 0xd3,
	0x8b, 0x2a, 0x9b, 0x8a, 0x91, 0x43, 0x64, 0x1b, 0xef, 0x12, 0xc8, 0x27, 0x0a, 0x22, 0x19, 0x0d,
	0x0f, 0xd6, 0x85, 0x11, 0xc9, 0xc6, 0x7b, 0xec, 0xfa, 0x38, 0x6e, 0xde, 0xef, 0x85, 0xb8, 0xc3,
	0xaf, 0x80, 0xee, 0x83, 0x0e, 0xaf, 0xc0, 0x72, 0x1e, 0xa8, 0xfc, 0xf8, 0x29, 0x67, 0x4d, 0x25,
	0xe3, 0x45, 0xc1, 0x57, 0x16, 0x7c, 0x47, 0x47, 0x7b, 0x0d, 0x99, 0x97, 0x1b, 0x7f, 0x2e, 0xc0,
	0xed, 0x24, 0x6c, 0xe7, 0xaa, 0x4c, 0xf2, 0xf3, 0x54, 0xd4, 0x97, 0x4a, 0x87, 0x46, 0x7d, 0xed,
	0x14, 0xd6, 0x69, 0x2c, 0x53, 0x74, 0x77, 0xba, 0x0f, 0x17, 0x96, 0x1b, 0xe2, 0x4e, 0x1c, 0xac,
	0x6e, 0xa5, 0x24, 0x0d, 0x9c, 0xb7, 0xb9, 0x4a, 0x07, 0x91, 0x98, 0xf1, 0x79, 0x01, 0x6e, 0xe6,
	0xcf, 0xe3, 0x6b, 0x4f, 0xa2, 0xc9, 0xab, 0xe7, 0xcc, 0x24, 0x54, 0x2a, 0x54, 0x1c, 0x9a, 0x9a,
	0xd1, 0x7e, 0x43, 0x8c, 0x2f, 0x8b, 0xea, 0x75, 0x20, 0x63, 0x65, 0x62, 0xa0, 0x0f, 0x6b, 0x83,
	0x5c, 0xc6, 0x52, 0x6d, 0x91, 0x97, 0x7a, 0xcc, 0xbe, 0x74, 0xe9, 0xcc, 0x95, 0x5c, 0xcf, 0xb1,
	0x26, 0x0a, 0x34, 0x07, 0x56, 0x72, 0x67, 0x97, 0xea, 0x95, 0xfc, 0xcf, 0x65, 0xba, 0xb2, 0x8a,
	0x96, 0x73, 0x66, 0x2c, 0xbb, 0x30, 0x37, 0x64, 0x8a, 0xac, 0xfa, 0xb0, 0x79, 0x2a, 0x07, 0x94,
	0x37, 0x6b, 0x02, 0x28, 0xab, 0xb6, 0x7e, 0xcd, 0xc6, 0x13, 0x78, 0x31, 0x55, 0xd6, 0x5d, 0xb2,
	0xf2, 0x6f, 0x0d, 0x5a, 0xc6, 0xfc, 0x32, 0x33, 0x77, 0xed, 0xfe, 0x52, 0x80, 0x97, 0x06, 0xb8,
	0x41, 0xac, 0xff, 0x7f, 0xd6, 0x99, 0xf9, 0xaa, 0x08, 0xb5, 0x4b, 0x73, 0xe5, 0xfc, 0x1d, 0x1a,
	0x8e, 0xb6, 0x43, 0x6b, 0x97, 0xee, 0x9a, 0x5c, 0x77, 0xfd, 0x17, 0xef, 0xd3, 0xad, 0xf7, 0xe0,
	0x3a, 0xb3, 0xb1, 0x8f, 0x5f, 0x71, 0xf8, 0x35, 0x18, 0xba, 0x7e, 0x9b, 0x59, 0x36, 0xaf, 0xb4,
	0x90, 0x1f, 0x5a, 0x0e, 0x0e, 0xc2, 0xd3, 0xdc, 0x76, 0xf0, 0x4f, 0x54, 0x5b, 0x5e, 0x61, 0x5b,
	0x0a, 0x5a, 0x57, 0xc8, 0x06, 0x07, 0x6e, 0xfd, 0x10, 0x6e, 0x8a, 0xbb, 0x1f, 0x05, 0x81, 0x27,
	0x6a, 0x18, 0xd7, 0xf3, 0xc4, 0x65, 0x9b, 0xe9, 0xc4, 0xe5, 0xca, 0xff, 0xa9, 0xbc, 0x7c, 0xd6,
	0x39, 0x7e, 0x5b, 0xc2, 0x55, 0xc3, 0xef, 0x71, 0xaa, 0x61, 0xb7, 0x65, 0x26, 0xe5, 0x69, 0xd2,
	0xcc, 0x76, 0x88, 0x1f, 0x85, 0xda, 0x5a, 0x26, 0xcd, 0x4c, 0xfa, 0x47, 0x99, 0xbb, 0x6d, 0x2a,
	0xae, 0x51, 0xe3, 0x16, 0x79, 0x83, 0x43, 0xb7, 0xde, 0x87, 0x5b, 0xbd, 0x32, 0xd5, 0x9b, 0x8a,
	0xea, 0x0d, 0xca, 0xa7, 0x15, 0x6d, 0xa3, 0x4f, 0x45, 0xbc, 0x31, 0x7a, 0xb4, 0x6c, 0x64, 0xb5,
	0xd4, 0x85, 0xb0, 0x7d, 0x21, 0x4b, 0xde, 0xbb, 0x5b, 0x1d, 0x30, 0x06, 0xa8, 0x74, 0x78, 0xc9,
	0x3d, 0xb2, 0x42, 0xb5, 0x2a, 0xeb, 0x79, 0x0a, 0x1b, 0x28, 0xc4, 0x4a, 0x9d, 0x03, 0x6b, 0x7d,
	0xea, 0x32, 0x4f, 0x1d, 0xc3, 0x35, 0x7d, 0x2a, 0x35, 0xad, 0xf6, 0x68, 0x4a, 0x3d, 0x76, 0x6c,
	0x3d, 0x01, 0x43, 0x36, 0x47, 0x2e, 0xf5, 0xe2, 0x7a, 0xcf, 0xe1, 0x18, 0xe0, 0xc3, 0x75, 0x2e,
	0xea, 0x12, 0x0f, 0xb6, 0x61, 0x23, 0x57, 0x59, 0xda, 0x7f, 0xc3, 0x54, 0xc5, 0x7b, 0xba, 0x5f,
	0x55, 0xca, 0x77, 0x3f, 0x80, 0xb9, 0xec, 0xe1, 0xcb, 0x7f, 0x2e, 0xf9, 0x99, 0x7c, 0x4f, 0xdb,
	0x18, 0x14, 0x0c, 0x93, 0x13, 0x3f, 0x9b, 0x39, 0xf1, 0x6c, 0xeb, 0xa3, 0x02, 0xbc, 0x70, 0xc9,
	0x21, 0x67, 0x5a, 0xfa, 0x7f, 0x84, 0x52, 0xfd, 0xe2, 0xf8, 0xf9, 0xff, 0x5e, 0x5f, 0x4b, 0xf1,
	0x92, 0x70, 0xb3, 0x12, 0x0c, 0xe2, 0xd8, 0xfa, 0xb2, 0x00, 0x2f, 0x07, 0x2a, 0x08, 0x5b, 0xea,
	0xf5, 0x59, 0x86, 0x61, 0xcb, 0x8e, 0xe3, 0xb0, 0xd5, 0xeb, 0x89, 0xe7, 0x68, 0x74, 0xc4, 0xf6,
	0xbe, 0x31, 0x02, 0x24, 0xdf, 0x73, 0xf7, 0x82, 0xd1, 0x31, 0x6f, 0x6d, 0xbe, 0x77, 0xbb, 0xed,
	0x86, 0xa7, 0xd1, 0x71, 0xd5, 0x26, 0x9d, 0xfb, 0x1f, 0xb8, 0x9d, 0x63, 0x74, 0x8c, 0xc8, 0x7d,
	0x87, 0xd8, 0x36, 0xf1, 0x9f, 0xde, 0x77, 0xbf, 0x43, 0xe8, 0x93, 0xfb, 0xdc, 0x92, 0x7f, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xcc, 0x95, 0x58, 0xcb, 0xfb, 0x27, 0x00, 0x00,
}
