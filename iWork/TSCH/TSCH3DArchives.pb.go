// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSCH3DArchives.proto

package TSCH

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TextureTilingMode int32

const (
	TextureTilingMode_textureTilingModeNone    TextureTilingMode = 0
	TextureTilingMode_textureTilingModeTallest TextureTilingMode = 1
)

var TextureTilingMode_name = map[int32]string{
	0: "textureTilingModeNone",
	1: "textureTilingModeTallest",
}

var TextureTilingMode_value = map[string]int32{
	"textureTilingModeNone":    0,
	"textureTilingModeTallest": 1,
}

func (x TextureTilingMode) Enum() *TextureTilingMode {
	p := new(TextureTilingMode)
	*p = x
	return p
}

func (x TextureTilingMode) String() string {
	return proto.EnumName(TextureTilingMode_name, int32(x))
}

func (x *TextureTilingMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingMode_value, data, "TextureTilingMode")
	if err != nil {
		return err
	}
	*x = TextureTilingMode(value)
	return nil
}

func (TextureTilingMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{0}
}

type TextureTilingFace int32

const (
	TextureTilingFace_textureTilingFaceAll          TextureTilingFace = 0
	TextureTilingFace_textureTilingFaceTopAndBottom TextureTilingFace = 1
	TextureTilingFace_textureTilingFaceSide         TextureTilingFace = 2
)

var TextureTilingFace_name = map[int32]string{
	0: "textureTilingFaceAll",
	1: "textureTilingFaceTopAndBottom",
	2: "textureTilingFaceSide",
}

var TextureTilingFace_value = map[string]int32{
	"textureTilingFaceAll":          0,
	"textureTilingFaceTopAndBottom": 1,
	"textureTilingFaceSide":         2,
}

func (x TextureTilingFace) Enum() *TextureTilingFace {
	p := new(TextureTilingFace)
	*p = x
	return p
}

func (x TextureTilingFace) String() string {
	return proto.EnumName(TextureTilingFace_name, int32(x))
}

func (x *TextureTilingFace) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingFace_value, data, "TextureTilingFace")
	if err != nil {
		return err
	}
	*x = TextureTilingFace(value)
	return nil
}

func (TextureTilingFace) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{1}
}

type TextureTilingWrap int32

const (
	TextureTilingWrap_textureTilingWrapProjected TextureTilingWrap = 0
	TextureTilingWrap_textureTilingWrapFaceWrap  TextureTilingWrap = 1
)

var TextureTilingWrap_name = map[int32]string{
	0: "textureTilingWrapProjected",
	1: "textureTilingWrapFaceWrap",
}

var TextureTilingWrap_value = map[string]int32{
	"textureTilingWrapProjected": 0,
	"textureTilingWrapFaceWrap":  1,
}

func (x TextureTilingWrap) Enum() *TextureTilingWrap {
	p := new(TextureTilingWrap)
	*p = x
	return p
}

func (x TextureTilingWrap) String() string {
	return proto.EnumName(TextureTilingWrap_name, int32(x))
}

func (x *TextureTilingWrap) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingWrap_value, data, "TextureTilingWrap")
	if err != nil {
		return err
	}
	*x = TextureTilingWrap(value)
	return nil
}

func (TextureTilingWrap) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{2}
}

type TextureTilingXPosition int32

const (
	TextureTilingXPosition_textureTilingXPositionLeft   TextureTilingXPosition = 0
	TextureTilingXPosition_textureTilingXPositionCenter TextureTilingXPosition = 1
	TextureTilingXPosition_textureTilingXPositionRight  TextureTilingXPosition = 2
)

var TextureTilingXPosition_name = map[int32]string{
	0: "textureTilingXPositionLeft",
	1: "textureTilingXPositionCenter",
	2: "textureTilingXPositionRight",
}

var TextureTilingXPosition_value = map[string]int32{
	"textureTilingXPositionLeft":   0,
	"textureTilingXPositionCenter": 1,
	"textureTilingXPositionRight":  2,
}

func (x TextureTilingXPosition) Enum() *TextureTilingXPosition {
	p := new(TextureTilingXPosition)
	*p = x
	return p
}

func (x TextureTilingXPosition) String() string {
	return proto.EnumName(TextureTilingXPosition_name, int32(x))
}

func (x *TextureTilingXPosition) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingXPosition_value, data, "TextureTilingXPosition")
	if err != nil {
		return err
	}
	*x = TextureTilingXPosition(value)
	return nil
}

func (TextureTilingXPosition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{3}
}

type TextureTilingYPosition int32

const (
	TextureTilingYPosition_textureTilingYPositionTop    TextureTilingYPosition = 0
	TextureTilingYPosition_textureTilingYPositionMiddle TextureTilingYPosition = 1
	TextureTilingYPosition_textureTilingYPositionBottom TextureTilingYPosition = 2
)

var TextureTilingYPosition_name = map[int32]string{
	0: "textureTilingYPositionTop",
	1: "textureTilingYPositionMiddle",
	2: "textureTilingYPositionBottom",
}

var TextureTilingYPosition_value = map[string]int32{
	"textureTilingYPositionTop":    0,
	"textureTilingYPositionMiddle": 1,
	"textureTilingYPositionBottom": 2,
}

func (x TextureTilingYPosition) Enum() *TextureTilingYPosition {
	p := new(TextureTilingYPosition)
	*p = x
	return p
}

func (x TextureTilingYPosition) String() string {
	return proto.EnumName(TextureTilingYPosition_name, int32(x))
}

func (x *TextureTilingYPosition) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingYPosition_value, data, "TextureTilingYPosition")
	if err != nil {
		return err
	}
	*x = TextureTilingYPosition(value)
	return nil
}

func (TextureTilingYPosition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{4}
}

type TextureTilingContinuity int32

const (
	TextureTilingContinuity_textureTilingContinuityNone     TextureTilingContinuity = 0
	TextureTilingContinuity_textureTilingContinuityGlobal   TextureTilingContinuity = 1
	TextureTilingContinuity_textureTilingContinuitySeries   TextureTilingContinuity = 2
	TextureTilingContinuity_textureTilingContinuityJittered TextureTilingContinuity = 3
)

var TextureTilingContinuity_name = map[int32]string{
	0: "textureTilingContinuityNone",
	1: "textureTilingContinuityGlobal",
	2: "textureTilingContinuitySeries",
	3: "textureTilingContinuityJittered",
}

var TextureTilingContinuity_value = map[string]int32{
	"textureTilingContinuityNone":     0,
	"textureTilingContinuityGlobal":   1,
	"textureTilingContinuitySeries":   2,
	"textureTilingContinuityJittered": 3,
}

func (x TextureTilingContinuity) Enum() *TextureTilingContinuity {
	p := new(TextureTilingContinuity)
	*p = x
	return p
}

func (x TextureTilingContinuity) String() string {
	return proto.EnumName(TextureTilingContinuity_name, int32(x))
}

func (x *TextureTilingContinuity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TextureTilingContinuity_value, data, "TextureTilingContinuity")
	if err != nil {
		return err
	}
	*x = TextureTilingContinuity(value)
	return nil
}

func (TextureTilingContinuity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{5}
}

type FillPropertyType int32

const (
	FillPropertyType_fillPropertyTypeUndefined FillPropertyType = 0
	FillPropertyType_fillPropertyTypeArea      FillPropertyType = 1
	FillPropertyType_fillPropertyTypeBar       FillPropertyType = 2
	FillPropertyType_fillPropertyTypeColumn    FillPropertyType = 3
	FillPropertyType_fillPropertyTypeLine      FillPropertyType = 4
	FillPropertyType_fillPropertyTypePie       FillPropertyType = 5
)

var FillPropertyType_name = map[int32]string{
	0: "fillPropertyTypeUndefined",
	1: "fillPropertyTypeArea",
	2: "fillPropertyTypeBar",
	3: "fillPropertyTypeColumn",
	4: "fillPropertyTypeLine",
	5: "fillPropertyTypePie",
}

var FillPropertyType_value = map[string]int32{
	"fillPropertyTypeUndefined": 0,
	"fillPropertyTypeArea":      1,
	"fillPropertyTypeBar":       2,
	"fillPropertyTypeColumn":    3,
	"fillPropertyTypeLine":      4,
	"fillPropertyTypePie":       5,
}

func (x FillPropertyType) Enum() *FillPropertyType {
	p := new(FillPropertyType)
	*p = x
	return p
}

func (x FillPropertyType) String() string {
	return proto.EnumName(FillPropertyType_name, int32(x))
}

func (x *FillPropertyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FillPropertyType_value, data, "FillPropertyType")
	if err != nil {
		return err
	}
	*x = FillPropertyType(value)
	return nil
}

func (FillPropertyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{6}
}

type Chart3DEnvironmentPackageArchive struct {
	Materials            []*Chart3DEnvironmentMaterialArchive `protobuf:"bytes,1,rep,name=materials" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Chart3DEnvironmentPackageArchive) Reset()         { *m = Chart3DEnvironmentPackageArchive{} }
func (m *Chart3DEnvironmentPackageArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DEnvironmentPackageArchive) ProtoMessage()    {}
func (*Chart3DEnvironmentPackageArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{0}
}

func (m *Chart3DEnvironmentPackageArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DEnvironmentPackageArchive.Unmarshal(m, b)
}
func (m *Chart3DEnvironmentPackageArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DEnvironmentPackageArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DEnvironmentPackageArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DEnvironmentPackageArchive.Merge(m, src)
}
func (m *Chart3DEnvironmentPackageArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DEnvironmentPackageArchive.Size(m)
}
func (m *Chart3DEnvironmentPackageArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DEnvironmentPackageArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DEnvironmentPackageArchive proto.InternalMessageInfo

func (m *Chart3DEnvironmentPackageArchive) GetMaterials() []*Chart3DEnvironmentMaterialArchive {
	if m != nil {
		return m.Materials
	}
	return nil
}

type Chart3DFillArchive struct {
	Lightingmodel        *Chart3DLightingModelArchive `protobuf:"bytes,1,opt,name=lightingmodel" json:"lightingmodel,omitempty"`
	TexturesetId         *string                      `protobuf:"bytes,2,opt,name=textureset_id,json=texturesetId" json:"textureset_id,omitempty"`
	FillType             *FillPropertyType            `protobuf:"varint,3,opt,name=fill_type,json=fillType,enum=TSCH.FillPropertyType" json:"fill_type,omitempty"`
	SeriesIndex          *uint32                      `protobuf:"varint,4,opt,name=series_index,json=seriesIndex" json:"series_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Chart3DFillArchive) Reset()         { *m = Chart3DFillArchive{} }
func (m *Chart3DFillArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DFillArchive) ProtoMessage()    {}
func (*Chart3DFillArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{1}
}

func (m *Chart3DFillArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DFillArchive.Unmarshal(m, b)
}
func (m *Chart3DFillArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DFillArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DFillArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DFillArchive.Merge(m, src)
}
func (m *Chart3DFillArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DFillArchive.Size(m)
}
func (m *Chart3DFillArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DFillArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DFillArchive proto.InternalMessageInfo

func (m *Chart3DFillArchive) GetLightingmodel() *Chart3DLightingModelArchive {
	if m != nil {
		return m.Lightingmodel
	}
	return nil
}

func (m *Chart3DFillArchive) GetTexturesetId() string {
	if m != nil && m.TexturesetId != nil {
		return *m.TexturesetId
	}
	return ""
}

func (m *Chart3DFillArchive) GetFillType() FillPropertyType {
	if m != nil && m.FillType != nil {
		return *m.FillType
	}
	return FillPropertyType_fillPropertyTypeUndefined
}

func (m *Chart3DFillArchive) GetSeriesIndex() uint32 {
	if m != nil && m.SeriesIndex != nil {
		return *m.SeriesIndex
	}
	return 0
}

type Chart3DPointLightArchive struct {
	Position             *Chart3DVectorArchive `protobuf:"bytes,1,req,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Chart3DPointLightArchive) Reset()         { *m = Chart3DPointLightArchive{} }
func (m *Chart3DPointLightArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DPointLightArchive) ProtoMessage()    {}
func (*Chart3DPointLightArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{2}
}

func (m *Chart3DPointLightArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DPointLightArchive.Unmarshal(m, b)
}
func (m *Chart3DPointLightArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DPointLightArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DPointLightArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DPointLightArchive.Merge(m, src)
}
func (m *Chart3DPointLightArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DPointLightArchive.Size(m)
}
func (m *Chart3DPointLightArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DPointLightArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DPointLightArchive proto.InternalMessageInfo

func (m *Chart3DPointLightArchive) GetPosition() *Chart3DVectorArchive {
	if m != nil {
		return m.Position
	}
	return nil
}

type Chart3DDirectionalLightArchive struct {
	Direction            *Chart3DVectorArchive `protobuf:"bytes,1,req,name=direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Chart3DDirectionalLightArchive) Reset()         { *m = Chart3DDirectionalLightArchive{} }
func (m *Chart3DDirectionalLightArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DDirectionalLightArchive) ProtoMessage()    {}
func (*Chart3DDirectionalLightArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{3}
}

func (m *Chart3DDirectionalLightArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DDirectionalLightArchive.Unmarshal(m, b)
}
func (m *Chart3DDirectionalLightArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DDirectionalLightArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DDirectionalLightArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DDirectionalLightArchive.Merge(m, src)
}
func (m *Chart3DDirectionalLightArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DDirectionalLightArchive.Size(m)
}
func (m *Chart3DDirectionalLightArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DDirectionalLightArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DDirectionalLightArchive proto.InternalMessageInfo

func (m *Chart3DDirectionalLightArchive) GetDirection() *Chart3DVectorArchive {
	if m != nil {
		return m.Direction
	}
	return nil
}

type Chart3DSpotLightArchive struct {
	Position             *Chart3DVectorArchive `protobuf:"bytes,1,req,name=position" json:"position,omitempty"`
	Direction            *Chart3DVectorArchive `protobuf:"bytes,2,req,name=direction" json:"direction,omitempty"`
	Cutoff               *float32              `protobuf:"fixed32,3,req,name=cutoff" json:"cutoff,omitempty"`
	Dropoff              *float32              `protobuf:"fixed32,4,req,name=dropoff" json:"dropoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Chart3DSpotLightArchive) Reset()         { *m = Chart3DSpotLightArchive{} }
func (m *Chart3DSpotLightArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DSpotLightArchive) ProtoMessage()    {}
func (*Chart3DSpotLightArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{4}
}

func (m *Chart3DSpotLightArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DSpotLightArchive.Unmarshal(m, b)
}
func (m *Chart3DSpotLightArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DSpotLightArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DSpotLightArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DSpotLightArchive.Merge(m, src)
}
func (m *Chart3DSpotLightArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DSpotLightArchive.Size(m)
}
func (m *Chart3DSpotLightArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DSpotLightArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DSpotLightArchive proto.InternalMessageInfo

func (m *Chart3DSpotLightArchive) GetPosition() *Chart3DVectorArchive {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Chart3DSpotLightArchive) GetDirection() *Chart3DVectorArchive {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *Chart3DSpotLightArchive) GetCutoff() float32 {
	if m != nil && m.Cutoff != nil {
		return *m.Cutoff
	}
	return 0
}

func (m *Chart3DSpotLightArchive) GetDropoff() float32 {
	if m != nil && m.Dropoff != nil {
		return *m.Dropoff
	}
	return 0
}

type Chart3DLightArchive struct {
	Name                 *string                         `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	AmbientColor         *Chart3DVectorArchive           `protobuf:"bytes,2,req,name=ambient_color,json=ambientColor" json:"ambient_color,omitempty"`
	DiffuseColor         *Chart3DVectorArchive           `protobuf:"bytes,3,req,name=diffuse_color,json=diffuseColor" json:"diffuse_color,omitempty"`
	SpecularColor        *Chart3DVectorArchive           `protobuf:"bytes,4,req,name=specular_color,json=specularColor" json:"specular_color,omitempty"`
	Intensity            *float32                        `protobuf:"fixed32,5,req,name=intensity" json:"intensity,omitempty"`
	Attenuation          *Chart3DVectorArchive           `protobuf:"bytes,6,req,name=attenuation" json:"attenuation,omitempty"`
	CoordinateSpace      *uint32                         `protobuf:"varint,7,req,name=coordinate_space,json=coordinateSpace" json:"coordinate_space,omitempty"`
	Enabled              *bool                           `protobuf:"varint,8,req,name=enabled" json:"enabled,omitempty"`
	PointLight           *Chart3DPointLightArchive       `protobuf:"bytes,9,opt,name=point_light,json=pointLight" json:"point_light,omitempty"`
	DirectionalLight     *Chart3DDirectionalLightArchive `protobuf:"bytes,10,opt,name=directional_light,json=directionalLight" json:"directional_light,omitempty"`
	SpotLight            *Chart3DSpotLightArchive        `protobuf:"bytes,11,opt,name=spot_light,json=spotLight" json:"spot_light,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Chart3DLightArchive) Reset()         { *m = Chart3DLightArchive{} }
func (m *Chart3DLightArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DLightArchive) ProtoMessage()    {}
func (*Chart3DLightArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{5}
}

func (m *Chart3DLightArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DLightArchive.Unmarshal(m, b)
}
func (m *Chart3DLightArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DLightArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DLightArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DLightArchive.Merge(m, src)
}
func (m *Chart3DLightArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DLightArchive.Size(m)
}
func (m *Chart3DLightArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DLightArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DLightArchive proto.InternalMessageInfo

func (m *Chart3DLightArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chart3DLightArchive) GetAmbientColor() *Chart3DVectorArchive {
	if m != nil {
		return m.AmbientColor
	}
	return nil
}

func (m *Chart3DLightArchive) GetDiffuseColor() *Chart3DVectorArchive {
	if m != nil {
		return m.DiffuseColor
	}
	return nil
}

func (m *Chart3DLightArchive) GetSpecularColor() *Chart3DVectorArchive {
	if m != nil {
		return m.SpecularColor
	}
	return nil
}

func (m *Chart3DLightArchive) GetIntensity() float32 {
	if m != nil && m.Intensity != nil {
		return *m.Intensity
	}
	return 0
}

func (m *Chart3DLightArchive) GetAttenuation() *Chart3DVectorArchive {
	if m != nil {
		return m.Attenuation
	}
	return nil
}

func (m *Chart3DLightArchive) GetCoordinateSpace() uint32 {
	if m != nil && m.CoordinateSpace != nil {
		return *m.CoordinateSpace
	}
	return 0
}

func (m *Chart3DLightArchive) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *Chart3DLightArchive) GetPointLight() *Chart3DPointLightArchive {
	if m != nil {
		return m.PointLight
	}
	return nil
}

func (m *Chart3DLightArchive) GetDirectionalLight() *Chart3DDirectionalLightArchive {
	if m != nil {
		return m.DirectionalLight
	}
	return nil
}

func (m *Chart3DLightArchive) GetSpotLight() *Chart3DSpotLightArchive {
	if m != nil {
		return m.SpotLight
	}
	return nil
}

type Chart3DLightingModelArchive struct {
	Phong                *Chart3DPhongLightingModelArchive         `protobuf:"bytes,1,opt,name=phong" json:"phong,omitempty"`
	FixedFunction        *Chart3DFixedFunctionLightingModelArchive `protobuf:"bytes,2,opt,name=fixed_function,json=fixedFunction" json:"fixed_function,omitempty"`
	Environment          *Chart3DEnvironmentPackageArchive         `protobuf:"bytes,3,opt,name=environment" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Chart3DLightingModelArchive) Reset()         { *m = Chart3DLightingModelArchive{} }
func (m *Chart3DLightingModelArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DLightingModelArchive) ProtoMessage()    {}
func (*Chart3DLightingModelArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{6}
}

func (m *Chart3DLightingModelArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DLightingModelArchive.Unmarshal(m, b)
}
func (m *Chart3DLightingModelArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DLightingModelArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DLightingModelArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DLightingModelArchive.Merge(m, src)
}
func (m *Chart3DLightingModelArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DLightingModelArchive.Size(m)
}
func (m *Chart3DLightingModelArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DLightingModelArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DLightingModelArchive proto.InternalMessageInfo

func (m *Chart3DLightingModelArchive) GetPhong() *Chart3DPhongLightingModelArchive {
	if m != nil {
		return m.Phong
	}
	return nil
}

func (m *Chart3DLightingModelArchive) GetFixedFunction() *Chart3DFixedFunctionLightingModelArchive {
	if m != nil {
		return m.FixedFunction
	}
	return nil
}

func (m *Chart3DLightingModelArchive) GetEnvironment() *Chart3DEnvironmentPackageArchive {
	if m != nil {
		return m.Environment
	}
	return nil
}

type Chart3DLightingPackageArchive struct {
	Name                 *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Lights               []*Chart3DLightArchive `protobuf:"bytes,2,rep,name=lights" json:"lights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Chart3DLightingPackageArchive) Reset()         { *m = Chart3DLightingPackageArchive{} }
func (m *Chart3DLightingPackageArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DLightingPackageArchive) ProtoMessage()    {}
func (*Chart3DLightingPackageArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{7}
}

func (m *Chart3DLightingPackageArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DLightingPackageArchive.Unmarshal(m, b)
}
func (m *Chart3DLightingPackageArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DLightingPackageArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DLightingPackageArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DLightingPackageArchive.Merge(m, src)
}
func (m *Chart3DLightingPackageArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DLightingPackageArchive.Size(m)
}
func (m *Chart3DLightingPackageArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DLightingPackageArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DLightingPackageArchive proto.InternalMessageInfo

func (m *Chart3DLightingPackageArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Chart3DLightingPackageArchive) GetLights() []*Chart3DLightArchive {
	if m != nil {
		return m.Lights
	}
	return nil
}

type Chart3DTexturesMaterialArchive struct {
	Color                *Chart3DVectorArchive                `protobuf:"bytes,1,req,name=color" json:"color,omitempty"`
	Textures             []*Chart3DTSPImageDataTextureArchive `protobuf:"bytes,2,rep,name=textures" json:"textures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Chart3DTexturesMaterialArchive) Reset()         { *m = Chart3DTexturesMaterialArchive{} }
func (m *Chart3DTexturesMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DTexturesMaterialArchive) ProtoMessage()    {}
func (*Chart3DTexturesMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{8}
}

func (m *Chart3DTexturesMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DTexturesMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DTexturesMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DTexturesMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DTexturesMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DTexturesMaterialArchive.Merge(m, src)
}
func (m *Chart3DTexturesMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DTexturesMaterialArchive.Size(m)
}
func (m *Chart3DTexturesMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DTexturesMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DTexturesMaterialArchive proto.InternalMessageInfo

func (m *Chart3DTexturesMaterialArchive) GetColor() *Chart3DVectorArchive {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *Chart3DTexturesMaterialArchive) GetTextures() []*Chart3DTSPImageDataTextureArchive {
	if m != nil {
		return m.Textures
	}
	return nil
}

type Chart3DEmissiveMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive `protobuf:"bytes,2,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DEmissiveMaterialArchive) Reset()         { *m = Chart3DEmissiveMaterialArchive{} }
func (m *Chart3DEmissiveMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DEmissiveMaterialArchive) ProtoMessage()    {}
func (*Chart3DEmissiveMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{9}
}

func (m *Chart3DEmissiveMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DEmissiveMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DEmissiveMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DEmissiveMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DEmissiveMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DEmissiveMaterialArchive.Merge(m, src)
}
func (m *Chart3DEmissiveMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DEmissiveMaterialArchive.Size(m)
}
func (m *Chart3DEmissiveMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DEmissiveMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DEmissiveMaterialArchive proto.InternalMessageInfo

func (m *Chart3DEmissiveMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DEmissiveMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DDiffuseMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive `protobuf:"bytes,2,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DDiffuseMaterialArchive) Reset()         { *m = Chart3DDiffuseMaterialArchive{} }
func (m *Chart3DDiffuseMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DDiffuseMaterialArchive) ProtoMessage()    {}
func (*Chart3DDiffuseMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{10}
}

func (m *Chart3DDiffuseMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DDiffuseMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DDiffuseMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DDiffuseMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DDiffuseMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DDiffuseMaterialArchive.Merge(m, src)
}
func (m *Chart3DDiffuseMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DDiffuseMaterialArchive.Size(m)
}
func (m *Chart3DDiffuseMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DDiffuseMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DDiffuseMaterialArchive proto.InternalMessageInfo

func (m *Chart3DDiffuseMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DDiffuseMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DModulateMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive `protobuf:"bytes,2,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DModulateMaterialArchive) Reset()         { *m = Chart3DModulateMaterialArchive{} }
func (m *Chart3DModulateMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DModulateMaterialArchive) ProtoMessage()    {}
func (*Chart3DModulateMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{11}
}

func (m *Chart3DModulateMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DModulateMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DModulateMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DModulateMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DModulateMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DModulateMaterialArchive.Merge(m, src)
}
func (m *Chart3DModulateMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DModulateMaterialArchive.Size(m)
}
func (m *Chart3DModulateMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DModulateMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DModulateMaterialArchive proto.InternalMessageInfo

func (m *Chart3DModulateMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DModulateMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DSpecularMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive `protobuf:"bytes,2,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DSpecularMaterialArchive) Reset()         { *m = Chart3DSpecularMaterialArchive{} }
func (m *Chart3DSpecularMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DSpecularMaterialArchive) ProtoMessage()    {}
func (*Chart3DSpecularMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{12}
}

func (m *Chart3DSpecularMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DSpecularMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DSpecularMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DSpecularMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DSpecularMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DSpecularMaterialArchive.Merge(m, src)
}
func (m *Chart3DSpecularMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DSpecularMaterialArchive.Size(m)
}
func (m *Chart3DSpecularMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DSpecularMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DSpecularMaterialArchive proto.InternalMessageInfo

func (m *Chart3DSpecularMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DSpecularMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DShininessMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive     `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive `protobuf:"bytes,2,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DShininessMaterialArchive) Reset()         { *m = Chart3DShininessMaterialArchive{} }
func (m *Chart3DShininessMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DShininessMaterialArchive) ProtoMessage()    {}
func (*Chart3DShininessMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{13}
}

func (m *Chart3DShininessMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DShininessMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DShininessMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DShininessMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DShininessMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DShininessMaterialArchive.Merge(m, src)
}
func (m *Chart3DShininessMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DShininessMaterialArchive.Size(m)
}
func (m *Chart3DShininessMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DShininessMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DShininessMaterialArchive proto.InternalMessageInfo

func (m *Chart3DShininessMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DShininessMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DEnvironmentMaterialArchive struct {
	Super                *Chart3DTexturesMaterialArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OBSOLETETilings      []*Chart3DBaseImageTextureTilingArchive `protobuf:"bytes,2,rep,name=OBSOLETE_tilings,json=OBSOLETETilings" json:"OBSOLETE_tilings,omitempty"`
	DecalMode            *bool                                   `protobuf:"varint,3,opt,name=decalMode" json:"decalMode,omitempty"`
	Tilings              []*Chart3DImageTextureTilingArchive     `protobuf:"bytes,4,rep,name=tilings" json:"tilings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Chart3DEnvironmentMaterialArchive) Reset()         { *m = Chart3DEnvironmentMaterialArchive{} }
func (m *Chart3DEnvironmentMaterialArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DEnvironmentMaterialArchive) ProtoMessage()    {}
func (*Chart3DEnvironmentMaterialArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{14}
}

func (m *Chart3DEnvironmentMaterialArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DEnvironmentMaterialArchive.Unmarshal(m, b)
}
func (m *Chart3DEnvironmentMaterialArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DEnvironmentMaterialArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DEnvironmentMaterialArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DEnvironmentMaterialArchive.Merge(m, src)
}
func (m *Chart3DEnvironmentMaterialArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DEnvironmentMaterialArchive.Size(m)
}
func (m *Chart3DEnvironmentMaterialArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DEnvironmentMaterialArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DEnvironmentMaterialArchive proto.InternalMessageInfo

func (m *Chart3DEnvironmentMaterialArchive) GetSuper() *Chart3DTexturesMaterialArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DEnvironmentMaterialArchive) GetOBSOLETETilings() []*Chart3DBaseImageTextureTilingArchive {
	if m != nil {
		return m.OBSOLETETilings
	}
	return nil
}

func (m *Chart3DEnvironmentMaterialArchive) GetDecalMode() bool {
	if m != nil && m.DecalMode != nil {
		return *m.DecalMode
	}
	return false
}

func (m *Chart3DEnvironmentMaterialArchive) GetTilings() []*Chart3DImageTextureTilingArchive {
	if m != nil {
		return m.Tilings
	}
	return nil
}

type Chart3DFixedFunctionLightingModelArchive struct {
	Materials            *Chart3DPhongMaterialPackageArchive `protobuf:"bytes,1,req,name=materials" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DFixedFunctionLightingModelArchive) Reset() {
	*m = Chart3DFixedFunctionLightingModelArchive{}
}
func (m *Chart3DFixedFunctionLightingModelArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DFixedFunctionLightingModelArchive) ProtoMessage()    {}
func (*Chart3DFixedFunctionLightingModelArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{15}
}

func (m *Chart3DFixedFunctionLightingModelArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive.Unmarshal(m, b)
}
func (m *Chart3DFixedFunctionLightingModelArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DFixedFunctionLightingModelArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive.Merge(m, src)
}
func (m *Chart3DFixedFunctionLightingModelArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive.Size(m)
}
func (m *Chart3DFixedFunctionLightingModelArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DFixedFunctionLightingModelArchive proto.InternalMessageInfo

func (m *Chart3DFixedFunctionLightingModelArchive) GetMaterials() *Chart3DPhongMaterialPackageArchive {
	if m != nil {
		return m.Materials
	}
	return nil
}

type Chart3DPhongLightingModelArchive struct {
	Materials            *Chart3DPhongMaterialPackageArchive `protobuf:"bytes,1,req,name=materials" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *Chart3DPhongLightingModelArchive) Reset()         { *m = Chart3DPhongLightingModelArchive{} }
func (m *Chart3DPhongLightingModelArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DPhongLightingModelArchive) ProtoMessage()    {}
func (*Chart3DPhongLightingModelArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{16}
}

func (m *Chart3DPhongLightingModelArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DPhongLightingModelArchive.Unmarshal(m, b)
}
func (m *Chart3DPhongLightingModelArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DPhongLightingModelArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DPhongLightingModelArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DPhongLightingModelArchive.Merge(m, src)
}
func (m *Chart3DPhongLightingModelArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DPhongLightingModelArchive.Size(m)
}
func (m *Chart3DPhongLightingModelArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DPhongLightingModelArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DPhongLightingModelArchive proto.InternalMessageInfo

func (m *Chart3DPhongLightingModelArchive) GetMaterials() *Chart3DPhongMaterialPackageArchive {
	if m != nil {
		return m.Materials
	}
	return nil
}

type Chart3DPhongMaterialPackageArchive struct {
	Emissive             *Chart3DEmissiveMaterialArchive  `protobuf:"bytes,1,opt,name=emissive" json:"emissive,omitempty"`
	Diffuse              *Chart3DDiffuseMaterialArchive   `protobuf:"bytes,2,opt,name=diffuse" json:"diffuse,omitempty"`
	Modulate             *Chart3DModulateMaterialArchive  `protobuf:"bytes,3,opt,name=modulate" json:"modulate,omitempty"`
	Specular             *Chart3DSpecularMaterialArchive  `protobuf:"bytes,4,opt,name=specular" json:"specular,omitempty"`
	Shininess            *Chart3DShininessMaterialArchive `protobuf:"bytes,5,opt,name=shininess" json:"shininess,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *Chart3DPhongMaterialPackageArchive) Reset()         { *m = Chart3DPhongMaterialPackageArchive{} }
func (m *Chart3DPhongMaterialPackageArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DPhongMaterialPackageArchive) ProtoMessage()    {}
func (*Chart3DPhongMaterialPackageArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{17}
}

func (m *Chart3DPhongMaterialPackageArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DPhongMaterialPackageArchive.Unmarshal(m, b)
}
func (m *Chart3DPhongMaterialPackageArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DPhongMaterialPackageArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DPhongMaterialPackageArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DPhongMaterialPackageArchive.Merge(m, src)
}
func (m *Chart3DPhongMaterialPackageArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DPhongMaterialPackageArchive.Size(m)
}
func (m *Chart3DPhongMaterialPackageArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DPhongMaterialPackageArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DPhongMaterialPackageArchive proto.InternalMessageInfo

func (m *Chart3DPhongMaterialPackageArchive) GetEmissive() *Chart3DEmissiveMaterialArchive {
	if m != nil {
		return m.Emissive
	}
	return nil
}

func (m *Chart3DPhongMaterialPackageArchive) GetDiffuse() *Chart3DDiffuseMaterialArchive {
	if m != nil {
		return m.Diffuse
	}
	return nil
}

func (m *Chart3DPhongMaterialPackageArchive) GetModulate() *Chart3DModulateMaterialArchive {
	if m != nil {
		return m.Modulate
	}
	return nil
}

func (m *Chart3DPhongMaterialPackageArchive) GetSpecular() *Chart3DSpecularMaterialArchive {
	if m != nil {
		return m.Specular
	}
	return nil
}

func (m *Chart3DPhongMaterialPackageArchive) GetShininess() *Chart3DShininessMaterialArchive {
	if m != nil {
		return m.Shininess
	}
	return nil
}

type Chart3DTSPImageDataTextureArchive struct {
	Data                 *TSP.DataReference `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Mipmapdata           *TSP.DataReference `protobuf:"bytes,4,opt,name=mipmapdata" json:"mipmapdata,omitempty"`
	DatabaseData         *TSP.Reference     `protobuf:"bytes,1,opt,name=database_data,json=databaseData" json:"database_data,omitempty"`
	DatabaseMipmapdata   *TSP.Reference     `protobuf:"bytes,2,opt,name=database_mipmapdata,json=databaseMipmapdata" json:"database_mipmapdata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Chart3DTSPImageDataTextureArchive) Reset()         { *m = Chart3DTSPImageDataTextureArchive{} }
func (m *Chart3DTSPImageDataTextureArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DTSPImageDataTextureArchive) ProtoMessage()    {}
func (*Chart3DTSPImageDataTextureArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{18}
}

func (m *Chart3DTSPImageDataTextureArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DTSPImageDataTextureArchive.Unmarshal(m, b)
}
func (m *Chart3DTSPImageDataTextureArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DTSPImageDataTextureArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DTSPImageDataTextureArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DTSPImageDataTextureArchive.Merge(m, src)
}
func (m *Chart3DTSPImageDataTextureArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DTSPImageDataTextureArchive.Size(m)
}
func (m *Chart3DTSPImageDataTextureArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DTSPImageDataTextureArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DTSPImageDataTextureArchive proto.InternalMessageInfo

func (m *Chart3DTSPImageDataTextureArchive) GetData() *TSP.DataReference {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Chart3DTSPImageDataTextureArchive) GetMipmapdata() *TSP.DataReference {
	if m != nil {
		return m.Mipmapdata
	}
	return nil
}

func (m *Chart3DTSPImageDataTextureArchive) GetDatabaseData() *TSP.Reference {
	if m != nil {
		return m.DatabaseData
	}
	return nil
}

func (m *Chart3DTSPImageDataTextureArchive) GetDatabaseMipmapdata() *TSP.Reference {
	if m != nil {
		return m.DatabaseMipmapdata
	}
	return nil
}

type Chart3DBaseImageTextureTilingArchive struct {
	Scale                *Chart3DVectorArchive `protobuf:"bytes,1,opt,name=scale" json:"scale,omitempty"`
	Rotation             *float32              `protobuf:"fixed32,2,opt,name=rotation" json:"rotation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Chart3DBaseImageTextureTilingArchive) Reset()         { *m = Chart3DBaseImageTextureTilingArchive{} }
func (m *Chart3DBaseImageTextureTilingArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DBaseImageTextureTilingArchive) ProtoMessage()    {}
func (*Chart3DBaseImageTextureTilingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{19}
}

func (m *Chart3DBaseImageTextureTilingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DBaseImageTextureTilingArchive.Unmarshal(m, b)
}
func (m *Chart3DBaseImageTextureTilingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DBaseImageTextureTilingArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DBaseImageTextureTilingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DBaseImageTextureTilingArchive.Merge(m, src)
}
func (m *Chart3DBaseImageTextureTilingArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DBaseImageTextureTilingArchive.Size(m)
}
func (m *Chart3DBaseImageTextureTilingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DBaseImageTextureTilingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DBaseImageTextureTilingArchive proto.InternalMessageInfo

func (m *Chart3DBaseImageTextureTilingArchive) GetScale() *Chart3DVectorArchive {
	if m != nil {
		return m.Scale
	}
	return nil
}

func (m *Chart3DBaseImageTextureTilingArchive) GetRotation() float32 {
	if m != nil && m.Rotation != nil {
		return *m.Rotation
	}
	return 0
}

type Chart3DImageTextureTilingArchive struct {
	Super                *Chart3DBaseImageTextureTilingArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Mode                 *TextureTilingMode                    `protobuf:"varint,2,opt,name=mode,enum=TSCH.TextureTilingMode" json:"mode,omitempty"`
	Wrap                 *TextureTilingWrap                    `protobuf:"varint,3,opt,name=wrap,enum=TSCH.TextureTilingWrap" json:"wrap,omitempty"`
	Face                 *TextureTilingFace                    `protobuf:"varint,4,opt,name=face,enum=TSCH.TextureTilingFace" json:"face,omitempty"`
	Xposition            *TextureTilingXPosition               `protobuf:"varint,5,opt,name=xposition,enum=TSCH.TextureTilingXPosition" json:"xposition,omitempty"`
	Yposition            *TextureTilingYPosition               `protobuf:"varint,6,opt,name=yposition,enum=TSCH.TextureTilingYPosition" json:"yposition,omitempty"`
	Scontinuity          *TextureTilingContinuity              `protobuf:"varint,7,opt,name=scontinuity,enum=TSCH.TextureTilingContinuity" json:"scontinuity,omitempty"`
	Tcontinuity          *TextureTilingContinuity              `protobuf:"varint,8,opt,name=tcontinuity,enum=TSCH.TextureTilingContinuity" json:"tcontinuity,omitempty"`
	Reveal               *bool                                 `protobuf:"varint,9,opt,name=reveal" json:"reveal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *Chart3DImageTextureTilingArchive) Reset()         { *m = Chart3DImageTextureTilingArchive{} }
func (m *Chart3DImageTextureTilingArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DImageTextureTilingArchive) ProtoMessage()    {}
func (*Chart3DImageTextureTilingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{20}
}

func (m *Chart3DImageTextureTilingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DImageTextureTilingArchive.Unmarshal(m, b)
}
func (m *Chart3DImageTextureTilingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DImageTextureTilingArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DImageTextureTilingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DImageTextureTilingArchive.Merge(m, src)
}
func (m *Chart3DImageTextureTilingArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DImageTextureTilingArchive.Size(m)
}
func (m *Chart3DImageTextureTilingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DImageTextureTilingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DImageTextureTilingArchive proto.InternalMessageInfo

func (m *Chart3DImageTextureTilingArchive) GetSuper() *Chart3DBaseImageTextureTilingArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *Chart3DImageTextureTilingArchive) GetMode() TextureTilingMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return TextureTilingMode_textureTilingModeNone
}

func (m *Chart3DImageTextureTilingArchive) GetWrap() TextureTilingWrap {
	if m != nil && m.Wrap != nil {
		return *m.Wrap
	}
	return TextureTilingWrap_textureTilingWrapProjected
}

func (m *Chart3DImageTextureTilingArchive) GetFace() TextureTilingFace {
	if m != nil && m.Face != nil {
		return *m.Face
	}
	return TextureTilingFace_textureTilingFaceAll
}

func (m *Chart3DImageTextureTilingArchive) GetXposition() TextureTilingXPosition {
	if m != nil && m.Xposition != nil {
		return *m.Xposition
	}
	return TextureTilingXPosition_textureTilingXPositionLeft
}

func (m *Chart3DImageTextureTilingArchive) GetYposition() TextureTilingYPosition {
	if m != nil && m.Yposition != nil {
		return *m.Yposition
	}
	return TextureTilingYPosition_textureTilingYPositionTop
}

func (m *Chart3DImageTextureTilingArchive) GetScontinuity() TextureTilingContinuity {
	if m != nil && m.Scontinuity != nil {
		return *m.Scontinuity
	}
	return TextureTilingContinuity_textureTilingContinuityNone
}

func (m *Chart3DImageTextureTilingArchive) GetTcontinuity() TextureTilingContinuity {
	if m != nil && m.Tcontinuity != nil {
		return *m.Tcontinuity
	}
	return TextureTilingContinuity_textureTilingContinuityNone
}

func (m *Chart3DImageTextureTilingArchive) GetReveal() bool {
	if m != nil && m.Reveal != nil {
		return *m.Reveal
	}
	return false
}

type Chart3DVectorArchive struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	W                    *float32 `protobuf:"fixed32,4,req,name=w" json:"w,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chart3DVectorArchive) Reset()         { *m = Chart3DVectorArchive{} }
func (m *Chart3DVectorArchive) String() string { return proto.CompactTextString(m) }
func (*Chart3DVectorArchive) ProtoMessage()    {}
func (*Chart3DVectorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbeb35ef36b65290, []int{21}
}

func (m *Chart3DVectorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chart3DVectorArchive.Unmarshal(m, b)
}
func (m *Chart3DVectorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chart3DVectorArchive.Marshal(b, m, deterministic)
}
func (m *Chart3DVectorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chart3DVectorArchive.Merge(m, src)
}
func (m *Chart3DVectorArchive) XXX_Size() int {
	return xxx_messageInfo_Chart3DVectorArchive.Size(m)
}
func (m *Chart3DVectorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_Chart3DVectorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_Chart3DVectorArchive proto.InternalMessageInfo

func (m *Chart3DVectorArchive) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Chart3DVectorArchive) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Chart3DVectorArchive) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *Chart3DVectorArchive) GetW() float32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

var E_Fill3D = &proto.ExtensionDesc{
	ExtendedType:  (*TSD.FillArchive)(nil),
	ExtensionType: (*Chart3DFillArchive)(nil),
	Field:         100,
	Name:          "TSCH.fill3d",
	Tag:           "bytes,100,opt,name=fill3d",
	Filename:      "TSCH3DArchives.proto",
}

func init() {
	proto.RegisterEnum("TSCH.TextureTilingMode", TextureTilingMode_name, TextureTilingMode_value)
	proto.RegisterEnum("TSCH.TextureTilingFace", TextureTilingFace_name, TextureTilingFace_value)
	proto.RegisterEnum("TSCH.TextureTilingWrap", TextureTilingWrap_name, TextureTilingWrap_value)
	proto.RegisterEnum("TSCH.TextureTilingXPosition", TextureTilingXPosition_name, TextureTilingXPosition_value)
	proto.RegisterEnum("TSCH.TextureTilingYPosition", TextureTilingYPosition_name, TextureTilingYPosition_value)
	proto.RegisterEnum("TSCH.TextureTilingContinuity", TextureTilingContinuity_name, TextureTilingContinuity_value)
	proto.RegisterEnum("TSCH.FillPropertyType", FillPropertyType_name, FillPropertyType_value)
	proto.RegisterType((*Chart3DEnvironmentPackageArchive)(nil), "TSCH.Chart3DEnvironmentPackageArchive")
	proto.RegisterType((*Chart3DFillArchive)(nil), "TSCH.Chart3DFillArchive")
	proto.RegisterType((*Chart3DPointLightArchive)(nil), "TSCH.Chart3DPointLightArchive")
	proto.RegisterType((*Chart3DDirectionalLightArchive)(nil), "TSCH.Chart3DDirectionalLightArchive")
	proto.RegisterType((*Chart3DSpotLightArchive)(nil), "TSCH.Chart3DSpotLightArchive")
	proto.RegisterType((*Chart3DLightArchive)(nil), "TSCH.Chart3DLightArchive")
	proto.RegisterType((*Chart3DLightingModelArchive)(nil), "TSCH.Chart3DLightingModelArchive")
	proto.RegisterType((*Chart3DLightingPackageArchive)(nil), "TSCH.Chart3DLightingPackageArchive")
	proto.RegisterType((*Chart3DTexturesMaterialArchive)(nil), "TSCH.Chart3DTexturesMaterialArchive")
	proto.RegisterType((*Chart3DEmissiveMaterialArchive)(nil), "TSCH.Chart3DEmissiveMaterialArchive")
	proto.RegisterType((*Chart3DDiffuseMaterialArchive)(nil), "TSCH.Chart3DDiffuseMaterialArchive")
	proto.RegisterType((*Chart3DModulateMaterialArchive)(nil), "TSCH.Chart3DModulateMaterialArchive")
	proto.RegisterType((*Chart3DSpecularMaterialArchive)(nil), "TSCH.Chart3DSpecularMaterialArchive")
	proto.RegisterType((*Chart3DShininessMaterialArchive)(nil), "TSCH.Chart3DShininessMaterialArchive")
	proto.RegisterType((*Chart3DEnvironmentMaterialArchive)(nil), "TSCH.Chart3DEnvironmentMaterialArchive")
	proto.RegisterType((*Chart3DFixedFunctionLightingModelArchive)(nil), "TSCH.Chart3DFixedFunctionLightingModelArchive")
	proto.RegisterType((*Chart3DPhongLightingModelArchive)(nil), "TSCH.Chart3DPhongLightingModelArchive")
	proto.RegisterType((*Chart3DPhongMaterialPackageArchive)(nil), "TSCH.Chart3DPhongMaterialPackageArchive")
	proto.RegisterType((*Chart3DTSPImageDataTextureArchive)(nil), "TSCH.Chart3DTSPImageDataTextureArchive")
	proto.RegisterType((*Chart3DBaseImageTextureTilingArchive)(nil), "TSCH.Chart3DBaseImageTextureTilingArchive")
	proto.RegisterType((*Chart3DImageTextureTilingArchive)(nil), "TSCH.Chart3DImageTextureTilingArchive")
	proto.RegisterType((*Chart3DVectorArchive)(nil), "TSCH.Chart3DVectorArchive")
	proto.RegisterExtension(E_Fill3D)
}

func init() { proto.RegisterFile("TSCH3DArchives.proto", fileDescriptor_dbeb35ef36b65290) }

var fileDescriptor_dbeb35ef36b65290 = []byte{
	// 1651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4d, 0x53, 0x1b, 0xc9,
	0x19, 0x66, 0x06, 0x01, 0xd2, 0x2b, 0x60, 0xc7, 0x6d, 0x02, 0x63, 0x16, 0x6c, 0x31, 0xde, 0x38,
	0x0a, 0xa9, 0x12, 0x09, 0x54, 0xa5, 0x52, 0x2e, 0xa7, 0x6c, 0x10, 0xb0, 0xeb, 0x14, 0xec, 0x2a,
	0x2d, 0x39, 0x9b, 0xec, 0x45, 0xd5, 0xcc, 0xb4, 0x44, 0xaf, 0x47, 0xd3, 0x53, 0x33, 0x2d, 0x0c,
	0xce, 0xff, 0x48, 0x4e, 0x49, 0x4e, 0xf9, 0x05, 0x39, 0xe7, 0x8f, 0xe4, 0x96, 0x3f, 0x90, 0x5b,
	0x6e, 0x49, 0x55, 0xaa, 0x5b, 0x3d, 0x23, 0xcd, 0x48, 0x63, 0xd8, 0xac, 0x0f, 0x9c, 0xa0, 0xdf,
	0xf7, 0x79, 0x9e, 0x7e, 0xa6, 0x3f, 0xde, 0xee, 0x16, 0xac, 0x75, 0xda, 0xcd, 0x2f, 0x0e, 0x8e,
	0x0f, 0x23, 0xf7, 0x92, 0x5d, 0xd1, 0xb8, 0x11, 0x46, 0x5c, 0x70, 0x54, 0x92, 0xd1, 0xcd, 0x07,
	0x9d, 0x76, 0xeb, 0x9c, 0xc6, 0x31, 0xe9, 0x27, 0x09, 0x19, 0xca, 0x61, 0x1d, 0x06, 0xb5, 0xe6,
	0x25, 0x89, 0xc4, 0xc1, 0xf1, 0x49, 0x70, 0xc5, 0x22, 0x1e, 0x0c, 0x68, 0x20, 0x5a, 0xc4, 0x7d,
	0x4b, 0xfa, 0x54, 0x43, 0xd1, 0x09, 0x54, 0x06, 0x44, 0xd0, 0x88, 0x11, 0x3f, 0xb6, 0x8d, 0xda,
	0x7c, 0xbd, 0xba, 0xff, 0xa3, 0x86, 0xec, 0xa3, 0x31, 0x4d, 0x3d, 0xd7, 0x40, 0xcd, 0xc5, 0x63,
	0xa6, 0xf3, 0x0f, 0x03, 0x90, 0x26, 0x9c, 0x32, 0x3f, 0x41, 0xa0, 0xcf, 0x61, 0xc5, 0x67, 0xfd,
	0x4b, 0xc1, 0x82, 0xfe, 0x80, 0x7b, 0xd4, 0xb7, 0x8d, 0x9a, 0x51, 0xaf, 0xee, 0xef, 0x64, 0x7a,
	0x38, 0xd3, 0x88, 0x73, 0x89, 0x48, 0xb4, 0xb3, 0x3c, 0xf4, 0x14, 0x56, 0x04, 0xbd, 0x16, 0xc3,
	0x88, 0xc6, 0x54, 0x74, 0x99, 0x67, 0x9b, 0x35, 0xa3, 0x5e, 0xc1, 0xcb, 0xe3, 0xe0, 0x6b, 0x0f,
	0x1d, 0x40, 0xa5, 0xc7, 0x7c, 0xbf, 0x2b, 0x6e, 0x42, 0x6a, 0xcf, 0xd7, 0x8c, 0xfa, 0xea, 0xfe,
	0xfa, 0xa8, 0x27, 0xe9, 0xa9, 0x15, 0xf1, 0x90, 0x46, 0xe2, 0xa6, 0x73, 0x13, 0x52, 0x5c, 0x96,
	0x40, 0xf9, 0x1f, 0xda, 0x81, 0xe5, 0x98, 0x46, 0x8c, 0xc6, 0x5d, 0x16, 0x78, 0xf4, 0xda, 0x2e,
	0xd5, 0x8c, 0xfa, 0x0a, 0xae, 0x8e, 0x62, 0xaf, 0x65, 0xc8, 0xc1, 0x60, 0x6b, 0xab, 0x2d, 0xce,
	0x02, 0xa1, 0xfc, 0x26, 0x5f, 0xf8, 0x73, 0x28, 0x87, 0x3c, 0x66, 0x82, 0xf1, 0xc0, 0x36, 0x6a,
	0x66, 0xbd, 0xba, 0xbf, 0x99, 0xf9, 0xb8, 0xdf, 0x50, 0x57, 0xf0, 0x28, 0xf9, 0xaa, 0x14, 0xeb,
	0x7c, 0x03, 0x8f, 0x35, 0xe2, 0x98, 0x45, 0xd4, 0x95, 0x31, 0xe2, 0x67, 0x94, 0x7f, 0x01, 0x15,
	0x2f, 0x49, 0xdd, 0x41, 0x7a, 0x0c, 0x76, 0xfe, 0x6e, 0xc0, 0x86, 0xc6, 0xb4, 0x43, 0xfe, 0x51,
	0xfc, 0x66, 0xdd, 0x98, 0xdf, 0xc1, 0x0d, 0x5a, 0x87, 0x45, 0x77, 0x28, 0x78, 0xaf, 0x67, 0xcf,
	0xd7, 0xcc, 0xba, 0x89, 0x75, 0x0b, 0xd9, 0xb0, 0xe4, 0x45, 0x3c, 0x94, 0x89, 0x92, 0x4a, 0x24,
	0x4d, 0xe7, 0x9f, 0x25, 0x78, 0x38, 0xb9, 0x36, 0x12, 0xef, 0x08, 0x4a, 0x01, 0x19, 0x50, 0xe5,
	0xbb, 0x82, 0xd5, 0xff, 0xe8, 0x25, 0xac, 0x90, 0xc1, 0x05, 0xa3, 0x81, 0xe8, 0xba, 0xdc, 0xe7,
	0xd1, 0x1d, 0xbc, 0x2d, 0x6b, 0x42, 0x53, 0xe2, 0xa5, 0x80, 0xc7, 0x7a, 0xbd, 0x61, 0x4c, 0xb5,
	0xc0, 0xfc, 0xed, 0x02, 0x9a, 0x30, 0x12, 0x38, 0x84, 0xd5, 0x38, 0xa4, 0xee, 0xd0, 0x27, 0x91,
	0x56, 0x28, 0xdd, 0xaa, 0xb0, 0x92, 0x30, 0x46, 0x12, 0x5b, 0x50, 0x61, 0x81, 0xa0, 0x41, 0xcc,
	0xc4, 0x8d, 0xbd, 0xa0, 0x06, 0x63, 0x1c, 0x40, 0x2f, 0xa0, 0x4a, 0x84, 0xa0, 0xc1, 0x90, 0xa8,
	0xc1, 0x5f, 0xbc, 0x55, 0x7d, 0x12, 0x8e, 0x7e, 0x0c, 0x96, 0xcb, 0x79, 0xe4, 0xb1, 0x80, 0x08,
	0xda, 0x8d, 0x43, 0xe2, 0x52, 0x7b, 0xa9, 0x66, 0xd6, 0x57, 0xf0, 0x27, 0xe3, 0x78, 0x5b, 0x86,
	0xe5, 0x8c, 0xd0, 0x80, 0x5c, 0xf8, 0xd4, 0xb3, 0xcb, 0x35, 0xb3, 0x5e, 0xc6, 0x49, 0x13, 0xbd,
	0x84, 0x6a, 0x28, 0x97, 0x7e, 0x57, 0xed, 0x4a, 0xbb, 0xa2, 0x76, 0xf1, 0xe3, 0x8c, 0x85, 0xa9,
	0xad, 0x81, 0x21, 0x4c, 0x43, 0xe8, 0xd7, 0xf0, 0xc0, 0x1b, 0xaf, 0x73, 0x2d, 0x03, 0x4a, 0xe6,
	0xb3, 0x8c, 0x4c, 0xc1, 0x6e, 0xc0, 0x96, 0x97, 0x4b, 0xa0, 0x17, 0x00, 0x71, 0xc8, 0x13, 0x4b,
	0x55, 0xa5, 0xb5, 0x9d, 0xd1, 0xca, 0x2f, 0x7e, 0x5c, 0x89, 0x93, 0x88, 0xf3, 0x1f, 0x03, 0x3e,
	0xfd, 0x40, 0xfd, 0x41, 0x2f, 0x60, 0x21, 0xbc, 0xe4, 0x41, 0x5f, 0x57, 0xac, 0x67, 0xd9, 0x6f,
	0x95, 0x99, 0x99, 0x65, 0x6b, 0x44, 0x42, 0x6f, 0x60, 0xb5, 0xc7, 0xae, 0xa9, 0xd7, 0xed, 0x0d,
	0x83, 0x64, 0xcb, 0x48, 0x99, 0x46, 0x46, 0xe6, 0x54, 0x42, 0x4e, 0x35, 0x62, 0x76, 0x15, 0xec,
	0x4d, 0x42, 0xd0, 0x17, 0x50, 0xa5, 0xe3, 0x72, 0xac, 0x4a, 0x5c, 0xde, 0x5a, 0x61, 0xa5, 0xc7,
	0x93, 0x54, 0xa7, 0x07, 0xdb, 0xb9, 0xaf, 0xcf, 0x9d, 0x0b, 0xb3, 0xf6, 0xda, 0xcf, 0x60, 0x51,
	0x0d, 0x76, 0x6c, 0x9b, 0xea, 0xa0, 0x78, 0x34, 0x5d, 0xc6, 0x93, 0xce, 0x34, 0xd0, 0xf9, 0xa3,
	0x91, 0xd6, 0xb9, 0x8e, 0x2e, 0xd5, 0xb9, 0x53, 0x04, 0xfd, 0x14, 0x16, 0x46, 0xdb, 0xe6, 0xf6,
	0x72, 0x34, 0x02, 0xa2, 0x26, 0x94, 0x93, 0xba, 0xaf, 0x9d, 0x64, 0x8f, 0xac, 0x4e, 0xbb, 0xf5,
	0x7a, 0x40, 0xfa, 0xf4, 0x98, 0x08, 0xa2, 0x7b, 0x4d, 0x0b, 0x5a, 0x42, 0x74, 0xfe, 0x3c, 0x76,
	0x76, 0x32, 0x60, 0x71, 0xcc, 0xae, 0x68, 0xde, 0xd9, 0x73, 0x58, 0x88, 0x87, 0x21, 0x4d, 0x9c,
	0x65, 0x17, 0x6a, 0xc1, 0xe7, 0xe0, 0x11, 0x05, 0xbd, 0x82, 0x25, 0xc1, 0x7c, 0x16, 0xf4, 0x13,
	0x8b, 0xd9, 0x69, 0x52, 0xfe, 0xb4, 0x44, 0x47, 0xe1, 0x12, 0x7e, 0x42, 0x73, 0xfe, 0x64, 0xa4,
	0x73, 0x74, 0x3c, 0xaa, 0x37, 0xf7, 0xcb, 0xdf, 0xc4, 0x00, 0x9e, 0x73, 0x6f, 0xe8, 0x13, 0x71,
	0x7f, 0x0d, 0xb6, 0x75, 0xb9, 0xbd, 0x5f, 0x06, 0xff, 0x62, 0xc0, 0x93, 0xc4, 0xe0, 0x25, 0x0b,
	0x58, 0x40, 0xe3, 0xf8, 0x7e, 0x39, 0xfc, 0x83, 0x09, 0x3b, 0xb7, 0xde, 0x03, 0xbf, 0x97, 0xc7,
	0x37, 0x60, 0x7d, 0x75, 0xd4, 0xfe, 0xea, 0xec, 0xa4, 0x73, 0xd2, 0xcd, 0x9a, 0xdd, 0xcd, 0xc8,
	0x1c, 0x91, 0x98, 0x16, 0x1b, 0xfe, 0x24, 0xd1, 0x18, 0x85, 0x63, 0x79, 0xa2, 0x7a, 0xd4, 0x25,
	0xbe, 0xac, 0xa6, 0xaa, 0x4e, 0x96, 0xf1, 0x38, 0x30, 0x39, 0x30, 0xa5, 0xff, 0x6f, 0x60, 0x22,
	0xa8, 0xdf, 0xb5, 0x88, 0xa3, 0xd3, 0xec, 0x15, 0x5b, 0x0e, 0x51, 0x7d, 0xfa, 0x38, 0x49, 0xc6,
	0x27, 0x57, 0xb5, 0x27, 0xee, 0xd8, 0xdf, 0xa6, 0xd7, 0xf9, 0xc2, 0xf3, 0xe7, 0xa3, 0xf5, 0xf5,
	0x2f, 0x13, 0x9c, 0xdb, 0x19, 0xe8, 0x15, 0x94, 0xa9, 0x2e, 0x9e, 0xfa, 0xa0, 0xcc, 0x4e, 0x7e,
	0x41, 0x65, 0xc5, 0x29, 0x0b, 0xfd, 0x12, 0x96, 0xf4, 0x6d, 0x4a, 0x1f, 0x91, 0x4f, 0x73, 0xd7,
	0x81, 0x59, 0x95, 0x0f, 0x27, 0x1c, 0x69, 0x60, 0xa0, 0x8b, 0x8f, 0x3e, 0x0e, 0xb3, 0x06, 0x0a,
	0x2a, 0x13, 0x4e, 0x59, 0x52, 0x21, 0xb9, 0x8c, 0xa9, 0xbb, 0x7f, 0x5e, 0xa1, 0xa0, 0x74, 0xe0,
	0x94, 0x85, 0x9a, 0x50, 0x89, 0x93, 0xed, 0x6b, 0x2f, 0x28, 0x89, 0x1f, 0x66, 0x25, 0x0a, 0x36,
	0x37, 0x1e, 0xf3, 0x9c, 0x7f, 0x1b, 0xe9, 0x4e, 0x2b, 0x3e, 0xbe, 0xd0, 0x33, 0x28, 0x79, 0x44,
	0x10, 0xfd, 0xa9, 0xa8, 0xd1, 0x69, 0xb7, 0x1a, 0x12, 0x86, 0x69, 0x8f, 0x46, 0x34, 0x70, 0x29,
	0x56, 0x79, 0xb4, 0x0f, 0x30, 0x60, 0xe1, 0x80, 0x84, 0x0a, 0x5d, 0x2a, 0x44, 0x4f, 0xa0, 0xd0,
	0x01, 0xac, 0xc8, 0xbf, 0x17, 0x24, 0xa6, 0x5d, 0x45, 0x1b, 0x4d, 0xe8, 0xaa, 0xa2, 0x8d, 0x29,
	0xcb, 0x09, 0x48, 0x2a, 0xa1, 0x97, 0xf0, 0x30, 0x25, 0x4d, 0xf4, 0x68, 0xce, 0xa4, 0xa2, 0x04,
	0x7a, 0x9e, 0x22, 0x1d, 0x01, 0x9f, 0xdd, 0x65, 0x87, 0xcb, 0x5b, 0x42, 0xec, 0x12, 0x3f, 0x59,
	0x66, 0x1f, 0xbc, 0x25, 0x28, 0x20, 0xda, 0x84, 0x72, 0xc4, 0x05, 0x49, 0x6f, 0x5f, 0x26, 0x4e,
	0xdb, 0xce, 0x7f, 0xe7, 0xd3, 0xbd, 0x54, 0xdc, 0xe5, 0xab, 0x6c, 0x59, 0xfb, 0x2e, 0xf5, 0x48,
	0x17, 0xb7, 0x9f, 0x40, 0x49, 0x3e, 0x5f, 0x55, 0xf7, 0xab, 0xfb, 0x1b, 0x23, 0x81, 0x0c, 0x41,
	0x6e, 0x5e, 0xac, 0x40, 0x12, 0xfc, 0x2e, 0x22, 0xa1, 0x7e, 0xb8, 0xce, 0x02, 0x7f, 0x1d, 0x91,
	0x10, 0x2b, 0x90, 0x04, 0xf7, 0xe4, 0x4d, 0xbe, 0x54, 0x08, 0x3e, 0x25, 0x72, 0x35, 0x48, 0x10,
	0x7a, 0x0e, 0x95, 0xeb, 0xf4, 0xd1, 0xb7, 0xa0, 0x18, 0x5b, 0x33, 0x18, 0xbf, 0x6d, 0x69, 0x0c,
	0x1e, 0xc3, 0x25, 0xf7, 0x26, 0xe5, 0x2e, 0x16, 0x72, 0x7f, 0x37, 0xe6, 0xa6, 0x70, 0xf9, 0x6a,
	0x88, 0x5d, 0x1e, 0x08, 0x16, 0x0c, 0xe5, 0xc3, 0x66, 0x49, 0xb1, 0xb7, 0x67, 0xb0, 0x9b, 0x29,
	0x08, 0x4f, 0x32, 0xa4, 0x80, 0x98, 0x10, 0x28, 0xdf, 0x49, 0x60, 0x82, 0x21, 0xdf, 0x9e, 0x11,
	0xbd, 0xa2, 0xc4, 0x57, 0x4f, 0x96, 0x32, 0xd6, 0x2d, 0xe7, 0x4b, 0x58, 0x9b, 0xb5, 0x74, 0xd0,
	0x32, 0x18, 0xd7, 0x6a, 0xba, 0x4d, 0x6c, 0x5c, 0xcb, 0xd6, 0x8d, 0x7a, 0x4f, 0x9a, 0xd8, 0xb8,
	0x91, 0xad, 0xf7, 0xfa, 0x09, 0x6b, 0xbc, 0x97, 0xad, 0x77, 0xfa, 0xdd, 0x6a, 0xbc, 0xdb, 0x3d,
	0x83, 0x07, 0x53, 0xd3, 0x8a, 0x1e, 0xc1, 0x0f, 0x44, 0x3e, 0xf8, 0x25, 0x0f, 0xa8, 0x35, 0x87,
	0xb6, 0xc0, 0x9e, 0x4a, 0x75, 0x88, 0xef, 0xd3, 0x58, 0x58, 0xc6, 0xee, 0xdb, 0x9c, 0xda, 0xe9,
	0xe8, 0x71, 0xb6, 0x26, 0xf2, 0xc1, 0x43, 0xdf, 0xb7, 0xe6, 0xd0, 0x0e, 0x6c, 0x4f, 0x65, 0x3a,
	0x3c, 0x3c, 0x0c, 0xbc, 0x23, 0x2e, 0x04, 0x1f, 0x58, 0xc6, 0x94, 0x15, 0x09, 0x69, 0x33, 0x8f,
	0x5a, 0xe6, 0x2e, 0xce, 0x75, 0x26, 0x17, 0x19, 0x7a, 0x0c, 0x9b, 0x22, 0x1f, 0x6c, 0x45, 0xfc,
	0x5b, 0xea, 0x0a, 0xea, 0x59, 0x73, 0x68, 0x1b, 0x1e, 0x4d, 0xe5, 0xa5, 0xa6, 0xfc, 0x6b, 0x19,
	0xbb, 0xbf, 0x87, 0xf5, 0xd9, 0x2b, 0x6b, 0x4a, 0x38, 0xcd, 0x9c, 0xd1, 0x9e, 0xb0, 0xe6, 0x50,
	0x0d, 0xb6, 0x66, 0xe7, 0x9b, 0x34, 0x10, 0x34, 0xb2, 0x0c, 0xf4, 0x04, 0x3e, 0x9d, 0x8d, 0xc0,
	0xf2, 0x3c, 0xb4, 0xcc, 0xa9, 0xce, 0xd3, 0xa5, 0x39, 0xe5, 0x3a, 0xcd, 0x74, 0x78, 0x38, 0xa3,
	0xef, 0x34, 0x7d, 0xce, 0x3c, 0xcf, 0xa7, 0x96, 0x51, 0x8c, 0xd0, 0x03, 0x6d, 0xee, 0xfe, 0xd5,
	0x80, 0x8d, 0x82, 0x95, 0x39, 0xe5, 0x7c, 0x9c, 0xd2, 0xab, 0x22, 0x3f, 0x91, 0x63, 0xc0, 0xe7,
	0x3e, 0xbf, 0x20, 0xbe, 0x65, 0x7c, 0x00, 0xd2, 0x56, 0x3f, 0x58, 0x59, 0x26, 0x7a, 0x0a, 0x4f,
	0x0a, 0x20, 0xbf, 0x62, 0x42, 0xd0, 0x88, 0x7a, 0xd6, 0xfc, 0xee, 0xdf, 0x0c, 0xb0, 0xf2, 0x3f,
	0x8a, 0xc9, 0xf1, 0xe9, 0xe5, 0x62, 0x6f, 0x02, 0x8f, 0xf6, 0x58, 0xa0, 0x26, 0xdd, 0x86, 0xb5,
	0x7c, 0xfa, 0x30, 0xa2, 0xc4, 0x32, 0xd0, 0x06, 0x3c, 0xcc, 0x67, 0x8e, 0x48, 0x64, 0x99, 0x68,
	0x13, 0xd6, 0xf3, 0x89, 0x26, 0xf7, 0x87, 0x83, 0xc0, 0x9a, 0x9f, 0x25, 0x77, 0xc6, 0x02, 0x6a,
	0x95, 0x66, 0xc9, 0xb5, 0x18, 0xb5, 0x16, 0x9e, 0x1f, 0xc1, 0xa2, 0x4c, 0x1c, 0x78, 0xc8, 0x6a,
	0x74, 0xda, 0xc7, 0x8d, 0x89, 0x9f, 0x1a, 0x6d, 0x4f, 0x9d, 0x0b, 0x76, 0xee, 0x81, 0x9d, 0xe6,
	0xb1, 0x66, 0x1e, 0xd5, 0xbf, 0x79, 0xd6, 0x67, 0xe2, 0x72, 0x78, 0xd1, 0x70, 0xf9, 0x60, 0xef,
	0x3d, 0x1b, 0x5c, 0x90, 0x0b, 0xc2, 0xf7, 0x3c, 0xee, 0xba, 0x3c, 0xb8, 0xda, 0x63, 0x5f, 0xf3,
	0xe8, 0xed, 0x9e, 0x14, 0xf9, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x16, 0xe4, 0x72, 0x81,
	0x15, 0x00, 0x00,
}
