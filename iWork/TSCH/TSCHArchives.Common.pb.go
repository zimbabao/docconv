// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSCHArchives.Common.proto

package TSCH

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChartType int32

const (
	ChartType_undefinedChartType          ChartType = 0
	ChartType_columnChartType2D           ChartType = 1
	ChartType_barChartType2D              ChartType = 2
	ChartType_lineChartType2D             ChartType = 3
	ChartType_areaChartType2D             ChartType = 4
	ChartType_pieChartType2D              ChartType = 5
	ChartType_stackedColumnChartType2D    ChartType = 6
	ChartType_stackedBarChartType2D       ChartType = 7
	ChartType_stackedAreaChartType2D      ChartType = 8
	ChartType_scatterChartType2D          ChartType = 9
	ChartType_mixedChartType2D            ChartType = 10
	ChartType_twoAxisChartType2D          ChartType = 11
	ChartType_columnChartType3D           ChartType = 12
	ChartType_barChartType3D              ChartType = 13
	ChartType_lineChartType3D             ChartType = 14
	ChartType_areaChartType3D             ChartType = 15
	ChartType_pieChartType3D              ChartType = 16
	ChartType_stackedColumnChartType3D    ChartType = 17
	ChartType_stackedBarChartType3D       ChartType = 18
	ChartType_stackedAreaChartType3D      ChartType = 19
	ChartType_multiDataColumnChartType2D  ChartType = 20
	ChartType_multiDataBarChartType2D     ChartType = 21
	ChartType_bubbleChartType2D           ChartType = 22
	ChartType_multiDataScatterChartType2D ChartType = 23
	ChartType_multiDataBubbleChartType2D  ChartType = 24
)

var ChartType_name = map[int32]string{
	0:  "undefinedChartType",
	1:  "columnChartType2D",
	2:  "barChartType2D",
	3:  "lineChartType2D",
	4:  "areaChartType2D",
	5:  "pieChartType2D",
	6:  "stackedColumnChartType2D",
	7:  "stackedBarChartType2D",
	8:  "stackedAreaChartType2D",
	9:  "scatterChartType2D",
	10: "mixedChartType2D",
	11: "twoAxisChartType2D",
	12: "columnChartType3D",
	13: "barChartType3D",
	14: "lineChartType3D",
	15: "areaChartType3D",
	16: "pieChartType3D",
	17: "stackedColumnChartType3D",
	18: "stackedBarChartType3D",
	19: "stackedAreaChartType3D",
	20: "multiDataColumnChartType2D",
	21: "multiDataBarChartType2D",
	22: "bubbleChartType2D",
	23: "multiDataScatterChartType2D",
	24: "multiDataBubbleChartType2D",
}

var ChartType_value = map[string]int32{
	"undefinedChartType":          0,
	"columnChartType2D":           1,
	"barChartType2D":              2,
	"lineChartType2D":             3,
	"areaChartType2D":             4,
	"pieChartType2D":              5,
	"stackedColumnChartType2D":    6,
	"stackedBarChartType2D":       7,
	"stackedAreaChartType2D":      8,
	"scatterChartType2D":          9,
	"mixedChartType2D":            10,
	"twoAxisChartType2D":          11,
	"columnChartType3D":           12,
	"barChartType3D":              13,
	"lineChartType3D":             14,
	"areaChartType3D":             15,
	"pieChartType3D":              16,
	"stackedColumnChartType3D":    17,
	"stackedBarChartType3D":       18,
	"stackedAreaChartType3D":      19,
	"multiDataColumnChartType2D":  20,
	"multiDataBarChartType2D":     21,
	"bubbleChartType2D":           22,
	"multiDataScatterChartType2D": 23,
	"multiDataBubbleChartType2D":  24,
}

func (x ChartType) Enum() *ChartType {
	p := new(ChartType)
	*p = x
	return p
}

func (x ChartType) String() string {
	return proto.EnumName(ChartType_name, int32(x))
}

func (x *ChartType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChartType_value, data, "ChartType")
	if err != nil {
		return err
	}
	*x = ChartType(value)
	return nil
}

func (ChartType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{0}
}

type AxisType int32

const (
	AxisType_axis_type_unknown AxisType = 0
	AxisType_axis_type_x       AxisType = 1
	AxisType_axis_type_y       AxisType = 2
	AxisType_axis_type_pie     AxisType = 3
	AxisType_axis_type_size    AxisType = 4
)

var AxisType_name = map[int32]string{
	0: "axis_type_unknown",
	1: "axis_type_x",
	2: "axis_type_y",
	3: "axis_type_pie",
	4: "axis_type_size",
}

var AxisType_value = map[string]int32{
	"axis_type_unknown": 0,
	"axis_type_x":       1,
	"axis_type_y":       2,
	"axis_type_pie":     3,
	"axis_type_size":    4,
}

func (x AxisType) Enum() *AxisType {
	p := new(AxisType)
	*p = x
	return p
}

func (x AxisType) String() string {
	return proto.EnumName(AxisType_name, int32(x))
}

func (x *AxisType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AxisType_value, data, "AxisType")
	if err != nil {
		return err
	}
	*x = AxisType(value)
	return nil
}

func (AxisType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{1}
}

type ScatterFormat int32

const (
	ScatterFormat_scatter_format_unknown    ScatterFormat = 0
	ScatterFormat_scatter_format_separate_x ScatterFormat = 1
	ScatterFormat_scatter_format_shared_x   ScatterFormat = 2
)

var ScatterFormat_name = map[int32]string{
	0: "scatter_format_unknown",
	1: "scatter_format_separate_x",
	2: "scatter_format_shared_x",
}

var ScatterFormat_value = map[string]int32{
	"scatter_format_unknown":    0,
	"scatter_format_separate_x": 1,
	"scatter_format_shared_x":   2,
}

func (x ScatterFormat) Enum() *ScatterFormat {
	p := new(ScatterFormat)
	*p = x
	return p
}

func (x ScatterFormat) String() string {
	return proto.EnumName(ScatterFormat_name, int32(x))
}

func (x *ScatterFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ScatterFormat_value, data, "ScatterFormat")
	if err != nil {
		return err
	}
	*x = ScatterFormat(value)
	return nil
}

func (ScatterFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{2}
}

type SeriesDirection int32

const (
	SeriesDirection_series_direction_unknown   SeriesDirection = 0
	SeriesDirection_series_direction_by_row    SeriesDirection = 1
	SeriesDirection_series_direction_by_column SeriesDirection = 2
)

var SeriesDirection_name = map[int32]string{
	0: "series_direction_unknown",
	1: "series_direction_by_row",
	2: "series_direction_by_column",
}

var SeriesDirection_value = map[string]int32{
	"series_direction_unknown":   0,
	"series_direction_by_row":    1,
	"series_direction_by_column": 2,
}

func (x SeriesDirection) Enum() *SeriesDirection {
	p := new(SeriesDirection)
	*p = x
	return p
}

func (x SeriesDirection) String() string {
	return proto.EnumName(SeriesDirection_name, int32(x))
}

func (x *SeriesDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SeriesDirection_value, data, "SeriesDirection")
	if err != nil {
		return err
	}
	*x = SeriesDirection(value)
	return nil
}

func (SeriesDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{3}
}

type NumberValueType int32

const (
	NumberValueType_numberValueTypeDecimal    NumberValueType = 0
	NumberValueType_numberValueTypeCurrency   NumberValueType = 1
	NumberValueType_numberValueTypePercentage NumberValueType = 2
	NumberValueType_numberValueTypeScientific NumberValueType = 3
	NumberValueType_numberValueTypeFraction   NumberValueType = 4
	NumberValueType_numberValueTypeBase       NumberValueType = 5
	NumberValueType_numberValueTypeUnknown    NumberValueType = -999
)

var NumberValueType_name = map[int32]string{
	0:    "numberValueTypeDecimal",
	1:    "numberValueTypeCurrency",
	2:    "numberValueTypePercentage",
	3:    "numberValueTypeScientific",
	4:    "numberValueTypeFraction",
	5:    "numberValueTypeBase",
	-999: "numberValueTypeUnknown",
}

var NumberValueType_value = map[string]int32{
	"numberValueTypeDecimal":    0,
	"numberValueTypeCurrency":   1,
	"numberValueTypePercentage": 2,
	"numberValueTypeScientific": 3,
	"numberValueTypeFraction":   4,
	"numberValueTypeBase":       5,
	"numberValueTypeUnknown":    -999,
}

func (x NumberValueType) Enum() *NumberValueType {
	p := new(NumberValueType)
	*p = x
	return p
}

func (x NumberValueType) String() string {
	return proto.EnumName(NumberValueType_name, int32(x))
}

func (x *NumberValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NumberValueType_value, data, "NumberValueType")
	if err != nil {
		return err
	}
	*x = NumberValueType(value)
	return nil
}

func (NumberValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{4}
}

type NegativeNumberStyle int32

const (
	NegativeNumberStyle_negativeNumberStyleMinus             NegativeNumberStyle = 0
	NegativeNumberStyle_negativeNumberStyleRed               NegativeNumberStyle = 1
	NegativeNumberStyle_negativeNumberStyleParentheses       NegativeNumberStyle = 2
	NegativeNumberStyle_negativeNumberStyleRedAndParentheses NegativeNumberStyle = 3
	NegativeNumberStyle_negativeNumberStyleNone              NegativeNumberStyle = 4
)

var NegativeNumberStyle_name = map[int32]string{
	0: "negativeNumberStyleMinus",
	1: "negativeNumberStyleRed",
	2: "negativeNumberStyleParentheses",
	3: "negativeNumberStyleRedAndParentheses",
	4: "negativeNumberStyleNone",
}

var NegativeNumberStyle_value = map[string]int32{
	"negativeNumberStyleMinus":             0,
	"negativeNumberStyleRed":               1,
	"negativeNumberStyleParentheses":       2,
	"negativeNumberStyleRedAndParentheses": 3,
	"negativeNumberStyleNone":              4,
}

func (x NegativeNumberStyle) Enum() *NegativeNumberStyle {
	p := new(NegativeNumberStyle)
	*p = x
	return p
}

func (x NegativeNumberStyle) String() string {
	return proto.EnumName(NegativeNumberStyle_name, int32(x))
}

func (x *NegativeNumberStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NegativeNumberStyle_value, data, "NegativeNumberStyle")
	if err != nil {
		return err
	}
	*x = NegativeNumberStyle(value)
	return nil
}

func (NegativeNumberStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{5}
}

type FractionAccuracy int32

const (
	FractionAccuracy_fractionAccuracyConflicting     FractionAccuracy = 0
	FractionAccuracy_fractionAccuracyUpToOneDigit    FractionAccuracy = -1
	FractionAccuracy_fractionAccuracyUpToTwoDigits   FractionAccuracy = -2
	FractionAccuracy_fractionAccuracyUpToThreeDigits FractionAccuracy = -3
	FractionAccuracy_fractionAccuracyHalves          FractionAccuracy = 2
	FractionAccuracy_fractionAccuracyQuarters        FractionAccuracy = 4
	FractionAccuracy_fractionAccuracyEighths         FractionAccuracy = 8
	FractionAccuracy_fractionAccuracySixteenths      FractionAccuracy = 16
	FractionAccuracy_fractionAccuracyTenths          FractionAccuracy = 10
	FractionAccuracy_fractionAccuracyHundredths      FractionAccuracy = 100
)

var FractionAccuracy_name = map[int32]string{
	0:   "fractionAccuracyConflicting",
	-1:  "fractionAccuracyUpToOneDigit",
	-2:  "fractionAccuracyUpToTwoDigits",
	-3:  "fractionAccuracyUpToThreeDigits",
	2:   "fractionAccuracyHalves",
	4:   "fractionAccuracyQuarters",
	8:   "fractionAccuracyEighths",
	16:  "fractionAccuracySixteenths",
	10:  "fractionAccuracyTenths",
	100: "fractionAccuracyHundredths",
}

var FractionAccuracy_value = map[string]int32{
	"fractionAccuracyConflicting":     0,
	"fractionAccuracyUpToOneDigit":    -1,
	"fractionAccuracyUpToTwoDigits":   -2,
	"fractionAccuracyUpToThreeDigits": -3,
	"fractionAccuracyHalves":          2,
	"fractionAccuracyQuarters":        4,
	"fractionAccuracyEighths":         8,
	"fractionAccuracySixteenths":      16,
	"fractionAccuracyTenths":          10,
	"fractionAccuracyHundredths":      100,
}

func (x FractionAccuracy) Enum() *FractionAccuracy {
	p := new(FractionAccuracy)
	*p = x
	return p
}

func (x FractionAccuracy) String() string {
	return proto.EnumName(FractionAccuracy_name, int32(x))
}

func (x *FractionAccuracy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FractionAccuracy_value, data, "FractionAccuracy")
	if err != nil {
		return err
	}
	*x = FractionAccuracy(value)
	return nil
}

func (FractionAccuracy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{6}
}

type SparseReferenceArrayArchive struct {
	NumEntries           *uint32                              `protobuf:"varint,1,req,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	Entries              []*SparseReferenceArrayArchive_Entry `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *SparseReferenceArrayArchive) Reset()         { *m = SparseReferenceArrayArchive{} }
func (m *SparseReferenceArrayArchive) String() string { return proto.CompactTextString(m) }
func (*SparseReferenceArrayArchive) ProtoMessage()    {}
func (*SparseReferenceArrayArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{0}
}

func (m *SparseReferenceArrayArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SparseReferenceArrayArchive.Unmarshal(m, b)
}
func (m *SparseReferenceArrayArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SparseReferenceArrayArchive.Marshal(b, m, deterministic)
}
func (m *SparseReferenceArrayArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SparseReferenceArrayArchive.Merge(m, src)
}
func (m *SparseReferenceArrayArchive) XXX_Size() int {
	return xxx_messageInfo_SparseReferenceArrayArchive.Size(m)
}
func (m *SparseReferenceArrayArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SparseReferenceArrayArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SparseReferenceArrayArchive proto.InternalMessageInfo

func (m *SparseReferenceArrayArchive) GetNumEntries() uint32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *SparseReferenceArrayArchive) GetEntries() []*SparseReferenceArrayArchive_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type SparseReferenceArrayArchive_Entry struct {
	Index                *uint32        `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Value                *TSP.Reference `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SparseReferenceArrayArchive_Entry) Reset()         { *m = SparseReferenceArrayArchive_Entry{} }
func (m *SparseReferenceArrayArchive_Entry) String() string { return proto.CompactTextString(m) }
func (*SparseReferenceArrayArchive_Entry) ProtoMessage()    {}
func (*SparseReferenceArrayArchive_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{0, 0}
}

func (m *SparseReferenceArrayArchive_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SparseReferenceArrayArchive_Entry.Unmarshal(m, b)
}
func (m *SparseReferenceArrayArchive_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SparseReferenceArrayArchive_Entry.Marshal(b, m, deterministic)
}
func (m *SparseReferenceArrayArchive_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SparseReferenceArrayArchive_Entry.Merge(m, src)
}
func (m *SparseReferenceArrayArchive_Entry) XXX_Size() int {
	return xxx_messageInfo_SparseReferenceArrayArchive_Entry.Size(m)
}
func (m *SparseReferenceArrayArchive_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_SparseReferenceArrayArchive_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_SparseReferenceArrayArchive_Entry proto.InternalMessageInfo

func (m *SparseReferenceArrayArchive_Entry) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SparseReferenceArrayArchive_Entry) GetValue() *TSP.Reference {
	if m != nil {
		return m.Value
	}
	return nil
}

type RectArchive struct {
	Origin               *TSP.Point `protobuf:"bytes,1,req,name=origin" json:"origin,omitempty"`
	Size                 *TSP.Size  `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RectArchive) Reset()         { *m = RectArchive{} }
func (m *RectArchive) String() string { return proto.CompactTextString(m) }
func (*RectArchive) ProtoMessage()    {}
func (*RectArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{1}
}

func (m *RectArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RectArchive.Unmarshal(m, b)
}
func (m *RectArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RectArchive.Marshal(b, m, deterministic)
}
func (m *RectArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RectArchive.Merge(m, src)
}
func (m *RectArchive) XXX_Size() int {
	return xxx_messageInfo_RectArchive.Size(m)
}
func (m *RectArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RectArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RectArchive proto.InternalMessageInfo

func (m *RectArchive) GetOrigin() *TSP.Point {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *RectArchive) GetSize() *TSP.Size {
	if m != nil {
		return m.Size
	}
	return nil
}

type ChartsNSNumberDoubleArchive struct {
	NumberArchive        *float64 `protobuf:"fixed64,1,opt,name=number_archive,json=numberArchive" json:"number_archive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChartsNSNumberDoubleArchive) Reset()         { *m = ChartsNSNumberDoubleArchive{} }
func (m *ChartsNSNumberDoubleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartsNSNumberDoubleArchive) ProtoMessage()    {}
func (*ChartsNSNumberDoubleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{2}
}

func (m *ChartsNSNumberDoubleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartsNSNumberDoubleArchive.Unmarshal(m, b)
}
func (m *ChartsNSNumberDoubleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartsNSNumberDoubleArchive.Marshal(b, m, deterministic)
}
func (m *ChartsNSNumberDoubleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartsNSNumberDoubleArchive.Merge(m, src)
}
func (m *ChartsNSNumberDoubleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartsNSNumberDoubleArchive.Size(m)
}
func (m *ChartsNSNumberDoubleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartsNSNumberDoubleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartsNSNumberDoubleArchive proto.InternalMessageInfo

func (m *ChartsNSNumberDoubleArchive) GetNumberArchive() float64 {
	if m != nil && m.NumberArchive != nil {
		return *m.NumberArchive
	}
	return 0
}

type ChartsNSArrayOfNSNumberDoubleArchive struct {
	Numbers              []float64 `protobuf:"fixed64,1,rep,name=numbers" json:"numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChartsNSArrayOfNSNumberDoubleArchive) Reset()         { *m = ChartsNSArrayOfNSNumberDoubleArchive{} }
func (m *ChartsNSArrayOfNSNumberDoubleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartsNSArrayOfNSNumberDoubleArchive) ProtoMessage()    {}
func (*ChartsNSArrayOfNSNumberDoubleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{3}
}

func (m *ChartsNSArrayOfNSNumberDoubleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive.Unmarshal(m, b)
}
func (m *ChartsNSArrayOfNSNumberDoubleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive.Marshal(b, m, deterministic)
}
func (m *ChartsNSArrayOfNSNumberDoubleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive.Merge(m, src)
}
func (m *ChartsNSArrayOfNSNumberDoubleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive.Size(m)
}
func (m *ChartsNSArrayOfNSNumberDoubleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartsNSArrayOfNSNumberDoubleArchive proto.InternalMessageInfo

func (m *ChartsNSArrayOfNSNumberDoubleArchive) GetNumbers() []float64 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

type DEPRECATEDChart3DFillArchive struct {
	Fill                 *TSD.FillArchive             `protobuf:"bytes,1,opt,name=fill" json:"fill,omitempty"`
	Lightingmodel        *Chart3DLightingModelArchive `protobuf:"bytes,2,opt,name=lightingmodel" json:"lightingmodel,omitempty"`
	TexturesetId         *string                      `protobuf:"bytes,3,opt,name=textureset_id,json=texturesetId" json:"textureset_id,omitempty"`
	FillType             *FillPropertyType            `protobuf:"varint,4,opt,name=fill_type,json=fillType,enum=TSCH.FillPropertyType" json:"fill_type,omitempty"`
	SeriesIndex          *uint32                      `protobuf:"varint,5,opt,name=series_index,json=seriesIndex" json:"series_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DEPRECATEDChart3DFillArchive) Reset()         { *m = DEPRECATEDChart3DFillArchive{} }
func (m *DEPRECATEDChart3DFillArchive) String() string { return proto.CompactTextString(m) }
func (*DEPRECATEDChart3DFillArchive) ProtoMessage()    {}
func (*DEPRECATEDChart3DFillArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{4}
}

func (m *DEPRECATEDChart3DFillArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DEPRECATEDChart3DFillArchive.Unmarshal(m, b)
}
func (m *DEPRECATEDChart3DFillArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DEPRECATEDChart3DFillArchive.Marshal(b, m, deterministic)
}
func (m *DEPRECATEDChart3DFillArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DEPRECATEDChart3DFillArchive.Merge(m, src)
}
func (m *DEPRECATEDChart3DFillArchive) XXX_Size() int {
	return xxx_messageInfo_DEPRECATEDChart3DFillArchive.Size(m)
}
func (m *DEPRECATEDChart3DFillArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DEPRECATEDChart3DFillArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DEPRECATEDChart3DFillArchive proto.InternalMessageInfo

func (m *DEPRECATEDChart3DFillArchive) GetFill() *TSD.FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *DEPRECATEDChart3DFillArchive) GetLightingmodel() *Chart3DLightingModelArchive {
	if m != nil {
		return m.Lightingmodel
	}
	return nil
}

func (m *DEPRECATEDChart3DFillArchive) GetTexturesetId() string {
	if m != nil && m.TexturesetId != nil {
		return *m.TexturesetId
	}
	return ""
}

func (m *DEPRECATEDChart3DFillArchive) GetFillType() FillPropertyType {
	if m != nil && m.FillType != nil {
		return *m.FillType
	}
	return FillPropertyType_fillPropertyTypeUndefined
}

func (m *DEPRECATEDChart3DFillArchive) GetSeriesIndex() uint32 {
	if m != nil && m.SeriesIndex != nil {
		return *m.SeriesIndex
	}
	return 0
}

type ChartStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartStyleArchive) Reset()         { *m = ChartStyleArchive{} }
func (m *ChartStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartStyleArchive) ProtoMessage()    {}
func (*ChartStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{5}
}

var extRange_ChartStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartStyleArchive
}

func (m *ChartStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartStyleArchive.Unmarshal(m, b)
}
func (m *ChartStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartStyleArchive.Merge(m, src)
}
func (m *ChartStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartStyleArchive.Size(m)
}
func (m *ChartStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartStyleArchive proto.InternalMessageInfo

func (m *ChartStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartNonStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartNonStyleArchive) Reset()         { *m = ChartNonStyleArchive{} }
func (m *ChartNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartNonStyleArchive) ProtoMessage()    {}
func (*ChartNonStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{6}
}

var extRange_ChartNonStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartNonStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartNonStyleArchive
}

func (m *ChartNonStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartNonStyleArchive.Unmarshal(m, b)
}
func (m *ChartNonStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartNonStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartNonStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartNonStyleArchive.Merge(m, src)
}
func (m *ChartNonStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartNonStyleArchive.Size(m)
}
func (m *ChartNonStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartNonStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartNonStyleArchive proto.InternalMessageInfo

func (m *ChartNonStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type LegendStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *LegendStyleArchive) Reset()         { *m = LegendStyleArchive{} }
func (m *LegendStyleArchive) String() string { return proto.CompactTextString(m) }
func (*LegendStyleArchive) ProtoMessage()    {}
func (*LegendStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{7}
}

var extRange_LegendStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*LegendStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_LegendStyleArchive
}

func (m *LegendStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegendStyleArchive.Unmarshal(m, b)
}
func (m *LegendStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegendStyleArchive.Marshal(b, m, deterministic)
}
func (m *LegendStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegendStyleArchive.Merge(m, src)
}
func (m *LegendStyleArchive) XXX_Size() int {
	return xxx_messageInfo_LegendStyleArchive.Size(m)
}
func (m *LegendStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LegendStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LegendStyleArchive proto.InternalMessageInfo

func (m *LegendStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type LegendNonStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *LegendNonStyleArchive) Reset()         { *m = LegendNonStyleArchive{} }
func (m *LegendNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*LegendNonStyleArchive) ProtoMessage()    {}
func (*LegendNonStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{8}
}

var extRange_LegendNonStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*LegendNonStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_LegendNonStyleArchive
}

func (m *LegendNonStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LegendNonStyleArchive.Unmarshal(m, b)
}
func (m *LegendNonStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LegendNonStyleArchive.Marshal(b, m, deterministic)
}
func (m *LegendNonStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegendNonStyleArchive.Merge(m, src)
}
func (m *LegendNonStyleArchive) XXX_Size() int {
	return xxx_messageInfo_LegendNonStyleArchive.Size(m)
}
func (m *LegendNonStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LegendNonStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LegendNonStyleArchive proto.InternalMessageInfo

func (m *LegendNonStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartAxisStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartAxisStyleArchive) Reset()         { *m = ChartAxisStyleArchive{} }
func (m *ChartAxisStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisStyleArchive) ProtoMessage()    {}
func (*ChartAxisStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{9}
}

var extRange_ChartAxisStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartAxisStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartAxisStyleArchive
}

func (m *ChartAxisStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisStyleArchive.Unmarshal(m, b)
}
func (m *ChartAxisStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisStyleArchive.Merge(m, src)
}
func (m *ChartAxisStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisStyleArchive.Size(m)
}
func (m *ChartAxisStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisStyleArchive proto.InternalMessageInfo

func (m *ChartAxisStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartAxisNonStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartAxisNonStyleArchive) Reset()         { *m = ChartAxisNonStyleArchive{} }
func (m *ChartAxisNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartAxisNonStyleArchive) ProtoMessage()    {}
func (*ChartAxisNonStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{10}
}

var extRange_ChartAxisNonStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartAxisNonStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartAxisNonStyleArchive
}

func (m *ChartAxisNonStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartAxisNonStyleArchive.Unmarshal(m, b)
}
func (m *ChartAxisNonStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartAxisNonStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartAxisNonStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartAxisNonStyleArchive.Merge(m, src)
}
func (m *ChartAxisNonStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartAxisNonStyleArchive.Size(m)
}
func (m *ChartAxisNonStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartAxisNonStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartAxisNonStyleArchive proto.InternalMessageInfo

func (m *ChartAxisNonStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartSeriesStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartSeriesStyleArchive) Reset()         { *m = ChartSeriesStyleArchive{} }
func (m *ChartSeriesStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSeriesStyleArchive) ProtoMessage()    {}
func (*ChartSeriesStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{11}
}

var extRange_ChartSeriesStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartSeriesStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartSeriesStyleArchive
}

func (m *ChartSeriesStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSeriesStyleArchive.Unmarshal(m, b)
}
func (m *ChartSeriesStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSeriesStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartSeriesStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSeriesStyleArchive.Merge(m, src)
}
func (m *ChartSeriesStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSeriesStyleArchive.Size(m)
}
func (m *ChartSeriesStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSeriesStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSeriesStyleArchive proto.InternalMessageInfo

func (m *ChartSeriesStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ChartSeriesNonStyleArchive struct {
	Super                        *TSS.StyleArchive `protobuf:"bytes,1,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}          `json:"-"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
	XXX_sizecache                int32  `json:"-"`
}

func (m *ChartSeriesNonStyleArchive) Reset()         { *m = ChartSeriesNonStyleArchive{} }
func (m *ChartSeriesNonStyleArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSeriesNonStyleArchive) ProtoMessage()    {}
func (*ChartSeriesNonStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c922277064cda22, []int{12}
}

var extRange_ChartSeriesNonStyleArchive = []proto.ExtensionRange{
	{Start: 10000, End: 536870911},
}

func (*ChartSeriesNonStyleArchive) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChartSeriesNonStyleArchive
}

func (m *ChartSeriesNonStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSeriesNonStyleArchive.Unmarshal(m, b)
}
func (m *ChartSeriesNonStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSeriesNonStyleArchive.Marshal(b, m, deterministic)
}
func (m *ChartSeriesNonStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSeriesNonStyleArchive.Merge(m, src)
}
func (m *ChartSeriesNonStyleArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSeriesNonStyleArchive.Size(m)
}
func (m *ChartSeriesNonStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSeriesNonStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSeriesNonStyleArchive proto.InternalMessageInfo

func (m *ChartSeriesNonStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func init() {
	proto.RegisterEnum("TSCH.ChartType", ChartType_name, ChartType_value)
	proto.RegisterEnum("TSCH.AxisType", AxisType_name, AxisType_value)
	proto.RegisterEnum("TSCH.ScatterFormat", ScatterFormat_name, ScatterFormat_value)
	proto.RegisterEnum("TSCH.SeriesDirection", SeriesDirection_name, SeriesDirection_value)
	proto.RegisterEnum("TSCH.NumberValueType", NumberValueType_name, NumberValueType_value)
	proto.RegisterEnum("TSCH.NegativeNumberStyle", NegativeNumberStyle_name, NegativeNumberStyle_value)
	proto.RegisterEnum("TSCH.FractionAccuracy", FractionAccuracy_name, FractionAccuracy_value)
	proto.RegisterType((*SparseReferenceArrayArchive)(nil), "TSCH.SparseReferenceArrayArchive")
	proto.RegisterType((*SparseReferenceArrayArchive_Entry)(nil), "TSCH.SparseReferenceArrayArchive.Entry")
	proto.RegisterType((*RectArchive)(nil), "TSCH.RectArchive")
	proto.RegisterType((*ChartsNSNumberDoubleArchive)(nil), "TSCH.ChartsNSNumberDoubleArchive")
	proto.RegisterType((*ChartsNSArrayOfNSNumberDoubleArchive)(nil), "TSCH.ChartsNSArrayOfNSNumberDoubleArchive")
	proto.RegisterType((*DEPRECATEDChart3DFillArchive)(nil), "TSCH.DEPRECATEDChart3DFillArchive")
	proto.RegisterType((*ChartStyleArchive)(nil), "TSCH.ChartStyleArchive")
	proto.RegisterType((*ChartNonStyleArchive)(nil), "TSCH.ChartNonStyleArchive")
	proto.RegisterType((*LegendStyleArchive)(nil), "TSCH.LegendStyleArchive")
	proto.RegisterType((*LegendNonStyleArchive)(nil), "TSCH.LegendNonStyleArchive")
	proto.RegisterType((*ChartAxisStyleArchive)(nil), "TSCH.ChartAxisStyleArchive")
	proto.RegisterType((*ChartAxisNonStyleArchive)(nil), "TSCH.ChartAxisNonStyleArchive")
	proto.RegisterType((*ChartSeriesStyleArchive)(nil), "TSCH.ChartSeriesStyleArchive")
	proto.RegisterType((*ChartSeriesNonStyleArchive)(nil), "TSCH.ChartSeriesNonStyleArchive")
}

func init() { proto.RegisterFile("TSCHArchives.Common.proto", fileDescriptor_9c922277064cda22) }

var fileDescriptor_9c922277064cda22 = []byte{
	// 1254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x72, 0xda, 0x46,
	0x18, 0xb5, 0x64, 0x9c, 0xd8, 0x1f, 0xc1, 0x5e, 0xaf, 0xff, 0x88, 0xed, 0x24, 0x0e, 0x71, 0x1b,
	0xca, 0x74, 0xf0, 0x0c, 0xbc, 0x40, 0x31, 0x72, 0xe2, 0x34, 0x31, 0xa1, 0x12, 0x69, 0x67, 0x7a,
	0xc3, 0x2c, 0xd2, 0x02, 0xdb, 0x88, 0x15, 0xb3, 0x5a, 0xd9, 0x90, 0x2b, 0x5f, 0xf7, 0xaa, 0xb7,
	0x7d, 0x95, 0x3e, 0x40, 0x5f, 0xa4, 0x97, 0x7d, 0x81, 0x4e, 0x67, 0xda, 0x74, 0x76, 0xc5, 0xaf,
	0x20, 0xbd, 0x71, 0xb8, 0x82, 0x73, 0xce, 0x77, 0xbe, 0x6f, 0xcf, 0x2e, 0xd2, 0xc2, 0xc3, 0x86,
	0x53, 0xbd, 0xac, 0x08, 0xb7, 0xcb, 0xae, 0x69, 0x58, 0xac, 0x06, 0xbd, 0x5e, 0xc0, 0x8b, 0x7d,
	0x11, 0xc8, 0x00, 0xa7, 0x14, 0x75, 0xb8, 0xdd, 0x70, 0xea, 0x57, 0x34, 0x0c, 0x49, 0x87, 0x86,
	0x31, 0xa1, 0x20, 0x6b, 0x52, 0x32, 0x81, 0x9c, 0x04, 0xb4, 0xab, 0xca, 0xcb, 0x09, 0x61, 0xee,
	0x77, 0x03, 0x8e, 0x9c, 0x3e, 0x11, 0x21, 0xb5, 0x69, 0x9b, 0x0a, 0xca, 0x5d, 0x5a, 0x11, 0x82,
	0x0c, 0x47, 0x32, 0xfc, 0x04, 0xd2, 0x3c, 0xea, 0x35, 0x29, 0x97, 0x82, 0xd1, 0x30, 0x6b, 0x9c,
	0x98, 0xf9, 0x8c, 0x0d, 0x3c, 0xea, 0x5d, 0xc4, 0x08, 0xae, 0xc0, 0xfd, 0x31, 0x69, 0x9e, 0xac,
	0xe6, 0xd3, 0xa5, 0xe7, 0x45, 0xd5, 0xa8, 0xf8, 0x3f, 0xa6, 0x45, 0x55, 0x3b, 0xb4, 0xc7, 0x75,
	0x87, 0x55, 0x58, 0xd3, 0x08, 0xde, 0x85, 0x35, 0xc6, 0x3d, 0x3a, 0x18, 0xb5, 0x89, 0x7f, 0xe0,
	0x53, 0x58, 0xbb, 0x26, 0x7e, 0x44, 0xb3, 0xe6, 0x89, 0x99, 0x4f, 0x97, 0x36, 0x8b, 0x0d, 0xa7,
	0x5e, 0x9c, 0x18, 0xdb, 0x31, 0x99, 0xab, 0x43, 0xda, 0xa6, 0xae, 0x1c, 0xcf, 0x9d, 0x83, 0x7b,
	0x81, 0x60, 0x1d, 0xc6, 0xb5, 0x57, 0xba, 0x04, 0xba, 0xaa, 0x1e, 0x30, 0x2e, 0xed, 0x11, 0x83,
	0x1f, 0x41, 0x2a, 0x64, 0x1f, 0xc6, 0xbe, 0x1b, 0x5a, 0xe1, 0xb0, 0x0f, 0xd4, 0xd6, 0x70, 0xce,
	0x82, 0xa3, 0x6a, 0x97, 0x08, 0x19, 0xd6, 0x9c, 0x5a, 0xd4, 0x6b, 0x51, 0x61, 0x05, 0x51, 0xcb,
	0xa7, 0xe3, 0x0e, 0x5f, 0xc0, 0x26, 0xd7, 0x70, 0x93, 0xc4, 0x48, 0xd6, 0x38, 0x31, 0xf2, 0x86,
	0x9d, 0x89, 0xd1, 0x91, 0x2c, 0xf7, 0x0d, 0x9c, 0x8e, 0x5d, 0x74, 0x06, 0x6f, 0xdb, 0xcb, 0xed,
	0xb2, 0x70, 0x3f, 0x2e, 0x54, 0x21, 0xaf, 0xe6, 0x0d, 0x7b, 0xfc, 0x33, 0xf7, 0xb3, 0x09, 0xc7,
	0xd6, 0x45, 0xdd, 0xbe, 0xa8, 0x56, 0x1a, 0x17, 0x96, 0x36, 0x2b, 0x5b, 0x2f, 0x98, 0xef, 0x8f,
	0x4b, 0x4f, 0x21, 0xd5, 0x66, 0xbe, 0xaf, 0xfb, 0xa7, 0x4b, 0xa8, 0xd8, 0x70, 0xac, 0xe2, 0x0c,
	0x6f, 0x6b, 0x16, 0xbf, 0x84, 0x8c, 0xcf, 0x3a, 0x5d, 0xc9, 0x78, 0xa7, 0x17, 0x78, 0xd4, 0xcf,
	0x9a, 0x5a, 0xfe, 0x34, 0xde, 0xae, 0x91, 0xed, 0x9b, 0x91, 0xe2, 0x4a, 0x29, 0xc6, 0xf5, 0xf3,
	0x75, 0xf8, 0x19, 0x64, 0x24, 0x1d, 0xc8, 0x48, 0xd0, 0x90, 0xca, 0x26, 0xf3, 0xb2, 0xab, 0x27,
	0x46, 0x7e, 0xc3, 0x7e, 0x30, 0x05, 0x5f, 0x79, 0xb8, 0x0c, 0x1b, 0xaa, 0x6b, 0x53, 0x0e, 0xfb,
	0x34, 0x9b, 0x3a, 0x31, 0xf2, 0x9b, 0xa5, 0xfd, 0xb8, 0x93, 0x9a, 0xac, 0x2e, 0x82, 0x3e, 0x15,
	0x72, 0xd8, 0x18, 0xf6, 0xa9, 0xbd, 0xae, 0x84, 0xea, 0x1b, 0x7e, 0x0a, 0x0f, 0x42, 0xaa, 0x8e,
	0x44, 0x33, 0x3e, 0x06, 0x6b, 0x27, 0x46, 0x3e, 0x63, 0xa7, 0x63, 0xec, 0x95, 0x82, 0x72, 0x2f,
	0x61, 0x5b, 0x8f, 0xea, 0xc8, 0xe1, 0x34, 0xbb, 0xe7, 0xb0, 0x16, 0x46, 0x7d, 0x2a, 0x46, 0x09,
	0x6c, 0x17, 0x1b, 0x8e, 0x53, 0x9c, 0x55, 0xd8, 0x31, 0x5f, 0xd8, 0x58, 0xff, 0xa5, 0x86, 0x6e,
	0x6f, 0x6f, 0x6f, 0xcd, 0xdc, 0xb7, 0xb0, 0xab, 0x8d, 0x6a, 0x01, 0xbf, 0xb3, 0xd7, 0x25, 0xe0,
	0x37, 0xb4, 0x43, 0xb9, 0x77, 0x67, 0xa7, 0xd7, 0xb0, 0x17, 0x3b, 0x7d, 0x8e, 0xb1, 0x5e, 0xc3,
	0x9e, 0x5e, 0x62, 0x65, 0xc0, 0xc2, 0x3b, 0x9b, 0xd5, 0x20, 0x3b, 0x31, 0xfb, 0x1c, 0xc3, 0x5d,
	0xc1, 0x41, 0xbc, 0x91, 0x7a, 0x73, 0xef, 0x6c, 0x57, 0x87, 0xc3, 0x19, 0xbb, 0xcf, 0x30, 0x60,
	0xe1, 0xef, 0x14, 0x6c, 0x68, 0x4b, 0x7d, 0x34, 0xf7, 0x01, 0x47, 0xdc, 0xa3, 0x6d, 0xc6, 0xa9,
	0x37, 0x41, 0xd1, 0x0a, 0xde, 0x83, 0x6d, 0x37, 0xf0, 0xa3, 0x1e, 0x9f, 0x80, 0x25, 0x0b, 0x19,
	0x18, 0xc3, 0x66, 0x8b, 0x88, 0x59, 0xcc, 0xc4, 0x3b, 0xb0, 0xe5, 0x33, 0x4e, 0x67, 0xc1, 0x55,
	0x05, 0x12, 0x41, 0xc9, 0x2c, 0x98, 0x52, 0xd5, 0x7d, 0x36, 0x27, 0x5c, 0xc3, 0xc7, 0x90, 0x0d,
	0x25, 0x71, 0xdf, 0x53, 0xaf, 0xba, 0xd0, 0xef, 0x1e, 0x7e, 0x08, 0x7b, 0x23, 0xf6, 0x7c, 0xbe,
	0xed, 0x7d, 0x7c, 0x08, 0xfb, 0x23, 0xaa, 0x92, 0x68, 0xb4, 0xae, 0x56, 0x15, 0xba, 0x44, 0x4a,
	0x3a, 0x57, 0xb3, 0x81, 0x77, 0x01, 0xf5, 0xd8, 0x60, 0x66, 0xa5, 0x25, 0x0b, 0x81, 0x52, 0xcb,
	0x9b, 0x40, 0x1d, 0x80, 0x59, 0x3c, 0xbd, 0x24, 0x83, 0xb2, 0x85, 0x1e, 0x24, 0x33, 0x28, 0x5b,
	0x28, 0xb3, 0x90, 0x41, 0xd9, 0x42, 0x9b, 0x0b, 0x19, 0x94, 0x2d, 0xb4, 0x95, 0xcc, 0xa0, 0x6c,
	0x21, 0xf4, 0xe9, 0x0c, 0xca, 0x16, 0xda, 0xfe, 0x44, 0x06, 0x65, 0x0b, 0xe1, 0x4f, 0x65, 0x50,
	0xb6, 0xd0, 0x0e, 0x7e, 0x0c, 0x87, 0xbd, 0xc8, 0x97, 0xcc, 0x22, 0x92, 0x2c, 0x46, 0xbb, 0x8b,
	0x8f, 0xe0, 0x60, 0xc2, 0x27, 0xc2, 0xdd, 0x53, 0x4b, 0x6f, 0x45, 0xad, 0x96, 0x3f, 0xb7, 0x59,
	0xfb, 0xf8, 0x09, 0x1c, 0x4d, 0x6a, 0x9c, 0xc5, 0x80, 0x0f, 0xe6, 0x9a, 0x9e, 0x2f, 0x18, 0x64,
	0x0b, 0x3f, 0xc1, 0xba, 0xca, 0x59, 0x1f, 0xbd, 0x3d, 0xd8, 0x26, 0x03, 0x16, 0xea, 0x47, 0x69,
	0x33, 0xe2, 0xef, 0x79, 0x70, 0xc3, 0xd1, 0x0a, 0xde, 0x82, 0xf4, 0x14, 0x1e, 0x20, 0x63, 0x1e,
	0x18, 0x22, 0x13, 0x6f, 0x43, 0x66, 0x0a, 0xf4, 0x19, 0x45, 0xab, 0x2a, 0xd5, 0x29, 0xa4, 0xde,
	0x72, 0x28, 0x55, 0xe8, 0x40, 0x66, 0x34, 0xe3, 0x8b, 0x40, 0xf4, 0x88, 0xd4, 0x69, 0xc5, 0x40,
	0xb3, 0xad, 0x91, 0x99, 0xae, 0x8f, 0xe0, 0x61, 0x82, 0x0b, 0x69, 0x9f, 0x08, 0x22, 0xe3, 0x19,
	0x8e, 0xe0, 0x20, 0x49, 0x77, 0x89, 0xa0, 0x5e, 0x73, 0x80, 0xcc, 0x82, 0x0f, 0x5b, 0xf1, 0xdf,
	0xd3, 0x62, 0x82, 0xba, 0x92, 0x05, 0x5c, 0xef, 0x68, 0xfc, 0xc4, 0xf7, 0xc6, 0xd8, 0x4c, 0x33,
	0xe5, 0x96, 0x64, 0x5b, 0xc3, 0xa6, 0x08, 0x6e, 0x90, 0xa1, 0x22, 0x5c, 0x46, 0xc6, 0x27, 0x11,
	0x99, 0x85, 0x3f, 0x0c, 0xd8, 0x8a, 0x5f, 0xb4, 0xdf, 0xab, 0x0b, 0x82, 0x8e, 0xf2, 0x10, 0xf6,
	0xf9, 0x3c, 0x64, 0x51, 0x97, 0xf5, 0x88, 0x1f, 0x37, 0x4b, 0x70, 0xd5, 0x48, 0xa8, 0x2b, 0xc6,
	0x10, 0x19, 0x6a, 0xd9, 0x09, 0xb2, 0x4e, 0x85, 0x4b, 0xb9, 0x24, 0x1d, 0x8a, 0xcc, 0x25, 0xb4,
	0xe3, 0x32, 0xca, 0x25, 0x6b, 0x33, 0x17, 0xad, 0x2e, 0xb1, 0x7e, 0x21, 0x88, 0x9e, 0x18, 0xa5,
	0xf0, 0x01, 0xec, 0x24, 0xc8, 0x73, 0x12, 0x52, 0xb4, 0x86, 0x9f, 0x2d, 0x0c, 0xfb, 0x6e, 0x94,
	0xcc, 0xaf, 0x7f, 0x7d, 0x8c, 0x3f, 0x46, 0xe1, 0x37, 0x03, 0x76, 0x6a, 0xb4, 0x43, 0x24, 0xbb,
	0xa6, 0xf1, 0x6a, 0xf5, 0x63, 0x4d, 0x05, 0xcb, 0x17, 0xe1, 0x2b, 0xc6, 0xa3, 0x10, 0xad, 0xe8,
	0x1c, 0x16, 0x59, 0x9b, 0x7a, 0xc8, 0xc0, 0x39, 0x78, 0xbc, 0x84, 0xab, 0x13, 0x41, 0xb9, 0xec,
	0xd2, 0x90, 0x86, 0xc8, 0xc4, 0x79, 0x38, 0x5d, 0x5e, 0x5f, 0xe1, 0xde, 0xac, 0x32, 0x5e, 0xfa,
	0xa2, 0xb2, 0x16, 0x70, 0x75, 0xf2, 0xfe, 0x34, 0x01, 0x8d, 0x93, 0xa8, 0xb8, 0x6e, 0x24, 0x88,
	0x3b, 0x54, 0xff, 0x9d, 0x76, 0x02, 0xab, 0x06, 0xbc, 0xed, 0x33, 0x57, 0x5d, 0x41, 0xd0, 0x0a,
	0xfe, 0x0a, 0x8e, 0x93, 0x82, 0x77, 0xfd, 0x46, 0xf0, 0x96, 0x53, 0x8b, 0x75, 0x98, 0x44, 0x1f,
	0xc7, 0x1f, 0x03, 0x17, 0xe0, 0xd1, 0x32, 0x69, 0xe3, 0x26, 0xd0, 0xd2, 0x10, 0xfd, 0x3b, 0xd5,
	0x7e, 0x0d, 0x4f, 0x96, 0x6a, 0xbb, 0x82, 0xd2, 0x91, 0xfa, 0x9f, 0xa9, 0xfa, 0x10, 0xf6, 0x93,
	0xea, 0x4b, 0xe2, 0x5f, 0xeb, 0x74, 0x8e, 0x21, 0x9b, 0xe4, 0xbe, 0x8b, 0x88, 0x90, 0x54, 0x84,
	0x28, 0xa5, 0x12, 0x49, 0xb2, 0x17, 0xea, 0x7e, 0xd5, 0x0d, 0xd1, 0xba, 0x3a, 0xd4, 0x49, 0xd2,
	0x61, 0x03, 0x49, 0x55, 0xa2, 0x21, 0x42, 0xcb, 0xda, 0x36, 0x62, 0x0e, 0x96, 0xd5, 0x5e, 0x46,
	0xdc, 0x13, 0xd4, 0x53, 0xbc, 0x77, 0x9e, 0xff, 0xf1, 0xcb, 0x0e, 0x93, 0xdd, 0xa8, 0x55, 0x74,
	0x83, 0xde, 0xd9, 0x07, 0xd6, 0x6b, 0x91, 0x16, 0x09, 0xce, 0xbc, 0xc0, 0x75, 0x03, 0x7e, 0x7d,
	0xc6, 0x7e, 0x08, 0xc4, 0xfb, 0x33, 0x75, 0x45, 0xfb, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x83,
	0xcc, 0x3f, 0x85, 0x0c, 0x00, 0x00,
}
