// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSCEArchives.proto

package TSCE

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSK "github.com/zimbabao/docconv/iWork/TSK"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReferenceArchive_ReferenceType int32

const (
	ReferenceArchive_CELL_REFERENCE  ReferenceArchive_ReferenceType = 1
	ReferenceArchive_RANGE_REFERENCE ReferenceArchive_ReferenceType = 2
	ReferenceArchive_NAME_DEPENDENCY ReferenceArchive_ReferenceType = 3
)

var ReferenceArchive_ReferenceType_name = map[int32]string{
	1: "CELL_REFERENCE",
	2: "RANGE_REFERENCE",
	3: "NAME_DEPENDENCY",
}

var ReferenceArchive_ReferenceType_value = map[string]int32{
	"CELL_REFERENCE":  1,
	"RANGE_REFERENCE": 2,
	"NAME_DEPENDENCY": 3,
}

func (x ReferenceArchive_ReferenceType) Enum() *ReferenceArchive_ReferenceType {
	p := new(ReferenceArchive_ReferenceType)
	*p = x
	return p
}

func (x ReferenceArchive_ReferenceType) String() string {
	return proto.EnumName(ReferenceArchive_ReferenceType_name, int32(x))
}

func (x *ReferenceArchive_ReferenceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReferenceArchive_ReferenceType_value, data, "ReferenceArchive_ReferenceType")
	if err != nil {
		return err
	}
	*x = ReferenceArchive_ReferenceType(value)
	return nil
}

func (ReferenceArchive_ReferenceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{5, 0}
}

type SpanningDependenciesArchive_RangeContext int32

const (
	SpanningDependenciesArchive_DEFAULT         SpanningDependenciesArchive_RangeContext = 0
	SpanningDependenciesArchive_INCLUDE_HEADERS SpanningDependenciesArchive_RangeContext = 1
)

var SpanningDependenciesArchive_RangeContext_name = map[int32]string{
	0: "DEFAULT",
	1: "INCLUDE_HEADERS",
}

var SpanningDependenciesArchive_RangeContext_value = map[string]int32{
	"DEFAULT":         0,
	"INCLUDE_HEADERS": 1,
}

func (x SpanningDependenciesArchive_RangeContext) Enum() *SpanningDependenciesArchive_RangeContext {
	p := new(SpanningDependenciesArchive_RangeContext)
	*p = x
	return p
}

func (x SpanningDependenciesArchive_RangeContext) String() string {
	return proto.EnumName(SpanningDependenciesArchive_RangeContext_name, int32(x))
}

func (x *SpanningDependenciesArchive_RangeContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpanningDependenciesArchive_RangeContext_value, data, "SpanningDependenciesArchive_RangeContext")
	if err != nil {
		return err
	}
	*x = SpanningDependenciesArchive_RangeContext(value)
	return nil
}

func (SpanningDependenciesArchive_RangeContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{17, 0}
}

type CalculationEngineArchive_ExcelImportDateMode int32

const (
	CalculationEngineArchive_DATE_MODE_1900        CalculationEngineArchive_ExcelImportDateMode = 1
	CalculationEngineArchive_DATE_MODE_1900_LEGACY CalculationEngineArchive_ExcelImportDateMode = 2
	CalculationEngineArchive_DATE_MODE_1904_LEGACY CalculationEngineArchive_ExcelImportDateMode = 3
)

var CalculationEngineArchive_ExcelImportDateMode_name = map[int32]string{
	1: "DATE_MODE_1900",
	2: "DATE_MODE_1900_LEGACY",
	3: "DATE_MODE_1904_LEGACY",
}

var CalculationEngineArchive_ExcelImportDateMode_value = map[string]int32{
	"DATE_MODE_1900":        1,
	"DATE_MODE_1900_LEGACY": 2,
	"DATE_MODE_1904_LEGACY": 3,
}

func (x CalculationEngineArchive_ExcelImportDateMode) Enum() *CalculationEngineArchive_ExcelImportDateMode {
	p := new(CalculationEngineArchive_ExcelImportDateMode)
	*p = x
	return p
}

func (x CalculationEngineArchive_ExcelImportDateMode) String() string {
	return proto.EnumName(CalculationEngineArchive_ExcelImportDateMode_name, int32(x))
}

func (x *CalculationEngineArchive_ExcelImportDateMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CalculationEngineArchive_ExcelImportDateMode_value, data, "CalculationEngineArchive_ExcelImportDateMode")
	if err != nil {
		return err
	}
	*x = CalculationEngineArchive_ExcelImportDateMode(value)
	return nil
}

func (CalculationEngineArchive_ExcelImportDateMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{25, 0}
}

type ASTNodeArrayArchive_ASTNodeType int32

const (
	ASTNodeArrayArchive_ADDITION_NODE                   ASTNodeArrayArchive_ASTNodeType = 1
	ASTNodeArrayArchive_SUBTRACTION_NODE                ASTNodeArrayArchive_ASTNodeType = 2
	ASTNodeArrayArchive_MULTIPLICATION_NODE             ASTNodeArrayArchive_ASTNodeType = 3
	ASTNodeArrayArchive_DIVISION_NODE                   ASTNodeArrayArchive_ASTNodeType = 4
	ASTNodeArrayArchive_POWER_NODE                      ASTNodeArrayArchive_ASTNodeType = 5
	ASTNodeArrayArchive_CONCATENATION_NODE              ASTNodeArrayArchive_ASTNodeType = 6
	ASTNodeArrayArchive_GREATER_THAN_NODE               ASTNodeArrayArchive_ASTNodeType = 7
	ASTNodeArrayArchive_GREATER_THAN_OR_EQUAL_TO_NODE   ASTNodeArrayArchive_ASTNodeType = 8
	ASTNodeArrayArchive_LESS_THAN_NODE                  ASTNodeArrayArchive_ASTNodeType = 9
	ASTNodeArrayArchive_LESS_THAN_OR_EQUAL_TO_NODE      ASTNodeArrayArchive_ASTNodeType = 10
	ASTNodeArrayArchive_EQUAL_TO_NODE                   ASTNodeArrayArchive_ASTNodeType = 11
	ASTNodeArrayArchive_NOT_EQUAL_TO_NODE               ASTNodeArrayArchive_ASTNodeType = 12
	ASTNodeArrayArchive_NEGATION_NODE                   ASTNodeArrayArchive_ASTNodeType = 13
	ASTNodeArrayArchive_PLUS_SIGN_NODE                  ASTNodeArrayArchive_ASTNodeType = 14
	ASTNodeArrayArchive_PERCENT_NODE                    ASTNodeArrayArchive_ASTNodeType = 15
	ASTNodeArrayArchive_FUNCTION_NODE                   ASTNodeArrayArchive_ASTNodeType = 16
	ASTNodeArrayArchive_NUMBER_NODE                     ASTNodeArrayArchive_ASTNodeType = 17
	ASTNodeArrayArchive_BOOLEAN_NODE                    ASTNodeArrayArchive_ASTNodeType = 18
	ASTNodeArrayArchive_STRING_NODE                     ASTNodeArrayArchive_ASTNodeType = 19
	ASTNodeArrayArchive_DATE_NODE                       ASTNodeArrayArchive_ASTNodeType = 20
	ASTNodeArrayArchive_DURATION_NODE                   ASTNodeArrayArchive_ASTNodeType = 21
	ASTNodeArrayArchive_EMPTY_ARGUMENT_NODE             ASTNodeArrayArchive_ASTNodeType = 22
	ASTNodeArrayArchive_TOKEN_NODE                      ASTNodeArrayArchive_ASTNodeType = 23
	ASTNodeArrayArchive_ARRAY_NODE                      ASTNodeArrayArchive_ASTNodeType = 24
	ASTNodeArrayArchive_LIST_NODE                       ASTNodeArrayArchive_ASTNodeType = 25
	ASTNodeArrayArchive_THUNK_NODE                      ASTNodeArrayArchive_ASTNodeType = 26
	ASTNodeArrayArchive_LOCAL_CELL_REFERENCE_NODE       ASTNodeArrayArchive_ASTNodeType = 27
	ASTNodeArrayArchive_CROSS_TABLE_CELL_REFERENCE_NODE ASTNodeArrayArchive_ASTNodeType = 28
	ASTNodeArrayArchive_COLON_NODE                      ASTNodeArrayArchive_ASTNodeType = 29
	ASTNodeArrayArchive_REFERENCE_ERROR_NODE            ASTNodeArrayArchive_ASTNodeType = 30
	ASTNodeArrayArchive_UNKNOWN_FUNCTION_NODE           ASTNodeArrayArchive_ASTNodeType = 31
	ASTNodeArrayArchive_APPEND_WHITESPACE_NODE          ASTNodeArrayArchive_ASTNodeType = 32
	ASTNodeArrayArchive_PREPEND_WHITESPACE_NODE         ASTNodeArrayArchive_ASTNodeType = 33
	ASTNodeArrayArchive_BEGIN_THUNK_NODE                ASTNodeArrayArchive_ASTNodeType = 34
	ASTNodeArrayArchive_END_THUNK_NODE                  ASTNodeArrayArchive_ASTNodeType = 35
	ASTNodeArrayArchive_CELL_REFERENCE_NODE             ASTNodeArrayArchive_ASTNodeType = 36
)

var ASTNodeArrayArchive_ASTNodeType_name = map[int32]string{
	1:  "ADDITION_NODE",
	2:  "SUBTRACTION_NODE",
	3:  "MULTIPLICATION_NODE",
	4:  "DIVISION_NODE",
	5:  "POWER_NODE",
	6:  "CONCATENATION_NODE",
	7:  "GREATER_THAN_NODE",
	8:  "GREATER_THAN_OR_EQUAL_TO_NODE",
	9:  "LESS_THAN_NODE",
	10: "LESS_THAN_OR_EQUAL_TO_NODE",
	11: "EQUAL_TO_NODE",
	12: "NOT_EQUAL_TO_NODE",
	13: "NEGATION_NODE",
	14: "PLUS_SIGN_NODE",
	15: "PERCENT_NODE",
	16: "FUNCTION_NODE",
	17: "NUMBER_NODE",
	18: "BOOLEAN_NODE",
	19: "STRING_NODE",
	20: "DATE_NODE",
	21: "DURATION_NODE",
	22: "EMPTY_ARGUMENT_NODE",
	23: "TOKEN_NODE",
	24: "ARRAY_NODE",
	25: "LIST_NODE",
	26: "THUNK_NODE",
	27: "LOCAL_CELL_REFERENCE_NODE",
	28: "CROSS_TABLE_CELL_REFERENCE_NODE",
	29: "COLON_NODE",
	30: "REFERENCE_ERROR_NODE",
	31: "UNKNOWN_FUNCTION_NODE",
	32: "APPEND_WHITESPACE_NODE",
	33: "PREPEND_WHITESPACE_NODE",
	34: "BEGIN_THUNK_NODE",
	35: "END_THUNK_NODE",
	36: "CELL_REFERENCE_NODE",
}

var ASTNodeArrayArchive_ASTNodeType_value = map[string]int32{
	"ADDITION_NODE":                   1,
	"SUBTRACTION_NODE":                2,
	"MULTIPLICATION_NODE":             3,
	"DIVISION_NODE":                   4,
	"POWER_NODE":                      5,
	"CONCATENATION_NODE":              6,
	"GREATER_THAN_NODE":               7,
	"GREATER_THAN_OR_EQUAL_TO_NODE":   8,
	"LESS_THAN_NODE":                  9,
	"LESS_THAN_OR_EQUAL_TO_NODE":      10,
	"EQUAL_TO_NODE":                   11,
	"NOT_EQUAL_TO_NODE":               12,
	"NEGATION_NODE":                   13,
	"PLUS_SIGN_NODE":                  14,
	"PERCENT_NODE":                    15,
	"FUNCTION_NODE":                   16,
	"NUMBER_NODE":                     17,
	"BOOLEAN_NODE":                    18,
	"STRING_NODE":                     19,
	"DATE_NODE":                       20,
	"DURATION_NODE":                   21,
	"EMPTY_ARGUMENT_NODE":             22,
	"TOKEN_NODE":                      23,
	"ARRAY_NODE":                      24,
	"LIST_NODE":                       25,
	"THUNK_NODE":                      26,
	"LOCAL_CELL_REFERENCE_NODE":       27,
	"CROSS_TABLE_CELL_REFERENCE_NODE": 28,
	"COLON_NODE":                      29,
	"REFERENCE_ERROR_NODE":            30,
	"UNKNOWN_FUNCTION_NODE":           31,
	"APPEND_WHITESPACE_NODE":          32,
	"PREPEND_WHITESPACE_NODE":         33,
	"BEGIN_THUNK_NODE":                34,
	"END_THUNK_NODE":                  35,
	"CELL_REFERENCE_NODE":             36,
}

func (x ASTNodeArrayArchive_ASTNodeType) Enum() *ASTNodeArrayArchive_ASTNodeType {
	p := new(ASTNodeArrayArchive_ASTNodeType)
	*p = x
	return p
}

func (x ASTNodeArrayArchive_ASTNodeType) String() string {
	return proto.EnumName(ASTNodeArrayArchive_ASTNodeType_name, int32(x))
}

func (x *ASTNodeArrayArchive_ASTNodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ASTNodeArrayArchive_ASTNodeType_value, data, "ASTNodeArrayArchive_ASTNodeType")
	if err != nil {
		return err
	}
	*x = ASTNodeArrayArchive_ASTNodeType(value)
	return nil
}

func (ASTNodeArrayArchive_ASTNodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 0}
}

type FormulaRewriteSpecArchive_RewriteType int32

const (
	FormulaRewriteSpecArchive_TECTONIC_SHIFT          FormulaRewriteSpecArchive_RewriteType = 1
	FormulaRewriteSpecArchive_REMAP_WITH_SORT_MAPPING FormulaRewriteSpecArchive_RewriteType = 2
	FormulaRewriteSpecArchive_MOVE_RANGE              FormulaRewriteSpecArchive_RewriteType = 3
	FormulaRewriteSpecArchive_DELETE_OWNER            FormulaRewriteSpecArchive_RewriteType = 4
	FormulaRewriteSpecArchive_TABLE_RESIZE            FormulaRewriteSpecArchive_RewriteType = 5
	FormulaRewriteSpecArchive_CELL_MERGE              FormulaRewriteSpecArchive_RewriteType = 6
)

var FormulaRewriteSpecArchive_RewriteType_name = map[int32]string{
	1: "TECTONIC_SHIFT",
	2: "REMAP_WITH_SORT_MAPPING",
	3: "MOVE_RANGE",
	4: "DELETE_OWNER",
	5: "TABLE_RESIZE",
	6: "CELL_MERGE",
}

var FormulaRewriteSpecArchive_RewriteType_value = map[string]int32{
	"TECTONIC_SHIFT":          1,
	"REMAP_WITH_SORT_MAPPING": 2,
	"MOVE_RANGE":              3,
	"DELETE_OWNER":            4,
	"TABLE_RESIZE":            5,
	"CELL_MERGE":              6,
}

func (x FormulaRewriteSpecArchive_RewriteType) Enum() *FormulaRewriteSpecArchive_RewriteType {
	p := new(FormulaRewriteSpecArchive_RewriteType)
	*p = x
	return p
}

func (x FormulaRewriteSpecArchive_RewriteType) String() string {
	return proto.EnumName(FormulaRewriteSpecArchive_RewriteType_name, int32(x))
}

func (x *FormulaRewriteSpecArchive_RewriteType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaRewriteSpecArchive_RewriteType_value, data, "FormulaRewriteSpecArchive_RewriteType")
	if err != nil {
		return err
	}
	*x = FormulaRewriteSpecArchive_RewriteType(value)
	return nil
}

func (FormulaRewriteSpecArchive_RewriteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{36, 0}
}

type CellValueArchive_CellValueType int32

const (
	CellValueArchive_NIL_TYPE     CellValueArchive_CellValueType = 1
	CellValueArchive_BOOLEAN_TYPE CellValueArchive_CellValueType = 2
	CellValueArchive_DATE_TYPE    CellValueArchive_CellValueType = 3
	CellValueArchive_NUMBER_TYPE  CellValueArchive_CellValueType = 4
	CellValueArchive_STRING_TYPE  CellValueArchive_CellValueType = 5
)

var CellValueArchive_CellValueType_name = map[int32]string{
	1: "NIL_TYPE",
	2: "BOOLEAN_TYPE",
	3: "DATE_TYPE",
	4: "NUMBER_TYPE",
	5: "STRING_TYPE",
}

var CellValueArchive_CellValueType_value = map[string]int32{
	"NIL_TYPE":     1,
	"BOOLEAN_TYPE": 2,
	"DATE_TYPE":    3,
	"NUMBER_TYPE":  4,
	"STRING_TYPE":  5,
}

func (x CellValueArchive_CellValueType) Enum() *CellValueArchive_CellValueType {
	p := new(CellValueArchive_CellValueType)
	*p = x
	return p
}

func (x CellValueArchive_CellValueType) String() string {
	return proto.EnumName(CellValueArchive_CellValueType_name, int32(x))
}

func (x *CellValueArchive_CellValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CellValueArchive_CellValueType_value, data, "CellValueArchive_CellValueType")
	if err != nil {
		return err
	}
	*x = CellValueArchive_CellValueType(value)
	return nil
}

func (CellValueArchive_CellValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{53, 0}
}

type CFUUIDArchive struct {
	UuidBytes            []byte   `protobuf:"bytes,1,opt,name=uuid_bytes,json=uuidBytes" json:"uuid_bytes,omitempty"`
	UuidW0               *uint32  `protobuf:"varint,2,opt,name=uuid_w0,json=uuidW0" json:"uuid_w0,omitempty"`
	UuidW1               *uint32  `protobuf:"varint,3,opt,name=uuid_w1,json=uuidW1" json:"uuid_w1,omitempty"`
	UuidW2               *uint32  `protobuf:"varint,4,opt,name=uuid_w2,json=uuidW2" json:"uuid_w2,omitempty"`
	UuidW3               *uint32  `protobuf:"varint,5,opt,name=uuid_w3,json=uuidW3" json:"uuid_w3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CFUUIDArchive) Reset()         { *m = CFUUIDArchive{} }
func (m *CFUUIDArchive) String() string { return proto.CompactTextString(m) }
func (*CFUUIDArchive) ProtoMessage()    {}
func (*CFUUIDArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{0}
}

func (m *CFUUIDArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFUUIDArchive.Unmarshal(m, b)
}
func (m *CFUUIDArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFUUIDArchive.Marshal(b, m, deterministic)
}
func (m *CFUUIDArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFUUIDArchive.Merge(m, src)
}
func (m *CFUUIDArchive) XXX_Size() int {
	return xxx_messageInfo_CFUUIDArchive.Size(m)
}
func (m *CFUUIDArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CFUUIDArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CFUUIDArchive proto.InternalMessageInfo

func (m *CFUUIDArchive) GetUuidBytes() []byte {
	if m != nil {
		return m.UuidBytes
	}
	return nil
}

func (m *CFUUIDArchive) GetUuidW0() uint32 {
	if m != nil && m.UuidW0 != nil {
		return *m.UuidW0
	}
	return 0
}

func (m *CFUUIDArchive) GetUuidW1() uint32 {
	if m != nil && m.UuidW1 != nil {
		return *m.UuidW1
	}
	return 0
}

func (m *CFUUIDArchive) GetUuidW2() uint32 {
	if m != nil && m.UuidW2 != nil {
		return *m.UuidW2
	}
	return 0
}

func (m *CFUUIDArchive) GetUuidW3() uint32 {
	if m != nil && m.UuidW3 != nil {
		return *m.UuidW3
	}
	return 0
}

type CellReferenceArchive struct {
	Column               *uint32        `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32        `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	TableId              *CFUUIDArchive `protobuf:"bytes,3,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CellReferenceArchive) Reset()         { *m = CellReferenceArchive{} }
func (m *CellReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*CellReferenceArchive) ProtoMessage()    {}
func (*CellReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{1}
}

func (m *CellReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellReferenceArchive.Unmarshal(m, b)
}
func (m *CellReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellReferenceArchive.Marshal(b, m, deterministic)
}
func (m *CellReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellReferenceArchive.Merge(m, src)
}
func (m *CellReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_CellReferenceArchive.Size(m)
}
func (m *CellReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellReferenceArchive proto.InternalMessageInfo

func (m *CellReferenceArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellReferenceArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellReferenceArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

type InternalCellReferenceArchive struct {
	Coordinate           *CellCoordinateArchive `protobuf:"bytes,1,req,name=coordinate" json:"coordinate,omitempty"`
	OwnerId              *uint32                `protobuf:"varint,2,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InternalCellReferenceArchive) Reset()         { *m = InternalCellReferenceArchive{} }
func (m *InternalCellReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*InternalCellReferenceArchive) ProtoMessage()    {}
func (*InternalCellReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{2}
}

func (m *InternalCellReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCellReferenceArchive.Unmarshal(m, b)
}
func (m *InternalCellReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCellReferenceArchive.Marshal(b, m, deterministic)
}
func (m *InternalCellReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCellReferenceArchive.Merge(m, src)
}
func (m *InternalCellReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_InternalCellReferenceArchive.Size(m)
}
func (m *InternalCellReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCellReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCellReferenceArchive proto.InternalMessageInfo

func (m *InternalCellReferenceArchive) GetCoordinate() *CellCoordinateArchive {
	if m != nil {
		return m.Coordinate
	}
	return nil
}

func (m *InternalCellReferenceArchive) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

type RangeReferenceArchive struct {
	TableId              *CFUUIDArchive `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	TopLeftColumn        *uint32        `protobuf:"varint,2,req,name=top_left_column,json=topLeftColumn" json:"top_left_column,omitempty"`
	TopLeftRow           *uint32        `protobuf:"varint,3,req,name=top_left_row,json=topLeftRow" json:"top_left_row,omitempty"`
	BottomRightColumn    *uint32        `protobuf:"varint,4,req,name=bottom_right_column,json=bottomRightColumn" json:"bottom_right_column,omitempty"`
	BottomRightRow       *uint32        `protobuf:"varint,5,req,name=bottom_right_row,json=bottomRightRow" json:"bottom_right_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RangeReferenceArchive) Reset()         { *m = RangeReferenceArchive{} }
func (m *RangeReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*RangeReferenceArchive) ProtoMessage()    {}
func (*RangeReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{3}
}

func (m *RangeReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeReferenceArchive.Unmarshal(m, b)
}
func (m *RangeReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeReferenceArchive.Marshal(b, m, deterministic)
}
func (m *RangeReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeReferenceArchive.Merge(m, src)
}
func (m *RangeReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_RangeReferenceArchive.Size(m)
}
func (m *RangeReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeReferenceArchive proto.InternalMessageInfo

func (m *RangeReferenceArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *RangeReferenceArchive) GetTopLeftColumn() uint32 {
	if m != nil && m.TopLeftColumn != nil {
		return *m.TopLeftColumn
	}
	return 0
}

func (m *RangeReferenceArchive) GetTopLeftRow() uint32 {
	if m != nil && m.TopLeftRow != nil {
		return *m.TopLeftRow
	}
	return 0
}

func (m *RangeReferenceArchive) GetBottomRightColumn() uint32 {
	if m != nil && m.BottomRightColumn != nil {
		return *m.BottomRightColumn
	}
	return 0
}

func (m *RangeReferenceArchive) GetBottomRightRow() uint32 {
	if m != nil && m.BottomRightRow != nil {
		return *m.BottomRightRow
	}
	return 0
}

type InternalRangeReferenceArchive struct {
	OwnerId              *uint32                 `protobuf:"varint,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	Range                *RangeCoordinateArchive `protobuf:"bytes,2,req,name=range" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InternalRangeReferenceArchive) Reset()         { *m = InternalRangeReferenceArchive{} }
func (m *InternalRangeReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*InternalRangeReferenceArchive) ProtoMessage()    {}
func (*InternalRangeReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{4}
}

func (m *InternalRangeReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRangeReferenceArchive.Unmarshal(m, b)
}
func (m *InternalRangeReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRangeReferenceArchive.Marshal(b, m, deterministic)
}
func (m *InternalRangeReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRangeReferenceArchive.Merge(m, src)
}
func (m *InternalRangeReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_InternalRangeReferenceArchive.Size(m)
}
func (m *InternalRangeReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRangeReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRangeReferenceArchive proto.InternalMessageInfo

func (m *InternalRangeReferenceArchive) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *InternalRangeReferenceArchive) GetRange() *RangeCoordinateArchive {
	if m != nil {
		return m.Range
	}
	return nil
}

type ReferenceArchive struct {
	ReferenceType        *ReferenceArchive_ReferenceType `protobuf:"varint,1,req,name=reference_type,json=referenceType,enum=TSCE.ReferenceArchive_ReferenceType" json:"reference_type,omitempty"`
	CellReference        *CellReferenceArchive           `protobuf:"bytes,2,opt,name=cell_reference,json=cellReference" json:"cell_reference,omitempty"`
	RangeReference       *RangeReferenceArchive          `protobuf:"bytes,3,opt,name=range_reference,json=rangeReference" json:"range_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ReferenceArchive) Reset()         { *m = ReferenceArchive{} }
func (m *ReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*ReferenceArchive) ProtoMessage()    {}
func (*ReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{5}
}

func (m *ReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceArchive.Unmarshal(m, b)
}
func (m *ReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceArchive.Marshal(b, m, deterministic)
}
func (m *ReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceArchive.Merge(m, src)
}
func (m *ReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_ReferenceArchive.Size(m)
}
func (m *ReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceArchive proto.InternalMessageInfo

func (m *ReferenceArchive) GetReferenceType() ReferenceArchive_ReferenceType {
	if m != nil && m.ReferenceType != nil {
		return *m.ReferenceType
	}
	return ReferenceArchive_CELL_REFERENCE
}

func (m *ReferenceArchive) GetCellReference() *CellReferenceArchive {
	if m != nil {
		return m.CellReference
	}
	return nil
}

func (m *ReferenceArchive) GetRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.RangeReference
	}
	return nil
}

type EdgeArchive struct {
	Column               *uint32        `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32        `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	IsPrecedent          *bool          `protobuf:"varint,3,req,name=is_precedent,json=isPrecedent" json:"is_precedent,omitempty"`
	OwnerId              *CFUUIDArchive `protobuf:"bytes,4,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EdgeArchive) Reset()         { *m = EdgeArchive{} }
func (m *EdgeArchive) String() string { return proto.CompactTextString(m) }
func (*EdgeArchive) ProtoMessage()    {}
func (*EdgeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{6}
}

func (m *EdgeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeArchive.Unmarshal(m, b)
}
func (m *EdgeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeArchive.Marshal(b, m, deterministic)
}
func (m *EdgeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeArchive.Merge(m, src)
}
func (m *EdgeArchive) XXX_Size() int {
	return xxx_messageInfo_EdgeArchive.Size(m)
}
func (m *EdgeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeArchive proto.InternalMessageInfo

func (m *EdgeArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *EdgeArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *EdgeArchive) GetIsPrecedent() bool {
	if m != nil && m.IsPrecedent != nil {
		return *m.IsPrecedent
	}
	return false
}

func (m *EdgeArchive) GetOwnerId() *CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

type EdgesArchive struct {
	PackedEdgeWithoutOwner []uint32         `protobuf:"varint,9,rep,name=packed_edge_without_owner,json=packedEdgeWithoutOwner" json:"packed_edge_without_owner,omitempty"`
	PackedEdgeWithOwner    []uint32         `protobuf:"varint,10,rep,name=packed_edge_with_owner,json=packedEdgeWithOwner" json:"packed_edge_with_owner,omitempty"`
	OwnerIdForEdge         []*CFUUIDArchive `protobuf:"bytes,11,rep,name=owner_id_for_edge,json=ownerIdForEdge" json:"owner_id_for_edge,omitempty"`
	InternalOwnerIdForEdge []uint32         `protobuf:"varint,12,rep,name=internal_owner_id_for_edge,json=internalOwnerIdForEdge" json:"internal_owner_id_for_edge,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}         `json:"-"`
	XXX_unrecognized       []byte           `json:"-"`
	XXX_sizecache          int32            `json:"-"`
}

func (m *EdgesArchive) Reset()         { *m = EdgesArchive{} }
func (m *EdgesArchive) String() string { return proto.CompactTextString(m) }
func (*EdgesArchive) ProtoMessage()    {}
func (*EdgesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{7}
}

func (m *EdgesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgesArchive.Unmarshal(m, b)
}
func (m *EdgesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgesArchive.Marshal(b, m, deterministic)
}
func (m *EdgesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgesArchive.Merge(m, src)
}
func (m *EdgesArchive) XXX_Size() int {
	return xxx_messageInfo_EdgesArchive.Size(m)
}
func (m *EdgesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_EdgesArchive proto.InternalMessageInfo

func (m *EdgesArchive) GetPackedEdgeWithoutOwner() []uint32 {
	if m != nil {
		return m.PackedEdgeWithoutOwner
	}
	return nil
}

func (m *EdgesArchive) GetPackedEdgeWithOwner() []uint32 {
	if m != nil {
		return m.PackedEdgeWithOwner
	}
	return nil
}

func (m *EdgesArchive) GetOwnerIdForEdge() []*CFUUIDArchive {
	if m != nil {
		return m.OwnerIdForEdge
	}
	return nil
}

func (m *EdgesArchive) GetInternalOwnerIdForEdge() []uint32 {
	if m != nil {
		return m.InternalOwnerIdForEdge
	}
	return nil
}

type CellRecordArchive struct {
	Column                              *uint32        `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                                 *uint32        `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	DirtySelfPlusPrecedentsCount        *uint32        `protobuf:"varint,3,opt,name=dirty_self_plus_precedents_count,json=dirtySelfPlusPrecedentsCount,def=0" json:"dirty_self_plus_precedents_count,omitempty"`
	IsInACycle                          *bool          `protobuf:"varint,4,opt,name=is_in_a_cycle,json=isInACycle,def=0" json:"is_in_a_cycle,omitempty"`
	Edge                                []*EdgeArchive `protobuf:"bytes,5,rep,name=edge" json:"edge,omitempty"` // Deprecated: Do not use.
	ContainsAFormula                    *bool          `protobuf:"varint,6,opt,name=contains_a_formula,json=containsAFormula,def=1" json:"contains_a_formula,omitempty"`
	HasCalculatedPrecedents             *bool          `protobuf:"varint,7,opt,name=has_calculated_precedents,json=hasCalculatedPrecedents,def=0" json:"has_calculated_precedents,omitempty"`
	CalculatePrecedentsOnNextRecalc     *bool          `protobuf:"varint,8,opt,name=calculate_precedents_on_next_recalc,json=calculatePrecedentsOnNextRecalc,def=0" json:"calculate_precedents_on_next_recalc,omitempty"` // Deprecated: Do not use.
	TranslateForExcelImportOnNextRecalc *bool          `protobuf:"varint,10,opt,name=translate_for_excel_import_on_next_recalc,json=translateForExcelImportOnNextRecalc,def=0" json:"translate_for_excel_import_on_next_recalc,omitempty"`
	Edges                               *EdgesArchive  `protobuf:"bytes,9,opt,name=edges" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}       `json:"-"`
	XXX_unrecognized                    []byte         `json:"-"`
	XXX_sizecache                       int32          `json:"-"`
}

func (m *CellRecordArchive) Reset()         { *m = CellRecordArchive{} }
func (m *CellRecordArchive) String() string { return proto.CompactTextString(m) }
func (*CellRecordArchive) ProtoMessage()    {}
func (*CellRecordArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{8}
}

func (m *CellRecordArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRecordArchive.Unmarshal(m, b)
}
func (m *CellRecordArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRecordArchive.Marshal(b, m, deterministic)
}
func (m *CellRecordArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRecordArchive.Merge(m, src)
}
func (m *CellRecordArchive) XXX_Size() int {
	return xxx_messageInfo_CellRecordArchive.Size(m)
}
func (m *CellRecordArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRecordArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellRecordArchive proto.InternalMessageInfo

const Default_CellRecordArchive_DirtySelfPlusPrecedentsCount uint32 = 0
const Default_CellRecordArchive_IsInACycle bool = false
const Default_CellRecordArchive_ContainsAFormula bool = true
const Default_CellRecordArchive_HasCalculatedPrecedents bool = false
const Default_CellRecordArchive_CalculatePrecedentsOnNextRecalc bool = false
const Default_CellRecordArchive_TranslateForExcelImportOnNextRecalc bool = false

func (m *CellRecordArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellRecordArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellRecordArchive) GetDirtySelfPlusPrecedentsCount() uint32 {
	if m != nil && m.DirtySelfPlusPrecedentsCount != nil {
		return *m.DirtySelfPlusPrecedentsCount
	}
	return Default_CellRecordArchive_DirtySelfPlusPrecedentsCount
}

func (m *CellRecordArchive) GetIsInACycle() bool {
	if m != nil && m.IsInACycle != nil {
		return *m.IsInACycle
	}
	return Default_CellRecordArchive_IsInACycle
}

// Deprecated: Do not use.
func (m *CellRecordArchive) GetEdge() []*EdgeArchive {
	if m != nil {
		return m.Edge
	}
	return nil
}

func (m *CellRecordArchive) GetContainsAFormula() bool {
	if m != nil && m.ContainsAFormula != nil {
		return *m.ContainsAFormula
	}
	return Default_CellRecordArchive_ContainsAFormula
}

func (m *CellRecordArchive) GetHasCalculatedPrecedents() bool {
	if m != nil && m.HasCalculatedPrecedents != nil {
		return *m.HasCalculatedPrecedents
	}
	return Default_CellRecordArchive_HasCalculatedPrecedents
}

// Deprecated: Do not use.
func (m *CellRecordArchive) GetCalculatePrecedentsOnNextRecalc() bool {
	if m != nil && m.CalculatePrecedentsOnNextRecalc != nil {
		return *m.CalculatePrecedentsOnNextRecalc
	}
	return Default_CellRecordArchive_CalculatePrecedentsOnNextRecalc
}

func (m *CellRecordArchive) GetTranslateForExcelImportOnNextRecalc() bool {
	if m != nil && m.TranslateForExcelImportOnNextRecalc != nil {
		return *m.TranslateForExcelImportOnNextRecalc
	}
	return Default_CellRecordArchive_TranslateForExcelImportOnNextRecalc
}

func (m *CellRecordArchive) GetEdges() *EdgesArchive {
	if m != nil {
		return m.Edges
	}
	return nil
}

type CellDependenciesArchive struct {
	CellRecord           []*CellRecordArchive `protobuf:"bytes,1,rep,name=cell_record,json=cellRecord" json:"cell_record,omitempty"`
	NumDirtyCells        *uint32              `protobuf:"varint,2,opt,name=num_dirty_cells,json=numDirtyCells" json:"num_dirty_cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CellDependenciesArchive) Reset()         { *m = CellDependenciesArchive{} }
func (m *CellDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*CellDependenciesArchive) ProtoMessage()    {}
func (*CellDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{9}
}

func (m *CellDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellDependenciesArchive.Unmarshal(m, b)
}
func (m *CellDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *CellDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellDependenciesArchive.Merge(m, src)
}
func (m *CellDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_CellDependenciesArchive.Size(m)
}
func (m *CellDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellDependenciesArchive proto.InternalMessageInfo

func (m *CellDependenciesArchive) GetCellRecord() []*CellRecordArchive {
	if m != nil {
		return m.CellRecord
	}
	return nil
}

func (m *CellDependenciesArchive) GetNumDirtyCells() uint32 {
	if m != nil && m.NumDirtyCells != nil {
		return *m.NumDirtyCells
	}
	return 0
}

type VolatileDependenciesArchive struct {
	VolatileTimeCellColumn         []uint32                 `protobuf:"varint,1,rep,name=volatile_time_cell_column,json=volatileTimeCellColumn" json:"volatile_time_cell_column,omitempty"`
	VolatileTimeCellRow            []uint32                 `protobuf:"varint,2,rep,name=volatile_time_cell_row,json=volatileTimeCellRow" json:"volatile_time_cell_row,omitempty"`
	VolatileRandomCellColumn       []uint32                 `protobuf:"varint,3,rep,name=volatile_random_cell_column,json=volatileRandomCellColumn" json:"volatile_random_cell_column,omitempty"`
	VolatileRandomCellRow          []uint32                 `protobuf:"varint,4,rep,name=volatile_random_cell_row,json=volatileRandomCellRow" json:"volatile_random_cell_row,omitempty"`
	VolatileLocaleCellColumn       []uint32                 `protobuf:"varint,15,rep,name=volatile_locale_cell_column,json=volatileLocaleCellColumn" json:"volatile_locale_cell_column,omitempty"`
	VolatileLocaleCellRow          []uint32                 `protobuf:"varint,16,rep,name=volatile_locale_cell_row,json=volatileLocaleCellRow" json:"volatile_locale_cell_row,omitempty"`
	VolatileLocationCellColumn     []uint32                 `protobuf:"varint,5,rep,name=volatile_location_cell_column,json=volatileLocationCellColumn" json:"volatile_location_cell_column,omitempty"`
	VolatileLocationCellRow        []uint32                 `protobuf:"varint,6,rep,name=volatile_location_cell_row,json=volatileLocationCellRow" json:"volatile_location_cell_row,omitempty"`
	VolatileCompassCellColumn      []uint32                 `protobuf:"varint,7,rep,name=volatile_compass_cell_column,json=volatileCompassCellColumn" json:"volatile_compass_cell_column,omitempty"`
	VolatileCompassCellRow         []uint32                 `protobuf:"varint,8,rep,name=volatile_compass_cell_row,json=volatileCompassCellRow" json:"volatile_compass_cell_row,omitempty"`
	CalculatedDependencyCellColumn []uint32                 `protobuf:"varint,9,rep,name=calculated_dependency_cell_column,json=calculatedDependencyCellColumn" json:"calculated_dependency_cell_column,omitempty"`
	CalculatedDependencyCellRow    []uint32                 `protobuf:"varint,10,rep,name=calculated_dependency_cell_row,json=calculatedDependencyCellRow" json:"calculated_dependency_cell_row,omitempty"`
	VolatileGeometryCellReference  []*CellReferenceArchive  `protobuf:"bytes,13,rep,name=volatile_geometry_cell_reference,json=volatileGeometryCellReference" json:"volatile_geometry_cell_reference,omitempty"`
	VolatileGeometryCell           []*CellCoordinateArchive `protobuf:"bytes,11,rep,name=volatile_geometry_cell,json=volatileGeometryCell" json:"volatile_geometry_cell,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                 `json:"-"`
	XXX_unrecognized               []byte                   `json:"-"`
	XXX_sizecache                  int32                    `json:"-"`
}

func (m *VolatileDependenciesArchive) Reset()         { *m = VolatileDependenciesArchive{} }
func (m *VolatileDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*VolatileDependenciesArchive) ProtoMessage()    {}
func (*VolatileDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{10}
}

func (m *VolatileDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolatileDependenciesArchive.Unmarshal(m, b)
}
func (m *VolatileDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolatileDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *VolatileDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolatileDependenciesArchive.Merge(m, src)
}
func (m *VolatileDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_VolatileDependenciesArchive.Size(m)
}
func (m *VolatileDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_VolatileDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_VolatileDependenciesArchive proto.InternalMessageInfo

func (m *VolatileDependenciesArchive) GetVolatileTimeCellColumn() []uint32 {
	if m != nil {
		return m.VolatileTimeCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileTimeCellRow() []uint32 {
	if m != nil {
		return m.VolatileTimeCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRandomCellColumn() []uint32 {
	if m != nil {
		return m.VolatileRandomCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRandomCellRow() []uint32 {
	if m != nil {
		return m.VolatileRandomCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocaleCellColumn() []uint32 {
	if m != nil {
		return m.VolatileLocaleCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocaleCellRow() []uint32 {
	if m != nil {
		return m.VolatileLocaleCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocationCellColumn() []uint32 {
	if m != nil {
		return m.VolatileLocationCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocationCellRow() []uint32 {
	if m != nil {
		return m.VolatileLocationCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileCompassCellColumn() []uint32 {
	if m != nil {
		return m.VolatileCompassCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileCompassCellRow() []uint32 {
	if m != nil {
		return m.VolatileCompassCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetCalculatedDependencyCellColumn() []uint32 {
	if m != nil {
		return m.CalculatedDependencyCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetCalculatedDependencyCellRow() []uint32 {
	if m != nil {
		return m.CalculatedDependencyCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileGeometryCellReference() []*CellReferenceArchive {
	if m != nil {
		return m.VolatileGeometryCellReference
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileGeometryCell() []*CellCoordinateArchive {
	if m != nil {
		return m.VolatileGeometryCell
	}
	return nil
}

type RangeBackDependencyArchive struct {
	CellCoordRow           *uint32                        `protobuf:"varint,1,req,name=cell_coord_row,json=cellCoordRow" json:"cell_coord_row,omitempty"`
	CellCoordColumn        *uint32                        `protobuf:"varint,2,req,name=cell_coord_column,json=cellCoordColumn" json:"cell_coord_column,omitempty"`
	RangeReference         *RangeReferenceArchive         `protobuf:"bytes,3,opt,name=range_reference,json=rangeReference" json:"range_reference,omitempty"`
	InternalRangeReference *InternalRangeReferenceArchive `protobuf:"bytes,4,opt,name=internal_range_reference,json=internalRangeReference" json:"internal_range_reference,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                       `json:"-"`
	XXX_unrecognized       []byte                         `json:"-"`
	XXX_sizecache          int32                          `json:"-"`
}

func (m *RangeBackDependencyArchive) Reset()         { *m = RangeBackDependencyArchive{} }
func (m *RangeBackDependencyArchive) String() string { return proto.CompactTextString(m) }
func (*RangeBackDependencyArchive) ProtoMessage()    {}
func (*RangeBackDependencyArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{11}
}

func (m *RangeBackDependencyArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeBackDependencyArchive.Unmarshal(m, b)
}
func (m *RangeBackDependencyArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeBackDependencyArchive.Marshal(b, m, deterministic)
}
func (m *RangeBackDependencyArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeBackDependencyArchive.Merge(m, src)
}
func (m *RangeBackDependencyArchive) XXX_Size() int {
	return xxx_messageInfo_RangeBackDependencyArchive.Size(m)
}
func (m *RangeBackDependencyArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeBackDependencyArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeBackDependencyArchive proto.InternalMessageInfo

func (m *RangeBackDependencyArchive) GetCellCoordRow() uint32 {
	if m != nil && m.CellCoordRow != nil {
		return *m.CellCoordRow
	}
	return 0
}

func (m *RangeBackDependencyArchive) GetCellCoordColumn() uint32 {
	if m != nil && m.CellCoordColumn != nil {
		return *m.CellCoordColumn
	}
	return 0
}

func (m *RangeBackDependencyArchive) GetRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.RangeReference
	}
	return nil
}

func (m *RangeBackDependencyArchive) GetInternalRangeReference() *InternalRangeReferenceArchive {
	if m != nil {
		return m.InternalRangeReference
	}
	return nil
}

type RTreeInternalNodeContentsArchive struct {
	Min                  []uint32          `protobuf:"varint,1,rep,name=min" json:"min,omitempty"`
	Max                  []uint32          `protobuf:"varint,2,rep,name=max" json:"max,omitempty"`
	Child                *RTreeNodeArchive `protobuf:"bytes,3,req,name=child" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RTreeInternalNodeContentsArchive) Reset()         { *m = RTreeInternalNodeContentsArchive{} }
func (m *RTreeInternalNodeContentsArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeInternalNodeContentsArchive) ProtoMessage()    {}
func (*RTreeInternalNodeContentsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{12}
}

func (m *RTreeInternalNodeContentsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Unmarshal(m, b)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Marshal(b, m, deterministic)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeInternalNodeContentsArchive.Merge(m, src)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Size(m)
}
func (m *RTreeInternalNodeContentsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeInternalNodeContentsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeInternalNodeContentsArchive proto.InternalMessageInfo

func (m *RTreeInternalNodeContentsArchive) GetMin() []uint32 {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *RTreeInternalNodeContentsArchive) GetMax() []uint32 {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *RTreeInternalNodeContentsArchive) GetChild() *RTreeNodeArchive {
	if m != nil {
		return m.Child
	}
	return nil
}

type RTreeLeafNodeContentsArchive struct {
	Min                  []uint32              `protobuf:"varint,1,rep,name=min" json:"min,omitempty"`
	Max                  []uint32              `protobuf:"varint,2,rep,name=max" json:"max,omitempty"`
	CellReference        *CellReferenceArchive `protobuf:"bytes,3,req,name=cell_reference,json=cellReference" json:"cell_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RTreeLeafNodeContentsArchive) Reset()         { *m = RTreeLeafNodeContentsArchive{} }
func (m *RTreeLeafNodeContentsArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeLeafNodeContentsArchive) ProtoMessage()    {}
func (*RTreeLeafNodeContentsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{13}
}

func (m *RTreeLeafNodeContentsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Unmarshal(m, b)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Marshal(b, m, deterministic)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeLeafNodeContentsArchive.Merge(m, src)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Size(m)
}
func (m *RTreeLeafNodeContentsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeLeafNodeContentsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeLeafNodeContentsArchive proto.InternalMessageInfo

func (m *RTreeLeafNodeContentsArchive) GetMin() []uint32 {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *RTreeLeafNodeContentsArchive) GetMax() []uint32 {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *RTreeLeafNodeContentsArchive) GetCellReference() *CellReferenceArchive {
	if m != nil {
		return m.CellReference
	}
	return nil
}

type RTreeNodeArchive struct {
	Level                *uint32                             `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	Count                *uint32                             `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	InternalNodeContents []*RTreeInternalNodeContentsArchive `protobuf:"bytes,3,rep,name=internal_node_contents,json=internalNodeContents" json:"internal_node_contents,omitempty"`
	LeafNodeContents     []*RTreeLeafNodeContentsArchive     `protobuf:"bytes,4,rep,name=leaf_node_contents,json=leafNodeContents" json:"leaf_node_contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RTreeNodeArchive) Reset()         { *m = RTreeNodeArchive{} }
func (m *RTreeNodeArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeNodeArchive) ProtoMessage()    {}
func (*RTreeNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{14}
}

func (m *RTreeNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeNodeArchive.Unmarshal(m, b)
}
func (m *RTreeNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeNodeArchive.Marshal(b, m, deterministic)
}
func (m *RTreeNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeNodeArchive.Merge(m, src)
}
func (m *RTreeNodeArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeNodeArchive.Size(m)
}
func (m *RTreeNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeNodeArchive proto.InternalMessageInfo

func (m *RTreeNodeArchive) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *RTreeNodeArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *RTreeNodeArchive) GetInternalNodeContents() []*RTreeInternalNodeContentsArchive {
	if m != nil {
		return m.InternalNodeContents
	}
	return nil
}

func (m *RTreeNodeArchive) GetLeafNodeContents() []*RTreeLeafNodeContentsArchive {
	if m != nil {
		return m.LeafNodeContents
	}
	return nil
}

type RTreeArchive struct {
	DataFileId           *uint32           `protobuf:"varint,1,req,name=data_file_id,json=dataFileId" json:"data_file_id,omitempty"`
	DataSize             *uint32           `protobuf:"varint,2,req,name=data_size,json=dataSize" json:"data_size,omitempty"`
	DataNumDims          *uint32           `protobuf:"varint,3,req,name=data_num_dims,json=dataNumDims" json:"data_num_dims,omitempty"`
	DataElemSize         *uint32           `protobuf:"varint,4,req,name=data_elem_size,json=dataElemSize" json:"data_elem_size,omitempty"`
	DataElemRealSize     *uint32           `protobuf:"varint,5,req,name=data_elem_real_size,json=dataElemRealSize" json:"data_elem_real_size,omitempty"`
	DataMaxNodes         *uint32           `protobuf:"varint,6,req,name=data_max_nodes,json=dataMaxNodes" json:"data_max_nodes,omitempty"`
	DataMinNodes         *uint32           `protobuf:"varint,7,req,name=data_min_nodes,json=dataMinNodes" json:"data_min_nodes,omitempty"`
	Root                 *RTreeNodeArchive `protobuf:"bytes,8,req,name=root" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RTreeArchive) Reset()         { *m = RTreeArchive{} }
func (m *RTreeArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeArchive) ProtoMessage()    {}
func (*RTreeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{15}
}

func (m *RTreeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeArchive.Unmarshal(m, b)
}
func (m *RTreeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeArchive.Marshal(b, m, deterministic)
}
func (m *RTreeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeArchive.Merge(m, src)
}
func (m *RTreeArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeArchive.Size(m)
}
func (m *RTreeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeArchive proto.InternalMessageInfo

func (m *RTreeArchive) GetDataFileId() uint32 {
	if m != nil && m.DataFileId != nil {
		return *m.DataFileId
	}
	return 0
}

func (m *RTreeArchive) GetDataSize() uint32 {
	if m != nil && m.DataSize != nil {
		return *m.DataSize
	}
	return 0
}

func (m *RTreeArchive) GetDataNumDims() uint32 {
	if m != nil && m.DataNumDims != nil {
		return *m.DataNumDims
	}
	return 0
}

func (m *RTreeArchive) GetDataElemSize() uint32 {
	if m != nil && m.DataElemSize != nil {
		return *m.DataElemSize
	}
	return 0
}

func (m *RTreeArchive) GetDataElemRealSize() uint32 {
	if m != nil && m.DataElemRealSize != nil {
		return *m.DataElemRealSize
	}
	return 0
}

func (m *RTreeArchive) GetDataMaxNodes() uint32 {
	if m != nil && m.DataMaxNodes != nil {
		return *m.DataMaxNodes
	}
	return 0
}

func (m *RTreeArchive) GetDataMinNodes() uint32 {
	if m != nil && m.DataMinNodes != nil {
		return *m.DataMinNodes
	}
	return 0
}

func (m *RTreeArchive) GetRoot() *RTreeNodeArchive {
	if m != nil {
		return m.Root
	}
	return nil
}

type RangeDependenciesArchive struct {
	RTree                *RTreeArchive                 `protobuf:"bytes,1,opt,name=r_tree,json=rTree" json:"r_tree,omitempty"`
	BackDependency       []*RangeBackDependencyArchive `protobuf:"bytes,2,rep,name=back_dependency,json=backDependency" json:"back_dependency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RangeDependenciesArchive) Reset()         { *m = RangeDependenciesArchive{} }
func (m *RangeDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*RangeDependenciesArchive) ProtoMessage()    {}
func (*RangeDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{16}
}

func (m *RangeDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeDependenciesArchive.Unmarshal(m, b)
}
func (m *RangeDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *RangeDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeDependenciesArchive.Merge(m, src)
}
func (m *RangeDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_RangeDependenciesArchive.Size(m)
}
func (m *RangeDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeDependenciesArchive proto.InternalMessageInfo

func (m *RangeDependenciesArchive) GetRTree() *RTreeArchive {
	if m != nil {
		return m.RTree
	}
	return nil
}

func (m *RangeDependenciesArchive) GetBackDependency() []*RangeBackDependencyArchive {
	if m != nil {
		return m.BackDependency
	}
	return nil
}

type SpanningDependenciesArchive struct {
	Column                       []uint32                                                    `protobuf:"varint,1,rep,name=column" json:"column,omitempty"`
	RangeContext                 []SpanningDependenciesArchive_RangeContext                  `protobuf:"varint,2,rep,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	Cell                         []*CellReferenceArchive                                     `protobuf:"bytes,3,rep,name=cell" json:"cell,omitempty"`
	TotalRangeForDeletedTable    *RangeCoordinateArchive                                     `protobuf:"bytes,4,opt,name=total_range_for_deleted_table,json=totalRangeForDeletedTable" json:"total_range_for_deleted_table,omitempty"`
	BodyRangeForDeletedTable     *RangeCoordinateArchive                                     `protobuf:"bytes,5,opt,name=body_range_for_deleted_table,json=bodyRangeForDeletedTable" json:"body_range_for_deleted_table,omitempty"`
	ReferringColumnToLocalCells  []*SpanningDependenciesArchive_ReferringColumnToLocalCells  `protobuf:"bytes,6,rep,name=referring_column_to_local_cells,json=referringColumnToLocalCells" json:"referring_column_to_local_cells,omitempty"`
	ReferringColumnToRemoteCells []*SpanningDependenciesArchive_ReferringColumnToRemoteCells `protobuf:"bytes,7,rep,name=referring_column_to_remote_cells,json=referringColumnToRemoteCells" json:"referring_column_to_remote_cells,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                                                    `json:"-"`
	XXX_unrecognized             []byte                                                      `json:"-"`
	XXX_sizecache                int32                                                       `json:"-"`
}

func (m *SpanningDependenciesArchive) Reset()         { *m = SpanningDependenciesArchive{} }
func (m *SpanningDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*SpanningDependenciesArchive) ProtoMessage()    {}
func (*SpanningDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{17}
}

func (m *SpanningDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive.Merge(m, src)
}
func (m *SpanningDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive.Size(m)
}
func (m *SpanningDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive proto.InternalMessageInfo

func (m *SpanningDependenciesArchive) GetColumn() []uint32 {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetRangeContext() []SpanningDependenciesArchive_RangeContext {
	if m != nil {
		return m.RangeContext
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetCell() []*CellReferenceArchive {
	if m != nil {
		return m.Cell
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetTotalRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.TotalRangeForDeletedTable
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetBodyRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.BodyRangeForDeletedTable
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetReferringColumnToLocalCells() []*SpanningDependenciesArchive_ReferringColumnToLocalCells {
	if m != nil {
		return m.ReferringColumnToLocalCells
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetReferringColumnToRemoteCells() []*SpanningDependenciesArchive_ReferringColumnToRemoteCells {
	if m != nil {
		return m.ReferringColumnToRemoteCells
	}
	return nil
}

type SpanningDependenciesArchive_ReferringColumnToLocalCells struct {
	Column               *uint32                                   `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	RangeContext         *SpanningDependenciesArchive_RangeContext `protobuf:"varint,2,req,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	CellCoordinate       []*CellCoordinateArchive                  `protobuf:"bytes,3,rep,name=cell_coordinate,json=cellCoordinate" json:"cell_coordinate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) Reset() {
	*m = SpanningDependenciesArchive_ReferringColumnToLocalCells{}
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesArchive_ReferringColumnToLocalCells) ProtoMessage() {}
func (*SpanningDependenciesArchive_ReferringColumnToLocalCells) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{17, 0}
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Merge(m, src)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Size(m)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells proto.InternalMessageInfo

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetRangeContext() SpanningDependenciesArchive_RangeContext {
	if m != nil && m.RangeContext != nil {
		return *m.RangeContext
	}
	return SpanningDependenciesArchive_DEFAULT
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetCellCoordinate() []*CellCoordinateArchive {
	if m != nil {
		return m.CellCoordinate
	}
	return nil
}

type SpanningDependenciesArchive_ReferringColumnToRemoteCells struct {
	Column                *uint32                                   `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	RangeContext          *SpanningDependenciesArchive_RangeContext `protobuf:"varint,2,req,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	InternalCellReference []*InternalCellReferenceArchive           `protobuf:"bytes,3,rep,name=internal_cell_reference,json=internalCellReference" json:"internal_cell_reference,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                  `json:"-"`
	XXX_unrecognized      []byte                                    `json:"-"`
	XXX_sizecache         int32                                     `json:"-"`
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) Reset() {
	*m = SpanningDependenciesArchive_ReferringColumnToRemoteCells{}
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesArchive_ReferringColumnToRemoteCells) ProtoMessage() {}
func (*SpanningDependenciesArchive_ReferringColumnToRemoteCells) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{17, 1}
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Merge(m, src)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Size(m)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells proto.InternalMessageInfo

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetRangeContext() SpanningDependenciesArchive_RangeContext {
	if m != nil && m.RangeContext != nil {
		return *m.RangeContext
	}
	return SpanningDependenciesArchive_DEFAULT
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetInternalCellReference() []*InternalCellReferenceArchive {
	if m != nil {
		return m.InternalCellReference
	}
	return nil
}

type WholeOwnerDependenciesArchive struct {
	DependentCell        []*InternalCellReferenceArchive `protobuf:"bytes,1,rep,name=dependent_cell,json=dependentCell" json:"dependent_cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *WholeOwnerDependenciesArchive) Reset()         { *m = WholeOwnerDependenciesArchive{} }
func (m *WholeOwnerDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*WholeOwnerDependenciesArchive) ProtoMessage()    {}
func (*WholeOwnerDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{18}
}

func (m *WholeOwnerDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Unmarshal(m, b)
}
func (m *WholeOwnerDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *WholeOwnerDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WholeOwnerDependenciesArchive.Merge(m, src)
}
func (m *WholeOwnerDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Size(m)
}
func (m *WholeOwnerDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_WholeOwnerDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_WholeOwnerDependenciesArchive proto.InternalMessageInfo

func (m *WholeOwnerDependenciesArchive) GetDependentCell() []*InternalCellReferenceArchive {
	if m != nil {
		return m.DependentCell
	}
	return nil
}

type FormulaOwnerInfoArchive struct {
	FormulaOwnerId             *CFUUIDArchive                 `protobuf:"bytes,1,req,name=formula_owner_id,json=formulaOwnerId" json:"formula_owner_id,omitempty"`
	CellDependencies           *CellDependenciesArchive       `protobuf:"bytes,2,opt,name=cell_dependencies,json=cellDependencies" json:"cell_dependencies,omitempty"`
	RangeDependencies          *RangeDependenciesArchive      `protobuf:"bytes,3,opt,name=range_dependencies,json=rangeDependencies" json:"range_dependencies,omitempty"`
	VolatileDependencies       *VolatileDependenciesArchive   `protobuf:"bytes,4,opt,name=volatile_dependencies,json=volatileDependencies" json:"volatile_dependencies,omitempty"`
	SpanningColumnDependencies *SpanningDependenciesArchive   `protobuf:"bytes,5,opt,name=spanning_column_dependencies,json=spanningColumnDependencies" json:"spanning_column_dependencies,omitempty"`
	SpanningRowDependencies    *SpanningDependenciesArchive   `protobuf:"bytes,6,opt,name=spanning_row_dependencies,json=spanningRowDependencies" json:"spanning_row_dependencies,omitempty"`
	WholeOwnerDependencies     *WholeOwnerDependenciesArchive `protobuf:"bytes,8,opt,name=whole_owner_dependencies,json=wholeOwnerDependencies" json:"whole_owner_dependencies,omitempty"`
	FormulaOwner               *TSP.Reference                 `protobuf:"bytes,7,opt,name=formula_owner,json=formulaOwner" json:"formula_owner,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                       `json:"-"`
	XXX_unrecognized           []byte                         `json:"-"`
	XXX_sizecache              int32                          `json:"-"`
}

func (m *FormulaOwnerInfoArchive) Reset()         { *m = FormulaOwnerInfoArchive{} }
func (m *FormulaOwnerInfoArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaOwnerInfoArchive) ProtoMessage()    {}
func (*FormulaOwnerInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{19}
}

func (m *FormulaOwnerInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Unmarshal(m, b)
}
func (m *FormulaOwnerInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Marshal(b, m, deterministic)
}
func (m *FormulaOwnerInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaOwnerInfoArchive.Merge(m, src)
}
func (m *FormulaOwnerInfoArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Size(m)
}
func (m *FormulaOwnerInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaOwnerInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaOwnerInfoArchive proto.InternalMessageInfo

func (m *FormulaOwnerInfoArchive) GetFormulaOwnerId() *CFUUIDArchive {
	if m != nil {
		return m.FormulaOwnerId
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetCellDependencies() *CellDependenciesArchive {
	if m != nil {
		return m.CellDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetRangeDependencies() *RangeDependenciesArchive {
	if m != nil {
		return m.RangeDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetVolatileDependencies() *VolatileDependenciesArchive {
	if m != nil {
		return m.VolatileDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetSpanningColumnDependencies() *SpanningDependenciesArchive {
	if m != nil {
		return m.SpanningColumnDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetSpanningRowDependencies() *SpanningDependenciesArchive {
	if m != nil {
		return m.SpanningRowDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetWholeOwnerDependencies() *WholeOwnerDependenciesArchive {
	if m != nil {
		return m.WholeOwnerDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetFormulaOwner() *TSP.Reference {
	if m != nil {
		return m.FormulaOwner
	}
	return nil
}

type OwnerIDMapArchive struct {
	MapEntry             []*OwnerIDMapArchive_OwnerIDMapArchiveEntry `protobuf:"bytes,1,rep,name=map_entry,json=mapEntry" json:"map_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *OwnerIDMapArchive) Reset()         { *m = OwnerIDMapArchive{} }
func (m *OwnerIDMapArchive) String() string { return proto.CompactTextString(m) }
func (*OwnerIDMapArchive) ProtoMessage()    {}
func (*OwnerIDMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{20}
}

func (m *OwnerIDMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerIDMapArchive.Unmarshal(m, b)
}
func (m *OwnerIDMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerIDMapArchive.Marshal(b, m, deterministic)
}
func (m *OwnerIDMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerIDMapArchive.Merge(m, src)
}
func (m *OwnerIDMapArchive) XXX_Size() int {
	return xxx_messageInfo_OwnerIDMapArchive.Size(m)
}
func (m *OwnerIDMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerIDMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerIDMapArchive proto.InternalMessageInfo

func (m *OwnerIDMapArchive) GetMapEntry() []*OwnerIDMapArchive_OwnerIDMapArchiveEntry {
	if m != nil {
		return m.MapEntry
	}
	return nil
}

type OwnerIDMapArchive_OwnerIDMapArchiveEntry struct {
	InternalOwnerId      *uint32        `protobuf:"varint,1,req,name=internal_owner_id,json=internalOwnerId" json:"internal_owner_id,omitempty"`
	OwnerId              *CFUUIDArchive `protobuf:"bytes,2,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) Reset() {
	*m = OwnerIDMapArchive_OwnerIDMapArchiveEntry{}
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) String() string { return proto.CompactTextString(m) }
func (*OwnerIDMapArchive_OwnerIDMapArchiveEntry) ProtoMessage()    {}
func (*OwnerIDMapArchive_OwnerIDMapArchiveEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{20, 0}
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Unmarshal(m, b)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Marshal(b, m, deterministic)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Merge(m, src)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Size() int {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Size(m)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry proto.InternalMessageInfo

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) GetInternalOwnerId() uint32 {
	if m != nil && m.InternalOwnerId != nil {
		return *m.InternalOwnerId
	}
	return 0
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) GetOwnerId() *CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

type DependencyTrackerArchive struct {
	FormulaOwnerInfo     []*FormulaOwnerInfoArchive      `protobuf:"bytes,1,rep,name=formula_owner_info,json=formulaOwnerInfo" json:"formula_owner_info,omitempty"`
	DirtyLeaf            []*CellReferenceArchive         `protobuf:"bytes,2,rep,name=dirty_leaf,json=dirtyLeaf" json:"dirty_leaf,omitempty"`
	InternalDirtyLeaf    []*InternalCellReferenceArchive `protobuf:"bytes,4,rep,name=internal_dirty_leaf,json=internalDirtyLeaf" json:"internal_dirty_leaf,omitempty"`
	OwnerIdMap           *OwnerIDMapArchive              `protobuf:"bytes,3,opt,name=owner_id_map,json=ownerIdMap" json:"owner_id_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DependencyTrackerArchive) Reset()         { *m = DependencyTrackerArchive{} }
func (m *DependencyTrackerArchive) String() string { return proto.CompactTextString(m) }
func (*DependencyTrackerArchive) ProtoMessage()    {}
func (*DependencyTrackerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{21}
}

func (m *DependencyTrackerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DependencyTrackerArchive.Unmarshal(m, b)
}
func (m *DependencyTrackerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DependencyTrackerArchive.Marshal(b, m, deterministic)
}
func (m *DependencyTrackerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DependencyTrackerArchive.Merge(m, src)
}
func (m *DependencyTrackerArchive) XXX_Size() int {
	return xxx_messageInfo_DependencyTrackerArchive.Size(m)
}
func (m *DependencyTrackerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DependencyTrackerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DependencyTrackerArchive proto.InternalMessageInfo

func (m *DependencyTrackerArchive) GetFormulaOwnerInfo() []*FormulaOwnerInfoArchive {
	if m != nil {
		return m.FormulaOwnerInfo
	}
	return nil
}

func (m *DependencyTrackerArchive) GetDirtyLeaf() []*CellReferenceArchive {
	if m != nil {
		return m.DirtyLeaf
	}
	return nil
}

func (m *DependencyTrackerArchive) GetInternalDirtyLeaf() []*InternalCellReferenceArchive {
	if m != nil {
		return m.InternalDirtyLeaf
	}
	return nil
}

func (m *DependencyTrackerArchive) GetOwnerIdMap() *OwnerIDMapArchive {
	if m != nil {
		return m.OwnerIdMap
	}
	return nil
}

type NameTrackedReferencePair struct {
	Name                 *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	TrackedReference     *TSP.Reference `protobuf:"bytes,2,opt,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"`
	TrackedReferenceId   *uint32        `protobuf:"varint,3,opt,name=tracked_reference_id,json=trackedReferenceId" json:"tracked_reference_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NameTrackedReferencePair) Reset()         { *m = NameTrackedReferencePair{} }
func (m *NameTrackedReferencePair) String() string { return proto.CompactTextString(m) }
func (*NameTrackedReferencePair) ProtoMessage()    {}
func (*NameTrackedReferencePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{22}
}

func (m *NameTrackedReferencePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameTrackedReferencePair.Unmarshal(m, b)
}
func (m *NameTrackedReferencePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameTrackedReferencePair.Marshal(b, m, deterministic)
}
func (m *NameTrackedReferencePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameTrackedReferencePair.Merge(m, src)
}
func (m *NameTrackedReferencePair) XXX_Size() int {
	return xxx_messageInfo_NameTrackedReferencePair.Size(m)
}
func (m *NameTrackedReferencePair) XXX_DiscardUnknown() {
	xxx_messageInfo_NameTrackedReferencePair.DiscardUnknown(m)
}

var xxx_messageInfo_NameTrackedReferencePair proto.InternalMessageInfo

func (m *NameTrackedReferencePair) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameTrackedReferencePair) GetTrackedReference() *TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

func (m *NameTrackedReferencePair) GetTrackedReferenceId() uint32 {
	if m != nil && m.TrackedReferenceId != nil {
		return *m.TrackedReferenceId
	}
	return 0
}

type NamesByTrackedReferenceArchive struct {
	TableId                  *CFUUIDArchive              `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	NameTrackedReferencePair []*NameTrackedReferencePair `protobuf:"bytes,2,rep,name=name_tracked_reference_pair,json=nameTrackedReferencePair" json:"name_tracked_reference_pair,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                    `json:"-"`
	XXX_unrecognized         []byte                      `json:"-"`
	XXX_sizecache            int32                       `json:"-"`
}

func (m *NamesByTrackedReferenceArchive) Reset()         { *m = NamesByTrackedReferenceArchive{} }
func (m *NamesByTrackedReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*NamesByTrackedReferenceArchive) ProtoMessage()    {}
func (*NamesByTrackedReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{23}
}

func (m *NamesByTrackedReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Unmarshal(m, b)
}
func (m *NamesByTrackedReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Marshal(b, m, deterministic)
}
func (m *NamesByTrackedReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamesByTrackedReferenceArchive.Merge(m, src)
}
func (m *NamesByTrackedReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Size(m)
}
func (m *NamesByTrackedReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NamesByTrackedReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NamesByTrackedReferenceArchive proto.InternalMessageInfo

func (m *NamesByTrackedReferenceArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *NamesByTrackedReferenceArchive) GetNameTrackedReferencePair() []*NameTrackedReferencePair {
	if m != nil {
		return m.NameTrackedReferencePair
	}
	return nil
}

type NamedReferenceManagerArchive struct {
	ReferenceTracker               *TSP.Reference                    `protobuf:"bytes,1,req,name=reference_tracker,json=referenceTracker" json:"reference_tracker,omitempty"`
	NamesByTrackedReferenceByTable []*NamesByTrackedReferenceArchive `protobuf:"bytes,2,rep,name=names_by_tracked_reference_by_table,json=namesByTrackedReferenceByTable" json:"names_by_tracked_reference_by_table,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral           struct{}                          `json:"-"`
	XXX_unrecognized               []byte                            `json:"-"`
	XXX_sizecache                  int32                             `json:"-"`
}

func (m *NamedReferenceManagerArchive) Reset()         { *m = NamedReferenceManagerArchive{} }
func (m *NamedReferenceManagerArchive) String() string { return proto.CompactTextString(m) }
func (*NamedReferenceManagerArchive) ProtoMessage()    {}
func (*NamedReferenceManagerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24}
}

func (m *NamedReferenceManagerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedReferenceManagerArchive.Unmarshal(m, b)
}
func (m *NamedReferenceManagerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedReferenceManagerArchive.Marshal(b, m, deterministic)
}
func (m *NamedReferenceManagerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedReferenceManagerArchive.Merge(m, src)
}
func (m *NamedReferenceManagerArchive) XXX_Size() int {
	return xxx_messageInfo_NamedReferenceManagerArchive.Size(m)
}
func (m *NamedReferenceManagerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedReferenceManagerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NamedReferenceManagerArchive proto.InternalMessageInfo

func (m *NamedReferenceManagerArchive) GetReferenceTracker() *TSP.Reference {
	if m != nil {
		return m.ReferenceTracker
	}
	return nil
}

// Deprecated: Do not use.
func (m *NamedReferenceManagerArchive) GetNamesByTrackedReferenceByTable() []*NamesByTrackedReferenceArchive {
	if m != nil {
		return m.NamesByTrackedReferenceByTable
	}
	return nil
}

type CalculationEngineArchive struct {
	BaseDate_1904         *bool                                         `protobuf:"varint,1,opt,name=base_date_1904,json=baseDate1904" json:"base_date_1904,omitempty"`
	DependencyTracker     *DependencyTrackerArchive                     `protobuf:"bytes,2,req,name=dependency_tracker,json=dependencyTracker" json:"dependency_tracker,omitempty"`
	NamedReferenceManager *TSP.Reference                                `protobuf:"bytes,3,opt,name=named_reference_manager,json=namedReferenceManager" json:"named_reference_manager,omitempty"`
	ExcelImportDateMode   *CalculationEngineArchive_ExcelImportDateMode `protobuf:"varint,4,opt,name=excel_import_date_mode,json=excelImportDateMode,enum=TSCE.CalculationEngineArchive_ExcelImportDateMode,def=1" json:"excel_import_date_mode,omitempty"`
	SavedLocaleIdentifier *string                                       `protobuf:"bytes,5,opt,name=saved_locale_identifier,json=savedLocaleIdentifier" json:"saved_locale_identifier,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                      `json:"-"`
	XXX_unrecognized      []byte                                        `json:"-"`
	XXX_sizecache         int32                                         `json:"-"`
}

func (m *CalculationEngineArchive) Reset()         { *m = CalculationEngineArchive{} }
func (m *CalculationEngineArchive) String() string { return proto.CompactTextString(m) }
func (*CalculationEngineArchive) ProtoMessage()    {}
func (*CalculationEngineArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{25}
}

func (m *CalculationEngineArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationEngineArchive.Unmarshal(m, b)
}
func (m *CalculationEngineArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationEngineArchive.Marshal(b, m, deterministic)
}
func (m *CalculationEngineArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationEngineArchive.Merge(m, src)
}
func (m *CalculationEngineArchive) XXX_Size() int {
	return xxx_messageInfo_CalculationEngineArchive.Size(m)
}
func (m *CalculationEngineArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationEngineArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationEngineArchive proto.InternalMessageInfo

const Default_CalculationEngineArchive_ExcelImportDateMode CalculationEngineArchive_ExcelImportDateMode = CalculationEngineArchive_DATE_MODE_1900

func (m *CalculationEngineArchive) GetBaseDate_1904() bool {
	if m != nil && m.BaseDate_1904 != nil {
		return *m.BaseDate_1904
	}
	return false
}

func (m *CalculationEngineArchive) GetDependencyTracker() *DependencyTrackerArchive {
	if m != nil {
		return m.DependencyTracker
	}
	return nil
}

func (m *CalculationEngineArchive) GetNamedReferenceManager() *TSP.Reference {
	if m != nil {
		return m.NamedReferenceManager
	}
	return nil
}

func (m *CalculationEngineArchive) GetExcelImportDateMode() CalculationEngineArchive_ExcelImportDateMode {
	if m != nil && m.ExcelImportDateMode != nil {
		return *m.ExcelImportDateMode
	}
	return Default_CalculationEngineArchive_ExcelImportDateMode
}

func (m *CalculationEngineArchive) GetSavedLocaleIdentifier() string {
	if m != nil && m.SavedLocaleIdentifier != nil {
		return *m.SavedLocaleIdentifier
	}
	return ""
}

type ASTNodeArrayArchive struct {
	ASTNode              []*ASTNodeArrayArchive_ASTNodeArchive `protobuf:"bytes,1,rep,name=AST_node,json=ASTNode" json:"AST_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ASTNodeArrayArchive) Reset()         { *m = ASTNodeArrayArchive{} }
func (m *ASTNodeArrayArchive) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive) ProtoMessage()    {}
func (*ASTNodeArrayArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26}
}

func (m *ASTNodeArrayArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive.Size(m)
}
func (m *ASTNodeArrayArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive) GetASTNode() []*ASTNodeArrayArchive_ASTNodeArchive {
	if m != nil {
		return m.ASTNode
	}
	return nil
}

type ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive struct {
	RowHandle            *uint32  `protobuf:"varint,1,req,name=row_handle,json=rowHandle" json:"row_handle,omitempty"`
	ColumnHandle         *uint32  `protobuf:"varint,2,req,name=column_handle,json=columnHandle" json:"column_handle,omitempty"`
	RowIsSticky          *uint32  `protobuf:"varint,3,req,name=row_is_sticky,json=rowIsSticky" json:"row_is_sticky,omitempty"`
	ColumnIsSticky       *uint32  `protobuf:"varint,4,req,name=column_is_sticky,json=columnIsSticky" json:"column_is_sticky,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive{}
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 0}
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetRowHandle() uint32 {
	if m != nil && m.RowHandle != nil {
		return *m.RowHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetColumnHandle() uint32 {
	if m != nil && m.ColumnHandle != nil {
		return *m.ColumnHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetRowIsSticky() uint32 {
	if m != nil && m.RowIsSticky != nil {
		return *m.RowIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetColumnIsSticky() uint32 {
	if m != nil && m.ColumnIsSticky != nil {
		return *m.ColumnIsSticky
	}
	return 0
}

type ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive struct {
	RowHandle                               *uint32        `protobuf:"varint,1,req,name=row_handle,json=rowHandle" json:"row_handle,omitempty"`
	ColumnHandle                            *uint32        `protobuf:"varint,2,req,name=column_handle,json=columnHandle" json:"column_handle,omitempty"`
	RowIsSticky                             *uint32        `protobuf:"varint,3,req,name=row_is_sticky,json=rowIsSticky" json:"row_is_sticky,omitempty"`
	ColumnIsSticky                          *uint32        `protobuf:"varint,4,req,name=column_is_sticky,json=columnIsSticky" json:"column_is_sticky,omitempty"`
	TableId                                 *CFUUIDArchive `protobuf:"bytes,5,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	ASTReferenceWhitespaceAfterSheetName    *string        `protobuf:"bytes,6,opt,name=AST_reference_whitespace_after_sheet_name,json=ASTReferenceWhitespaceAfterSheetName" json:"AST_reference_whitespace_after_sheet_name,omitempty"`
	ASTReferenceWhitespaceBeforeTableName   *string        `protobuf:"bytes,7,opt,name=AST_reference_whitespace_before_table_name,json=ASTReferenceWhitespaceBeforeTableName" json:"AST_reference_whitespace_before_table_name,omitempty"`
	ASTReferenceWhitespaceAfterTableName    *string        `protobuf:"bytes,8,opt,name=AST_reference_whitespace_after_table_name,json=ASTReferenceWhitespaceAfterTableName" json:"AST_reference_whitespace_after_table_name,omitempty"`
	ASTReferenceWhitespaceBeforeCellAddress *string        `protobuf:"bytes,9,opt,name=AST_reference_whitespace_before_cell_address,json=ASTReferenceWhitespaceBeforeCellAddress" json:"AST_reference_whitespace_before_cell_address,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}       `json:"-"`
	XXX_unrecognized                        []byte         `json:"-"`
	XXX_sizecache                           int32          `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive{}
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 1}
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetRowHandle() uint32 {
	if m != nil && m.RowHandle != nil {
		return *m.RowHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetColumnHandle() uint32 {
	if m != nil && m.ColumnHandle != nil {
		return *m.ColumnHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetRowIsSticky() uint32 {
	if m != nil && m.RowIsSticky != nil {
		return *m.RowIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetColumnIsSticky() uint32 {
	if m != nil && m.ColumnIsSticky != nil {
		return *m.ColumnIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceAfterSheetName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterSheetName != nil {
		return *m.ASTReferenceWhitespaceAfterSheetName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceBeforeTableName() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeTableName != nil {
		return *m.ASTReferenceWhitespaceBeforeTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceAfterTableName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterTableName != nil {
		return *m.ASTReferenceWhitespaceAfterTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceBeforeCellAddress() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeCellAddress != nil {
		return *m.ASTReferenceWhitespaceBeforeCellAddress
	}
	return ""
}

type ASTNodeArrayArchive_ASTColumnCoordinateArchive struct {
	Column               *int32   `protobuf:"zigzag32,1,req,name=column" json:"column,omitempty"`
	Absolute             *bool    `protobuf:"varint,2,opt,name=absolute,def=0" json:"absolute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTColumnCoordinateArchive{}
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTColumnCoordinateArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTColumnCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 2}
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTColumnCoordinateArchive_Absolute bool = false

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) GetColumn() int32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) GetAbsolute() bool {
	if m != nil && m.Absolute != nil {
		return *m.Absolute
	}
	return Default_ASTNodeArrayArchive_ASTColumnCoordinateArchive_Absolute
}

type ASTNodeArrayArchive_ASTRowCoordinateArchive struct {
	Row                  *int32   `protobuf:"zigzag32,1,req,name=row" json:"row,omitempty"`
	Absolute             *bool    `protobuf:"varint,2,opt,name=absolute,def=0" json:"absolute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTRowCoordinateArchive{}
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTRowCoordinateArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTRowCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 3}
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTRowCoordinateArchive_Absolute bool = false

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) GetRow() int32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) GetAbsolute() bool {
	if m != nil && m.Absolute != nil {
		return *m.Absolute
	}
	return Default_ASTNodeArrayArchive_ASTRowCoordinateArchive_Absolute
}

type ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive struct {
	TableId                                 *CFUUIDArchive `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	ASTReferenceWhitespaceAfterSheetName    *string        `protobuf:"bytes,2,opt,name=AST_reference_whitespace_after_sheet_name,json=ASTReferenceWhitespaceAfterSheetName" json:"AST_reference_whitespace_after_sheet_name,omitempty"`
	ASTReferenceWhitespaceBeforeTableName   *string        `protobuf:"bytes,3,opt,name=AST_reference_whitespace_before_table_name,json=ASTReferenceWhitespaceBeforeTableName" json:"AST_reference_whitespace_before_table_name,omitempty"`
	ASTReferenceWhitespaceAfterTableName    *string        `protobuf:"bytes,4,opt,name=AST_reference_whitespace_after_table_name,json=ASTReferenceWhitespaceAfterTableName" json:"AST_reference_whitespace_after_table_name,omitempty"`
	ASTReferenceWhitespaceBeforeCellAddress *string        `protobuf:"bytes,5,opt,name=AST_reference_whitespace_before_cell_address,json=ASTReferenceWhitespaceBeforeCellAddress" json:"AST_reference_whitespace_before_cell_address,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}       `json:"-"`
	XXX_unrecognized                        []byte         `json:"-"`
	XXX_sizecache                           int32          `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive{}
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 4}
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceAfterSheetName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterSheetName != nil {
		return *m.ASTReferenceWhitespaceAfterSheetName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceBeforeTableName() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeTableName != nil {
		return *m.ASTReferenceWhitespaceBeforeTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceAfterTableName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterTableName != nil {
		return *m.ASTReferenceWhitespaceAfterTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceBeforeCellAddress() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeCellAddress != nil {
		return *m.ASTReferenceWhitespaceBeforeCellAddress
	}
	return ""
}

type ASTNodeArrayArchive_ASTNodeArchive struct {
	ASTNodeType                             *ASTNodeArrayArchive_ASTNodeType                            `protobuf:"varint,1,req,name=AST_node_type,json=ASTNodeType,enum=TSCE.ASTNodeArrayArchive_ASTNodeType" json:"AST_node_type,omitempty"`
	ASTFunctionNodeIndex                    *uint32                                                     `protobuf:"varint,2,opt,name=AST_function_node_index,json=ASTFunctionNodeIndex" json:"AST_function_node_index,omitempty"`
	ASTFunctionNodeNumArgs                  *uint32                                                     `protobuf:"varint,3,opt,name=AST_function_node_numArgs,json=ASTFunctionNodeNumArgs" json:"AST_function_node_numArgs,omitempty"`
	ASTNumberNodeNumber                     *float64                                                    `protobuf:"fixed64,4,opt,name=AST_number_node_number,json=ASTNumberNodeNumber" json:"AST_number_node_number,omitempty"`
	ASTBooleanNodeBoolean                   *bool                                                       `protobuf:"varint,5,opt,name=AST_boolean_node_boolean,json=ASTBooleanNodeBoolean" json:"AST_boolean_node_boolean,omitempty"`
	ASTStringNodeString                     *string                                                     `protobuf:"bytes,6,opt,name=AST_string_node_string,json=ASTStringNodeString" json:"AST_string_node_string,omitempty"`
	ASTDateNodeDateNum                      *float64                                                    `protobuf:"fixed64,7,opt,name=AST_date_node_dateNum,json=ASTDateNodeDateNum" json:"AST_date_node_dateNum,omitempty"`
	ASTDateNodeSuppressDateFormat           *bool                                                       `protobuf:"varint,19,opt,name=AST_date_node_suppress_date_format,json=ASTDateNodeSuppressDateFormat" json:"AST_date_node_suppress_date_format,omitempty"`
	ASTDateNodeSuppressTimeFormat           *bool                                                       `protobuf:"varint,20,opt,name=AST_date_node_suppress_time_format,json=ASTDateNodeSuppressTimeFormat" json:"AST_date_node_suppress_time_format,omitempty"`
	ASTDateNodeDateTimeFormat               *string                                                     `protobuf:"bytes,21,opt,name=AST_date_node_date_time_format,json=ASTDateNodeDateTimeFormat" json:"AST_date_node_date_time_format,omitempty"`
	ASTDurationNodeUnitNum                  *float64                                                    `protobuf:"fixed64,8,opt,name=AST_duration_node_unitNum,json=ASTDurationNodeUnitNum" json:"AST_duration_node_unitNum,omitempty"`
	ASTDurationNodeUnit                     *int32                                                      `protobuf:"varint,9,opt,name=AST_duration_node_unit,json=ASTDurationNodeUnit" json:"AST_duration_node_unit,omitempty"`
	ASTDurationNodeStyle                    *uint32                                                     `protobuf:"varint,22,opt,name=AST_duration_node_style,json=ASTDurationNodeStyle" json:"AST_duration_node_style,omitempty"`
	ASTDurationNodeDurationUnitLargest      *uint32                                                     `protobuf:"varint,23,opt,name=AST_duration_node_duration_unit_largest,json=ASTDurationNodeDurationUnitLargest" json:"AST_duration_node_duration_unit_largest,omitempty"`
	ASTDurationNodeDurationUnitSmallest     *uint32                                                     `protobuf:"varint,24,opt,name=AST_duration_node_duration_unit_smallest,json=ASTDurationNodeDurationUnitSmallest" json:"AST_duration_node_duration_unit_smallest,omitempty"`
	ASTDurationNodeUseAutomaticUnits        *bool                                                       `protobuf:"varint,29,opt,name=AST_duration_node_use_automatic_units,json=ASTDurationNodeUseAutomaticUnits" json:"AST_duration_node_use_automatic_units,omitempty"`
	ASTTokenNodeBoolean                     *bool                                                       `protobuf:"varint,10,opt,name=AST_token_node_boolean,json=ASTTokenNodeBoolean" json:"AST_token_node_boolean,omitempty"`
	ASTArrayNodeNumCol                      *uint32                                                     `protobuf:"varint,11,opt,name=AST_array_node_numCol,json=ASTArrayNodeNumCol" json:"AST_array_node_numCol,omitempty"`
	ASTArrayNodeNumRow                      *uint32                                                     `protobuf:"varint,12,opt,name=AST_array_node_numRow,json=ASTArrayNodeNumRow" json:"AST_array_node_numRow,omitempty"`
	ASTListNodeNumArgs                      *uint32                                                     `protobuf:"varint,13,opt,name=AST_list_node_numArgs,json=ASTListNodeNumArgs" json:"AST_list_node_numArgs,omitempty"`
	ASTThunkNodeArray                       *ASTNodeArrayArchive                                        `protobuf:"bytes,14,opt,name=AST_thunk_node_array,json=ASTThunkNodeArray" json:"AST_thunk_node_array,omitempty"`
	ASTLocalCellReferenceNodeReference      *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive       `protobuf:"bytes,15,opt,name=AST_local_cell_reference_node_reference,json=ASTLocalCellReferenceNodeReference" json:"AST_local_cell_reference_node_reference,omitempty"`
	ASTCrossTableCellReferenceNodeReference *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive  `protobuf:"bytes,16,opt,name=AST_cross_table_cell_reference_node_reference,json=ASTCrossTableCellReferenceNodeReference" json:"AST_cross_table_cell_reference_node_reference,omitempty"`
	ASTUnknownFunctionNodeString            *string                                                     `protobuf:"bytes,17,opt,name=AST_unknown_function_node_string,json=ASTUnknownFunctionNodeString" json:"AST_unknown_function_node_string,omitempty"`
	ASTUnknownFunctionNodeNumArgs           *uint32                                                     `protobuf:"varint,18,opt,name=AST_unknown_function_node_numArgs,json=ASTUnknownFunctionNodeNumArgs" json:"AST_unknown_function_node_numArgs,omitempty"`
	ASTWhitespace                           *string                                                     `protobuf:"bytes,25,opt,name=AST_whitespace,json=ASTWhitespace" json:"AST_whitespace,omitempty"`
	ASTColumn                               *ASTNodeArrayArchive_ASTColumnCoordinateArchive             `protobuf:"bytes,26,opt,name=AST_column,json=ASTColumn" json:"AST_column,omitempty"`
	ASTRow                                  *ASTNodeArrayArchive_ASTRowCoordinateArchive                `protobuf:"bytes,27,opt,name=AST_row,json=ASTRow" json:"AST_row,omitempty"`
	ASTCrossTableReferenceExtraInfo         *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive `protobuf:"bytes,28,opt,name=AST_cross_table_reference_extra_info,json=ASTCrossTableReferenceExtraInfo" json:"AST_cross_table_reference_extra_info,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}                                                    `json:"-"`
	XXX_unrecognized                        []byte                                                      `json:"-"`
	XXX_sizecache                           int32                                                       `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) Reset()         { *m = ASTNodeArrayArchive_ASTNodeArchive{} }
func (m *ASTNodeArrayArchive_ASTNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTNodeArchive) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26, 5}
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTNodeType() ASTNodeArrayArchive_ASTNodeType {
	if m != nil && m.ASTNodeType != nil {
		return *m.ASTNodeType
	}
	return ASTNodeArrayArchive_ADDITION_NODE
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTFunctionNodeIndex() uint32 {
	if m != nil && m.ASTFunctionNodeIndex != nil {
		return *m.ASTFunctionNodeIndex
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTFunctionNodeNumArgs() uint32 {
	if m != nil && m.ASTFunctionNodeNumArgs != nil {
		return *m.ASTFunctionNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTNumberNodeNumber() float64 {
	if m != nil && m.ASTNumberNodeNumber != nil {
		return *m.ASTNumberNodeNumber
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTBooleanNodeBoolean() bool {
	if m != nil && m.ASTBooleanNodeBoolean != nil {
		return *m.ASTBooleanNodeBoolean
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTStringNodeString() string {
	if m != nil && m.ASTStringNodeString != nil {
		return *m.ASTStringNodeString
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeDateNum() float64 {
	if m != nil && m.ASTDateNodeDateNum != nil {
		return *m.ASTDateNodeDateNum
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeSuppressDateFormat() bool {
	if m != nil && m.ASTDateNodeSuppressDateFormat != nil {
		return *m.ASTDateNodeSuppressDateFormat
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeSuppressTimeFormat() bool {
	if m != nil && m.ASTDateNodeSuppressTimeFormat != nil {
		return *m.ASTDateNodeSuppressTimeFormat
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeDateTimeFormat() string {
	if m != nil && m.ASTDateNodeDateTimeFormat != nil {
		return *m.ASTDateNodeDateTimeFormat
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUnitNum() float64 {
	if m != nil && m.ASTDurationNodeUnitNum != nil {
		return *m.ASTDurationNodeUnitNum
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUnit() int32 {
	if m != nil && m.ASTDurationNodeUnit != nil {
		return *m.ASTDurationNodeUnit
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeStyle() uint32 {
	if m != nil && m.ASTDurationNodeStyle != nil {
		return *m.ASTDurationNodeStyle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeDurationUnitLargest() uint32 {
	if m != nil && m.ASTDurationNodeDurationUnitLargest != nil {
		return *m.ASTDurationNodeDurationUnitLargest
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeDurationUnitSmallest() uint32 {
	if m != nil && m.ASTDurationNodeDurationUnitSmallest != nil {
		return *m.ASTDurationNodeDurationUnitSmallest
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUseAutomaticUnits() bool {
	if m != nil && m.ASTDurationNodeUseAutomaticUnits != nil {
		return *m.ASTDurationNodeUseAutomaticUnits
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTTokenNodeBoolean() bool {
	if m != nil && m.ASTTokenNodeBoolean != nil {
		return *m.ASTTokenNodeBoolean
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTArrayNodeNumCol() uint32 {
	if m != nil && m.ASTArrayNodeNumCol != nil {
		return *m.ASTArrayNodeNumCol
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTArrayNodeNumRow() uint32 {
	if m != nil && m.ASTArrayNodeNumRow != nil {
		return *m.ASTArrayNodeNumRow
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTListNodeNumArgs() uint32 {
	if m != nil && m.ASTListNodeNumArgs != nil {
		return *m.ASTListNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTThunkNodeArray() *ASTNodeArrayArchive {
	if m != nil {
		return m.ASTThunkNodeArray
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTLocalCellReferenceNodeReference() *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive {
	if m != nil {
		return m.ASTLocalCellReferenceNodeReference
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTCrossTableCellReferenceNodeReference() *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive {
	if m != nil {
		return m.ASTCrossTableCellReferenceNodeReference
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTUnknownFunctionNodeString() string {
	if m != nil && m.ASTUnknownFunctionNodeString != nil {
		return *m.ASTUnknownFunctionNodeString
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTUnknownFunctionNodeNumArgs() uint32 {
	if m != nil && m.ASTUnknownFunctionNodeNumArgs != nil {
		return *m.ASTUnknownFunctionNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTWhitespace() string {
	if m != nil && m.ASTWhitespace != nil {
		return *m.ASTWhitespace
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTColumn() *ASTNodeArrayArchive_ASTColumnCoordinateArchive {
	if m != nil {
		return m.ASTColumn
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTRow() *ASTNodeArrayArchive_ASTRowCoordinateArchive {
	if m != nil {
		return m.ASTRow
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTCrossTableReferenceExtraInfo() *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive {
	if m != nil {
		return m.ASTCrossTableReferenceExtraInfo
	}
	return nil
}

type FormulaTranslationFlagsArchive struct {
	ExcelImportTranslation                 *bool    `protobuf:"varint,1,opt,name=excel_import_translation,json=excelImportTranslation,def=0" json:"excel_import_translation,omitempty"`
	NumberToDateCoercionRemovalTranslation *bool    `protobuf:"varint,2,opt,name=number_to_date_coercion_removal_translation,json=numberToDateCoercionRemovalTranslation,def=0" json:"number_to_date_coercion_removal_translation,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{} `json:"-"`
	XXX_unrecognized                       []byte   `json:"-"`
	XXX_sizecache                          int32    `json:"-"`
}

func (m *FormulaTranslationFlagsArchive) Reset()         { *m = FormulaTranslationFlagsArchive{} }
func (m *FormulaTranslationFlagsArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaTranslationFlagsArchive) ProtoMessage()    {}
func (*FormulaTranslationFlagsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{27}
}

func (m *FormulaTranslationFlagsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Unmarshal(m, b)
}
func (m *FormulaTranslationFlagsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Marshal(b, m, deterministic)
}
func (m *FormulaTranslationFlagsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaTranslationFlagsArchive.Merge(m, src)
}
func (m *FormulaTranslationFlagsArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Size(m)
}
func (m *FormulaTranslationFlagsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaTranslationFlagsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaTranslationFlagsArchive proto.InternalMessageInfo

const Default_FormulaTranslationFlagsArchive_ExcelImportTranslation bool = false
const Default_FormulaTranslationFlagsArchive_NumberToDateCoercionRemovalTranslation bool = false

func (m *FormulaTranslationFlagsArchive) GetExcelImportTranslation() bool {
	if m != nil && m.ExcelImportTranslation != nil {
		return *m.ExcelImportTranslation
	}
	return Default_FormulaTranslationFlagsArchive_ExcelImportTranslation
}

func (m *FormulaTranslationFlagsArchive) GetNumberToDateCoercionRemovalTranslation() bool {
	if m != nil && m.NumberToDateCoercionRemovalTranslation != nil {
		return *m.NumberToDateCoercionRemovalTranslation
	}
	return Default_FormulaTranslationFlagsArchive_NumberToDateCoercionRemovalTranslation
}

type FormulaArchive struct {
	ASTNodeArray         *ASTNodeArrayArchive            `protobuf:"bytes,1,req,name=AST_node_array,json=ASTNodeArray" json:"AST_node_array,omitempty"`
	HostColumn           *uint32                         `protobuf:"varint,2,opt,name=host_column,json=hostColumn" json:"host_column,omitempty"`
	HostRow              *uint32                         `protobuf:"varint,3,opt,name=host_row,json=hostRow" json:"host_row,omitempty"`
	HostColumnIsNegative *bool                           `protobuf:"varint,4,opt,name=host_column_is_negative,json=hostColumnIsNegative,def=0" json:"host_column_is_negative,omitempty"`
	HostRowIsNegative    *bool                           `protobuf:"varint,5,opt,name=host_row_is_negative,json=hostRowIsNegative,def=0" json:"host_row_is_negative,omitempty"`
	TranslationFlags     *FormulaTranslationFlagsArchive `protobuf:"bytes,6,opt,name=translation_flags,json=translationFlags" json:"translation_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FormulaArchive) Reset()         { *m = FormulaArchive{} }
func (m *FormulaArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaArchive) ProtoMessage()    {}
func (*FormulaArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{28}
}

func (m *FormulaArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaArchive.Unmarshal(m, b)
}
func (m *FormulaArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaArchive.Marshal(b, m, deterministic)
}
func (m *FormulaArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaArchive.Merge(m, src)
}
func (m *FormulaArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaArchive.Size(m)
}
func (m *FormulaArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaArchive proto.InternalMessageInfo

const Default_FormulaArchive_HostColumnIsNegative bool = false
const Default_FormulaArchive_HostRowIsNegative bool = false

func (m *FormulaArchive) GetASTNodeArray() *ASTNodeArrayArchive {
	if m != nil {
		return m.ASTNodeArray
	}
	return nil
}

func (m *FormulaArchive) GetHostColumn() uint32 {
	if m != nil && m.HostColumn != nil {
		return *m.HostColumn
	}
	return 0
}

func (m *FormulaArchive) GetHostRow() uint32 {
	if m != nil && m.HostRow != nil {
		return *m.HostRow
	}
	return 0
}

func (m *FormulaArchive) GetHostColumnIsNegative() bool {
	if m != nil && m.HostColumnIsNegative != nil {
		return *m.HostColumnIsNegative
	}
	return Default_FormulaArchive_HostColumnIsNegative
}

func (m *FormulaArchive) GetHostRowIsNegative() bool {
	if m != nil && m.HostRowIsNegative != nil {
		return *m.HostRowIsNegative
	}
	return Default_FormulaArchive_HostRowIsNegative
}

func (m *FormulaArchive) GetTranslationFlags() *FormulaTranslationFlagsArchive {
	if m != nil {
		return m.TranslationFlags
	}
	return nil
}

type FormatStructArchive struct {
	FormatType             *uint32  `protobuf:"varint,1,req,name=format_type,json=formatType" json:"format_type,omitempty"`
	DecimalPlaces          *uint32  `protobuf:"varint,2,opt,name=decimal_places,json=decimalPlaces" json:"decimal_places,omitempty"`
	CurrencyCode           *string  `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	NegativeStyle          *uint32  `protobuf:"varint,4,opt,name=negative_style,json=negativeStyle" json:"negative_style,omitempty"`
	ShowThousandsSeparator *bool    `protobuf:"varint,5,opt,name=show_thousands_separator,json=showThousandsSeparator" json:"show_thousands_separator,omitempty"`
	UseAccountingStyle     *bool    `protobuf:"varint,6,opt,name=use_accounting_style,json=useAccountingStyle" json:"use_accounting_style,omitempty"`
	DurationStyle          *uint32  `protobuf:"varint,7,opt,name=duration_style,json=durationStyle" json:"duration_style,omitempty"`
	Base                   *uint32  `protobuf:"varint,8,opt,name=base" json:"base,omitempty"`
	BasePlaces             *uint32  `protobuf:"varint,9,opt,name=base_places,json=basePlaces" json:"base_places,omitempty"`
	BaseUseMinusSign       *bool    `protobuf:"varint,10,opt,name=base_use_minus_sign,json=baseUseMinusSign" json:"base_use_minus_sign,omitempty"`
	FractionAccuracy       *uint32  `protobuf:"varint,11,opt,name=fraction_accuracy,json=fractionAccuracy" json:"fraction_accuracy,omitempty"`
	SuppressDateFormat     *bool    `protobuf:"varint,12,opt,name=suppress_date_format,json=suppressDateFormat" json:"suppress_date_format,omitempty"`
	SuppressTimeFormat     *bool    `protobuf:"varint,13,opt,name=suppress_time_format,json=suppressTimeFormat" json:"suppress_time_format,omitempty"`
	DateTimeFormat         *string  `protobuf:"bytes,14,opt,name=date_time_format,json=dateTimeFormat" json:"date_time_format,omitempty"`
	DurationUnitLargest    *uint32  `protobuf:"varint,15,opt,name=duration_unit_largest,json=durationUnitLargest" json:"duration_unit_largest,omitempty"`
	DurationUnitSmallest   *uint32  `protobuf:"varint,16,opt,name=duration_unit_smallest,json=durationUnitSmallest" json:"duration_unit_smallest,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FormatStructArchive) Reset()         { *m = FormatStructArchive{} }
func (m *FormatStructArchive) String() string { return proto.CompactTextString(m) }
func (*FormatStructArchive) ProtoMessage()    {}
func (*FormatStructArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{29}
}

func (m *FormatStructArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatStructArchive.Unmarshal(m, b)
}
func (m *FormatStructArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatStructArchive.Marshal(b, m, deterministic)
}
func (m *FormatStructArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatStructArchive.Merge(m, src)
}
func (m *FormatStructArchive) XXX_Size() int {
	return xxx_messageInfo_FormatStructArchive.Size(m)
}
func (m *FormatStructArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatStructArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormatStructArchive proto.InternalMessageInfo

func (m *FormatStructArchive) GetFormatType() uint32 {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return 0
}

func (m *FormatStructArchive) GetDecimalPlaces() uint32 {
	if m != nil && m.DecimalPlaces != nil {
		return *m.DecimalPlaces
	}
	return 0
}

func (m *FormatStructArchive) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *FormatStructArchive) GetNegativeStyle() uint32 {
	if m != nil && m.NegativeStyle != nil {
		return *m.NegativeStyle
	}
	return 0
}

func (m *FormatStructArchive) GetShowThousandsSeparator() bool {
	if m != nil && m.ShowThousandsSeparator != nil {
		return *m.ShowThousandsSeparator
	}
	return false
}

func (m *FormatStructArchive) GetUseAccountingStyle() bool {
	if m != nil && m.UseAccountingStyle != nil {
		return *m.UseAccountingStyle
	}
	return false
}

func (m *FormatStructArchive) GetDurationStyle() uint32 {
	if m != nil && m.DurationStyle != nil {
		return *m.DurationStyle
	}
	return 0
}

func (m *FormatStructArchive) GetBase() uint32 {
	if m != nil && m.Base != nil {
		return *m.Base
	}
	return 0
}

func (m *FormatStructArchive) GetBasePlaces() uint32 {
	if m != nil && m.BasePlaces != nil {
		return *m.BasePlaces
	}
	return 0
}

func (m *FormatStructArchive) GetBaseUseMinusSign() bool {
	if m != nil && m.BaseUseMinusSign != nil {
		return *m.BaseUseMinusSign
	}
	return false
}

func (m *FormatStructArchive) GetFractionAccuracy() uint32 {
	if m != nil && m.FractionAccuracy != nil {
		return *m.FractionAccuracy
	}
	return 0
}

func (m *FormatStructArchive) GetSuppressDateFormat() bool {
	if m != nil && m.SuppressDateFormat != nil {
		return *m.SuppressDateFormat
	}
	return false
}

func (m *FormatStructArchive) GetSuppressTimeFormat() bool {
	if m != nil && m.SuppressTimeFormat != nil {
		return *m.SuppressTimeFormat
	}
	return false
}

func (m *FormatStructArchive) GetDateTimeFormat() string {
	if m != nil && m.DateTimeFormat != nil {
		return *m.DateTimeFormat
	}
	return ""
}

func (m *FormatStructArchive) GetDurationUnitLargest() uint32 {
	if m != nil && m.DurationUnitLargest != nil {
		return *m.DurationUnitLargest
	}
	return 0
}

func (m *FormatStructArchive) GetDurationUnitSmallest() uint32 {
	if m != nil && m.DurationUnitSmallest != nil {
		return *m.DurationUnitSmallest
	}
	return 0
}

type RangeCoordinateArchive struct {
	TopLeftColumn        *uint32  `protobuf:"varint,1,req,name=top_left_column,json=topLeftColumn" json:"top_left_column,omitempty"`
	TopLeftRow           *uint32  `protobuf:"varint,2,req,name=top_left_row,json=topLeftRow" json:"top_left_row,omitempty"`
	BottomRightColumn    *uint32  `protobuf:"varint,3,req,name=bottom_right_column,json=bottomRightColumn" json:"bottom_right_column,omitempty"`
	BottomRightRow       *uint32  `protobuf:"varint,4,req,name=bottom_right_row,json=bottomRightRow" json:"bottom_right_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeCoordinateArchive) Reset()         { *m = RangeCoordinateArchive{} }
func (m *RangeCoordinateArchive) String() string { return proto.CompactTextString(m) }
func (*RangeCoordinateArchive) ProtoMessage()    {}
func (*RangeCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{30}
}

func (m *RangeCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeCoordinateArchive.Unmarshal(m, b)
}
func (m *RangeCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *RangeCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeCoordinateArchive.Merge(m, src)
}
func (m *RangeCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_RangeCoordinateArchive.Size(m)
}
func (m *RangeCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeCoordinateArchive proto.InternalMessageInfo

func (m *RangeCoordinateArchive) GetTopLeftColumn() uint32 {
	if m != nil && m.TopLeftColumn != nil {
		return *m.TopLeftColumn
	}
	return 0
}

func (m *RangeCoordinateArchive) GetTopLeftRow() uint32 {
	if m != nil && m.TopLeftRow != nil {
		return *m.TopLeftRow
	}
	return 0
}

func (m *RangeCoordinateArchive) GetBottomRightColumn() uint32 {
	if m != nil && m.BottomRightColumn != nil {
		return *m.BottomRightColumn
	}
	return 0
}

func (m *RangeCoordinateArchive) GetBottomRightRow() uint32 {
	if m != nil && m.BottomRightRow != nil {
		return *m.BottomRightRow
	}
	return 0
}

type TectonicShiftArchive struct {
	GridCoordinateOffsetX           *uint32                 `protobuf:"varint,1,req,name=grid_coordinate_offset_x,json=gridCoordinateOffsetX" json:"grid_coordinate_offset_x,omitempty"`
	GridCoordinateOffsetY           *uint32                 `protobuf:"varint,2,req,name=grid_coordinate_offset_y,json=gridCoordinateOffsetY" json:"grid_coordinate_offset_y,omitempty"`
	GridCoordinateOffsetXIsNegative *bool                   `protobuf:"varint,3,req,name=grid_coordinate_offset_x_is_negative,json=gridCoordinateOffsetXIsNegative" json:"grid_coordinate_offset_x_is_negative,omitempty"`
	GridCoordinateOffsetYIsNegative *bool                   `protobuf:"varint,4,req,name=grid_coordinate_offset_y_is_negative,json=gridCoordinateOffsetYIsNegative" json:"grid_coordinate_offset_y_is_negative,omitempty"`
	RangeForShift                   *RangeCoordinateArchive `protobuf:"bytes,5,opt,name=range_for_shift,json=rangeForShift" json:"range_for_shift,omitempty"`
	RangeForDeletion                *RangeCoordinateArchive `protobuf:"bytes,6,opt,name=range_for_deletion,json=rangeForDeletion" json:"range_for_deletion,omitempty"`
	InsertedRange                   *RangeCoordinateArchive `protobuf:"bytes,7,opt,name=inserted_range,json=insertedRange" json:"inserted_range,omitempty"`
	ApplyToAbsolute                 *bool                   `protobuf:"varint,8,req,name=apply_to_absolute,json=applyToAbsolute" json:"apply_to_absolute,omitempty"`
	InsertingAfter                  *bool                   `protobuf:"varint,9,req,name=inserting_after,json=insertingAfter" json:"inserting_after,omitempty"`
	IgnoreStickyBits                *bool                   `protobuf:"varint,10,req,name=ignore_sticky_bits,json=ignoreStickyBits" json:"ignore_sticky_bits,omitempty"`
	TableRange                      *RangeCoordinateArchive `protobuf:"bytes,11,opt,name=table_range,json=tableRange" json:"table_range,omitempty"`
	TableId                         *CFUUIDArchive          `protobuf:"bytes,12,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                `json:"-"`
	XXX_unrecognized                []byte                  `json:"-"`
	XXX_sizecache                   int32                   `json:"-"`
}

func (m *TectonicShiftArchive) Reset()         { *m = TectonicShiftArchive{} }
func (m *TectonicShiftArchive) String() string { return proto.CompactTextString(m) }
func (*TectonicShiftArchive) ProtoMessage()    {}
func (*TectonicShiftArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{31}
}

func (m *TectonicShiftArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TectonicShiftArchive.Unmarshal(m, b)
}
func (m *TectonicShiftArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TectonicShiftArchive.Marshal(b, m, deterministic)
}
func (m *TectonicShiftArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TectonicShiftArchive.Merge(m, src)
}
func (m *TectonicShiftArchive) XXX_Size() int {
	return xxx_messageInfo_TectonicShiftArchive.Size(m)
}
func (m *TectonicShiftArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TectonicShiftArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TectonicShiftArchive proto.InternalMessageInfo

func (m *TectonicShiftArchive) GetGridCoordinateOffsetX() uint32 {
	if m != nil && m.GridCoordinateOffsetX != nil {
		return *m.GridCoordinateOffsetX
	}
	return 0
}

func (m *TectonicShiftArchive) GetGridCoordinateOffsetY() uint32 {
	if m != nil && m.GridCoordinateOffsetY != nil {
		return *m.GridCoordinateOffsetY
	}
	return 0
}

func (m *TectonicShiftArchive) GetGridCoordinateOffsetXIsNegative() bool {
	if m != nil && m.GridCoordinateOffsetXIsNegative != nil {
		return *m.GridCoordinateOffsetXIsNegative
	}
	return false
}

func (m *TectonicShiftArchive) GetGridCoordinateOffsetYIsNegative() bool {
	if m != nil && m.GridCoordinateOffsetYIsNegative != nil {
		return *m.GridCoordinateOffsetYIsNegative
	}
	return false
}

func (m *TectonicShiftArchive) GetRangeForShift() *RangeCoordinateArchive {
	if m != nil {
		return m.RangeForShift
	}
	return nil
}

func (m *TectonicShiftArchive) GetRangeForDeletion() *RangeCoordinateArchive {
	if m != nil {
		return m.RangeForDeletion
	}
	return nil
}

func (m *TectonicShiftArchive) GetInsertedRange() *RangeCoordinateArchive {
	if m != nil {
		return m.InsertedRange
	}
	return nil
}

func (m *TectonicShiftArchive) GetApplyToAbsolute() bool {
	if m != nil && m.ApplyToAbsolute != nil {
		return *m.ApplyToAbsolute
	}
	return false
}

func (m *TectonicShiftArchive) GetInsertingAfter() bool {
	if m != nil && m.InsertingAfter != nil {
		return *m.InsertingAfter
	}
	return false
}

func (m *TectonicShiftArchive) GetIgnoreStickyBits() bool {
	if m != nil && m.IgnoreStickyBits != nil {
		return *m.IgnoreStickyBits
	}
	return false
}

func (m *TectonicShiftArchive) GetTableRange() *RangeCoordinateArchive {
	if m != nil {
		return m.TableRange
	}
	return nil
}

func (m *TectonicShiftArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

type RewriteSortMappingArchive struct {
	TableId              *CFUUIDArchive             `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	ShuffleMapping       *TSK.ShuffleMappingArchive `protobuf:"bytes,2,req,name=shuffle_mapping,json=shuffleMapping" json:"shuffle_mapping,omitempty"`
	ExplodeRanges        *bool                      `protobuf:"varint,3,req,name=explode_ranges,json=explodeRanges" json:"explode_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RewriteSortMappingArchive) Reset()         { *m = RewriteSortMappingArchive{} }
func (m *RewriteSortMappingArchive) String() string { return proto.CompactTextString(m) }
func (*RewriteSortMappingArchive) ProtoMessage()    {}
func (*RewriteSortMappingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{32}
}

func (m *RewriteSortMappingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewriteSortMappingArchive.Unmarshal(m, b)
}
func (m *RewriteSortMappingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewriteSortMappingArchive.Marshal(b, m, deterministic)
}
func (m *RewriteSortMappingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewriteSortMappingArchive.Merge(m, src)
}
func (m *RewriteSortMappingArchive) XXX_Size() int {
	return xxx_messageInfo_RewriteSortMappingArchive.Size(m)
}
func (m *RewriteSortMappingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RewriteSortMappingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RewriteSortMappingArchive proto.InternalMessageInfo

func (m *RewriteSortMappingArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *RewriteSortMappingArchive) GetShuffleMapping() *TSK.ShuffleMappingArchive {
	if m != nil {
		return m.ShuffleMapping
	}
	return nil
}

func (m *RewriteSortMappingArchive) GetExplodeRanges() bool {
	if m != nil && m.ExplodeRanges != nil {
		return *m.ExplodeRanges
	}
	return false
}

type RangeMovedInfoArchive struct {
	TableId              *CFUUIDArchive          `protobuf:"bytes,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	FromRange            *RangeCoordinateArchive `protobuf:"bytes,2,opt,name=from_range,json=fromRange" json:"from_range,omitempty"`
	ToRange              *RangeCoordinateArchive `protobuf:"bytes,3,opt,name=to_range,json=toRange" json:"to_range,omitempty"`
	FromRangeReference   *RangeReferenceArchive  `protobuf:"bytes,4,opt,name=from_range_reference,json=fromRangeReference" json:"from_range_reference,omitempty"`
	ToRangeReference     *RangeReferenceArchive  `protobuf:"bytes,5,opt,name=to_range_reference,json=toRangeReference" json:"to_range_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RangeMovedInfoArchive) Reset()         { *m = RangeMovedInfoArchive{} }
func (m *RangeMovedInfoArchive) String() string { return proto.CompactTextString(m) }
func (*RangeMovedInfoArchive) ProtoMessage()    {}
func (*RangeMovedInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{33}
}

func (m *RangeMovedInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeMovedInfoArchive.Unmarshal(m, b)
}
func (m *RangeMovedInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeMovedInfoArchive.Marshal(b, m, deterministic)
}
func (m *RangeMovedInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeMovedInfoArchive.Merge(m, src)
}
func (m *RangeMovedInfoArchive) XXX_Size() int {
	return xxx_messageInfo_RangeMovedInfoArchive.Size(m)
}
func (m *RangeMovedInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeMovedInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeMovedInfoArchive proto.InternalMessageInfo

func (m *RangeMovedInfoArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *RangeMovedInfoArchive) GetFromRange() *RangeCoordinateArchive {
	if m != nil {
		return m.FromRange
	}
	return nil
}

func (m *RangeMovedInfoArchive) GetToRange() *RangeCoordinateArchive {
	if m != nil {
		return m.ToRange
	}
	return nil
}

func (m *RangeMovedInfoArchive) GetFromRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.FromRangeReference
	}
	return nil
}

func (m *RangeMovedInfoArchive) GetToRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.ToRangeReference
	}
	return nil
}

type TableResizedInfoArchive struct {
	TableId              *CFUUIDArchive          `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	NewTableSize         *RangeCoordinateArchive `protobuf:"bytes,2,req,name=new_table_size,json=newTableSize" json:"new_table_size,omitempty"`
	OldTableSize         *RangeCoordinateArchive `protobuf:"bytes,3,opt,name=old_table_size,json=oldTableSize" json:"old_table_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TableResizedInfoArchive) Reset()         { *m = TableResizedInfoArchive{} }
func (m *TableResizedInfoArchive) String() string { return proto.CompactTextString(m) }
func (*TableResizedInfoArchive) ProtoMessage()    {}
func (*TableResizedInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{34}
}

func (m *TableResizedInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableResizedInfoArchive.Unmarshal(m, b)
}
func (m *TableResizedInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableResizedInfoArchive.Marshal(b, m, deterministic)
}
func (m *TableResizedInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableResizedInfoArchive.Merge(m, src)
}
func (m *TableResizedInfoArchive) XXX_Size() int {
	return xxx_messageInfo_TableResizedInfoArchive.Size(m)
}
func (m *TableResizedInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableResizedInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableResizedInfoArchive proto.InternalMessageInfo

func (m *TableResizedInfoArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *TableResizedInfoArchive) GetNewTableSize() *RangeCoordinateArchive {
	if m != nil {
		return m.NewTableSize
	}
	return nil
}

func (m *TableResizedInfoArchive) GetOldTableSize() *RangeCoordinateArchive {
	if m != nil {
		return m.OldTableSize
	}
	return nil
}

type CellMergeInfoArchive struct {
	TableId              *CFUUIDArchive          `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	MergedRange          *RangeCoordinateArchive `protobuf:"bytes,2,req,name=merged_range,json=mergedRange" json:"merged_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CellMergeInfoArchive) Reset()         { *m = CellMergeInfoArchive{} }
func (m *CellMergeInfoArchive) String() string { return proto.CompactTextString(m) }
func (*CellMergeInfoArchive) ProtoMessage()    {}
func (*CellMergeInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{35}
}

func (m *CellMergeInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellMergeInfoArchive.Unmarshal(m, b)
}
func (m *CellMergeInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellMergeInfoArchive.Marshal(b, m, deterministic)
}
func (m *CellMergeInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellMergeInfoArchive.Merge(m, src)
}
func (m *CellMergeInfoArchive) XXX_Size() int {
	return xxx_messageInfo_CellMergeInfoArchive.Size(m)
}
func (m *CellMergeInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellMergeInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellMergeInfoArchive proto.InternalMessageInfo

func (m *CellMergeInfoArchive) GetTableId() *CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *CellMergeInfoArchive) GetMergedRange() *RangeCoordinateArchive {
	if m != nil {
		return m.MergedRange
	}
	return nil
}

type FormulaRewriteSpecArchive struct {
	RewriteType          *FormulaRewriteSpecArchive_RewriteType `protobuf:"varint,1,req,name=rewrite_type,json=rewriteType,enum=TSCE.FormulaRewriteSpecArchive_RewriteType" json:"rewrite_type,omitempty"`
	TectonicShift        *TectonicShiftArchive                  `protobuf:"bytes,2,opt,name=tectonic_shift,json=tectonicShift" json:"tectonic_shift,omitempty"`
	SortMapping          *RewriteSortMappingArchive             `protobuf:"bytes,3,opt,name=sort_mapping,json=sortMapping" json:"sort_mapping,omitempty"`
	RangeMovedInfo       *RangeMovedInfoArchive                 `protobuf:"bytes,4,opt,name=range_moved_info,json=rangeMovedInfo" json:"range_moved_info,omitempty"`
	DeletedOwnerId       *CFUUIDArchive                         `protobuf:"bytes,5,opt,name=deleted_owner_id,json=deletedOwnerId" json:"deleted_owner_id,omitempty"`
	TableResizedInfo     *TableResizedInfoArchive               `protobuf:"bytes,6,opt,name=table_resized_info,json=tableResizedInfo" json:"table_resized_info,omitempty"`
	CellMergeInfo        *CellMergeInfoArchive                  `protobuf:"bytes,7,opt,name=cell_merge_info,json=cellMergeInfo" json:"cell_merge_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *FormulaRewriteSpecArchive) Reset()         { *m = FormulaRewriteSpecArchive{} }
func (m *FormulaRewriteSpecArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaRewriteSpecArchive) ProtoMessage()    {}
func (*FormulaRewriteSpecArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{36}
}

func (m *FormulaRewriteSpecArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Unmarshal(m, b)
}
func (m *FormulaRewriteSpecArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Marshal(b, m, deterministic)
}
func (m *FormulaRewriteSpecArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaRewriteSpecArchive.Merge(m, src)
}
func (m *FormulaRewriteSpecArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Size(m)
}
func (m *FormulaRewriteSpecArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaRewriteSpecArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaRewriteSpecArchive proto.InternalMessageInfo

func (m *FormulaRewriteSpecArchive) GetRewriteType() FormulaRewriteSpecArchive_RewriteType {
	if m != nil && m.RewriteType != nil {
		return *m.RewriteType
	}
	return FormulaRewriteSpecArchive_TECTONIC_SHIFT
}

func (m *FormulaRewriteSpecArchive) GetTectonicShift() *TectonicShiftArchive {
	if m != nil {
		return m.TectonicShift
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetSortMapping() *RewriteSortMappingArchive {
	if m != nil {
		return m.SortMapping
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetRangeMovedInfo() *RangeMovedInfoArchive {
	if m != nil {
		return m.RangeMovedInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetDeletedOwnerId() *CFUUIDArchive {
	if m != nil {
		return m.DeletedOwnerId
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetTableResizedInfo() *TableResizedInfoArchive {
	if m != nil {
		return m.TableResizedInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetCellMergeInfo() *CellMergeInfoArchive {
	if m != nil {
		return m.CellMergeInfo
	}
	return nil
}

type CellCoordinateFormulaPairArchive struct {
	Column               *uint32         `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32         `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	Formula              *FormulaArchive `protobuf:"bytes,3,opt,name=formula" json:"formula,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CellCoordinateFormulaPairArchive) Reset()         { *m = CellCoordinateFormulaPairArchive{} }
func (m *CellCoordinateFormulaPairArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateFormulaPairArchive) ProtoMessage()    {}
func (*CellCoordinateFormulaPairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{37}
}

func (m *CellCoordinateFormulaPairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateFormulaPairArchive.Unmarshal(m, b)
}
func (m *CellCoordinateFormulaPairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateFormulaPairArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateFormulaPairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateFormulaPairArchive.Merge(m, src)
}
func (m *CellCoordinateFormulaPairArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateFormulaPairArchive.Size(m)
}
func (m *CellCoordinateFormulaPairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateFormulaPairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateFormulaPairArchive proto.InternalMessageInfo

func (m *CellCoordinateFormulaPairArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellCoordinateFormulaPairArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellCoordinateFormulaPairArchive) GetFormula() *FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

type CellCoordinateArchive struct {
	PackedData           *uint32  `protobuf:"fixed32,1,opt,name=packedData" json:"packedData,omitempty"`
	Column               *uint32  `protobuf:"varint,2,opt,name=column" json:"column,omitempty"`
	Row                  *uint32  `protobuf:"varint,3,opt,name=row" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellCoordinateArchive) Reset()         { *m = CellCoordinateArchive{} }
func (m *CellCoordinateArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateArchive) ProtoMessage()    {}
func (*CellCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{38}
}

func (m *CellCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateArchive.Unmarshal(m, b)
}
func (m *CellCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateArchive.Merge(m, src)
}
func (m *CellCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateArchive.Size(m)
}
func (m *CellCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateArchive proto.InternalMessageInfo

func (m *CellCoordinateArchive) GetPackedData() uint32 {
	if m != nil && m.PackedData != nil {
		return *m.PackedData
	}
	return 0
}

func (m *CellCoordinateArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellCoordinateArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

type CellCoordinateVectorArchive struct {
	CellCoordinate       []*CellCoordinateArchive `protobuf:"bytes,1,rep,name=cell_coordinate,json=cellCoordinate" json:"cell_coordinate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CellCoordinateVectorArchive) Reset()         { *m = CellCoordinateVectorArchive{} }
func (m *CellCoordinateVectorArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateVectorArchive) ProtoMessage()    {}
func (*CellCoordinateVectorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{39}
}

func (m *CellCoordinateVectorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateVectorArchive.Unmarshal(m, b)
}
func (m *CellCoordinateVectorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateVectorArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateVectorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateVectorArchive.Merge(m, src)
}
func (m *CellCoordinateVectorArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateVectorArchive.Size(m)
}
func (m *CellCoordinateVectorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateVectorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateVectorArchive proto.InternalMessageInfo

func (m *CellCoordinateVectorArchive) GetCellCoordinate() []*CellCoordinateArchive {
	if m != nil {
		return m.CellCoordinate
	}
	return nil
}

type CellCoordinateObjectPairArchive struct {
	CellCoordinate       *CellCoordinateArchive `protobuf:"bytes,1,req,name=cell_coordinate,json=cellCoordinate" json:"cell_coordinate,omitempty"`
	Object               *TSP.Reference         `protobuf:"bytes,2,req,name=object" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CellCoordinateObjectPairArchive) Reset()         { *m = CellCoordinateObjectPairArchive{} }
func (m *CellCoordinateObjectPairArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateObjectPairArchive) ProtoMessage()    {}
func (*CellCoordinateObjectPairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{40}
}

func (m *CellCoordinateObjectPairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateObjectPairArchive.Unmarshal(m, b)
}
func (m *CellCoordinateObjectPairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateObjectPairArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateObjectPairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateObjectPairArchive.Merge(m, src)
}
func (m *CellCoordinateObjectPairArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateObjectPairArchive.Size(m)
}
func (m *CellCoordinateObjectPairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateObjectPairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateObjectPairArchive proto.InternalMessageInfo

func (m *CellCoordinateObjectPairArchive) GetCellCoordinate() *CellCoordinateArchive {
	if m != nil {
		return m.CellCoordinate
	}
	return nil
}

func (m *CellCoordinateObjectPairArchive) GetObject() *TSP.Reference {
	if m != nil {
		return m.Object
	}
	return nil
}

type CellCoordinateObjectMapArchive struct {
	CellCoordinateObjectPair []*CellCoordinateObjectPairArchive `protobuf:"bytes,1,rep,name=cell_coordinate_object_pair,json=cellCoordinateObjectPair" json:"cell_coordinate_object_pair,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                           `json:"-"`
	XXX_unrecognized         []byte                             `json:"-"`
	XXX_sizecache            int32                              `json:"-"`
}

func (m *CellCoordinateObjectMapArchive) Reset()         { *m = CellCoordinateObjectMapArchive{} }
func (m *CellCoordinateObjectMapArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateObjectMapArchive) ProtoMessage()    {}
func (*CellCoordinateObjectMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{41}
}

func (m *CellCoordinateObjectMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateObjectMapArchive.Unmarshal(m, b)
}
func (m *CellCoordinateObjectMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateObjectMapArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateObjectMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateObjectMapArchive.Merge(m, src)
}
func (m *CellCoordinateObjectMapArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateObjectMapArchive.Size(m)
}
func (m *CellCoordinateObjectMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateObjectMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateObjectMapArchive proto.InternalMessageInfo

func (m *CellCoordinateObjectMapArchive) GetCellCoordinateObjectPair() []*CellCoordinateObjectPairArchive {
	if m != nil {
		return m.CellCoordinateObjectPair
	}
	return nil
}

type OwnerFormulaMapArchive struct {
	CoordinateFormulaPair []*CellCoordinateFormulaPairArchive `protobuf:"bytes,1,rep,name=coordinate_formula_pair,json=coordinateFormulaPair" json:"coordinate_formula_pair,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                            `json:"-"`
	XXX_unrecognized      []byte                              `json:"-"`
	XXX_sizecache         int32                               `json:"-"`
}

func (m *OwnerFormulaMapArchive) Reset()         { *m = OwnerFormulaMapArchive{} }
func (m *OwnerFormulaMapArchive) String() string { return proto.CompactTextString(m) }
func (*OwnerFormulaMapArchive) ProtoMessage()    {}
func (*OwnerFormulaMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{42}
}

func (m *OwnerFormulaMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerFormulaMapArchive.Unmarshal(m, b)
}
func (m *OwnerFormulaMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerFormulaMapArchive.Marshal(b, m, deterministic)
}
func (m *OwnerFormulaMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerFormulaMapArchive.Merge(m, src)
}
func (m *OwnerFormulaMapArchive) XXX_Size() int {
	return xxx_messageInfo_OwnerFormulaMapArchive.Size(m)
}
func (m *OwnerFormulaMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerFormulaMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerFormulaMapArchive proto.InternalMessageInfo

func (m *OwnerFormulaMapArchive) GetCoordinateFormulaPair() []*CellCoordinateFormulaPairArchive {
	if m != nil {
		return m.CoordinateFormulaPair
	}
	return nil
}

type FormulaRewriteCommandArchive struct {
	TableRewriteCommand  *TSP.Reference      `protobuf:"bytes,1,opt,name=table_rewrite_command,json=tableRewriteCommand" json:"table_rewrite_command,omitempty"`
	Super                *TSK.CommandArchive `protobuf:"bytes,2,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FormulaRewriteCommandArchive) Reset()         { *m = FormulaRewriteCommandArchive{} }
func (m *FormulaRewriteCommandArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaRewriteCommandArchive) ProtoMessage()    {}
func (*FormulaRewriteCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{43}
}

func (m *FormulaRewriteCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Unmarshal(m, b)
}
func (m *FormulaRewriteCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Marshal(b, m, deterministic)
}
func (m *FormulaRewriteCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaRewriteCommandArchive.Merge(m, src)
}
func (m *FormulaRewriteCommandArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Size(m)
}
func (m *FormulaRewriteCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaRewriteCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaRewriteCommandArchive proto.InternalMessageInfo

func (m *FormulaRewriteCommandArchive) GetTableRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.TableRewriteCommand
	}
	return nil
}

func (m *FormulaRewriteCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type NumberTrackedReferencePairArchive struct {
	Number               *uint32        `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	TrackedReference     *TSP.Reference `protobuf:"bytes,2,opt,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NumberTrackedReferencePairArchive) Reset()         { *m = NumberTrackedReferencePairArchive{} }
func (m *NumberTrackedReferencePairArchive) String() string { return proto.CompactTextString(m) }
func (*NumberTrackedReferencePairArchive) ProtoMessage()    {}
func (*NumberTrackedReferencePairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{44}
}

func (m *NumberTrackedReferencePairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Unmarshal(m, b)
}
func (m *NumberTrackedReferencePairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Marshal(b, m, deterministic)
}
func (m *NumberTrackedReferencePairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberTrackedReferencePairArchive.Merge(m, src)
}
func (m *NumberTrackedReferencePairArchive) XXX_Size() int {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Size(m)
}
func (m *NumberTrackedReferencePairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberTrackedReferencePairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberTrackedReferencePairArchive proto.InternalMessageInfo

func (m *NumberTrackedReferencePairArchive) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *NumberTrackedReferencePairArchive) GetTrackedReference() *TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

type NumberToTrackedReferenceMapArchive struct {
	NumberTrackedReferencePair []*NumberTrackedReferencePairArchive `protobuf:"bytes,1,rep,name=number_tracked_reference_pair,json=numberTrackedReferencePair" json:"number_tracked_reference_pair,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                             `json:"-"`
	XXX_unrecognized           []byte                               `json:"-"`
	XXX_sizecache              int32                                `json:"-"`
}

func (m *NumberToTrackedReferenceMapArchive) Reset()         { *m = NumberToTrackedReferenceMapArchive{} }
func (m *NumberToTrackedReferenceMapArchive) String() string { return proto.CompactTextString(m) }
func (*NumberToTrackedReferenceMapArchive) ProtoMessage()    {}
func (*NumberToTrackedReferenceMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45}
}

func (m *NumberToTrackedReferenceMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Unmarshal(m, b)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Marshal(b, m, deterministic)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberToTrackedReferenceMapArchive.Merge(m, src)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Size() int {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Size(m)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberToTrackedReferenceMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberToTrackedReferenceMapArchive proto.InternalMessageInfo

func (m *NumberToTrackedReferenceMapArchive) GetNumberTrackedReferencePair() []*NumberTrackedReferencePairArchive {
	if m != nil {
		return m.NumberTrackedReferencePair
	}
	return nil
}

type TrackedReferencesRewriteCommandArchive struct {
	ReferencesInReferenceTracker   *NumberToTrackedReferenceMapArchive `protobuf:"bytes,1,opt,name=references_in_reference_tracker,json=referencesInReferenceTracker" json:"references_in_reference_tracker,omitempty"`       // Deprecated: Do not use.
	OriginalTrackedReferenceCopies *NumberToTrackedReferenceMapArchive `protobuf:"bytes,2,opt,name=original_tracked_reference_copies,json=originalTrackedReferenceCopies" json:"original_tracked_reference_copies,omitempty"` // Deprecated: Do not use.
	RewriteSpec                    *FormulaRewriteSpecArchive          `protobuf:"bytes,3,opt,name=rewrite_spec,json=rewriteSpec" json:"rewrite_spec,omitempty"`
	ReferenceTracker               *TSP.Reference                      `protobuf:"bytes,4,req,name=reference_tracker,json=referenceTracker" json:"reference_tracker,omitempty"`
	Super                          *TSK.CommandArchive                 `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                            `json:"-"`
	XXX_unrecognized               []byte                              `json:"-"`
	XXX_sizecache                  int32                               `json:"-"`
}

func (m *TrackedReferencesRewriteCommandArchive) Reset() {
	*m = TrackedReferencesRewriteCommandArchive{}
}
func (m *TrackedReferencesRewriteCommandArchive) String() string { return proto.CompactTextString(m) }
func (*TrackedReferencesRewriteCommandArchive) ProtoMessage()    {}
func (*TrackedReferencesRewriteCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{46}
}

func (m *TrackedReferencesRewriteCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Unmarshal(m, b)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Marshal(b, m, deterministic)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Merge(m, src)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Size() int {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Size(m)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackedReferencesRewriteCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TrackedReferencesRewriteCommandArchive proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *TrackedReferencesRewriteCommandArchive) GetReferencesInReferenceTracker() *NumberToTrackedReferenceMapArchive {
	if m != nil {
		return m.ReferencesInReferenceTracker
	}
	return nil
}

// Deprecated: Do not use.
func (m *TrackedReferencesRewriteCommandArchive) GetOriginalTrackedReferenceCopies() *NumberToTrackedReferenceMapArchive {
	if m != nil {
		return m.OriginalTrackedReferenceCopies
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetRewriteSpec() *FormulaRewriteSpecArchive {
	if m != nil {
		return m.RewriteSpec
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetReferenceTracker() *TSP.Reference {
	if m != nil {
		return m.ReferenceTracker
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type TrackedReferenceArchive struct {
	Ast                  *ASTNodeArrayArchive `protobuf:"bytes,1,req,name=ast" json:"ast,omitempty"`
	FormulaId            *uint32              `protobuf:"varint,2,req,name=formula_id,json=formulaId" json:"formula_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TrackedReferenceArchive) Reset()         { *m = TrackedReferenceArchive{} }
func (m *TrackedReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*TrackedReferenceArchive) ProtoMessage()    {}
func (*TrackedReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{47}
}

func (m *TrackedReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackedReferenceArchive.Unmarshal(m, b)
}
func (m *TrackedReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackedReferenceArchive.Marshal(b, m, deterministic)
}
func (m *TrackedReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackedReferenceArchive.Merge(m, src)
}
func (m *TrackedReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_TrackedReferenceArchive.Size(m)
}
func (m *TrackedReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackedReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TrackedReferenceArchive proto.InternalMessageInfo

func (m *TrackedReferenceArchive) GetAst() *ASTNodeArrayArchive {
	if m != nil {
		return m.Ast
	}
	return nil
}

func (m *TrackedReferenceArchive) GetFormulaId() uint32 {
	if m != nil && m.FormulaId != nil {
		return *m.FormulaId
	}
	return 0
}

type ReferenceTrackerArchive struct {
	Uuid                      *CFUUIDArchive             `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	TrackedReference          []*TSP.Reference           `protobuf:"bytes,2,rep,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"` // Deprecated: Do not use.
	ContainedTrackedReference []*TrackedReferenceArchive `protobuf:"bytes,3,rep,name=contained_tracked_reference,json=containedTrackedReference" json:"contained_tracked_reference,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *ReferenceTrackerArchive) Reset()         { *m = ReferenceTrackerArchive{} }
func (m *ReferenceTrackerArchive) String() string { return proto.CompactTextString(m) }
func (*ReferenceTrackerArchive) ProtoMessage()    {}
func (*ReferenceTrackerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{48}
}

func (m *ReferenceTrackerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceTrackerArchive.Unmarshal(m, b)
}
func (m *ReferenceTrackerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceTrackerArchive.Marshal(b, m, deterministic)
}
func (m *ReferenceTrackerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceTrackerArchive.Merge(m, src)
}
func (m *ReferenceTrackerArchive) XXX_Size() int {
	return xxx_messageInfo_ReferenceTrackerArchive.Size(m)
}
func (m *ReferenceTrackerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceTrackerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceTrackerArchive proto.InternalMessageInfo

func (m *ReferenceTrackerArchive) GetUuid() *CFUUIDArchive {
	if m != nil {
		return m.Uuid
	}
	return nil
}

// Deprecated: Do not use.
func (m *ReferenceTrackerArchive) GetTrackedReference() []*TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

func (m *ReferenceTrackerArchive) GetContainedTrackedReference() []*TrackedReferenceArchive {
	if m != nil {
		return m.ContainedTrackedReference
	}
	return nil
}

type BooleanCellValueArchive struct {
	Value                *bool    `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooleanCellValueArchive) Reset()         { *m = BooleanCellValueArchive{} }
func (m *BooleanCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*BooleanCellValueArchive) ProtoMessage()    {}
func (*BooleanCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{49}
}

func (m *BooleanCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanCellValueArchive.Unmarshal(m, b)
}
func (m *BooleanCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanCellValueArchive.Marshal(b, m, deterministic)
}
func (m *BooleanCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanCellValueArchive.Merge(m, src)
}
func (m *BooleanCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_BooleanCellValueArchive.Size(m)
}
func (m *BooleanCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanCellValueArchive proto.InternalMessageInfo

func (m *BooleanCellValueArchive) GetValue() bool {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return false
}

type DateCellValueArchive struct {
	Value                *float64                 `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,2,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,3,opt,name=format_is_implicit,json=formatIsImplicit,def=1" json:"format_is_implicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DateCellValueArchive) Reset()         { *m = DateCellValueArchive{} }
func (m *DateCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*DateCellValueArchive) ProtoMessage()    {}
func (*DateCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{50}
}

func (m *DateCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateCellValueArchive.Unmarshal(m, b)
}
func (m *DateCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateCellValueArchive.Marshal(b, m, deterministic)
}
func (m *DateCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateCellValueArchive.Merge(m, src)
}
func (m *DateCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_DateCellValueArchive.Size(m)
}
func (m *DateCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DateCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DateCellValueArchive proto.InternalMessageInfo

const Default_DateCellValueArchive_FormatIsImplicit bool = true

func (m *DateCellValueArchive) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *DateCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *DateCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return Default_DateCellValueArchive_FormatIsImplicit
}

type NumberCellValueArchive struct {
	Value                *float64                 `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Unit                 *int32                   `protobuf:"varint,2,req,name=unit" json:"unit,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,3,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,4,opt,name=format_is_implicit,json=formatIsImplicit,def=1" json:"format_is_implicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *NumberCellValueArchive) Reset()         { *m = NumberCellValueArchive{} }
func (m *NumberCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*NumberCellValueArchive) ProtoMessage()    {}
func (*NumberCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{51}
}

func (m *NumberCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberCellValueArchive.Unmarshal(m, b)
}
func (m *NumberCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberCellValueArchive.Marshal(b, m, deterministic)
}
func (m *NumberCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberCellValueArchive.Merge(m, src)
}
func (m *NumberCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_NumberCellValueArchive.Size(m)
}
func (m *NumberCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberCellValueArchive proto.InternalMessageInfo

const Default_NumberCellValueArchive_FormatIsImplicit bool = true

func (m *NumberCellValueArchive) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NumberCellValueArchive) GetUnit() int32 {
	if m != nil && m.Unit != nil {
		return *m.Unit
	}
	return 0
}

func (m *NumberCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *NumberCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return Default_NumberCellValueArchive_FormatIsImplicit
}

type StringCellValueArchive struct {
	Value                *string                  `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,2,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,3,opt,name=format_is_implicit,json=formatIsImplicit,def=1" json:"format_is_implicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StringCellValueArchive) Reset()         { *m = StringCellValueArchive{} }
func (m *StringCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*StringCellValueArchive) ProtoMessage()    {}
func (*StringCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{52}
}

func (m *StringCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringCellValueArchive.Unmarshal(m, b)
}
func (m *StringCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringCellValueArchive.Marshal(b, m, deterministic)
}
func (m *StringCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringCellValueArchive.Merge(m, src)
}
func (m *StringCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_StringCellValueArchive.Size(m)
}
func (m *StringCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StringCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StringCellValueArchive proto.InternalMessageInfo

const Default_StringCellValueArchive_FormatIsImplicit bool = true

func (m *StringCellValueArchive) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *StringCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *StringCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return Default_StringCellValueArchive_FormatIsImplicit
}

type CellValueArchive struct {
	CellValueType        *CellValueArchive_CellValueType `protobuf:"varint,1,req,name=cell_value_type,json=cellValueType,enum=TSCE.CellValueArchive_CellValueType" json:"cell_value_type,omitempty"`
	BooleanValue         *BooleanCellValueArchive        `protobuf:"bytes,2,opt,name=boolean_value,json=booleanValue" json:"boolean_value,omitempty"`
	DateValue            *DateCellValueArchive           `protobuf:"bytes,3,opt,name=date_value,json=dateValue" json:"date_value,omitempty"`
	NumberValue          *NumberCellValueArchive         `protobuf:"bytes,4,opt,name=number_value,json=numberValue" json:"number_value,omitempty"`
	StringValue          *StringCellValueArchive         `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CellValueArchive) Reset()         { *m = CellValueArchive{} }
func (m *CellValueArchive) String() string { return proto.CompactTextString(m) }
func (*CellValueArchive) ProtoMessage()    {}
func (*CellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{53}
}

func (m *CellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellValueArchive.Unmarshal(m, b)
}
func (m *CellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellValueArchive.Marshal(b, m, deterministic)
}
func (m *CellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellValueArchive.Merge(m, src)
}
func (m *CellValueArchive) XXX_Size() int {
	return xxx_messageInfo_CellValueArchive.Size(m)
}
func (m *CellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellValueArchive proto.InternalMessageInfo

func (m *CellValueArchive) GetCellValueType() CellValueArchive_CellValueType {
	if m != nil && m.CellValueType != nil {
		return *m.CellValueType
	}
	return CellValueArchive_NIL_TYPE
}

func (m *CellValueArchive) GetBooleanValue() *BooleanCellValueArchive {
	if m != nil {
		return m.BooleanValue
	}
	return nil
}

func (m *CellValueArchive) GetDateValue() *DateCellValueArchive {
	if m != nil {
		return m.DateValue
	}
	return nil
}

func (m *CellValueArchive) GetNumberValue() *NumberCellValueArchive {
	if m != nil {
		return m.NumberValue
	}
	return nil
}

func (m *CellValueArchive) GetStringValue() *StringCellValueArchive {
	if m != nil {
		return m.StringValue
	}
	return nil
}

func init() {
	proto.RegisterEnum("TSCE.ReferenceArchive_ReferenceType", ReferenceArchive_ReferenceType_name, ReferenceArchive_ReferenceType_value)
	proto.RegisterEnum("TSCE.SpanningDependenciesArchive_RangeContext", SpanningDependenciesArchive_RangeContext_name, SpanningDependenciesArchive_RangeContext_value)
	proto.RegisterEnum("TSCE.CalculationEngineArchive_ExcelImportDateMode", CalculationEngineArchive_ExcelImportDateMode_name, CalculationEngineArchive_ExcelImportDateMode_value)
	proto.RegisterEnum("TSCE.ASTNodeArrayArchive_ASTNodeType", ASTNodeArrayArchive_ASTNodeType_name, ASTNodeArrayArchive_ASTNodeType_value)
	proto.RegisterEnum("TSCE.FormulaRewriteSpecArchive_RewriteType", FormulaRewriteSpecArchive_RewriteType_name, FormulaRewriteSpecArchive_RewriteType_value)
	proto.RegisterEnum("TSCE.CellValueArchive_CellValueType", CellValueArchive_CellValueType_name, CellValueArchive_CellValueType_value)
	proto.RegisterType((*CFUUIDArchive)(nil), "TSCE.CFUUIDArchive")
	proto.RegisterType((*CellReferenceArchive)(nil), "TSCE.CellReferenceArchive")
	proto.RegisterType((*InternalCellReferenceArchive)(nil), "TSCE.InternalCellReferenceArchive")
	proto.RegisterType((*RangeReferenceArchive)(nil), "TSCE.RangeReferenceArchive")
	proto.RegisterType((*InternalRangeReferenceArchive)(nil), "TSCE.InternalRangeReferenceArchive")
	proto.RegisterType((*ReferenceArchive)(nil), "TSCE.ReferenceArchive")
	proto.RegisterType((*EdgeArchive)(nil), "TSCE.EdgeArchive")
	proto.RegisterType((*EdgesArchive)(nil), "TSCE.EdgesArchive")
	proto.RegisterType((*CellRecordArchive)(nil), "TSCE.CellRecordArchive")
	proto.RegisterType((*CellDependenciesArchive)(nil), "TSCE.CellDependenciesArchive")
	proto.RegisterType((*VolatileDependenciesArchive)(nil), "TSCE.VolatileDependenciesArchive")
	proto.RegisterType((*RangeBackDependencyArchive)(nil), "TSCE.RangeBackDependencyArchive")
	proto.RegisterType((*RTreeInternalNodeContentsArchive)(nil), "TSCE.RTreeInternalNodeContentsArchive")
	proto.RegisterType((*RTreeLeafNodeContentsArchive)(nil), "TSCE.RTreeLeafNodeContentsArchive")
	proto.RegisterType((*RTreeNodeArchive)(nil), "TSCE.RTreeNodeArchive")
	proto.RegisterType((*RTreeArchive)(nil), "TSCE.RTreeArchive")
	proto.RegisterType((*RangeDependenciesArchive)(nil), "TSCE.RangeDependenciesArchive")
	proto.RegisterType((*SpanningDependenciesArchive)(nil), "TSCE.SpanningDependenciesArchive")
	proto.RegisterType((*SpanningDependenciesArchive_ReferringColumnToLocalCells)(nil), "TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells")
	proto.RegisterType((*SpanningDependenciesArchive_ReferringColumnToRemoteCells)(nil), "TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells")
	proto.RegisterType((*WholeOwnerDependenciesArchive)(nil), "TSCE.WholeOwnerDependenciesArchive")
	proto.RegisterType((*FormulaOwnerInfoArchive)(nil), "TSCE.FormulaOwnerInfoArchive")
	proto.RegisterType((*OwnerIDMapArchive)(nil), "TSCE.OwnerIDMapArchive")
	proto.RegisterType((*OwnerIDMapArchive_OwnerIDMapArchiveEntry)(nil), "TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry")
	proto.RegisterType((*DependencyTrackerArchive)(nil), "TSCE.DependencyTrackerArchive")
	proto.RegisterType((*NameTrackedReferencePair)(nil), "TSCE.NameTrackedReferencePair")
	proto.RegisterType((*NamesByTrackedReferenceArchive)(nil), "TSCE.NamesByTrackedReferenceArchive")
	proto.RegisterType((*NamedReferenceManagerArchive)(nil), "TSCE.NamedReferenceManagerArchive")
	proto.RegisterType((*CalculationEngineArchive)(nil), "TSCE.CalculationEngineArchive")
	proto.RegisterType((*ASTNodeArrayArchive)(nil), "TSCE.ASTNodeArrayArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTColumnCoordinateArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTRowCoordinateArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTNodeArchive")
	proto.RegisterType((*FormulaTranslationFlagsArchive)(nil), "TSCE.FormulaTranslationFlagsArchive")
	proto.RegisterType((*FormulaArchive)(nil), "TSCE.FormulaArchive")
	proto.RegisterType((*FormatStructArchive)(nil), "TSCE.FormatStructArchive")
	proto.RegisterType((*RangeCoordinateArchive)(nil), "TSCE.RangeCoordinateArchive")
	proto.RegisterType((*TectonicShiftArchive)(nil), "TSCE.TectonicShiftArchive")
	proto.RegisterType((*RewriteSortMappingArchive)(nil), "TSCE.RewriteSortMappingArchive")
	proto.RegisterType((*RangeMovedInfoArchive)(nil), "TSCE.RangeMovedInfoArchive")
	proto.RegisterType((*TableResizedInfoArchive)(nil), "TSCE.TableResizedInfoArchive")
	proto.RegisterType((*CellMergeInfoArchive)(nil), "TSCE.CellMergeInfoArchive")
	proto.RegisterType((*FormulaRewriteSpecArchive)(nil), "TSCE.FormulaRewriteSpecArchive")
	proto.RegisterType((*CellCoordinateFormulaPairArchive)(nil), "TSCE.CellCoordinateFormulaPairArchive")
	proto.RegisterType((*CellCoordinateArchive)(nil), "TSCE.CellCoordinateArchive")
	proto.RegisterType((*CellCoordinateVectorArchive)(nil), "TSCE.CellCoordinateVectorArchive")
	proto.RegisterType((*CellCoordinateObjectPairArchive)(nil), "TSCE.CellCoordinateObjectPairArchive")
	proto.RegisterType((*CellCoordinateObjectMapArchive)(nil), "TSCE.CellCoordinateObjectMapArchive")
	proto.RegisterType((*OwnerFormulaMapArchive)(nil), "TSCE.OwnerFormulaMapArchive")
	proto.RegisterType((*FormulaRewriteCommandArchive)(nil), "TSCE.FormulaRewriteCommandArchive")
	proto.RegisterType((*NumberTrackedReferencePairArchive)(nil), "TSCE.NumberTrackedReferencePairArchive")
	proto.RegisterType((*NumberToTrackedReferenceMapArchive)(nil), "TSCE.NumberToTrackedReferenceMapArchive")
	proto.RegisterType((*TrackedReferencesRewriteCommandArchive)(nil), "TSCE.TrackedReferencesRewriteCommandArchive")
	proto.RegisterType((*TrackedReferenceArchive)(nil), "TSCE.TrackedReferenceArchive")
	proto.RegisterType((*ReferenceTrackerArchive)(nil), "TSCE.ReferenceTrackerArchive")
	proto.RegisterType((*BooleanCellValueArchive)(nil), "TSCE.BooleanCellValueArchive")
	proto.RegisterType((*DateCellValueArchive)(nil), "TSCE.DateCellValueArchive")
	proto.RegisterType((*NumberCellValueArchive)(nil), "TSCE.NumberCellValueArchive")
	proto.RegisterType((*StringCellValueArchive)(nil), "TSCE.StringCellValueArchive")
	proto.RegisterType((*CellValueArchive)(nil), "TSCE.CellValueArchive")
}

func init() { proto.RegisterFile("TSCEArchives.proto", fileDescriptor_18ffa1b78b626be3) }

var fileDescriptor_18ffa1b78b626be3 = []byte{
	// 5947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x7c, 0x4b, 0x6c, 0xe3, 0x58,
	0x76, 0xe8, 0xa3, 0x65, 0xf9, 0x73, 0x2c, 0xc9, 0xf2, 0xf5, 0x4f, 0xfe, 0x55, 0xb9, 0x58, 0xd5,
	0xd5, 0xee, 0xee, 0x99, 0xea, 0x6a, 0x77, 0xbf, 0xe9, 0xe9, 0xee, 0xd7, 0xd3, 0x4f, 0x96, 0xe9,
	0x2a, 0x75, 0xd9, 0xb2, 0x87, 0x92, 0xbb, 0x5e, 0x0d, 0xa6, 0x87, 0x8f, 0xa6, 0xae, 0x6c, 0x4e,
	0x51, 0xa4, 0x40, 0x52, 0xe5, 0x72, 0xbf, 0xb7, 0x4a, 0x90, 0x09, 0x10, 0x20, 0x99, 0xc1, 0x24,
	0xdb, 0x20, 0x08, 0xb2, 0xc9, 0x2e, 0x08, 0x10, 0x64, 0x36, 0x41, 0x80, 0x7c, 0x66, 0x9f, 0x04,
	0xc8, 0x04, 0x98, 0x65, 0x36, 0x41, 0x10, 0x20, 0xd9, 0x65, 0x91, 0x55, 0x70, 0xcf, 0xbd, 0x24,
	0x2f, 0x25, 0x4a, 0x76, 0x75, 0x67, 0x06, 0xc8, 0x4e, 0x3c, 0xff, 0x7b, 0xee, 0xb9, 0xe7, 0x9e,
	0x73, 0x79, 0x29, 0x20, 0xad, 0x66, 0x4d, 0xab, 0xfa, 0xd6, 0x85, 0xfd, 0x82, 0x06, 0x0f, 0x7a,
	0xbe, 0x17, 0x7a, 0x64, 0x92, 0xc1, 0xd6, 0x17, 0x5a, 0xcd, 0x93, 0x23, 0x1a, 0x04, 0xe6, 0x79,
	0x84, 0x60, 0xa0, 0x27, 0x69, 0x5a, 0xf5, 0xc7, 0x0a, 0x14, 0x6b, 0x07, 0xa7, 0xa7, 0xf5, 0x7d,
	0x81, 0x20, 0x5b, 0x00, 0xfd, 0xbe, 0xdd, 0x36, 0xce, 0xae, 0x42, 0x1a, 0x54, 0x94, 0x6d, 0x65,
	0xa7, 0xa0, 0xcf, 0x32, 0xc8, 0x1e, 0x03, 0x90, 0x55, 0x98, 0x46, 0xf4, 0xe5, 0xc3, 0xca, 0xc4,
	0xb6, 0xb2, 0x53, 0xd4, 0xa7, 0xd8, 0xe3, 0xd3, 0x87, 0x09, 0xe2, 0x9d, 0x4a, 0x4e, 0x42, 0xbc,
	0x93, 0x20, 0x76, 0x2b, 0x93, 0x12, 0x62, 0x37, 0x41, 0xbc, 0x5b, 0xc9, 0x4b, 0x88, 0x77, 0xd5,
	0x1e, 0x2c, 0xd5, 0xa8, 0xe3, 0xe8, 0xb4, 0x43, 0x7d, 0xea, 0x5a, 0x34, 0x32, 0x6d, 0x05, 0xa6,
	0x2c, 0xcf, 0xe9, 0x77, 0xdd, 0x8a, 0xb2, 0x3d, 0xc1, 0xe8, 0xf9, 0x13, 0x29, 0x43, 0xce, 0xf7,
	0x2e, 0x2b, 0x13, 0x08, 0x64, 0x3f, 0xc9, 0x03, 0x98, 0x09, 0xcd, 0x33, 0x87, 0x1a, 0x76, 0xbb,
	0x92, 0xdb, 0x9e, 0xd8, 0x99, 0xdb, 0x5d, 0x7c, 0xc0, 0xbc, 0xf2, 0x20, 0x35, 0x56, 0x7d, 0x1a,
	0x89, 0xea, 0x6d, 0xf5, 0x05, 0x6c, 0xd6, 0xdd, 0x90, 0xfa, 0xae, 0xe9, 0x64, 0x6a, 0xfe, 0x08,
	0xc0, 0xf2, 0x3c, 0xbf, 0x6d, 0xbb, 0x66, 0x48, 0x51, 0xfb, 0xdc, 0xee, 0x86, 0x90, 0x48, 0x1d,
	0xa7, 0x16, 0xe3, 0x22, 0xc9, 0x12, 0x39, 0x59, 0x83, 0x19, 0xef, 0xd2, 0xa5, 0x3e, 0x33, 0x86,
	0xdb, 0x38, 0x8d, 0xcf, 0xf5, 0xb6, 0xfa, 0x2f, 0x0a, 0x2c, 0xeb, 0xa6, 0x7b, 0x4e, 0x87, 0x34,
	0xca, 0x23, 0x50, 0xae, 0x1f, 0x01, 0xb9, 0x0f, 0xf3, 0xa1, 0xd7, 0x33, 0x1c, 0xda, 0x09, 0x0d,
	0xe1, 0x24, 0xae, 0xab, 0x18, 0x7a, 0xbd, 0x43, 0xda, 0x09, 0x6b, 0xdc, 0x57, 0xdb, 0x50, 0x88,
	0xe9, 0x98, 0xd3, 0x72, 0x48, 0x04, 0x82, 0x48, 0x47, 0xdf, 0x2d, 0x9e, 0x79, 0x61, 0xe8, 0x75,
	0x0d, 0xdf, 0x3e, 0xbf, 0x88, 0xa5, 0x4d, 0x22, 0xe1, 0x02, 0x47, 0xe9, 0x0c, 0x23, 0x24, 0xee,
	0x40, 0x39, 0x45, 0xcf, 0xa4, 0xe6, 0x91, 0xb8, 0x24, 0x11, 0xeb, 0xde, 0xa5, 0xea, 0xc2, 0x56,
	0xe4, 0xe5, 0xec, 0x41, 0xcb, 0x9e, 0x52, 0x52, 0x9e, 0x22, 0xbb, 0x90, 0xf7, 0x19, 0x0f, 0x8e,
	0x6a, 0x6e, 0x77, 0x93, 0x3b, 0x03, 0xc5, 0x0c, 0x7b, 0x9f, 0x93, 0xaa, 0x3f, 0x99, 0x80, 0xf2,
	0x90, 0x8e, 0x27, 0x50, 0xf2, 0x23, 0x98, 0x11, 0x5e, 0xf5, 0xf8, 0x74, 0x96, 0x76, 0xef, 0x09,
	0x89, 0x03, 0xf4, 0x09, 0xa0, 0x75, 0xd5, 0xa3, 0x7a, 0xd1, 0x97, 0x1f, 0x49, 0x15, 0x4a, 0x16,
	0x75, 0x1c, 0x23, 0x86, 0xe2, 0xa2, 0x98, 0xdb, 0x5d, 0x4f, 0x62, 0x63, 0x50, 0xa0, 0x5e, 0xb4,
	0x64, 0x28, 0xd9, 0x87, 0x79, 0xb4, 0x56, 0x92, 0x91, 0x43, 0x19, 0x1b, 0xd2, 0x10, 0x87, 0x84,
	0x94, 0xfc, 0x14, 0x58, 0x3d, 0x82, 0x62, 0xca, 0x50, 0x42, 0xa0, 0x54, 0xd3, 0x0e, 0x0f, 0x0d,
	0x5d, 0x3b, 0xd0, 0x74, 0xad, 0x51, 0xd3, 0xca, 0x0a, 0x59, 0x84, 0x79, 0xbd, 0xda, 0x78, 0xa4,
	0x49, 0xc0, 0x09, 0x06, 0x6c, 0x54, 0x8f, 0x34, 0x63, 0x5f, 0x3b, 0xd1, 0x1a, 0xfb, 0x5a, 0xa3,
	0xf6, 0xac, 0x9c, 0x53, 0x7f, 0x43, 0x81, 0x39, 0xad, 0x7d, 0xfe, 0x25, 0x56, 0xde, 0x1d, 0x28,
	0xd8, 0x81, 0xd1, 0xf3, 0xa9, 0x45, 0xdb, 0xd4, 0x0d, 0x31, 0xbe, 0x66, 0xf4, 0x39, 0x3b, 0x38,
	0x89, 0x40, 0x2c, 0xb4, 0xe3, 0x59, 0x9e, 0xc4, 0xa1, 0x66, 0x87, 0x76, 0xb4, 0x48, 0xfe, 0x43,
	0x81, 0x02, 0x33, 0x26, 0x88, 0xac, 0xf9, 0x00, 0xd6, 0x7a, 0xa6, 0xf5, 0x9c, 0xb6, 0x0d, 0xda,
	0x3e, 0xa7, 0xc6, 0xa5, 0x1d, 0x5e, 0x78, 0xfd, 0xd0, 0x40, 0xfa, 0xca, 0xec, 0x76, 0x6e, 0xa7,
	0xa8, 0xaf, 0x70, 0x02, 0xc6, 0xf6, 0x94, 0xa3, 0x8f, 0x19, 0x96, 0xbc, 0x0b, 0x2b, 0x83, 0xac,
	0x82, 0x0f, 0x90, 0x6f, 0x31, 0xcd, 0xc7, 0x99, 0xbe, 0x05, 0x0b, 0x91, 0xc1, 0x46, 0xc7, 0xf3,
	0x91, 0xb5, 0x32, 0xb7, 0x9d, 0x1b, 0x65, 0x79, 0x49, 0x58, 0x7e, 0xe0, 0xf9, 0x4c, 0x10, 0xf9,
	0x10, 0xd6, 0x6d, 0x11, 0xf7, 0xc6, 0xb0, 0xa0, 0x02, 0x37, 0x38, 0xa2, 0x38, 0x4e, 0xf1, 0xaa,
	0x7f, 0x3a, 0x09, 0x0b, 0x3c, 0x8c, 0x2c, 0xcf, 0x6f, 0xbf, 0xfa, 0x7c, 0xd4, 0x61, 0xbb, 0x6d,
	0xfb, 0xe1, 0x95, 0x11, 0x50, 0xa7, 0x63, 0xf4, 0x9c, 0xbe, 0x34, 0x39, 0x81, 0x61, 0x79, 0x7d,
	0x9c, 0x23, 0x65, 0xa7, 0xf8, 0xa1, 0xf2, 0x50, 0xdf, 0x44, 0xd2, 0x26, 0x75, 0x3a, 0x27, 0x4e,
	0x3f, 0x99, 0xb1, 0xa0, 0xc6, 0xc8, 0xc8, 0x0e, 0x14, 0xed, 0xc0, 0xb0, 0x5d, 0xc3, 0x34, 0xac,
	0x2b, 0xcb, 0xa1, 0x38, 0x79, 0x33, 0x1f, 0xe6, 0x3b, 0xa6, 0x13, 0x50, 0x1d, 0xec, 0xa0, 0xee,
	0x56, 0x6b, 0x0c, 0x41, 0xde, 0x80, 0x49, 0x1c, 0x5a, 0x1e, 0x7d, 0xb4, 0xc0, 0x7d, 0x24, 0xc5,
	0xd3, 0xde, 0x44, 0x45, 0xd1, 0x91, 0x84, 0xec, 0x02, 0xb1, 0x3c, 0x37, 0x34, 0x6d, 0x37, 0x30,
	0x4c, 0xe6, 0x94, 0x6e, 0xdf, 0x31, 0x2b, 0x53, 0x28, 0x79, 0x32, 0xf4, 0xfb, 0x54, 0x2f, 0x47,
	0xf8, 0xea, 0x01, 0xc7, 0x92, 0x2a, 0xac, 0x5d, 0x98, 0x81, 0x61, 0x99, 0x8e, 0xd5, 0x77, 0xcc,
	0x90, 0xb6, 0xa5, 0x21, 0x55, 0xa6, 0x65, 0xa3, 0x56, 0x2f, 0xcc, 0xa0, 0x16, 0x93, 0x25, 0x03,
	0x22, 0x4f, 0xe1, 0x6e, 0xcc, 0x2e, 0x3b, 0xc4, 0x73, 0x0d, 0x97, 0xbe, 0x0c, 0x0d, 0x9f, 0x32,
	0x74, 0x65, 0x46, 0x12, 0x86, 0x46, 0xdf, 0x8e, 0xb9, 0x12, 0x61, 0xc7, 0x6e, 0x83, 0xbe, 0x0c,
	0x75, 0xe4, 0x20, 0x9f, 0xc3, 0x1b, 0xa1, 0x6f, 0xba, 0x01, 0x0a, 0xc6, 0x39, 0x7e, 0x69, 0x51,
	0xc7, 0xb0, 0xbb, 0x3d, 0xcf, 0x0f, 0x07, 0xc5, 0x83, 0x6c, 0xeb, 0xdd, 0x98, 0x8f, 0xcd, 0x3d,
	0xe3, 0xaa, 0x23, 0x53, 0x4a, 0xfc, 0x0e, 0xe4, 0x99, 0xdb, 0x82, 0xca, 0x2c, 0x2e, 0x1c, 0x92,
	0xb8, 0x36, 0x88, 0x93, 0x1f, 0x12, 0xa8, 0xff, 0x0f, 0x56, 0x59, 0xdc, 0xec, 0xd3, 0x1e, 0x75,
	0xdb, 0xd4, 0xb5, 0xec, 0x64, 0xfd, 0x7c, 0x13, 0xe6, 0x44, 0xd6, 0x62, 0x31, 0x55, 0x51, 0x70,
	0x96, 0x56, 0xe5, 0x94, 0x25, 0xc5, 0x9a, 0x0e, 0x56, 0x0c, 0x62, 0xbb, 0x8c, 0xdb, 0xef, 0x1a,
	0x3c, 0xa2, 0x18, 0x3c, 0x10, 0x55, 0x40, 0xd1, 0xed, 0x77, 0xf7, 0x19, 0x94, 0xf1, 0x07, 0xea,
	0x5f, 0x4c, 0xc3, 0xc6, 0x67, 0x9e, 0x63, 0x86, 0xb6, 0x43, 0xb3, 0x2c, 0xf8, 0x00, 0xd6, 0x5e,
	0x08, 0xb4, 0x11, 0xda, 0x5d, 0x8a, 0xb2, 0x8c, 0x38, 0xa4, 0x71, 0x41, 0x44, 0x04, 0x2d, 0xbb,
	0x4b, 0xf9, 0x26, 0x8b, 0x21, 0xfe, 0x2e, 0xac, 0x64, 0xb0, 0xf2, 0xa8, 0xc7, 0x15, 0x3c, 0xc8,
	0xc7, 0xf6, 0xb4, 0x8f, 0x61, 0x23, 0x66, 0xf2, 0x4d, 0xb7, 0xed, 0x75, 0x53, 0x1a, 0x73, 0xc8,
	0x59, 0x89, 0x48, 0x74, 0xa4, 0x90, 0x74, 0xbe, 0x0f, 0x95, 0x4c, 0x76, 0xa6, 0x75, 0x12, 0x79,
	0x97, 0x87, 0x79, 0x07, 0xf5, 0x3a, 0x9e, 0x65, 0x3a, 0xe9, 0x91, 0xce, 0xa7, 0xf5, 0x1e, 0x22,
	0xc5, 0x08, 0xbd, 0x32, 0x3b, 0xd3, 0x5b, 0x4e, 0xeb, 0x4d, 0x78, 0x99, 0xde, 0x2a, 0x6c, 0xa5,
	0x18, 0x43, 0xdb, 0x73, 0x53, 0x9a, 0xf3, 0xc8, 0xbd, 0x2e, 0x73, 0x33, 0x1a, 0x49, 0xf7, 0x47,
	0xb0, 0x3e, 0x42, 0x04, 0xd3, 0x3e, 0x85, 0xfc, 0xab, 0x59, 0xfc, 0x4c, 0xff, 0x27, 0xb0, 0x19,
	0x33, 0x5b, 0x5e, 0xb7, 0x67, 0x06, 0x41, 0x4a, 0xfd, 0x34, 0xb2, 0xc7, 0x31, 0x50, 0xe3, 0x24,
	0x92, 0x76, 0x39, 0x40, 0x52, 0x02, 0x98, 0xf2, 0x99, 0x74, 0x80, 0x48, 0xdc, 0x3a, 0x66, 0xbc,
	0x3b, 0x52, 0x66, 0x68, 0x47, 0xd1, 0x77, 0x95, 0x32, 0x80, 0xef, 0x12, 0xb7, 0x12, 0xc2, 0x38,
	0x4a, 0xaf, 0x24, 0x2b, 0x6a, 0x70, 0x6b, 0x8c, 0x28, 0x66, 0x0a, 0xdf, 0x35, 0x36, 0x46, 0xc9,
	0x61, 0xf6, 0x58, 0xb0, 0x1d, 0x0f, 0xe5, 0x9c, 0x7a, 0x5d, 0x1a, 0xfa, 0x91, 0x80, 0x78, 0xc7,
	0x2f, 0xe2, 0x12, 0x1c, 0x57, 0x35, 0xc4, 0xf3, 0xf9, 0x48, 0x88, 0x48, 0x51, 0x91, 0x6f, 0x4b,
	0xab, 0x22, 0xa5, 0x44, 0xec, 0x53, 0x63, 0x8b, 0xd5, 0xa5, 0x2c, 0xd9, 0xea, 0x6f, 0x4f, 0xc0,
	0x3a, 0x16, 0x1f, 0x7b, 0xa6, 0xf5, 0x3c, 0x19, 0x56, 0xb4, 0x84, 0xef, 0x89, 0xd2, 0x07, 0x0b,
	0x5d, 0xf4, 0x05, 0xdf, 0x8a, 0x0a, 0x56, 0xa4, 0x83, 0x0d, 0xfe, 0x4d, 0x58, 0x90, 0xa8, 0x52,
	0x85, 0xe9, 0x7c, 0x4c, 0x28, 0xbc, 0xfd, 0x5f, 0x52, 0x09, 0x91, 0xcf, 0xa1, 0x12, 0x6f, 0xb6,
	0x83, 0xe2, 0x78, 0xb5, 0x71, 0x97, 0x8b, 0x1b, 0x5b, 0x8a, 0x26, 0xfb, 0x71, 0x1a, 0xad, 0x86,
	0xb0, 0xad, 0xb7, 0x7c, 0x4a, 0x23, 0xee, 0x86, 0xd7, 0xa6, 0x35, 0xcf, 0x0d, 0xd9, 0x46, 0x10,
	0xb9, 0xa6, 0x0c, 0xb9, 0xae, 0x1d, 0xe5, 0x31, 0xf6, 0x13, 0x21, 0xe6, 0x4b, 0x91, 0xa1, 0xd8,
	0x4f, 0xf2, 0x35, 0xc8, 0x5b, 0x17, 0xb6, 0x13, 0xb5, 0x27, 0x2b, 0x62, 0x88, 0x4c, 0x34, 0x13,
	0x19, 0x27, 0x73, 0x24, 0x52, 0x7f, 0x4d, 0x81, 0x4d, 0xc4, 0x1d, 0x52, 0xb3, 0xf3, 0x65, 0x55,
	0x0e, 0x17, 0xab, 0x5c, 0xf7, 0xcd, 0x8b, 0x55, 0xf5, 0x5f, 0x15, 0x28, 0x0f, 0xda, 0x48, 0x96,
	0x20, 0xef, 0xd0, 0x17, 0xd4, 0x11, 0x01, 0xc0, 0x1f, 0x18, 0x94, 0x57, 0x17, 0x7c, 0xb6, 0xf9,
	0x03, 0xf9, 0x2e, 0xc4, 0x8e, 0x35, 0x5c, 0xaf, 0xcd, 0x16, 0x37, 0x1f, 0x08, 0xe6, 0xe0, 0xb9,
	0xdd, 0xfb, 0x92, 0x1f, 0xc6, 0xb8, 0x58, 0x5f, 0xb2, 0x33, 0x90, 0xe4, 0x04, 0x88, 0x43, 0xcd,
	0xce, 0x80, 0xe4, 0x49, 0x94, 0xac, 0x4a, 0x92, 0x47, 0x78, 0x51, 0x2f, 0x3b, 0x03, 0x08, 0xf5,
	0xcf, 0x27, 0xa0, 0x80, 0x2c, 0xd1, 0x60, 0xb7, 0xa1, 0xd0, 0x36, 0x43, 0xd3, 0xe8, 0xd8, 0x49,
	0x6f, 0x56, 0xd4, 0x81, 0xc1, 0x0e, 0x6c, 0xec, 0xc4, 0x36, 0x60, 0x16, 0x29, 0x02, 0xfb, 0x0b,
	0x2a, 0x06, 0x3f, 0xc3, 0x00, 0x4d, 0xfb, 0x0b, 0x4a, 0x54, 0x28, 0x22, 0x92, 0xef, 0xa2, 0xdd,
	0x40, 0xf4, 0x5f, 0x73, 0x0c, 0xd8, 0x60, 0x5b, 0x68, 0x37, 0x60, 0x2b, 0x0b, 0x69, 0xa8, 0x43,
	0xbb, 0x5c, 0x0a, 0xef, 0xbd, 0x50, 0xb1, 0xe6, 0xd0, 0x2e, 0x4a, 0xfa, 0x3a, 0x2c, 0x26, 0x54,
	0x3e, 0x35, 0x1d, 0x4e, 0xca, 0x3b, 0xaf, 0x72, 0x44, 0xaa, 0x53, 0xd3, 0x41, 0xf2, 0x48, 0x68,
	0xd7, 0x7c, 0x89, 0xee, 0x09, 0x2a, 0x53, 0x89, 0xd0, 0x23, 0xf3, 0x25, 0x1b, 0x75, 0xa2, 0xba,
	0x6b, 0xbb, 0x82, 0x6a, 0x5a, 0xa2, 0xb2, 0x5d, 0x4e, 0xf5, 0x26, 0x4c, 0xfa, 0x9e, 0x17, 0x56,
	0x66, 0xc6, 0x86, 0x2e, 0xd2, 0xa8, 0x3f, 0x52, 0xa0, 0x82, 0x4b, 0x28, 0xab, 0x0c, 0x78, 0x03,
	0xa6, 0x7c, 0x23, 0xf4, 0x29, 0xc5, 0x73, 0x86, 0xb8, 0x9c, 0x91, 0x1d, 0xae, 0xe7, 0x7d, 0xf6,
	0x44, 0xea, 0x30, 0x7f, 0x66, 0x5a, 0xcf, 0xa5, 0x24, 0x8c, 0xa1, 0x3d, 0xb7, 0xbb, 0x2d, 0x25,
	0x87, 0xcc, 0x4c, 0xa5, 0x97, 0xce, 0x52, 0x60, 0xf5, 0xdf, 0x67, 0x60, 0xa3, 0xd9, 0x33, 0x5d,
	0xd7, 0x76, 0xcf, 0xb3, 0xac, 0x92, 0x8b, 0xeb, 0x9c, 0x54, 0x5c, 0x37, 0xa1, 0xc8, 0x13, 0x0a,
	0x46, 0xd6, 0xcb, 0x10, 0x0d, 0x28, 0xed, 0x3e, 0xe0, 0x06, 0x8c, 0x91, 0x18, 0xb5, 0xa9, 0xc8,
	0xa5, 0x17, 0x7c, 0xe9, 0x89, 0x3c, 0x80, 0x49, 0x4c, 0xd3, 0xb9, 0x6b, 0x77, 0x00, 0xa4, 0x23,
	0xdf, 0x83, 0xad, 0xd0, 0x0b, 0xe3, 0xdc, 0xc6, 0x2a, 0xcc, 0x36, 0x75, 0x28, 0xdb, 0x9f, 0xf0,
	0x28, 0x40, 0xe4, 0xb8, 0xf1, 0xfd, 0xf1, 0x1a, 0x8a, 0x40, 0xe4, 0x81, 0xe7, 0xef, 0x73, 0xfe,
	0x16, 0x63, 0x27, 0xdf, 0x85, 0xcd, 0x33, 0xaf, 0x7d, 0x35, 0x52, 0x7c, 0xfe, 0x06, 0xe2, 0x2b,
	0x4c, 0x42, 0xa6, 0xf4, 0x5f, 0x55, 0xe0, 0x36, 0xa6, 0x1f, 0xdf, 0x76, 0xcf, 0xc5, 0x76, 0x60,
	0x84, 0x1e, 0x2f, 0x6e, 0x44, 0x41, 0x39, 0x85, 0x9e, 0xf8, 0xf8, 0x06, 0x5e, 0x8d, 0x04, 0xf1,
	0xfd, 0xa3, 0xe5, 0x61, 0x0d, 0x84, 0x05, 0xa8, 0xbe, 0xe1, 0x8f, 0x46, 0x92, 0x1f, 0x28, 0xb0,
	0x9d, 0x65, 0x85, 0x4f, 0xbb, 0x5e, 0x48, 0x85, 0x19, 0xd3, 0x68, 0xc6, 0xb7, 0xbe, 0x84, 0x19,
	0x3a, 0x8a, 0xe1, 0x76, 0x6c, 0xfa, 0x63, 0xb0, 0xeb, 0x7f, 0xa3, 0xc0, 0xc6, 0x98, 0x51, 0x8c,
	0x6c, 0xf3, 0x32, 0x22, 0x71, 0xe2, 0x2b, 0x47, 0xe2, 0x3e, 0xcc, 0x27, 0x5b, 0x35, 0x3f, 0xe8,
	0xca, 0x5d, 0x5f, 0x3b, 0x94, 0xac, 0x14, 0x78, 0xfd, 0x9f, 0xd8, 0x4e, 0x35, 0x66, 0xcc, 0xbf,
	0xdc, 0x31, 0x7d, 0x07, 0x56, 0xe3, 0xed, 0x66, 0x68, 0xef, 0x93, 0x76, 0x85, 0x71, 0x87, 0x7f,
	0xfa, 0xb2, 0x9d, 0x85, 0x55, 0x1f, 0x42, 0x41, 0xd6, 0x4c, 0xe6, 0x60, 0x7a, 0x5f, 0x3b, 0xa8,
	0x9e, 0x1e, 0xb6, 0xca, 0xff, 0x83, 0x2c, 0xc2, 0x7c, 0xbd, 0x51, 0x3b, 0x3c, 0xdd, 0xd7, 0x8c,
	0xc7, 0x5a, 0x75, 0x5f, 0xd3, 0x9b, 0x65, 0x45, 0xfd, 0x3e, 0x6c, 0x3d, 0xbd, 0xf0, 0x1c, 0x8a,
	0x2d, 0x7e, 0x56, 0xe6, 0xa9, 0x43, 0x29, 0xca, 0x6f, 0x21, 0xaf, 0xde, 0x94, 0x1b, 0x5b, 0x59,
	0x8c, 0x39, 0xb1, 0x7a, 0xfb, 0x83, 0x3c, 0xac, 0x8a, 0x7e, 0x99, 0x9f, 0x28, 0xb8, 0x1d, 0x2f,
	0x52, 0xf3, 0x31, 0x94, 0x45, 0xa3, 0x6d, 0xa4, 0x8e, 0xdb, 0x46, 0x1d, 0x67, 0x74, 0x64, 0x39,
	0x6d, 0xf2, 0xa9, 0xa8, 0xe9, 0xda, 0xd2, 0x08, 0xc4, 0xb9, 0xd7, 0x56, 0x12, 0x2a, 0x19, 0xe3,
	0xd3, 0xcb, 0xd6, 0x00, 0x82, 0x1c, 0x01, 0xe1, 0xb3, 0x9e, 0x12, 0xc6, 0xcb, 0xbe, 0x5b, 0x52,
	0x92, 0xc9, 0x92, 0xb6, 0xe0, 0x0f, 0x62, 0xc8, 0x67, 0x10, 0x37, 0x44, 0x69, 0x89, 0x3c, 0x2b,
	0xde, 0xe1, 0x12, 0xc7, 0x74, 0xa6, 0x49, 0x2d, 0x9c, 0x92, 0x6b, 0xc1, 0x66, 0x20, 0x22, 0x30,
	0xca, 0x17, 0x29, 0xf1, 0x79, 0x59, 0xfc, 0x98, 0x58, 0xd5, 0xd7, 0x23, 0x31, 0x7c, 0x69, 0xa4,
	0x94, 0x7c, 0x0e, 0x6b, 0xb1, 0x12, 0xdf, 0xbb, 0x4c, 0x6b, 0x98, 0xba, 0xa9, 0x86, 0xd5, 0x48,
	0x86, 0xee, 0x5d, 0x0e, 0x88, 0xaf, 0x5c, 0xb2, 0xe8, 0x13, 0x73, 0x9e, 0x92, 0x3e, 0x23, 0x17,
	0xc6, 0x63, 0x63, 0x54, 0x5f, 0xb9, 0xcc, 0x44, 0x93, 0x77, 0xa1, 0x98, 0x0a, 0x2a, 0x3c, 0x88,
	0x99, 0xdb, 0x2d, 0x3d, 0x68, 0x35, 0x4f, 0x92, 0x43, 0x54, 0xbd, 0x20, 0x07, 0x93, 0xfa, 0x33,
	0x05, 0x16, 0x78, 0x58, 0xed, 0x1f, 0x99, 0xbd, 0xe4, 0x88, 0x76, 0xb6, 0x6b, 0xf6, 0x0c, 0xea,
	0x86, 0xfe, 0x95, 0x58, 0x01, 0x22, 0x0d, 0x0c, 0xd1, 0x0e, 0x43, 0x34, 0xc6, 0xa5, 0xcf, 0x74,
	0xcd, 0x1e, 0xfe, 0x5a, 0x0f, 0x61, 0x25, 0x9b, 0x86, 0xf5, 0x26, 0x43, 0xc7, 0x72, 0x22, 0x29,
	0xcd, 0x0f, 0x9c, 0xc6, 0xa5, 0xce, 0x2c, 0x27, 0xc6, 0x1c, 0xc7, 0x47, 0x67, 0x96, 0x7f, 0x3c,
	0x01, 0x95, 0xa4, 0xe4, 0x68, 0xf9, 0xa6, 0xf5, 0x9c, 0xfa, 0xc9, 0xf8, 0xc8, 0xc0, 0xfa, 0x73,
	0x3b, 0x9e, 0x18, 0xa8, 0x58, 0x41, 0x23, 0x96, 0xae, 0x5e, 0xee, 0x0c, 0x20, 0xc8, 0x07, 0x00,
	0xfc, 0x38, 0x86, 0xd5, 0xae, 0xa2, 0x26, 0x1a, 0x57, 0x46, 0xcc, 0x22, 0x35, 0xab, 0x80, 0x89,
	0x0e, 0x8b, 0xb1, 0x03, 0x24, 0x19, 0x93, 0x37, 0xce, 0x39, 0xb1, 0xff, 0xf6, 0x63, 0x99, 0x1f,
	0x40, 0x21, 0x3e, 0xe2, 0xec, 0x9a, 0x3d, 0xb1, 0x94, 0x57, 0x47, 0x4c, 0x9f, 0x0e, 0xc2, 0x61,
	0x47, 0x66, 0x4f, 0xfd, 0x5d, 0x05, 0x2a, 0x0d, 0xb3, 0x4b, 0xb9, 0xb7, 0xda, 0xb1, 0xb6, 0x13,
	0xd3, 0xf6, 0x09, 0x81, 0x49, 0xd7, 0xec, 0xf2, 0xc3, 0xfa, 0x59, 0x1d, 0x7f, 0x93, 0x8f, 0x60,
	0x21, 0xe4, 0xb4, 0x43, 0x07, 0xf0, 0x83, 0x61, 0x57, 0x0e, 0x07, 0x84, 0x92, 0x87, 0xb0, 0x34,
	0xc4, 0xcc, 0x5f, 0x17, 0x29, 0x3b, 0x45, 0x9d, 0x0c, 0xd2, 0xd7, 0xdb, 0xea, 0x1f, 0x29, 0x70,
	0x8b, 0xd9, 0x17, 0xec, 0x5d, 0x0d, 0x9a, 0xf8, 0x65, 0xdf, 0xda, 0x7c, 0x0e, 0x1b, 0x6c, 0x24,
	0xc6, 0xb0, 0x25, 0x3d, 0xd3, 0xf6, 0xc5, 0x6c, 0x8a, 0x3c, 0x38, 0xca, 0x35, 0x7a, 0xc5, 0x1d,
	0x81, 0x51, 0xff, 0x4e, 0x81, 0x4d, 0xc6, 0x96, 0x80, 0x8f, 0x4c, 0xd7, 0x3c, 0x4f, 0x22, 0xf1,
	0x23, 0x58, 0x90, 0x5e, 0x86, 0xf0, 0x28, 0x15, 0x86, 0x0f, 0x79, 0x30, 0x79, 0xf3, 0xc1, 0xe9,
	0x48, 0x1f, 0xee, 0x32, 0xcd, 0x81, 0x71, 0x76, 0x95, 0x31, 0x00, 0x06, 0xc4, 0x8a, 0x91, 0x0f,
	0xe2, 0x5e, 0x32, 0x88, 0xd1, 0xfe, 0xc3, 0x23, 0xd6, 0x5b, 0x6e, 0x36, 0xcd, 0xde, 0x15, 0xd6,
	0x90, 0xea, 0x3f, 0xe7, 0xa0, 0x12, 0x9d, 0xe9, 0xda, 0x9e, 0xab, 0xb9, 0xe7, 0xb6, 0x4b, 0xa5,
	0x53, 0x89, 0x33, 0x33, 0xa0, 0x46, 0xdb, 0x0c, 0xa9, 0xf1, 0xce, 0x07, 0x0f, 0xdf, 0xc3, 0xce,
	0x62, 0x46, 0x2f, 0x30, 0xe8, 0xbe, 0x19, 0x52, 0x06, 0x63, 0xbb, 0x8e, 0x74, 0x98, 0x13, 0x8d,
	0x9b, 0xaf, 0x6b, 0xe1, 0xed, 0x51, 0x8b, 0x57, 0x5f, 0x68, 0x0f, 0x62, 0xc8, 0x01, 0xac, 0x32,
	0x9b, 0xe5, 0xd1, 0x77, 0xb9, 0x9f, 0x45, 0xf8, 0x0f, 0xfa, 0x72, 0xd9, 0xcd, 0x9a, 0x14, 0x72,
	0x09, 0x2b, 0xa9, 0xd3, 0x62, 0x1c, 0x44, 0xd7, 0x6b, 0xf3, 0xa2, 0xbe, 0xb4, 0xbb, 0x2b, 0x62,
	0x69, 0xc4, 0xe0, 0x1f, 0x48, 0x87, 0xc6, 0x6c, 0xa8, 0x47, 0x5e, 0x9b, 0x7e, 0x58, 0xda, 0xaf,
	0xb6, 0x34, 0xe3, 0xe8, 0x78, 0x5f, 0x63, 0xee, 0x78, 0xa8, 0x2f, 0xd2, 0x61, 0x22, 0xf2, 0x0d,
	0x58, 0x0d, 0xcc, 0x17, 0xb4, 0x1d, 0x1d, 0x32, 0xda, 0xac, 0x8c, 0xb0, 0x3b, 0x36, 0xf5, 0x71,
	0x67, 0x9b, 0xd5, 0x97, 0x11, 0xcd, 0xcf, 0x18, 0xeb, 0x31, 0x52, 0x35, 0x60, 0x31, 0x43, 0x27,
	0x21, 0x30, 0xa0, 0xb5, 0xac, 0x90, 0x35, 0x58, 0x4e, 0xc3, 0x8c, 0x43, 0xed, 0x51, 0xb5, 0xf6,
	0xac, 0x3c, 0x31, 0x84, 0x7a, 0x2f, 0x42, 0xe5, 0xd4, 0x9f, 0xab, 0xb0, 0x58, 0x6d, 0xb6, 0x78,
	0x5b, 0xe9, 0x9b, 0xf1, 0xe1, 0x53, 0x0d, 0x66, 0xaa, 0xcd, 0x16, 0xb6, 0xa8, 0x22, 0x6f, 0xee,
	0x70, 0xdf, 0x64, 0x10, 0x27, 0x30, 0xb1, 0xf8, 0xc4, 0xf3, 0xfa, 0x9f, 0x28, 0xb0, 0x5d, 0x6d,
	0xb6, 0xe2, 0x7a, 0x3b, 0x9e, 0x0f, 0xf9, 0x70, 0x63, 0x0b, 0x80, 0xed, 0xc5, 0x17, 0xa6, 0xdb,
	0x76, 0xa8, 0xd8, 0x1d, 0x66, 0x7d, 0xef, 0xf2, 0x31, 0x02, 0xc8, 0x5d, 0x28, 0x8a, 0x7a, 0x40,
	0x50, 0x4c, 0x88, 0x43, 0x30, 0x04, 0x0a, 0x22, 0x15, 0x8a, 0x4c, 0x86, 0x1d, 0x18, 0x41, 0x68,
	0x5b, 0xcf, 0xaf, 0xa2, 0xa6, 0xdf, 0xf7, 0x2e, 0xeb, 0x41, 0x13, 0x41, 0x64, 0x07, 0xca, 0x42,
	0x50, 0x42, 0xc6, 0xdb, 0xfe, 0x12, 0x87, 0x47, 0x94, 0xeb, 0x7f, 0x3f, 0x09, 0xaf, 0x55, 0x9b,
	0xad, 0x9a, 0xef, 0x05, 0x01, 0xae, 0x88, 0xff, 0x3e, 0xb6, 0xa7, 0xf2, 0x63, 0xfe, 0x06, 0xf9,
	0xf1, 0x29, 0xbc, 0xc1, 0xe6, 0x39, 0x59, 0x57, 0x97, 0x17, 0x76, 0x48, 0x83, 0x9e, 0x69, 0x51,
	0xc3, 0xec, 0x84, 0xd4, 0x37, 0x82, 0x0b, 0x4a, 0x43, 0x03, 0xb7, 0x86, 0x29, 0x0c, 0xd5, 0x7b,
	0xd5, 0x66, 0x2b, 0xf6, 0xc6, 0xd3, 0x98, 0xbc, 0xca, 0xa8, 0x9b, 0x8c, 0x98, 0xa5, 0x20, 0xf2,
	0x0c, 0xde, 0x1c, 0x29, 0xf8, 0x8c, 0x76, 0x3c, 0x9f, 0xf2, 0xec, 0xc5, 0x25, 0x4f, 0xa3, 0xe4,
	0xd7, 0xb2, 0x25, 0xef, 0x21, 0x39, 0xce, 0x04, 0x8a, 0xbe, 0xde, 0x66, 0x49, 0xf2, 0xcc, 0xb5,
	0x36, 0x27, 0x82, 0x3f, 0x87, 0xaf, 0x5d, 0x67, 0x33, 0xd6, 0xe5, 0x66, 0xbb, 0xed, 0xd3, 0x80,
	0xbf, 0x22, 0x9a, 0xd5, 0x5f, 0x1f, 0x67, 0x35, 0x0b, 0x9d, 0x2a, 0x27, 0x5f, 0x7f, 0x0a, 0xeb,
	0x2c, 0xac, 0x70, 0xc2, 0x86, 0xfa, 0xbc, 0x81, 0xb6, 0x6d, 0x21, 0x6e, 0xdb, 0xee, 0xc0, 0x8c,
	0x79, 0x16, 0x78, 0x4e, 0x3f, 0xe4, 0x5b, 0x6f, 0xfc, 0x3a, 0x2b, 0x06, 0xaf, 0x37, 0x60, 0x95,
	0xd9, 0xe0, 0x5d, 0x0e, 0x4b, 0x15, 0xef, 0x2b, 0xb9, 0x48, 0xf1, 0xfe, 0xf8, 0x5a, 0x79, 0x7f,
	0x9d, 0x83, 0xfb, 0xa9, 0x05, 0x10, 0x0f, 0x4f, 0x7b, 0x19, 0xfa, 0xa6, 0xdc, 0xe9, 0xbc, 0xea,
	0x7e, 0xfc, 0x4a, 0xf1, 0x36, 0xf1, 0x0b, 0x8b, 0xb7, 0xdc, 0x2f, 0x2c, 0xde, 0x26, 0x7f, 0x81,
	0xf1, 0x96, 0x7f, 0xb5, 0x78, 0xfb, 0x79, 0x19, 0x4a, 0xe9, 0xd4, 0x4c, 0xea, 0x50, 0x8c, 0xd2,
	0xba, 0x7c, 0x35, 0xe3, 0xb5, 0x6b, 0x73, 0x3b, 0xde, 0xcd, 0x98, 0x93, 0x1e, 0xc8, 0xff, 0xc4,
	0xa0, 0x33, 0x3a, 0x7d, 0xd7, 0xc2, 0x37, 0x57, 0x28, 0xd3, 0x76, 0xdb, 0xf4, 0xa5, 0x78, 0x63,
	0xb9, 0x54, 0x6d, 0xb6, 0x0e, 0x04, 0x96, 0x71, 0xd5, 0x19, 0x8e, 0x7c, 0x00, 0x6b, 0xc3, 0x6c,
	0x6e, 0xbf, 0x5b, 0xf5, 0xcf, 0x03, 0x51, 0x1a, 0xae, 0x0c, 0x30, 0x36, 0x38, 0x96, 0xbc, 0x0b,
	0x2b, 0x68, 0x7c, 0xbf, 0x7b, 0x46, 0xfd, 0x98, 0xf1, 0x8c, 0xfa, 0xe8, 0x74, 0x45, 0xc7, 0x8d,
	0x0c, 0x01, 0x82, 0xeb, 0x8c, 0xfa, 0xe4, 0x7d, 0xa8, 0x30, 0xa6, 0x33, 0xcf, 0x73, 0xa8, 0x29,
	0xd4, 0x89, 0x07, 0xf4, 0xe7, 0x8c, 0xbe, 0x5c, 0x6d, 0xb6, 0xf6, 0x38, 0x84, 0xf1, 0x89, 0x9f,
	0x91, 0xb6, 0x20, 0xc4, 0x33, 0x2c, 0xe4, 0xe3, 0xbf, 0x45, 0x1a, 0x64, 0xda, 0x9a, 0x08, 0x60,
	0x5c, 0xfc, 0x17, 0x79, 0x07, 0x98, 0x34, 0x5e, 0x57, 0x20, 0x0b, 0xfb, 0xd5, 0xe8, 0x77, 0x31,
	0xc1, 0x29, 0x3a, 0xa9, 0x36, 0x5b, 0x6c, 0x13, 0x67, 0x1c, 0xfb, 0x1c, 0x43, 0xea, 0xa0, 0xa6,
	0x59, 0x82, 0x7e, 0xaf, 0xc7, 0xe6, 0x8f, 0x83, 0x58, 0x3b, 0x62, 0x86, 0x95, 0x45, 0x34, 0x75,
	0x4b, 0xe2, 0x6f, 0x0a, 0xb2, 0x7d, 0xfe, 0x3e, 0xbb, 0x6b, 0x86, 0x63, 0x44, 0xe1, 0x7b, 0x5c,
	0x21, 0x6a, 0x69, 0xa4, 0xa8, 0x96, 0xdd, 0x8d, 0x44, 0x55, 0xe1, 0xd6, 0xf0, 0x40, 0x52, 0x62,
	0x96, 0xd1, 0x0b, 0x6b, 0x03, 0x23, 0x92, 0x44, 0x88, 0x99, 0x6e, 0xf7, 0x7d, 0x33, 0x99, 0xe9,
	0xbe, 0x6b, 0x87, 0xcc, 0x1f, 0x33, 0xe8, 0x0f, 0xe6, 0xe1, 0x7d, 0x81, 0x67, 0x12, 0x4e, 0x39,
	0x36, 0xf2, 0xfd, 0x30, 0x2b, 0xa6, 0xdc, 0x3c, 0xfa, 0x7e, 0x90, 0x2f, 0x0a, 0xc8, 0x34, 0x53,
	0x10, 0x5e, 0x39, 0xb4, 0xb2, 0x12, 0x07, 0xa4, 0xcc, 0xd5, 0x64, 0x38, 0xd2, 0x84, 0xd7, 0x87,
	0xd9, 0xe2, 0x27, 0xa6, 0xd4, 0x70, 0x4c, 0xff, 0x9c, 0x06, 0x61, 0x65, 0x15, 0xc5, 0xa8, 0x03,
	0x62, 0xa2, 0xdf, 0xcc, 0x88, 0x43, 0x4e, 0x49, 0x4e, 0x61, 0xe7, 0x3a, 0xa1, 0x41, 0xd7, 0x74,
	0x1c, 0x26, 0xb5, 0x82, 0x52, 0xef, 0x8e, 0x91, 0xda, 0x14, 0xa4, 0xe4, 0x18, 0x0b, 0x93, 0x41,
	0xbf, 0x04, 0xd4, 0x30, 0xfb, 0xa1, 0xd7, 0x35, 0x43, 0xdb, 0x42, 0xd9, 0x41, 0x65, 0x0b, 0xe7,
	0x78, 0x7b, 0xd0, 0x4d, 0x01, 0xad, 0x46, 0x84, 0x4c, 0x6e, 0xbc, 0xa4, 0x42, 0xef, 0x39, 0x1d,
	0x58, 0x1b, 0x78, 0x73, 0x02, 0x1d, 0xdd, 0x62, 0x48, 0x79, 0x65, 0x88, 0x20, 0x37, 0x59, 0x9a,
	0x88, 0x97, 0x61, 0xcd, 0x73, 0x2a, 0x73, 0xbc, 0xb3, 0xab, 0x36, 0x5b, 0x98, 0x42, 0xc4, 0x2a,
	0xac, 0x79, 0x4e, 0x36, 0x8b, 0xee, 0x5d, 0x56, 0x0a, 0x99, 0x2c, 0xba, 0x77, 0x19, 0xb1, 0x38,
	0x76, 0x10, 0xa6, 0x93, 0x44, 0x31, 0x66, 0x39, 0xb4, 0x83, 0x50, 0x4e, 0x10, 0x9f, 0xc2, 0x12,
	0x8e, 0xe6, 0xa2, 0xef, 0x3e, 0xe7, 0x3c, 0xa8, 0xb0, 0x52, 0xc2, 0x1e, 0x61, 0x6d, 0x64, 0x92,
	0xd3, 0x17, 0xd8, 0x30, 0x19, 0x57, 0x8c, 0x21, 0x3f, 0x54, 0x78, 0x5c, 0x24, 0x07, 0xe7, 0x52,
	0x9e, 0x46, 0xd9, 0x49, 0x47, 0x3c, 0x8f, 0xf2, 0x3f, 0x1c, 0x9b, 0x44, 0xc7, 0x16, 0xc1, 0x18,
	0x53, 0xd9, 0x14, 0x49, 0x3f, 0xfd, 0x7b, 0x0a, 0x7c, 0x9d, 0x59, 0x64, 0xb1, 0x6d, 0x59, 0x6c,
	0x39, 0xe3, 0xed, 0x2a, 0xa3, 0x5d, 0x9f, 0x8c, 0xb5, 0xeb, 0xfa, 0x2a, 0x17, 0x37, 0x9c, 0x31,
	0x64, 0x89, 0x85, 0x07, 0x58, 0xee, 0x1b, 0x7d, 0xf7, 0xb9, 0xeb, 0x5d, 0xba, 0x03, 0x39, 0x5e,
	0x24, 0xcf, 0x05, 0x4c, 0x1b, 0x9b, 0xd5, 0x66, 0xeb, 0x94, 0x93, 0xc9, 0x99, 0x5e, 0x64, 0xd1,
	0xc7, 0x70, 0x67, 0xb4, 0x9c, 0x28, 0x0c, 0x08, 0x86, 0xc1, 0x56, 0xb6, 0xa0, 0x28, 0x22, 0x5e,
	0xc3, 0x1d, 0x50, 0xda, 0x57, 0x2b, 0x6b, 0xa8, 0x9f, 0xed, 0x82, 0xc9, 0xd6, 0x49, 0x9a, 0x00,
	0xe8, 0x59, 0x5e, 0x7f, 0xad, 0xa3, 0xdb, 0xde, 0x1b, 0xef, 0xb6, 0xec, 0x2a, 0x4e, 0x9f, 0x8d,
	0x71, 0xe4, 0x53, 0x98, 0xc6, 0xdd, 0xdd, 0xbb, 0xac, 0x6c, 0xa0, 0xc4, 0x77, 0xc6, 0x4a, 0xcc,
	0x2a, 0xdf, 0xf4, 0x29, 0x8e, 0x60, 0xd1, 0x78, 0x6f, 0x70, 0xee, 0x93, 0x69, 0xa7, 0xac, 0x2a,
	0xe3, 0x67, 0x5c, 0x9b, 0xa8, 0xe9, 0x7f, 0xdf, 0x70, 0xca, 0x47, 0xd6, 0x75, 0xfa, 0xed, 0x6b,
	0xe8, 0xd4, 0xdf, 0x9f, 0x82, 0x54, 0x39, 0xb0, 0x00, 0xc5, 0xea, 0xfe, 0x7e, 0xbd, 0x55, 0x3f,
	0x6e, 0x18, 0x8d, 0xe3, 0x7d, 0xad, 0xac, 0x90, 0x25, 0x28, 0x37, 0x4f, 0xf7, 0x5a, 0x7a, 0xb5,
	0x96, 0x40, 0x27, 0xc8, 0x2a, 0x2c, 0x1e, 0x9d, 0x1e, 0xb6, 0xea, 0x27, 0x87, 0xf5, 0x5a, 0x35,
	0x41, 0xe4, 0x98, 0x84, 0xfd, 0xfa, 0x67, 0xf5, 0x66, 0x0c, 0x9a, 0x24, 0x25, 0x80, 0x93, 0xe3,
	0xa7, 0x9a, 0xce, 0x9f, 0xf3, 0x64, 0x05, 0x48, 0xed, 0xb8, 0x51, 0xab, 0xb6, 0xb4, 0x86, 0xc4,
	0x3a, 0x45, 0x96, 0x61, 0xe1, 0x91, 0xae, 0x55, 0x5b, 0x9a, 0x6e, 0xb4, 0x1e, 0x57, 0x05, 0x78,
	0x9a, 0xdc, 0x81, 0xad, 0x14, 0xf8, 0x58, 0x37, 0xb4, 0x6f, 0x9f, 0x56, 0x0f, 0x8d, 0xd6, 0x31,
	0x27, 0x99, 0x61, 0x9d, 0xf4, 0xa1, 0xd6, 0x6c, 0x4a, 0x6c, 0xb3, 0xe4, 0x16, 0xac, 0x27, 0xb0,
	0x21, 0x1e, 0x60, 0x86, 0xa6, 0x41, 0x73, 0xcc, 0x80, 0xc6, 0x71, 0x6b, 0x80, 0xb2, 0xc0, 0x28,
	0x1b, 0xda, 0x23, 0xc9, 0xd4, 0x22, 0x53, 0x78, 0x72, 0x78, 0xda, 0x34, 0x9a, 0xf5, 0x47, 0x02,
	0x56, 0x22, 0x65, 0x28, 0x9c, 0x68, 0x7a, 0x4d, 0x6b, 0xb4, 0x38, 0x64, 0x9e, 0x31, 0x1e, 0x9c,
	0x36, 0x24, 0xbf, 0x95, 0xc9, 0x3c, 0xcc, 0x35, 0x4e, 0x8f, 0xf6, 0x22, 0x67, 0x2c, 0x30, 0xae,
	0xbd, 0xe3, 0xe3, 0x43, 0x2d, 0x32, 0x9c, 0x30, 0x92, 0x66, 0x4b, 0xaf, 0x37, 0x1e, 0x71, 0xc0,
	0x22, 0x29, 0xc2, 0x2c, 0x36, 0xfe, 0xf8, 0xb8, 0x84, 0x1e, 0x3e, 0xd5, 0x25, 0x73, 0x96, 0xd9,
	0x6c, 0x68, 0x47, 0x27, 0xad, 0x67, 0x46, 0x55, 0x7f, 0x74, 0x7a, 0x14, 0x5b, 0xb0, 0xc2, 0x5c,
	0xdf, 0x3a, 0x7e, 0xa2, 0x09, 0xc2, 0x55, 0xf6, 0x5c, 0xd5, 0xf5, 0xea, 0x33, 0xfe, 0x5c, 0x61,
	0xa2, 0x0f, 0xeb, 0x4d, 0x41, 0xbe, 0x86, 0xe4, 0x8f, 0x4f, 0x1b, 0x4f, 0xf8, 0xf3, 0x3a, 0xd9,
	0x82, 0xb5, 0xc3, 0xe3, 0x5a, 0xf5, 0xd0, 0x48, 0xdf, 0x91, 0xe5, 0xe8, 0x0d, 0x72, 0x17, 0x6e,
	0xd7, 0xf4, 0x63, 0xe6, 0xe3, 0xea, 0xde, 0xa1, 0x96, 0x49, 0xb4, 0xc9, 0x64, 0xd6, 0x8e, 0x0f,
	0x23, 0x5b, 0xb7, 0x48, 0x05, 0x96, 0x12, 0x1a, 0x4d, 0xd7, 0x8f, 0x85, 0x2b, 0x6e, 0x91, 0x35,
	0x58, 0x3e, 0x6d, 0x3c, 0x69, 0x1c, 0x3f, 0x6d, 0x18, 0x69, 0xb7, 0xdd, 0x26, 0xeb, 0xb0, 0x52,
	0x3d, 0x39, 0xd1, 0x1a, 0xfb, 0xc6, 0xd3, 0xc7, 0xf5, 0x96, 0xd6, 0x3c, 0xa9, 0x46, 0x0a, 0xb6,
	0xc9, 0x06, 0xac, 0x9e, 0xe8, 0x5a, 0x26, 0xf2, 0x0e, 0x8b, 0xde, 0x3d, 0xed, 0x51, 0xbd, 0x61,
	0x48, 0xe3, 0x52, 0xd9, 0xf4, 0x31, 0x72, 0x09, 0x76, 0x97, 0xf9, 0x30, 0x6b, 0x00, 0xf7, 0xd4,
	0x9f, 0x2a, 0x70, 0x4b, 0x9c, 0x33, 0xb7, 0xc4, 0xd5, 0x43, 0xdb, 0x73, 0x0f, 0x1c, 0xf3, 0x3c,
	0x7e, 0x21, 0xf5, 0x09, 0x54, 0x52, 0x27, 0x52, 0x61, 0x42, 0xc7, 0x0f, 0xd6, 0xa2, 0xee, 0x6c,
	0x45, 0x3a, 0x56, 0x92, 0x84, 0x91, 0x33, 0x78, 0x4b, 0x14, 0xc4, 0xa1, 0xc7, 0x8b, 0x34, 0xcb,
	0xa3, 0xbe, 0xc5, 0xd2, 0xa5, 0x4f, 0xbb, 0xde, 0x0b, 0xd3, 0x49, 0xc9, 0x4c, 0x75, 0x7c, 0xf7,
	0x39, 0x67, 0xcb, 0x63, 0x95, 0x5b, 0x4d, 0xb0, 0xe9, 0x9c, 0x4b, 0xd2, 0xa1, 0xfe, 0x6c, 0x02,
	0x4a, 0x62, 0x1c, 0x89, 0xdd, 0xa5, 0xb8, 0x91, 0xe0, 0x9b, 0x2c, 0xef, 0xfe, 0xc6, 0x6c, 0xb2,
	0x05, 0x19, 0x48, 0x6e, 0xc3, 0xdc, 0x85, 0x17, 0x48, 0x57, 0xe9, 0x59, 0x36, 0x07, 0x06, 0x12,
	0xe9, 0x73, 0x0d, 0x66, 0x90, 0x80, 0xdf, 0xa1, 0x67, 0xd8, 0x69, 0xf6, 0xcc, 0xb2, 0xe1, 0xff,
	0x82, 0x55, 0x89, 0xd7, 0xb0, 0x03, 0xc3, 0xa5, 0xe7, 0x66, 0x68, 0xbf, 0x18, 0xb8, 0x31, 0xbb,
	0x94, 0x88, 0xab, 0x07, 0x0d, 0x41, 0x42, 0xbe, 0x01, 0x4b, 0x91, 0xe0, 0x14, 0x6b, 0x5e, 0x66,
	0x5d, 0x10, 0xba, 0x24, 0xbe, 0x6f, 0xe3, 0x61, 0x78, 0xe4, 0x14, 0xa3, 0xc3, 0xa6, 0x51, 0xbc,
	0x35, 0xba, 0x97, 0x7a, 0xa7, 0x30, 0x62, 0xae, 0xf1, 0x88, 0x3c, 0x85, 0x50, 0x7f, 0x9a, 0x87,
	0x45, 0x5e, 0x2d, 0x37, 0x43, 0xbf, 0x6f, 0x85, 0x91, 0x77, 0x6f, 0xc3, 0x1c, 0xaf, 0xb2, 0x93,
	0x26, 0xad, 0xa8, 0x03, 0x07, 0x61, 0xb6, 0x7d, 0x0d, 0x4a, 0x6d, 0x6a, 0xd9, 0x5d, 0xd3, 0x31,
	0x7a, 0x8e, 0x69, 0xd1, 0xf8, 0x96, 0xa8, 0x80, 0x9e, 0x20, 0x10, 0x0f, 0xa0, 0xfa, 0xbe, 0xcf,
	0x6f, 0xd4, 0x79, 0xed, 0xa8, 0xef, 0x2d, 0x44, 0xc0, 0x9a, 0xd7, 0x46, 0x59, 0x91, 0x0f, 0x44,
	0xb9, 0x3c, 0x29, 0x6e, 0x9c, 0x0a, 0x28, 0xaf, 0x93, 0xbf, 0x09, 0x95, 0xe0, 0xc2, 0xbb, 0x34,
	0xc2, 0x0b, 0xaf, 0x1f, 0x98, 0x6e, 0x3b, 0x30, 0x02, 0xda, 0x33, 0x7d, 0x33, 0xf4, 0x7c, 0xd1,
	0x48, 0xad, 0x30, 0x7c, 0x2b, 0x42, 0x37, 0x23, 0x2c, 0x79, 0x08, 0x4b, 0x58, 0xa3, 0x5a, 0x78,
	0x43, 0x89, 0x75, 0x53, 0x5c, 0x0d, 0xde, 0x41, 0xd6, 0x49, 0x3f, 0xa0, 0xd5, 0x18, 0xc5, 0x75,
	0xb1, 0xe1, 0x45, 0x35, 0x2e, 0xa7, 0x9d, 0x16, 0xc3, 0x13, 0x50, 0x4e, 0x46, 0x60, 0xf2, 0xcc,
	0x0c, 0xf8, 0x19, 0x4f, 0x51, 0xc7, 0xdf, 0xcc, 0x75, 0x78, 0x3e, 0x2d, 0xdc, 0x32, 0xcb, 0xe3,
	0x8a, 0x81, 0x84, 0x4f, 0xbe, 0x0e, 0x8b, 0x48, 0xc0, 0x4c, 0xea, 0xda, 0x6e, 0x3f, 0x30, 0x02,
	0xfb, 0x3c, 0xaa, 0x77, 0xcb, 0x0c, 0x75, 0x1a, 0xd0, 0x23, 0x86, 0x68, 0xda, 0xe7, 0x2e, 0x79,
	0x0b, 0x16, 0x3a, 0xbe, 0xc9, 0xeb, 0x0f, 0xd3, 0xb2, 0xfa, 0xbe, 0x69, 0x5d, 0x89, 0x42, 0xb7,
	0x1c, 0x21, 0xaa, 0x02, 0xce, 0x46, 0x9a, 0xd9, 0xbd, 0x15, 0xf8, 0x48, 0x83, 0xe1, 0x96, 0x4d,
	0xe6, 0x90, 0xbb, 0xab, 0x62, 0x9a, 0x43, 0x6a, 0xab, 0x76, 0xa0, 0x3c, 0xd4, 0x8b, 0x95, 0x70,
	0x5a, 0x4b, 0xed, 0x74, 0x03, 0xb6, 0x0b, 0xcb, 0xd9, 0x7d, 0xcc, 0x3c, 0x9a, 0xbf, 0xd8, 0xce,
	0x68, 0x5c, 0xde, 0x83, 0x95, 0x11, 0x6d, 0x4a, 0x99, 0xf7, 0x50, 0xed, 0x8c, 0xbe, 0x44, 0xfd,
	0x33, 0x05, 0x56, 0xb2, 0xaf, 0xaa, 0x64, 0x7d, 0x36, 0xa3, 0xdc, 0xe4, 0xb3, 0x99, 0x89, 0x9b,
	0x7e, 0x36, 0x93, 0x7b, 0x95, 0xcf, 0x66, 0x26, 0x33, 0x3f, 0x9b, 0xf9, 0xb7, 0x3c, 0x2c, 0xb5,
	0xa8, 0x15, 0x7a, 0xae, 0x6d, 0x35, 0x2f, 0xec, 0x4e, 0xbc, 0x0e, 0xdf, 0x87, 0xca, 0xb9, 0x6f,
	0xb7, 0xa5, 0x1b, 0x1b, 0x86, 0xd7, 0xe9, 0x04, 0x34, 0x34, 0x5e, 0x8a, 0x51, 0x2c, 0x33, 0x7c,
	0x32, 0xea, 0x63, 0xc4, 0xfe, 0x9f, 0x31, 0x8c, 0x57, 0x62, 0x64, 0x99, 0x8c, 0xcf, 0xc8, 0x11,
	0xdc, 0x1b, 0xa5, 0x31, 0x95, 0xac, 0xf8, 0x57, 0x1f, 0xb7, 0x33, 0xb5, 0x4b, 0x39, 0x6b, 0xb4,
	0xb8, 0xab, 0x81, 0xb4, 0x39, 0x52, 0xdc, 0x33, 0x49, 0x5c, 0x7c, 0x81, 0xb4, 0xe3, 0xf9, 0x46,
	0xc0, 0x3c, 0x75, 0xa3, 0xeb, 0x4a, 0xfc, 0xde, 0xc9, 0x81, 0xe7, 0xa3, 0x73, 0xc9, 0xa7, 0xd1,
	0x95, 0x84, 0xf8, 0xf2, 0x13, 0xdb, 0x99, 0xa6, 0x6e, 0x20, 0xa8, 0xec, 0xcb, 0x77, 0x9e, 0xd8,
	0xf6, 0x57, 0x83, 0x92, 0xed, 0x06, 0xd4, 0x0f, 0x69, 0x9b, 0xdf, 0xa8, 0x12, 0x6f, 0xc5, 0xaf,
	0x31, 0x28, 0xe2, 0x41, 0x3c, 0x79, 0x13, 0x16, 0xcc, 0x5e, 0xcf, 0xb9, 0x62, 0x5b, 0x68, 0x7c,
	0x36, 0x3a, 0x83, 0x2e, 0x99, 0x47, 0x44, 0xcb, 0xab, 0x0a, 0x30, 0x79, 0x1d, 0xe6, 0x39, 0x33,
	0xcb, 0x63, 0x78, 0xfa, 0x57, 0x99, 0x45, 0xca, 0x52, 0x0c, 0xc6, 0x53, 0x3e, 0xf2, 0x35, 0x20,
	0xf6, 0xb9, 0xeb, 0xf9, 0x54, 0x1c, 0xd8, 0x1b, 0x67, 0xac, 0x31, 0x07, 0xa4, 0x2d, 0x73, 0x0c,
	0x3f, 0xb3, 0xdf, 0x63, 0x8d, 0xf8, 0xc7, 0x30, 0x27, 0xaa, 0x7a, 0x1c, 0xc4, 0xdc, 0x0d, 0x06,
	0x01, 0xc8, 0xc0, 0x47, 0x20, 0x1f, 0xc3, 0x16, 0xc6, 0x7c, 0xf1, 0x13, 0x7d, 0x8e, 0xf7, 0x13,
	0x05, 0xd6, 0x74, 0x7a, 0xe9, 0xdb, 0x21, 0x6d, 0x7a, 0x7e, 0x78, 0x64, 0xf6, 0x7a, 0xcc, 0xf0,
	0x2f, 0x79, 0xa8, 0x5b, 0x83, 0xf9, 0xe0, 0xa2, 0xdf, 0xe9, 0x38, 0xd4, 0xe8, 0x72, 0x49, 0xe2,
	0x55, 0xdf, 0xfa, 0x83, 0x56, 0xf3, 0xc9, 0x83, 0x26, 0xc7, 0xa5, 0x95, 0xe8, 0xa5, 0x20, 0x05,
	0x66, 0x39, 0x9f, 0xbe, 0xec, 0x39, 0xd8, 0xc1, 0xb2, 0x31, 0x05, 0x22, 0xc6, 0x8b, 0x02, 0x8a,
	0x03, 0x0d, 0xd4, 0x7f, 0x98, 0x10, 0x1f, 0xf4, 0x1d, 0x79, 0x2f, 0x68, 0x7b, 0xf4, 0x51, 0xf4,
	0xb5, 0x3e, 0x20, 0x1f, 0x01, 0x74, 0x7c, 0x96, 0x1d, 0xc4, 0x57, 0x6f, 0xd7, 0x7b, 0x7c, 0x96,
	0xd1, 0x73, 0x87, 0xbf, 0x0f, 0x33, 0xa1, 0x27, 0x58, 0x73, 0x37, 0x60, 0x9d, 0x0e, 0x3d, 0xce,
	0x78, 0x04, 0x4b, 0x89, 0xd6, 0xa1, 0x9b, 0xd3, 0x63, 0x2f, 0x62, 0x93, 0x58, 0x7d, 0xd2, 0x72,
	0xd7, 0x81, 0x44, 0x76, 0x48, 0xc2, 0xf2, 0xd7, 0x0b, 0x2b, 0x0b, 0x83, 0x92, 0xeb, 0x56, 0x7f,
	0xab, 0xc0, 0xaa, 0xe8, 0xf6, 0x02, 0xfb, 0x8b, 0x71, 0xbe, 0xbd, 0x3e, 0x22, 0xf6, 0x58, 0x4d,
	0x71, 0x29, 0x1a, 0xd5, 0xf8, 0x9e, 0xee, 0x75, 0x4e, 0x2a, 0xb8, 0xf4, 0x12, 0x2d, 0xc0, 0x0b,
	0xb5, 0x7b, 0x50, 0xf2, 0x9c, 0xb6, 0x2c, 0xe3, 0x26, 0x8e, 0x2e, 0x78, 0x4e, 0x3b, 0x96, 0xa1,
	0xfe, 0xba, 0xc2, 0xbf, 0x74, 0x3d, 0xa2, 0xfe, 0x39, 0xfd, 0x2a, 0x03, 0xfa, 0x04, 0x0a, 0x5d,
	0x26, 0xa3, 0x6d, 0xdc, 0xfc, 0x23, 0xc9, 0x39, 0xce, 0x81, 0x58, 0xf5, 0xb7, 0xf2, 0xb0, 0x26,
	0xea, 0xc3, 0x68, 0xe1, 0xf5, 0xa8, 0x15, 0x99, 0xd3, 0x80, 0x82, 0xcf, 0xa1, 0xf2, 0xb1, 0xfc,
	0x5b, 0xa9, 0xb2, 0x72, 0x98, 0xed, 0x81, 0x00, 0xf1, 0xc3, 0x79, 0x3f, 0x79, 0x20, 0x55, 0x28,
	0x85, 0x62, 0x43, 0x13, 0x79, 0x3a, 0xf5, 0xd9, 0x64, 0xd6, 0x66, 0xa7, 0x17, 0x43, 0x19, 0x4a,
	0xf6, 0xa0, 0x10, 0xb0, 0x8e, 0x24, 0x5a, 0xd1, 0xdc, 0xf9, 0xb7, 0xa3, 0x8f, 0x38, 0x47, 0xe4,
	0x0e, 0x7d, 0x2e, 0x48, 0x60, 0x44, 0x03, 0x9e, 0xb1, 0x8d, 0x2e, 0x5b, 0xac, 0xfc, 0x84, 0x62,
	0x38, 0xd0, 0x07, 0x57, 0xb2, 0xf8, 0xe2, 0x20, 0x06, 0x93, 0x8f, 0xa1, 0x1c, 0xdd, 0x91, 0x8d,
	0xef, 0x08, 0xe5, 0x47, 0xaf, 0xf0, 0x92, 0x20, 0x8e, 0xae, 0x16, 0x3d, 0x01, 0x12, 0x9d, 0x98,
	0x60, 0x60, 0x73, 0x3b, 0xa6, 0xe4, 0xfb, 0x74, 0x23, 0xe2, 0x5e, 0x2f, 0x87, 0x03, 0x08, 0xb2,
	0x27, 0x2e, 0x71, 0xe2, 0xdc, 0x72, 0x49, 0xd3, 0x83, 0x5f, 0xa4, 0x0e, 0x46, 0x1b, 0xbf, 0xe4,
	0x1f, 0x43, 0xd5, 0x5f, 0x51, 0x60, 0x4e, 0x9a, 0x3a, 0xd6, 0x54, 0xb6, 0xb4, 0x5a, 0xeb, 0xb8,
	0x51, 0xaf, 0x19, 0xcd, 0xc7, 0xf5, 0x83, 0x56, 0x59, 0x61, 0xbd, 0xa9, 0xae, 0x1d, 0x55, 0x4f,
	0x8c, 0xa7, 0xf5, 0xd6, 0x63, 0xa3, 0x79, 0xac, 0xb7, 0x8c, 0xa3, 0xea, 0xc9, 0x49, 0xbd, 0xf1,
	0xa8, 0x3c, 0xc1, 0x3a, 0xe3, 0xa3, 0xe3, 0xcf, 0x34, 0x03, 0x3f, 0x36, 0x2d, 0xe7, 0x48, 0x19,
	0x0a, 0xfb, 0xda, 0xa1, 0xd6, 0xd2, 0x8c, 0xe3, 0xa7, 0x0d, 0x4d, 0x2f, 0x4f, 0x32, 0x08, 0x6f,
	0xad, 0x75, 0xad, 0x59, 0xff, 0x8e, 0x56, 0xce, 0x63, 0x37, 0xcd, 0xba, 0xd4, 0x23, 0x4d, 0x7f,
	0xa4, 0x95, 0xa7, 0xd4, 0xff, 0x0f, 0xdb, 0xe9, 0x0b, 0xa7, 0x22, 0xcc, 0x4e, 0x4c, 0xdb, 0xff,
	0x32, 0xdf, 0x83, 0x4f, 0x47, 0x9f, 0x16, 0xf2, 0x40, 0x59, 0x4a, 0xc5, 0x6e, 0xbc, 0x9e, 0x04,
	0x91, 0x6a, 0xc2, 0x72, 0xe6, 0x75, 0x57, 0x72, 0x0b, 0x80, 0x7f, 0x21, 0xba, 0x6f, 0x86, 0x26,
	0xe6, 0xf1, 0x69, 0x5d, 0x82, 0x48, 0x26, 0x89, 0xaf, 0xe3, 0xd3, 0x26, 0xf1, 0x4e, 0x91, 0xfd,
	0x54, 0x2d, 0xd8, 0x48, 0xab, 0xf8, 0x8c, 0xc5, 0x77, 0x3c, 0xb6, 0x8c, 0xdb, 0xb8, 0xca, 0x2b,
	0xdf, 0xc6, 0x55, 0x7f, 0xa8, 0xc0, 0xed, 0x34, 0xe5, 0xf1, 0xd9, 0xf7, 0xa9, 0x15, 0xca, 0x5e,
	0xcc, 0xd4, 0x34, 0xf1, 0x8a, 0x9a, 0xc8, 0x7d, 0x98, 0xf2, 0x50, 0xb4, 0xc8, 0x3d, 0x83, 0x57,
	0x5e, 0x04, 0x56, 0xfd, 0x81, 0x02, 0xb7, 0xb2, 0x2c, 0x92, 0xae, 0xff, 0xb5, 0x61, 0x63, 0xc0,
	0x20, 0x83, 0x33, 0xf3, 0x4b, 0x51, 0xdc, 0x0d, 0xaf, 0x65, 0x19, 0x37, 0x34, 0x38, 0xbd, 0x62,
	0x8d, 0x20, 0x50, 0x5f, 0x8a, 0x7b, 0x81, 0x22, 0x04, 0x24, 0xfd, 0xdf, 0x83, 0x55, 0x49, 0x75,
	0x74, 0x53, 0x4f, 0xd2, 0x7d, 0x3f, 0x4b, 0xf7, 0x70, 0x7c, 0xea, 0xcb, 0x56, 0x16, 0x56, 0xfd,
	0x4d, 0x05, 0x36, 0xd3, 0x49, 0xb3, 0xe6, 0x75, 0xbb, 0xa6, 0x1b, 0x7f, 0xdd, 0xbb, 0x07, 0xcb,
	0x51, 0x46, 0xe0, 0x49, 0xd7, 0xe2, 0x78, 0x51, 0x37, 0x0c, 0xba, 0x76, 0x51, 0x64, 0x01, 0x59,
	0x14, 0x79, 0x03, 0xf2, 0x41, 0xbf, 0x87, 0xb7, 0x9a, 0xa2, 0x4c, 0xf4, 0xe4, 0x41, 0x5a, 0x8f,
	0xce, 0x29, 0xd4, 0x97, 0x70, 0x87, 0xbf, 0x8d, 0xcc, 0xba, 0x43, 0x26, 0xad, 0x35, 0xf1, 0x36,
	0x53, 0xac, 0x35, 0xfe, 0xf4, 0x95, 0xee, 0xe0, 0xa9, 0x3f, 0x52, 0x40, 0x15, 0xaa, 0xbd, 0x41,
	0xe5, 0xd2, 0x84, 0x7c, 0x1f, 0xb6, 0xa2, 0x43, 0xa4, 0xec, 0x7b, 0x72, 0x7c, 0x5a, 0x5e, 0x17,
	0x57, 0xcc, 0xae, 0x1b, 0x8b, 0xbe, 0xee, 0x8e, 0x24, 0x51, 0xff, 0x32, 0x07, 0xf7, 0x07, 0x11,
	0x41, 0xf6, 0x34, 0x05, 0xe2, 0x5b, 0x06, 0x24, 0x31, 0x6c, 0xd7, 0xc8, 0xba, 0x4a, 0xa7, 0x24,
	0x77, 0x93, 0xae, 0x1f, 0x29, 0xde, 0x7f, 0xdb, 0x4c, 0x84, 0xd6, 0x5d, 0x7d, 0xf0, 0xd2, 0xdd,
	0x25, 0xdc, 0xf1, 0x7c, 0xfb, 0xdc, 0x76, 0xf9, 0xc9, 0xd9, 0x80, 0x37, 0x2c, 0xaf, 0x97, 0x5c,
	0xc6, 0x7e, 0x35, 0xb5, 0xb7, 0x22, 0xb1, 0x83, 0x74, 0x35, 0x94, 0xc9, 0x36, 0xdc, 0x28, 0x1c,
	0x83, 0x1e, 0xb5, 0xd2, 0x1b, 0xee, 0xc8, 0x1a, 0x20, 0xde, 0xf7, 0x19, 0x2c, 0xfb, 0xba, 0xe1,
	0xe4, 0x0d, 0xaf, 0x1b, 0xc6, 0x11, 0x9d, 0x5c, 0x1c, 0x1a, 0x15, 0xd1, 0x14, 0x56, 0x47, 0xdd,
	0xd0, 0x7c, 0x0b, 0x72, 0x66, 0x10, 0x5e, 0x7f, 0x1c, 0xc8, 0xa8, 0xc8, 0x16, 0x40, 0xb4, 0xfc,
	0xe3, 0xff, 0xee, 0x98, 0x15, 0x90, 0x7a, 0x5b, 0xfd, 0x47, 0x05, 0x56, 0x07, 0x27, 0x28, 0xd2,
	0xf3, 0x3a, 0x4c, 0xf6, 0xfb, 0xe3, 0xab, 0x37, 0x24, 0x20, 0x9f, 0x64, 0x2f, 0xa0, 0xdc, 0xb0,
	0x4f, 0x70, 0x9a, 0x86, 0x2f, 0xb2, 0x7e, 0x0e, 0x1b, 0xe2, 0x0b, 0x79, 0xda, 0x1e, 0x0e, 0x09,
	0xf1, 0x9d, 0x43, 0x54, 0x48, 0x64, 0x7b, 0x45, 0x5f, 0x8b, 0x25, 0x0c, 0x52, 0xa8, 0x6f, 0xc3,
	0xaa, 0x78, 0xb3, 0xca, 0xf2, 0xdd, 0x67, 0xa6, 0xd3, 0x97, 0x3f, 0xfc, 0x7b, 0xc1, 0x9e, 0x71,
	0x90, 0x33, 0x3a, 0x7f, 0x50, 0x7f, 0xac, 0xc0, 0x12, 0x9e, 0xd8, 0x8e, 0x25, 0x57, 0x04, 0x39,
	0x79, 0x08, 0x53, 0xe2, 0x98, 0x88, 0x6f, 0x1c, 0x15, 0x9c, 0xd7, 0x8c, 0x63, 0x47, 0x5d, 0xd0,
	0x91, 0x5d, 0x7e, 0x7d, 0xda, 0x0c, 0x0d, 0x3b, 0x30, 0xec, 0x6e, 0xcf, 0xb1, 0x2d, 0x9b, 0xff,
	0x89, 0x41, 0xfc, 0x97, 0x01, 0x1c, 0x5f, 0x0f, 0xea, 0x02, 0xab, 0xfe, 0xa1, 0x02, 0x2b, 0x7c,
	0x21, 0xdc, 0xd0, 0x2c, 0x02, 0x93, 0xf8, 0x46, 0x9f, 0x19, 0x95, 0xd7, 0xf1, 0xb7, 0x64, 0x6a,
	0xee, 0x2b, 0x99, 0x3a, 0x39, 0xd6, 0xd4, 0xdf, 0x51, 0x60, 0x85, 0xbf, 0x69, 0x1c, 0x6f, 0xea,
	0xec, 0x2f, 0xd7, 0x83, 0x7f, 0x95, 0x83, 0xf2, 0x90, 0x41, 0x87, 0xa2, 0x76, 0x40, 0x43, 0x32,
	0xfe, 0x4d, 0x65, 0x90, 0x21, 0x01, 0xf0, 0x7f, 0x53, 0xb1, 0xe4, 0x47, 0xb2, 0x07, 0xc5, 0xe8,
	0x22, 0x0c, 0x1f, 0x66, 0xea, 0xa3, 0x92, 0x11, 0x51, 0xa8, 0x17, 0x04, 0x0f, 0x02, 0xf1, 0x3a,
	0x3c, 0xdb, 0xb6, 0xb9, 0x80, 0x9c, 0x5c, 0xfb, 0x66, 0x05, 0xa5, 0x3e, 0xcb, 0xa8, 0x39, 0xeb,
	0x27, 0x50, 0x10, 0xdb, 0x0c, 0x67, 0x4e, 0x7d, 0x49, 0x97, 0x1d, 0x3c, 0xfa, 0x1c, 0xe7, 0x88,
	0x05, 0x88, 0xfb, 0x38, 0x5c, 0x40, 0xea, 0xf0, 0x29, 0x7b, 0x4a, 0xf5, 0x39, 0xce, 0x81, 0x30,
	0xf5, 0xff, 0x42, 0x31, 0xe5, 0x20, 0x52, 0x80, 0x99, 0x46, 0xfd, 0xd0, 0x68, 0x3d, 0x3b, 0xd1,
	0xca, 0x8a, 0xfc, 0x4a, 0x0d, 0x21, 0x13, 0xf1, 0x1b, 0x34, 0x7c, 0xcc, 0x49, 0x2f, 0xe1, 0x10,
	0x30, 0x29, 0xbd, 0x72, 0x43, 0x40, 0x7e, 0x6f, 0xe7, 0x3b, 0xf7, 0xcf, 0xed, 0xf0, 0xa2, 0x7f,
	0xf6, 0xc0, 0xf2, 0xba, 0x6f, 0x7f, 0x61, 0x77, 0xcf, 0xcc, 0x33, 0xd3, 0x7b, 0xbb, 0xed, 0x59,
	0x96, 0xe7, 0xbe, 0x78, 0xdb, 0x7e, 0xea, 0xf9, 0xcf, 0xdf, 0x66, 0xf6, 0xfe, 0x67, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x17, 0xb8, 0xb0, 0xd0, 0x5a, 0x4a, 0x00, 0x00,
}
