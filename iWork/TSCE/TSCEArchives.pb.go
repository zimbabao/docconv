// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSCEArchives.proto

package TSCE

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSK "github.com/zimbabao/docconv/iWork/TSK"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CategoryAggType int32

const (
	CategoryAggType_AGGR_NONE                     CategoryAggType = 0
	CategoryAggType_AGGR_COUNT                    CategoryAggType = 1
	CategoryAggType_AGGR_TOTAL                    CategoryAggType = 2
	CategoryAggType_AGGR_AVG                      CategoryAggType = 3
	CategoryAggType_AGGR_MIN                      CategoryAggType = 4
	CategoryAggType_AGGR_MAX                      CategoryAggType = 5
	CategoryAggType_AGGR_CHARTGROUPVALUEHIERARCHY CategoryAggType = 7
	CategoryAggType_AGGR_GROUPVALUEHIERARCHY      CategoryAggType = 8
	CategoryAggType_AGGR_GROUPVALUE               CategoryAggType = 9
	CategoryAggType_AGGR_BODYROWS                 CategoryAggType = 10
	CategoryAggType_AGGR_INDIRECT                 CategoryAggType = 11
	CategoryAggType_AGGR_LABEL                    CategoryAggType = 12
)

var CategoryAggType_name = map[int32]string{
	0:  "AGGR_NONE",
	1:  "AGGR_COUNT",
	2:  "AGGR_TOTAL",
	3:  "AGGR_AVG",
	4:  "AGGR_MIN",
	5:  "AGGR_MAX",
	7:  "AGGR_CHARTGROUPVALUEHIERARCHY",
	8:  "AGGR_GROUPVALUEHIERARCHY",
	9:  "AGGR_GROUPVALUE",
	10: "AGGR_BODYROWS",
	11: "AGGR_INDIRECT",
	12: "AGGR_LABEL",
}

var CategoryAggType_value = map[string]int32{
	"AGGR_NONE":                     0,
	"AGGR_COUNT":                    1,
	"AGGR_TOTAL":                    2,
	"AGGR_AVG":                      3,
	"AGGR_MIN":                      4,
	"AGGR_MAX":                      5,
	"AGGR_CHARTGROUPVALUEHIERARCHY": 7,
	"AGGR_GROUPVALUEHIERARCHY":      8,
	"AGGR_GROUPVALUE":               9,
	"AGGR_BODYROWS":                 10,
	"AGGR_INDIRECT":                 11,
	"AGGR_LABEL":                    12,
}

func (x CategoryAggType) Enum() *CategoryAggType {
	p := new(CategoryAggType)
	*p = x
	return p
}

func (x CategoryAggType) String() string {
	return proto.EnumName(CategoryAggType_name, int32(x))
}

func (x *CategoryAggType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CategoryAggType_value, data, "CategoryAggType")
	if err != nil {
		return err
	}
	*x = CategoryAggType(value)
	return nil
}

func (CategoryAggType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{0}
}

type ReferenceArchive_ReferenceType int32

const (
	ReferenceArchive_CELL_REFERENCE  ReferenceArchive_ReferenceType = 1
	ReferenceArchive_RANGE_REFERENCE ReferenceArchive_ReferenceType = 2
	ReferenceArchive_NAME_DEPENDENCY ReferenceArchive_ReferenceType = 3
)

var ReferenceArchive_ReferenceType_name = map[int32]string{
	1: "CELL_REFERENCE",
	2: "RANGE_REFERENCE",
	3: "NAME_DEPENDENCY",
}

var ReferenceArchive_ReferenceType_value = map[string]int32{
	"CELL_REFERENCE":  1,
	"RANGE_REFERENCE": 2,
	"NAME_DEPENDENCY": 3,
}

func (x ReferenceArchive_ReferenceType) Enum() *ReferenceArchive_ReferenceType {
	p := new(ReferenceArchive_ReferenceType)
	*p = x
	return p
}

func (x ReferenceArchive_ReferenceType) String() string {
	return proto.EnumName(ReferenceArchive_ReferenceType_name, int32(x))
}

func (x *ReferenceArchive_ReferenceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReferenceArchive_ReferenceType_value, data, "ReferenceArchive_ReferenceType")
	if err != nil {
		return err
	}
	*x = ReferenceArchive_ReferenceType(value)
	return nil
}

func (ReferenceArchive_ReferenceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{7, 0}
}

type SpanningDependenciesArchive_RangeContext int32

const (
	SpanningDependenciesArchive_DEFAULT         SpanningDependenciesArchive_RangeContext = 0
	SpanningDependenciesArchive_INCLUDE_HEADERS SpanningDependenciesArchive_RangeContext = 1
)

var SpanningDependenciesArchive_RangeContext_name = map[int32]string{
	0: "DEFAULT",
	1: "INCLUDE_HEADERS",
}

var SpanningDependenciesArchive_RangeContext_value = map[string]int32{
	"DEFAULT":         0,
	"INCLUDE_HEADERS": 1,
}

func (x SpanningDependenciesArchive_RangeContext) Enum() *SpanningDependenciesArchive_RangeContext {
	p := new(SpanningDependenciesArchive_RangeContext)
	*p = x
	return p
}

func (x SpanningDependenciesArchive_RangeContext) String() string {
	return proto.EnumName(SpanningDependenciesArchive_RangeContext_name, int32(x))
}

func (x *SpanningDependenciesArchive_RangeContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpanningDependenciesArchive_RangeContext_value, data, "SpanningDependenciesArchive_RangeContext")
	if err != nil {
		return err
	}
	*x = SpanningDependenciesArchive_RangeContext(value)
	return nil
}

func (SpanningDependenciesArchive_RangeContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{23, 0}
}

type SpanningDependenciesExpandedArchive_RangeContext int32

const (
	SpanningDependenciesExpandedArchive_DEFAULT         SpanningDependenciesExpandedArchive_RangeContext = 0
	SpanningDependenciesExpandedArchive_INCLUDE_HEADERS SpanningDependenciesExpandedArchive_RangeContext = 1
)

var SpanningDependenciesExpandedArchive_RangeContext_name = map[int32]string{
	0: "DEFAULT",
	1: "INCLUDE_HEADERS",
}

var SpanningDependenciesExpandedArchive_RangeContext_value = map[string]int32{
	"DEFAULT":         0,
	"INCLUDE_HEADERS": 1,
}

func (x SpanningDependenciesExpandedArchive_RangeContext) Enum() *SpanningDependenciesExpandedArchive_RangeContext {
	p := new(SpanningDependenciesExpandedArchive_RangeContext)
	*p = x
	return p
}

func (x SpanningDependenciesExpandedArchive_RangeContext) String() string {
	return proto.EnumName(SpanningDependenciesExpandedArchive_RangeContext_name, int32(x))
}

func (x *SpanningDependenciesExpandedArchive_RangeContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpanningDependenciesExpandedArchive_RangeContext_value, data, "SpanningDependenciesExpandedArchive_RangeContext")
	if err != nil {
		return err
	}
	*x = SpanningDependenciesExpandedArchive_RangeContext(value)
	return nil
}

func (SpanningDependenciesExpandedArchive_RangeContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24, 0}
}

type CellErrorsArchive_ErrorFlavor int32

const (
	CellErrorsArchive_NONE                       CellErrorsArchive_ErrorFlavor = 0
	CellErrorsArchive_ERROR                      CellErrorsArchive_ErrorFlavor = 1
	CellErrorsArchive_REF_ERROR                  CellErrorsArchive_ErrorFlavor = 2
	CellErrorsArchive_CIRCULAR_REF_ERROR         CellErrorsArchive_ErrorFlavor = 3
	CellErrorsArchive_UNSUPPORTED_FUNCTION_ERROR CellErrorsArchive_ErrorFlavor = 4
)

var CellErrorsArchive_ErrorFlavor_name = map[int32]string{
	0: "NONE",
	1: "ERROR",
	2: "REF_ERROR",
	3: "CIRCULAR_REF_ERROR",
	4: "UNSUPPORTED_FUNCTION_ERROR",
}

var CellErrorsArchive_ErrorFlavor_value = map[string]int32{
	"NONE":                       0,
	"ERROR":                      1,
	"REF_ERROR":                  2,
	"CIRCULAR_REF_ERROR":         3,
	"UNSUPPORTED_FUNCTION_ERROR": 4,
}

func (x CellErrorsArchive_ErrorFlavor) Enum() *CellErrorsArchive_ErrorFlavor {
	p := new(CellErrorsArchive_ErrorFlavor)
	*p = x
	return p
}

func (x CellErrorsArchive_ErrorFlavor) String() string {
	return proto.EnumName(CellErrorsArchive_ErrorFlavor_name, int32(x))
}

func (x *CellErrorsArchive_ErrorFlavor) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CellErrorsArchive_ErrorFlavor_value, data, "CellErrorsArchive_ErrorFlavor")
	if err != nil {
		return err
	}
	*x = CellErrorsArchive_ErrorFlavor(value)
	return nil
}

func (CellErrorsArchive_ErrorFlavor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{27, 0}
}

type FormulaOwnerDependenciesArchive_OwnerKind int32

const (
	FormulaOwnerDependenciesArchive_NONE                    FormulaOwnerDependenciesArchive_OwnerKind = 0
	FormulaOwnerDependenciesArchive_TABLE                   FormulaOwnerDependenciesArchive_OwnerKind = 1
	FormulaOwnerDependenciesArchive_CHART                   FormulaOwnerDependenciesArchive_OwnerKind = 2
	FormulaOwnerDependenciesArchive_COND_STYLE              FormulaOwnerDependenciesArchive_OwnerKind = 3
	FormulaOwnerDependenciesArchive_HIDDEN_STATES           FormulaOwnerDependenciesArchive_OwnerKind = 4
	FormulaOwnerDependenciesArchive_MERGE_OWNER             FormulaOwnerDependenciesArchive_OwnerKind = 5
	FormulaOwnerDependenciesArchive_SORT_RULE_OWNER         FormulaOwnerDependenciesArchive_OwnerKind = 6
	FormulaOwnerDependenciesArchive_REF_TRACKER             FormulaOwnerDependenciesArchive_OwnerKind = 7
	FormulaOwnerDependenciesArchive_GROUP_BY                FormulaOwnerDependenciesArchive_OwnerKind = 8
	FormulaOwnerDependenciesArchive_CATEGORY_AGG_OWNER      FormulaOwnerDependenciesArchive_OwnerKind = 9
	FormulaOwnerDependenciesArchive_PENCIL_ANNOTATION_OWNER FormulaOwnerDependenciesArchive_OwnerKind = 10
)

var FormulaOwnerDependenciesArchive_OwnerKind_name = map[int32]string{
	0:  "NONE",
	1:  "TABLE",
	2:  "CHART",
	3:  "COND_STYLE",
	4:  "HIDDEN_STATES",
	5:  "MERGE_OWNER",
	6:  "SORT_RULE_OWNER",
	7:  "REF_TRACKER",
	8:  "GROUP_BY",
	9:  "CATEGORY_AGG_OWNER",
	10: "PENCIL_ANNOTATION_OWNER",
}

var FormulaOwnerDependenciesArchive_OwnerKind_value = map[string]int32{
	"NONE":                    0,
	"TABLE":                   1,
	"CHART":                   2,
	"COND_STYLE":              3,
	"HIDDEN_STATES":           4,
	"MERGE_OWNER":             5,
	"SORT_RULE_OWNER":         6,
	"REF_TRACKER":             7,
	"GROUP_BY":                8,
	"CATEGORY_AGG_OWNER":      9,
	"PENCIL_ANNOTATION_OWNER": 10,
}

func (x FormulaOwnerDependenciesArchive_OwnerKind) Enum() *FormulaOwnerDependenciesArchive_OwnerKind {
	p := new(FormulaOwnerDependenciesArchive_OwnerKind)
	*p = x
	return p
}

func (x FormulaOwnerDependenciesArchive_OwnerKind) String() string {
	return proto.EnumName(FormulaOwnerDependenciesArchive_OwnerKind_name, int32(x))
}

func (x *FormulaOwnerDependenciesArchive_OwnerKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaOwnerDependenciesArchive_OwnerKind_value, data, "FormulaOwnerDependenciesArchive_OwnerKind")
	if err != nil {
		return err
	}
	*x = FormulaOwnerDependenciesArchive_OwnerKind(value)
	return nil
}

func (FormulaOwnerDependenciesArchive_OwnerKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{28, 0}
}

type CalculationEngineArchive_ExcelImportDateMode int32

const (
	CalculationEngineArchive_DATE_MODE_1900        CalculationEngineArchive_ExcelImportDateMode = 1
	CalculationEngineArchive_DATE_MODE_1900_LEGACY CalculationEngineArchive_ExcelImportDateMode = 2
	CalculationEngineArchive_DATE_MODE_1904_LEGACY CalculationEngineArchive_ExcelImportDateMode = 3
)

var CalculationEngineArchive_ExcelImportDateMode_name = map[int32]string{
	1: "DATE_MODE_1900",
	2: "DATE_MODE_1900_LEGACY",
	3: "DATE_MODE_1904_LEGACY",
}

var CalculationEngineArchive_ExcelImportDateMode_value = map[string]int32{
	"DATE_MODE_1900":        1,
	"DATE_MODE_1900_LEGACY": 2,
	"DATE_MODE_1904_LEGACY": 3,
}

func (x CalculationEngineArchive_ExcelImportDateMode) Enum() *CalculationEngineArchive_ExcelImportDateMode {
	p := new(CalculationEngineArchive_ExcelImportDateMode)
	*p = x
	return p
}

func (x CalculationEngineArchive_ExcelImportDateMode) String() string {
	return proto.EnumName(CalculationEngineArchive_ExcelImportDateMode_name, int32(x))
}

func (x *CalculationEngineArchive_ExcelImportDateMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CalculationEngineArchive_ExcelImportDateMode_value, data, "CalculationEngineArchive_ExcelImportDateMode")
	if err != nil {
		return err
	}
	*x = CalculationEngineArchive_ExcelImportDateMode(value)
	return nil
}

func (CalculationEngineArchive_ExcelImportDateMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{42, 0}
}

type ASTNodeArrayArchive_ASTNodeType int32

const (
	ASTNodeArrayArchive_ADDITION_NODE                   ASTNodeArrayArchive_ASTNodeType = 1
	ASTNodeArrayArchive_SUBTRACTION_NODE                ASTNodeArrayArchive_ASTNodeType = 2
	ASTNodeArrayArchive_MULTIPLICATION_NODE             ASTNodeArrayArchive_ASTNodeType = 3
	ASTNodeArrayArchive_DIVISION_NODE                   ASTNodeArrayArchive_ASTNodeType = 4
	ASTNodeArrayArchive_POWER_NODE                      ASTNodeArrayArchive_ASTNodeType = 5
	ASTNodeArrayArchive_CONCATENATION_NODE              ASTNodeArrayArchive_ASTNodeType = 6
	ASTNodeArrayArchive_GREATER_THAN_NODE               ASTNodeArrayArchive_ASTNodeType = 7
	ASTNodeArrayArchive_GREATER_THAN_OR_EQUAL_TO_NODE   ASTNodeArrayArchive_ASTNodeType = 8
	ASTNodeArrayArchive_LESS_THAN_NODE                  ASTNodeArrayArchive_ASTNodeType = 9
	ASTNodeArrayArchive_LESS_THAN_OR_EQUAL_TO_NODE      ASTNodeArrayArchive_ASTNodeType = 10
	ASTNodeArrayArchive_EQUAL_TO_NODE                   ASTNodeArrayArchive_ASTNodeType = 11
	ASTNodeArrayArchive_NOT_EQUAL_TO_NODE               ASTNodeArrayArchive_ASTNodeType = 12
	ASTNodeArrayArchive_NEGATION_NODE                   ASTNodeArrayArchive_ASTNodeType = 13
	ASTNodeArrayArchive_PLUS_SIGN_NODE                  ASTNodeArrayArchive_ASTNodeType = 14
	ASTNodeArrayArchive_PERCENT_NODE                    ASTNodeArrayArchive_ASTNodeType = 15
	ASTNodeArrayArchive_FUNCTION_NODE                   ASTNodeArrayArchive_ASTNodeType = 16
	ASTNodeArrayArchive_NUMBER_NODE                     ASTNodeArrayArchive_ASTNodeType = 17
	ASTNodeArrayArchive_BOOLEAN_NODE                    ASTNodeArrayArchive_ASTNodeType = 18
	ASTNodeArrayArchive_STRING_NODE                     ASTNodeArrayArchive_ASTNodeType = 19
	ASTNodeArrayArchive_DATE_NODE                       ASTNodeArrayArchive_ASTNodeType = 20
	ASTNodeArrayArchive_DURATION_NODE                   ASTNodeArrayArchive_ASTNodeType = 21
	ASTNodeArrayArchive_EMPTY_ARGUMENT_NODE             ASTNodeArrayArchive_ASTNodeType = 22
	ASTNodeArrayArchive_TOKEN_NODE                      ASTNodeArrayArchive_ASTNodeType = 23
	ASTNodeArrayArchive_ARRAY_NODE                      ASTNodeArrayArchive_ASTNodeType = 24
	ASTNodeArrayArchive_LIST_NODE                       ASTNodeArrayArchive_ASTNodeType = 25
	ASTNodeArrayArchive_THUNK_NODE                      ASTNodeArrayArchive_ASTNodeType = 26
	ASTNodeArrayArchive_LOCAL_CELL_REFERENCE_NODE       ASTNodeArrayArchive_ASTNodeType = 27
	ASTNodeArrayArchive_CROSS_TABLE_CELL_REFERENCE_NODE ASTNodeArrayArchive_ASTNodeType = 28
	ASTNodeArrayArchive_COLON_NODE                      ASTNodeArrayArchive_ASTNodeType = 29
	ASTNodeArrayArchive_REFERENCE_ERROR_NODE            ASTNodeArrayArchive_ASTNodeType = 30
	ASTNodeArrayArchive_UNKNOWN_FUNCTION_NODE           ASTNodeArrayArchive_ASTNodeType = 31
	ASTNodeArrayArchive_APPEND_WHITESPACE_NODE          ASTNodeArrayArchive_ASTNodeType = 32
	ASTNodeArrayArchive_PREPEND_WHITESPACE_NODE         ASTNodeArrayArchive_ASTNodeType = 33
	ASTNodeArrayArchive_BEGIN_EMBEDDED_NODE_ARRAY       ASTNodeArrayArchive_ASTNodeType = 34
	ASTNodeArrayArchive_END_THUNK_NODE                  ASTNodeArrayArchive_ASTNodeType = 35
	ASTNodeArrayArchive_CELL_REFERENCE_NODE             ASTNodeArrayArchive_ASTNodeType = 36
	ASTNodeArrayArchive_COLON_NODE_WITH_UIDS            ASTNodeArrayArchive_ASTNodeType = 45
	ASTNodeArrayArchive_REFERENCE_ERROR_WITH_UIDS       ASTNodeArrayArchive_ASTNodeType = 46
	ASTNodeArrayArchive_UID_REFERENCE_NODE              ASTNodeArrayArchive_ASTNodeType = 48
	ASTNodeArrayArchive_LET_NODE                        ASTNodeArrayArchive_ASTNodeType = 52
	ASTNodeArrayArchive_LET_VAR_NODE                    ASTNodeArrayArchive_ASTNodeType = 53
	ASTNodeArrayArchive_LET_END_NODE                    ASTNodeArrayArchive_ASTNodeType = 54
	ASTNodeArrayArchive_LINKED_CELL_REF_NODE            ASTNodeArrayArchive_ASTNodeType = 63
	ASTNodeArrayArchive_LINKED_COLUMN_REF_NODE          ASTNodeArrayArchive_ASTNodeType = 64
	ASTNodeArrayArchive_LINKED_ROW_REF_NODE             ASTNodeArrayArchive_ASTNodeType = 65
	ASTNodeArrayArchive_CATEGORY_REF_NODE               ASTNodeArrayArchive_ASTNodeType = 66
	ASTNodeArrayArchive_COLON_TRACT_NODE                ASTNodeArrayArchive_ASTNodeType = 67
)

var ASTNodeArrayArchive_ASTNodeType_name = map[int32]string{
	1:  "ADDITION_NODE",
	2:  "SUBTRACTION_NODE",
	3:  "MULTIPLICATION_NODE",
	4:  "DIVISION_NODE",
	5:  "POWER_NODE",
	6:  "CONCATENATION_NODE",
	7:  "GREATER_THAN_NODE",
	8:  "GREATER_THAN_OR_EQUAL_TO_NODE",
	9:  "LESS_THAN_NODE",
	10: "LESS_THAN_OR_EQUAL_TO_NODE",
	11: "EQUAL_TO_NODE",
	12: "NOT_EQUAL_TO_NODE",
	13: "NEGATION_NODE",
	14: "PLUS_SIGN_NODE",
	15: "PERCENT_NODE",
	16: "FUNCTION_NODE",
	17: "NUMBER_NODE",
	18: "BOOLEAN_NODE",
	19: "STRING_NODE",
	20: "DATE_NODE",
	21: "DURATION_NODE",
	22: "EMPTY_ARGUMENT_NODE",
	23: "TOKEN_NODE",
	24: "ARRAY_NODE",
	25: "LIST_NODE",
	26: "THUNK_NODE",
	27: "LOCAL_CELL_REFERENCE_NODE",
	28: "CROSS_TABLE_CELL_REFERENCE_NODE",
	29: "COLON_NODE",
	30: "REFERENCE_ERROR_NODE",
	31: "UNKNOWN_FUNCTION_NODE",
	32: "APPEND_WHITESPACE_NODE",
	33: "PREPEND_WHITESPACE_NODE",
	34: "BEGIN_EMBEDDED_NODE_ARRAY",
	35: "END_THUNK_NODE",
	36: "CELL_REFERENCE_NODE",
	45: "COLON_NODE_WITH_UIDS",
	46: "REFERENCE_ERROR_WITH_UIDS",
	48: "UID_REFERENCE_NODE",
	52: "LET_NODE",
	53: "LET_VAR_NODE",
	54: "LET_END_NODE",
	63: "LINKED_CELL_REF_NODE",
	64: "LINKED_COLUMN_REF_NODE",
	65: "LINKED_ROW_REF_NODE",
	66: "CATEGORY_REF_NODE",
	67: "COLON_TRACT_NODE",
}

var ASTNodeArrayArchive_ASTNodeType_value = map[string]int32{
	"ADDITION_NODE":                   1,
	"SUBTRACTION_NODE":                2,
	"MULTIPLICATION_NODE":             3,
	"DIVISION_NODE":                   4,
	"POWER_NODE":                      5,
	"CONCATENATION_NODE":              6,
	"GREATER_THAN_NODE":               7,
	"GREATER_THAN_OR_EQUAL_TO_NODE":   8,
	"LESS_THAN_NODE":                  9,
	"LESS_THAN_OR_EQUAL_TO_NODE":      10,
	"EQUAL_TO_NODE":                   11,
	"NOT_EQUAL_TO_NODE":               12,
	"NEGATION_NODE":                   13,
	"PLUS_SIGN_NODE":                  14,
	"PERCENT_NODE":                    15,
	"FUNCTION_NODE":                   16,
	"NUMBER_NODE":                     17,
	"BOOLEAN_NODE":                    18,
	"STRING_NODE":                     19,
	"DATE_NODE":                       20,
	"DURATION_NODE":                   21,
	"EMPTY_ARGUMENT_NODE":             22,
	"TOKEN_NODE":                      23,
	"ARRAY_NODE":                      24,
	"LIST_NODE":                       25,
	"THUNK_NODE":                      26,
	"LOCAL_CELL_REFERENCE_NODE":       27,
	"CROSS_TABLE_CELL_REFERENCE_NODE": 28,
	"COLON_NODE":                      29,
	"REFERENCE_ERROR_NODE":            30,
	"UNKNOWN_FUNCTION_NODE":           31,
	"APPEND_WHITESPACE_NODE":          32,
	"PREPEND_WHITESPACE_NODE":         33,
	"BEGIN_EMBEDDED_NODE_ARRAY":       34,
	"END_THUNK_NODE":                  35,
	"CELL_REFERENCE_NODE":             36,
	"COLON_NODE_WITH_UIDS":            45,
	"REFERENCE_ERROR_WITH_UIDS":       46,
	"UID_REFERENCE_NODE":              48,
	"LET_NODE":                        52,
	"LET_VAR_NODE":                    53,
	"LET_END_NODE":                    54,
	"LINKED_CELL_REF_NODE":            63,
	"LINKED_COLUMN_REF_NODE":          64,
	"LINKED_ROW_REF_NODE":             65,
	"CATEGORY_REF_NODE":               66,
	"COLON_TRACT_NODE":                67,
}

func (x ASTNodeArrayArchive_ASTNodeType) Enum() *ASTNodeArrayArchive_ASTNodeType {
	p := new(ASTNodeArrayArchive_ASTNodeType)
	*p = x
	return p
}

func (x ASTNodeArrayArchive_ASTNodeType) String() string {
	return proto.EnumName(ASTNodeArrayArchive_ASTNodeType_name, int32(x))
}

func (x *ASTNodeArrayArchive_ASTNodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ASTNodeArrayArchive_ASTNodeType_value, data, "ASTNodeArrayArchive_ASTNodeType")
	if err != nil {
		return err
	}
	*x = ASTNodeArrayArchive_ASTNodeType(value)
	return nil
}

func (ASTNodeArrayArchive_ASTNodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 0}
}

type ASTNodeArrayArchive_ASTUidTractPurpose int32

const (
	ASTNodeArrayArchive_UIDS_INCLUDED         ASTNodeArrayArchive_ASTUidTractPurpose = 0
	ASTNodeArrayArchive_UIDS_PREMERGE         ASTNodeArrayArchive_ASTUidTractPurpose = 1
	ASTNodeArrayArchive_UIDS_PREMOVEREGION    ASTNodeArrayArchive_ASTUidTractPurpose = 2
	ASTNodeArrayArchive_UIDS_EXCLUDED         ASTNodeArrayArchive_ASTUidTractPurpose = 3
	ASTNodeArrayArchive_UIDS_ACTIVE           ASTNodeArrayArchive_ASTUidTractPurpose = 4
	ASTNodeArrayArchive_UIDS_PREMERGE_TOPLEFT ASTNodeArrayArchive_ASTUidTractPurpose = 5
	ASTNodeArrayArchive_UIDS_REMOVED_BY_MOVE  ASTNodeArrayArchive_ASTUidTractPurpose = 6
)

var ASTNodeArrayArchive_ASTUidTractPurpose_name = map[int32]string{
	0: "UIDS_INCLUDED",
	1: "UIDS_PREMERGE",
	2: "UIDS_PREMOVEREGION",
	3: "UIDS_EXCLUDED",
	4: "UIDS_ACTIVE",
	5: "UIDS_PREMERGE_TOPLEFT",
	6: "UIDS_REMOVED_BY_MOVE",
}

var ASTNodeArrayArchive_ASTUidTractPurpose_value = map[string]int32{
	"UIDS_INCLUDED":         0,
	"UIDS_PREMERGE":         1,
	"UIDS_PREMOVEREGION":    2,
	"UIDS_EXCLUDED":         3,
	"UIDS_ACTIVE":           4,
	"UIDS_PREMERGE_TOPLEFT": 5,
	"UIDS_REMOVED_BY_MOVE":  6,
}

func (x ASTNodeArrayArchive_ASTUidTractPurpose) Enum() *ASTNodeArrayArchive_ASTUidTractPurpose {
	p := new(ASTNodeArrayArchive_ASTUidTractPurpose)
	*p = x
	return p
}

func (x ASTNodeArrayArchive_ASTUidTractPurpose) String() string {
	return proto.EnumName(ASTNodeArrayArchive_ASTUidTractPurpose_name, int32(x))
}

func (x *ASTNodeArrayArchive_ASTUidTractPurpose) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ASTNodeArrayArchive_ASTUidTractPurpose_value, data, "ASTNodeArrayArchive_ASTUidTractPurpose")
	if err != nil {
		return err
	}
	*x = ASTNodeArrayArchive_ASTUidTractPurpose(value)
	return nil
}

func (ASTNodeArrayArchive_ASTUidTractPurpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 1}
}

type GroupByChangeArchive_ChangeType int32

const (
	GroupByChangeArchive_NONE               GroupByChangeArchive_ChangeType = 0
	GroupByChangeArchive_GROUP_VALUE_CHANGE GroupByChangeArchive_ChangeType = 1
	GroupByChangeArchive_REMOVE_GROUP_LEVEL GroupByChangeArchive_ChangeType = 2
	GroupByChangeArchive_ADD_GROUP_LEVEL    GroupByChangeArchive_ChangeType = 3
	GroupByChangeArchive_PROMOTE            GroupByChangeArchive_ChangeType = 4
	GroupByChangeArchive_DEMOTE             GroupByChangeArchive_ChangeType = 5
)

var GroupByChangeArchive_ChangeType_name = map[int32]string{
	0: "NONE",
	1: "GROUP_VALUE_CHANGE",
	2: "REMOVE_GROUP_LEVEL",
	3: "ADD_GROUP_LEVEL",
	4: "PROMOTE",
	5: "DEMOTE",
}

var GroupByChangeArchive_ChangeType_value = map[string]int32{
	"NONE":               0,
	"GROUP_VALUE_CHANGE": 1,
	"REMOVE_GROUP_LEVEL": 2,
	"ADD_GROUP_LEVEL":    3,
	"PROMOTE":            4,
	"DEMOTE":             5,
}

func (x GroupByChangeArchive_ChangeType) Enum() *GroupByChangeArchive_ChangeType {
	p := new(GroupByChangeArchive_ChangeType)
	*p = x
	return p
}

func (x GroupByChangeArchive_ChangeType) String() string {
	return proto.EnumName(GroupByChangeArchive_ChangeType_name, int32(x))
}

func (x *GroupByChangeArchive_ChangeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GroupByChangeArchive_ChangeType_value, data, "GroupByChangeArchive_ChangeType")
	if err != nil {
		return err
	}
	*x = GroupByChangeArchive_ChangeType(value)
	return nil
}

func (GroupByChangeArchive_ChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{55, 0}
}

type FormulaRewriteSpecArchive_RewriteType int32

const (
	FormulaRewriteSpecArchive_DELETE_OWNER                FormulaRewriteSpecArchive_RewriteType = 4
	FormulaRewriteSpecArchive_TRANSPOSE_TABLE             FormulaRewriteSpecArchive_RewriteType = 7
	FormulaRewriteSpecArchive_REMOVE_COLUMNS_OR_ROWS      FormulaRewriteSpecArchive_RewriteType = 8
	FormulaRewriteSpecArchive_INSERT_COLUMNS_OR_ROWS      FormulaRewriteSpecArchive_RewriteType = 9
	FormulaRewriteSpecArchive_MOVE_COLUMNS_OR_ROWS        FormulaRewriteSpecArchive_RewriteType = 10
	FormulaRewriteSpecArchive_MOVE_REGION                 FormulaRewriteSpecArchive_RewriteType = 11
	FormulaRewriteSpecArchive_SORT_ROWS                   FormulaRewriteSpecArchive_RewriteType = 12
	FormulaRewriteSpecArchive_MERGE_CELLS                 FormulaRewriteSpecArchive_RewriteType = 13
	FormulaRewriteSpecArchive_UNDO_MERGE_CELLS            FormulaRewriteSpecArchive_RewriteType = 14
	FormulaRewriteSpecArchive_TABLE_ID_REASSIGNMENT       FormulaRewriteSpecArchive_RewriteType = 15
	FormulaRewriteSpecArchive_INSERT_OWNER                FormulaRewriteSpecArchive_RewriteType = 16
	FormulaRewriteSpecArchive_MERGE_ORIGIN_MOVED          FormulaRewriteSpecArchive_RewriteType = 17
	FormulaRewriteSpecArchive_REORDER_ROWS                FormulaRewriteSpecArchive_RewriteType = 18
	FormulaRewriteSpecArchive_GROUP_NODE_UID_REASSIGNMENT FormulaRewriteSpecArchive_RewriteType = 19
	FormulaRewriteSpecArchive_BASE_TO_CHROME_REWRITE      FormulaRewriteSpecArchive_RewriteType = 20
	FormulaRewriteSpecArchive_CHROME_TO_BASE_REWRITE      FormulaRewriteSpecArchive_RewriteType = 21
	FormulaRewriteSpecArchive_GROUP_NODE_CHANGE           FormulaRewriteSpecArchive_RewriteType = 22
	FormulaRewriteSpecArchive_PASTED_AREA                 FormulaRewriteSpecArchive_RewriteType = 23
)

var FormulaRewriteSpecArchive_RewriteType_name = map[int32]string{
	4:  "DELETE_OWNER",
	7:  "TRANSPOSE_TABLE",
	8:  "REMOVE_COLUMNS_OR_ROWS",
	9:  "INSERT_COLUMNS_OR_ROWS",
	10: "MOVE_COLUMNS_OR_ROWS",
	11: "MOVE_REGION",
	12: "SORT_ROWS",
	13: "MERGE_CELLS",
	14: "UNDO_MERGE_CELLS",
	15: "TABLE_ID_REASSIGNMENT",
	16: "INSERT_OWNER",
	17: "MERGE_ORIGIN_MOVED",
	18: "REORDER_ROWS",
	19: "GROUP_NODE_UID_REASSIGNMENT",
	20: "BASE_TO_CHROME_REWRITE",
	21: "CHROME_TO_BASE_REWRITE",
	22: "GROUP_NODE_CHANGE",
	23: "PASTED_AREA",
}

var FormulaRewriteSpecArchive_RewriteType_value = map[string]int32{
	"DELETE_OWNER":                4,
	"TRANSPOSE_TABLE":             7,
	"REMOVE_COLUMNS_OR_ROWS":      8,
	"INSERT_COLUMNS_OR_ROWS":      9,
	"MOVE_COLUMNS_OR_ROWS":        10,
	"MOVE_REGION":                 11,
	"SORT_ROWS":                   12,
	"MERGE_CELLS":                 13,
	"UNDO_MERGE_CELLS":            14,
	"TABLE_ID_REASSIGNMENT":       15,
	"INSERT_OWNER":                16,
	"MERGE_ORIGIN_MOVED":          17,
	"REORDER_ROWS":                18,
	"GROUP_NODE_UID_REASSIGNMENT": 19,
	"BASE_TO_CHROME_REWRITE":      20,
	"CHROME_TO_BASE_REWRITE":      21,
	"GROUP_NODE_CHANGE":           22,
	"PASTED_AREA":                 23,
}

func (x FormulaRewriteSpecArchive_RewriteType) Enum() *FormulaRewriteSpecArchive_RewriteType {
	p := new(FormulaRewriteSpecArchive_RewriteType)
	*p = x
	return p
}

func (x FormulaRewriteSpecArchive_RewriteType) String() string {
	return proto.EnumName(FormulaRewriteSpecArchive_RewriteType_name, int32(x))
}

func (x *FormulaRewriteSpecArchive_RewriteType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaRewriteSpecArchive_RewriteType_value, data, "FormulaRewriteSpecArchive_RewriteType")
	if err != nil {
		return err
	}
	*x = FormulaRewriteSpecArchive_RewriteType(value)
	return nil
}

func (FormulaRewriteSpecArchive_RewriteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{63, 0}
}

type FormulaCoordPairsByOwnerArchive_OwnerKind int32

const (
	FormulaCoordPairsByOwnerArchive_Unknown                FormulaCoordPairsByOwnerArchive_OwnerKind = 0
	FormulaCoordPairsByOwnerArchive_TableModel             FormulaCoordPairsByOwnerArchive_OwnerKind = 1
	FormulaCoordPairsByOwnerArchive_Chart                  FormulaCoordPairsByOwnerArchive_OwnerKind = 2
	FormulaCoordPairsByOwnerArchive_ConditionalStyleOwner  FormulaCoordPairsByOwnerArchive_OwnerKind = 3
	FormulaCoordPairsByOwnerArchive_HiddenStates           FormulaCoordPairsByOwnerArchive_OwnerKind = 4
	FormulaCoordPairsByOwnerArchive_MergeOwner             FormulaCoordPairsByOwnerArchive_OwnerKind = 5
	FormulaCoordPairsByOwnerArchive_SortRuleOwner          FormulaCoordPairsByOwnerArchive_OwnerKind = 6
	FormulaCoordPairsByOwnerArchive_ReferenceTracker       FormulaCoordPairsByOwnerArchive_OwnerKind = 7
	FormulaCoordPairsByOwnerArchive_GroupBy                FormulaCoordPairsByOwnerArchive_OwnerKind = 8
	FormulaCoordPairsByOwnerArchive_CategoryAggregateOwner FormulaCoordPairsByOwnerArchive_OwnerKind = 9
	FormulaCoordPairsByOwnerArchive_PencilAnnotationOwner  FormulaCoordPairsByOwnerArchive_OwnerKind = 10
)

var FormulaCoordPairsByOwnerArchive_OwnerKind_name = map[int32]string{
	0:  "Unknown",
	1:  "TableModel",
	2:  "Chart",
	3:  "ConditionalStyleOwner",
	4:  "HiddenStates",
	5:  "MergeOwner",
	6:  "SortRuleOwner",
	7:  "ReferenceTracker",
	8:  "GroupBy",
	9:  "CategoryAggregateOwner",
	10: "PencilAnnotationOwner",
}

var FormulaCoordPairsByOwnerArchive_OwnerKind_value = map[string]int32{
	"Unknown":                0,
	"TableModel":             1,
	"Chart":                  2,
	"ConditionalStyleOwner":  3,
	"HiddenStates":           4,
	"MergeOwner":             5,
	"SortRuleOwner":          6,
	"ReferenceTracker":       7,
	"GroupBy":                8,
	"CategoryAggregateOwner": 9,
	"PencilAnnotationOwner":  10,
}

func (x FormulaCoordPairsByOwnerArchive_OwnerKind) Enum() *FormulaCoordPairsByOwnerArchive_OwnerKind {
	p := new(FormulaCoordPairsByOwnerArchive_OwnerKind)
	*p = x
	return p
}

func (x FormulaCoordPairsByOwnerArchive_OwnerKind) String() string {
	return proto.EnumName(FormulaCoordPairsByOwnerArchive_OwnerKind_name, int32(x))
}

func (x *FormulaCoordPairsByOwnerArchive_OwnerKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaCoordPairsByOwnerArchive_OwnerKind_value, data, "FormulaCoordPairsByOwnerArchive_OwnerKind")
	if err != nil {
		return err
	}
	*x = FormulaCoordPairsByOwnerArchive_OwnerKind(value)
	return nil
}

func (FormulaCoordPairsByOwnerArchive_OwnerKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{69, 0}
}

type ErrorCellValueArchive_ErrorType int32

const (
	ErrorCellValueArchive_UnknownError                       ErrorCellValueArchive_ErrorType = 1
	ErrorCellValueArchive_InvalidLiveStockAttribute          ErrorCellValueArchive_ErrorType = 111
	ErrorCellValueArchive_InvalidLiveCurrencyAttribute       ErrorCellValueArchive_ErrorType = 112
	ErrorCellValueArchive_InvalidHistoricalStockAttribute    ErrorCellValueArchive_ErrorType = 113
	ErrorCellValueArchive_InvalidHistoricalCurrencyAttribute ErrorCellValueArchive_ErrorType = 114
	ErrorCellValueArchive_InvalidHistoricalDate              ErrorCellValueArchive_ErrorType = 115
	ErrorCellValueArchive_NoTradingInformation               ErrorCellValueArchive_ErrorType = 116
	ErrorCellValueArchive_InvalidStockCode                   ErrorCellValueArchive_ErrorType = 117
	ErrorCellValueArchive_InvalidCurrencyPair                ErrorCellValueArchive_ErrorType = 118
	ErrorCellValueArchive_RemoteDataServerError              ErrorCellValueArchive_ErrorType = 119
)

var ErrorCellValueArchive_ErrorType_name = map[int32]string{
	1:   "UnknownError",
	111: "InvalidLiveStockAttribute",
	112: "InvalidLiveCurrencyAttribute",
	113: "InvalidHistoricalStockAttribute",
	114: "InvalidHistoricalCurrencyAttribute",
	115: "InvalidHistoricalDate",
	116: "NoTradingInformation",
	117: "InvalidStockCode",
	118: "InvalidCurrencyPair",
	119: "RemoteDataServerError",
}

var ErrorCellValueArchive_ErrorType_value = map[string]int32{
	"UnknownError":                       1,
	"InvalidLiveStockAttribute":          111,
	"InvalidLiveCurrencyAttribute":       112,
	"InvalidHistoricalStockAttribute":    113,
	"InvalidHistoricalCurrencyAttribute": 114,
	"InvalidHistoricalDate":              115,
	"NoTradingInformation":               116,
	"InvalidStockCode":                   117,
	"InvalidCurrencyPair":                118,
	"RemoteDataServerError":              119,
}

func (x ErrorCellValueArchive_ErrorType) Enum() *ErrorCellValueArchive_ErrorType {
	p := new(ErrorCellValueArchive_ErrorType)
	*p = x
	return p
}

func (x ErrorCellValueArchive_ErrorType) String() string {
	return proto.EnumName(ErrorCellValueArchive_ErrorType_name, int32(x))
}

func (x *ErrorCellValueArchive_ErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCellValueArchive_ErrorType_value, data, "ErrorCellValueArchive_ErrorType")
	if err != nil {
		return err
	}
	*x = ErrorCellValueArchive_ErrorType(value)
	return nil
}

func (ErrorCellValueArchive_ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{83, 0}
}

type CellValueArchive_CellValueType int32

const (
	CellValueArchive_NIL_TYPE     CellValueArchive_CellValueType = 1
	CellValueArchive_BOOLEAN_TYPE CellValueArchive_CellValueType = 2
	CellValueArchive_DATE_TYPE    CellValueArchive_CellValueType = 3
	CellValueArchive_NUMBER_TYPE  CellValueArchive_CellValueType = 4
	CellValueArchive_STRING_TYPE  CellValueArchive_CellValueType = 5
)

var CellValueArchive_CellValueType_name = map[int32]string{
	1: "NIL_TYPE",
	2: "BOOLEAN_TYPE",
	3: "DATE_TYPE",
	4: "NUMBER_TYPE",
	5: "STRING_TYPE",
}

var CellValueArchive_CellValueType_value = map[string]int32{
	"NIL_TYPE":     1,
	"BOOLEAN_TYPE": 2,
	"DATE_TYPE":    3,
	"NUMBER_TYPE":  4,
	"STRING_TYPE":  5,
}

func (x CellValueArchive_CellValueType) Enum() *CellValueArchive_CellValueType {
	p := new(CellValueArchive_CellValueType)
	*p = x
	return p
}

func (x CellValueArchive_CellValueType) String() string {
	return proto.EnumName(CellValueArchive_CellValueType_name, int32(x))
}

func (x *CellValueArchive_CellValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CellValueArchive_CellValueType_value, data, "CellValueArchive_CellValueType")
	if err != nil {
		return err
	}
	*x = CellValueArchive_CellValueType(value)
	return nil
}

func (CellValueArchive_CellValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{84, 0}
}

type CellReferenceArchive struct {
	Column               *uint32            `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32            `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	TableId              *TSP.CFUUIDArchive `protobuf:"bytes,3,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CellReferenceArchive) Reset()         { *m = CellReferenceArchive{} }
func (m *CellReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*CellReferenceArchive) ProtoMessage()    {}
func (*CellReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{0}
}

func (m *CellReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellReferenceArchive.Unmarshal(m, b)
}
func (m *CellReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellReferenceArchive.Marshal(b, m, deterministic)
}
func (m *CellReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellReferenceArchive.Merge(m, src)
}
func (m *CellReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_CellReferenceArchive.Size(m)
}
func (m *CellReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellReferenceArchive proto.InternalMessageInfo

func (m *CellReferenceArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellReferenceArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellReferenceArchive) GetTableId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

type InternalCellReferenceArchive struct {
	Coordinate           *CellCoordinateArchive `protobuf:"bytes,1,req,name=coordinate" json:"coordinate,omitempty"`
	OwnerId              *uint32                `protobuf:"varint,2,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InternalCellReferenceArchive) Reset()         { *m = InternalCellReferenceArchive{} }
func (m *InternalCellReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*InternalCellReferenceArchive) ProtoMessage()    {}
func (*InternalCellReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{1}
}

func (m *InternalCellReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCellReferenceArchive.Unmarshal(m, b)
}
func (m *InternalCellReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCellReferenceArchive.Marshal(b, m, deterministic)
}
func (m *InternalCellReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCellReferenceArchive.Merge(m, src)
}
func (m *InternalCellReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_InternalCellReferenceArchive.Size(m)
}
func (m *InternalCellReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCellReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCellReferenceArchive proto.InternalMessageInfo

func (m *InternalCellReferenceArchive) GetCoordinate() *CellCoordinateArchive {
	if m != nil {
		return m.Coordinate
	}
	return nil
}

func (m *InternalCellReferenceArchive) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

type RangeReferenceArchive struct {
	TableId              *TSP.CFUUIDArchive `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	TopLeftColumn        *uint32            `protobuf:"varint,2,req,name=top_left_column,json=topLeftColumn" json:"top_left_column,omitempty"`
	TopLeftRow           *uint32            `protobuf:"varint,3,req,name=top_left_row,json=topLeftRow" json:"top_left_row,omitempty"`
	BottomRightColumn    *uint32            `protobuf:"varint,4,req,name=bottom_right_column,json=bottomRightColumn" json:"bottom_right_column,omitempty"`
	BottomRightRow       *uint32            `protobuf:"varint,5,req,name=bottom_right_row,json=bottomRightRow" json:"bottom_right_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RangeReferenceArchive) Reset()         { *m = RangeReferenceArchive{} }
func (m *RangeReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*RangeReferenceArchive) ProtoMessage()    {}
func (*RangeReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{2}
}

func (m *RangeReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeReferenceArchive.Unmarshal(m, b)
}
func (m *RangeReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeReferenceArchive.Marshal(b, m, deterministic)
}
func (m *RangeReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeReferenceArchive.Merge(m, src)
}
func (m *RangeReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_RangeReferenceArchive.Size(m)
}
func (m *RangeReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeReferenceArchive proto.InternalMessageInfo

func (m *RangeReferenceArchive) GetTableId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *RangeReferenceArchive) GetTopLeftColumn() uint32 {
	if m != nil && m.TopLeftColumn != nil {
		return *m.TopLeftColumn
	}
	return 0
}

func (m *RangeReferenceArchive) GetTopLeftRow() uint32 {
	if m != nil && m.TopLeftRow != nil {
		return *m.TopLeftRow
	}
	return 0
}

func (m *RangeReferenceArchive) GetBottomRightColumn() uint32 {
	if m != nil && m.BottomRightColumn != nil {
		return *m.BottomRightColumn
	}
	return 0
}

func (m *RangeReferenceArchive) GetBottomRightRow() uint32 {
	if m != nil && m.BottomRightRow != nil {
		return *m.BottomRightRow
	}
	return 0
}

type InternalRangeReferenceArchive struct {
	OwnerId              *uint32                 `protobuf:"varint,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	Range                *RangeCoordinateArchive `protobuf:"bytes,2,req,name=range" json:"range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *InternalRangeReferenceArchive) Reset()         { *m = InternalRangeReferenceArchive{} }
func (m *InternalRangeReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*InternalRangeReferenceArchive) ProtoMessage()    {}
func (*InternalRangeReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{3}
}

func (m *InternalRangeReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalRangeReferenceArchive.Unmarshal(m, b)
}
func (m *InternalRangeReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalRangeReferenceArchive.Marshal(b, m, deterministic)
}
func (m *InternalRangeReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalRangeReferenceArchive.Merge(m, src)
}
func (m *InternalRangeReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_InternalRangeReferenceArchive.Size(m)
}
func (m *InternalRangeReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalRangeReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InternalRangeReferenceArchive proto.InternalMessageInfo

func (m *InternalRangeReferenceArchive) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *InternalRangeReferenceArchive) GetRange() *RangeCoordinateArchive {
	if m != nil {
		return m.Range
	}
	return nil
}

type IndexSetArchive struct {
	Entries              []*IndexSetArchive_IndexSetEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *IndexSetArchive) Reset()         { *m = IndexSetArchive{} }
func (m *IndexSetArchive) String() string { return proto.CompactTextString(m) }
func (*IndexSetArchive) ProtoMessage()    {}
func (*IndexSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{4}
}

func (m *IndexSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexSetArchive.Unmarshal(m, b)
}
func (m *IndexSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexSetArchive.Marshal(b, m, deterministic)
}
func (m *IndexSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexSetArchive.Merge(m, src)
}
func (m *IndexSetArchive) XXX_Size() int {
	return xxx_messageInfo_IndexSetArchive.Size(m)
}
func (m *IndexSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_IndexSetArchive proto.InternalMessageInfo

func (m *IndexSetArchive) GetEntries() []*IndexSetArchive_IndexSetEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type IndexSetArchive_IndexSetEntry struct {
	RangeBegin           *int32   `protobuf:"varint,1,req,name=range_begin,json=rangeBegin" json:"range_begin,omitempty"`
	RangeEnd             *int32   `protobuf:"varint,2,opt,name=range_end,json=rangeEnd" json:"range_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexSetArchive_IndexSetEntry) Reset()         { *m = IndexSetArchive_IndexSetEntry{} }
func (m *IndexSetArchive_IndexSetEntry) String() string { return proto.CompactTextString(m) }
func (*IndexSetArchive_IndexSetEntry) ProtoMessage()    {}
func (*IndexSetArchive_IndexSetEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{4, 0}
}

func (m *IndexSetArchive_IndexSetEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexSetArchive_IndexSetEntry.Unmarshal(m, b)
}
func (m *IndexSetArchive_IndexSetEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexSetArchive_IndexSetEntry.Marshal(b, m, deterministic)
}
func (m *IndexSetArchive_IndexSetEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexSetArchive_IndexSetEntry.Merge(m, src)
}
func (m *IndexSetArchive_IndexSetEntry) XXX_Size() int {
	return xxx_messageInfo_IndexSetArchive_IndexSetEntry.Size(m)
}
func (m *IndexSetArchive_IndexSetEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexSetArchive_IndexSetEntry.DiscardUnknown(m)
}

var xxx_messageInfo_IndexSetArchive_IndexSetEntry proto.InternalMessageInfo

func (m *IndexSetArchive_IndexSetEntry) GetRangeBegin() int32 {
	if m != nil && m.RangeBegin != nil {
		return *m.RangeBegin
	}
	return 0
}

func (m *IndexSetArchive_IndexSetEntry) GetRangeEnd() int32 {
	if m != nil && m.RangeEnd != nil {
		return *m.RangeEnd
	}
	return 0
}

type CellCoordSetArchive struct {
	ColumnEntries        []*CellCoordSetArchive_ColumnEntry `protobuf:"bytes,1,rep,name=column_entries,json=columnEntries" json:"column_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CellCoordSetArchive) Reset()         { *m = CellCoordSetArchive{} }
func (m *CellCoordSetArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordSetArchive) ProtoMessage()    {}
func (*CellCoordSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{5}
}

func (m *CellCoordSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordSetArchive.Unmarshal(m, b)
}
func (m *CellCoordSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordSetArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordSetArchive.Merge(m, src)
}
func (m *CellCoordSetArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordSetArchive.Size(m)
}
func (m *CellCoordSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordSetArchive proto.InternalMessageInfo

func (m *CellCoordSetArchive) GetColumnEntries() []*CellCoordSetArchive_ColumnEntry {
	if m != nil {
		return m.ColumnEntries
	}
	return nil
}

type CellCoordSetArchive_ColumnEntry struct {
	Column               *uint32          `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	RowSet               *IndexSetArchive `protobuf:"bytes,2,req,name=row_set,json=rowSet" json:"row_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CellCoordSetArchive_ColumnEntry) Reset()         { *m = CellCoordSetArchive_ColumnEntry{} }
func (m *CellCoordSetArchive_ColumnEntry) String() string { return proto.CompactTextString(m) }
func (*CellCoordSetArchive_ColumnEntry) ProtoMessage()    {}
func (*CellCoordSetArchive_ColumnEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{5, 0}
}

func (m *CellCoordSetArchive_ColumnEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordSetArchive_ColumnEntry.Unmarshal(m, b)
}
func (m *CellCoordSetArchive_ColumnEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordSetArchive_ColumnEntry.Marshal(b, m, deterministic)
}
func (m *CellCoordSetArchive_ColumnEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordSetArchive_ColumnEntry.Merge(m, src)
}
func (m *CellCoordSetArchive_ColumnEntry) XXX_Size() int {
	return xxx_messageInfo_CellCoordSetArchive_ColumnEntry.Size(m)
}
func (m *CellCoordSetArchive_ColumnEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordSetArchive_ColumnEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordSetArchive_ColumnEntry proto.InternalMessageInfo

func (m *CellCoordSetArchive_ColumnEntry) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellCoordSetArchive_ColumnEntry) GetRowSet() *IndexSetArchive {
	if m != nil {
		return m.RowSet
	}
	return nil
}

type InternalCellRefSetArchive struct {
	OwnerEntries         []*InternalCellRefSetArchive_OwnerEntry `protobuf:"bytes,1,rep,name=owner_entries,json=ownerEntries" json:"owner_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *InternalCellRefSetArchive) Reset()         { *m = InternalCellRefSetArchive{} }
func (m *InternalCellRefSetArchive) String() string { return proto.CompactTextString(m) }
func (*InternalCellRefSetArchive) ProtoMessage()    {}
func (*InternalCellRefSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{6}
}

func (m *InternalCellRefSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCellRefSetArchive.Unmarshal(m, b)
}
func (m *InternalCellRefSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCellRefSetArchive.Marshal(b, m, deterministic)
}
func (m *InternalCellRefSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCellRefSetArchive.Merge(m, src)
}
func (m *InternalCellRefSetArchive) XXX_Size() int {
	return xxx_messageInfo_InternalCellRefSetArchive.Size(m)
}
func (m *InternalCellRefSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCellRefSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCellRefSetArchive proto.InternalMessageInfo

func (m *InternalCellRefSetArchive) GetOwnerEntries() []*InternalCellRefSetArchive_OwnerEntry {
	if m != nil {
		return m.OwnerEntries
	}
	return nil
}

type InternalCellRefSetArchive_OwnerEntry struct {
	OwnerId              *uint32              `protobuf:"varint,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	CoordSet             *CellCoordSetArchive `protobuf:"bytes,2,req,name=coord_set,json=coordSet" json:"coord_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InternalCellRefSetArchive_OwnerEntry) Reset()         { *m = InternalCellRefSetArchive_OwnerEntry{} }
func (m *InternalCellRefSetArchive_OwnerEntry) String() string { return proto.CompactTextString(m) }
func (*InternalCellRefSetArchive_OwnerEntry) ProtoMessage()    {}
func (*InternalCellRefSetArchive_OwnerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{6, 0}
}

func (m *InternalCellRefSetArchive_OwnerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry.Unmarshal(m, b)
}
func (m *InternalCellRefSetArchive_OwnerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry.Marshal(b, m, deterministic)
}
func (m *InternalCellRefSetArchive_OwnerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry.Merge(m, src)
}
func (m *InternalCellRefSetArchive_OwnerEntry) XXX_Size() int {
	return xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry.Size(m)
}
func (m *InternalCellRefSetArchive_OwnerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCellRefSetArchive_OwnerEntry proto.InternalMessageInfo

func (m *InternalCellRefSetArchive_OwnerEntry) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *InternalCellRefSetArchive_OwnerEntry) GetCoordSet() *CellCoordSetArchive {
	if m != nil {
		return m.CoordSet
	}
	return nil
}

type ReferenceArchive struct {
	ReferenceType        *ReferenceArchive_ReferenceType `protobuf:"varint,1,req,name=reference_type,json=referenceType,enum=TSCE.ReferenceArchive_ReferenceType" json:"reference_type,omitempty"`
	CellReference        *CellReferenceArchive           `protobuf:"bytes,2,opt,name=cell_reference,json=cellReference" json:"cell_reference,omitempty"`
	RangeReference       *RangeReferenceArchive          `protobuf:"bytes,3,opt,name=range_reference,json=rangeReference" json:"range_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ReferenceArchive) Reset()         { *m = ReferenceArchive{} }
func (m *ReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*ReferenceArchive) ProtoMessage()    {}
func (*ReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{7}
}

func (m *ReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceArchive.Unmarshal(m, b)
}
func (m *ReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceArchive.Marshal(b, m, deterministic)
}
func (m *ReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceArchive.Merge(m, src)
}
func (m *ReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_ReferenceArchive.Size(m)
}
func (m *ReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceArchive proto.InternalMessageInfo

func (m *ReferenceArchive) GetReferenceType() ReferenceArchive_ReferenceType {
	if m != nil && m.ReferenceType != nil {
		return *m.ReferenceType
	}
	return ReferenceArchive_CELL_REFERENCE
}

func (m *ReferenceArchive) GetCellReference() *CellReferenceArchive {
	if m != nil {
		return m.CellReference
	}
	return nil
}

func (m *ReferenceArchive) GetRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.RangeReference
	}
	return nil
}

type EdgeArchive struct {
	Column               *uint32            `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32            `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	IsPrecedent          *bool              `protobuf:"varint,3,req,name=is_precedent,json=isPrecedent" json:"is_precedent,omitempty"`
	OwnerId              *TSP.CFUUIDArchive `protobuf:"bytes,4,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EdgeArchive) Reset()         { *m = EdgeArchive{} }
func (m *EdgeArchive) String() string { return proto.CompactTextString(m) }
func (*EdgeArchive) ProtoMessage()    {}
func (*EdgeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{8}
}

func (m *EdgeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeArchive.Unmarshal(m, b)
}
func (m *EdgeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeArchive.Marshal(b, m, deterministic)
}
func (m *EdgeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeArchive.Merge(m, src)
}
func (m *EdgeArchive) XXX_Size() int {
	return xxx_messageInfo_EdgeArchive.Size(m)
}
func (m *EdgeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeArchive proto.InternalMessageInfo

func (m *EdgeArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *EdgeArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *EdgeArchive) GetIsPrecedent() bool {
	if m != nil && m.IsPrecedent != nil {
		return *m.IsPrecedent
	}
	return false
}

func (m *EdgeArchive) GetOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

type EdgesArchive struct {
	PackedEdgeWithoutOwner []uint32             `protobuf:"varint,9,rep,name=packed_edge_without_owner,json=packedEdgeWithoutOwner" json:"packed_edge_without_owner,omitempty"`
	PackedEdgeWithOwner    []uint32             `protobuf:"varint,10,rep,name=packed_edge_with_owner,json=packedEdgeWithOwner" json:"packed_edge_with_owner,omitempty"`
	OwnerIdForEdge         []*TSP.CFUUIDArchive `protobuf:"bytes,11,rep,name=owner_id_for_edge,json=ownerIdForEdge" json:"owner_id_for_edge,omitempty"`
	InternalOwnerIdForEdge []uint32             `protobuf:"varint,12,rep,name=internal_owner_id_for_edge,json=internalOwnerIdForEdge" json:"internal_owner_id_for_edge,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *EdgesArchive) Reset()         { *m = EdgesArchive{} }
func (m *EdgesArchive) String() string { return proto.CompactTextString(m) }
func (*EdgesArchive) ProtoMessage()    {}
func (*EdgesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{9}
}

func (m *EdgesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgesArchive.Unmarshal(m, b)
}
func (m *EdgesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgesArchive.Marshal(b, m, deterministic)
}
func (m *EdgesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgesArchive.Merge(m, src)
}
func (m *EdgesArchive) XXX_Size() int {
	return xxx_messageInfo_EdgesArchive.Size(m)
}
func (m *EdgesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_EdgesArchive proto.InternalMessageInfo

func (m *EdgesArchive) GetPackedEdgeWithoutOwner() []uint32 {
	if m != nil {
		return m.PackedEdgeWithoutOwner
	}
	return nil
}

func (m *EdgesArchive) GetPackedEdgeWithOwner() []uint32 {
	if m != nil {
		return m.PackedEdgeWithOwner
	}
	return nil
}

func (m *EdgesArchive) GetOwnerIdForEdge() []*TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerIdForEdge
	}
	return nil
}

func (m *EdgesArchive) GetInternalOwnerIdForEdge() []uint32 {
	if m != nil {
		return m.InternalOwnerIdForEdge
	}
	return nil
}

type ExpandedEdgesArchive struct {
	EdgeWithoutOwnerRows    []uint32 `protobuf:"varint,1,rep,name=edge_without_owner_rows,json=edgeWithoutOwnerRows" json:"edge_without_owner_rows,omitempty"`
	EdgeWithoutOwnerColumns []uint32 `protobuf:"varint,2,rep,name=edge_without_owner_columns,json=edgeWithoutOwnerColumns" json:"edge_without_owner_columns,omitempty"`
	EdgeWithOwnerRows       []uint32 `protobuf:"varint,3,rep,name=edge_with_owner_rows,json=edgeWithOwnerRows" json:"edge_with_owner_rows,omitempty"`
	EdgeWithOwnerColumns    []uint32 `protobuf:"varint,4,rep,name=edge_with_owner_columns,json=edgeWithOwnerColumns" json:"edge_with_owner_columns,omitempty"`
	InternalOwnerIdForEdge  []uint32 `protobuf:"varint,5,rep,name=internal_owner_id_for_edge,json=internalOwnerIdForEdge" json:"internal_owner_id_for_edge,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ExpandedEdgesArchive) Reset()         { *m = ExpandedEdgesArchive{} }
func (m *ExpandedEdgesArchive) String() string { return proto.CompactTextString(m) }
func (*ExpandedEdgesArchive) ProtoMessage()    {}
func (*ExpandedEdgesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{10}
}

func (m *ExpandedEdgesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedEdgesArchive.Unmarshal(m, b)
}
func (m *ExpandedEdgesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedEdgesArchive.Marshal(b, m, deterministic)
}
func (m *ExpandedEdgesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedEdgesArchive.Merge(m, src)
}
func (m *ExpandedEdgesArchive) XXX_Size() int {
	return xxx_messageInfo_ExpandedEdgesArchive.Size(m)
}
func (m *ExpandedEdgesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedEdgesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedEdgesArchive proto.InternalMessageInfo

func (m *ExpandedEdgesArchive) GetEdgeWithoutOwnerRows() []uint32 {
	if m != nil {
		return m.EdgeWithoutOwnerRows
	}
	return nil
}

func (m *ExpandedEdgesArchive) GetEdgeWithoutOwnerColumns() []uint32 {
	if m != nil {
		return m.EdgeWithoutOwnerColumns
	}
	return nil
}

func (m *ExpandedEdgesArchive) GetEdgeWithOwnerRows() []uint32 {
	if m != nil {
		return m.EdgeWithOwnerRows
	}
	return nil
}

func (m *ExpandedEdgesArchive) GetEdgeWithOwnerColumns() []uint32 {
	if m != nil {
		return m.EdgeWithOwnerColumns
	}
	return nil
}

func (m *ExpandedEdgesArchive) GetInternalOwnerIdForEdge() []uint32 {
	if m != nil {
		return m.InternalOwnerIdForEdge
	}
	return nil
}

type CellRecordArchive struct {
	Column                              *uint32        `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                                 *uint32        `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	DirtySelfPlusPrecedentsCount        *uint64        `protobuf:"varint,3,opt,name=dirty_self_plus_precedents_count,json=dirtySelfPlusPrecedentsCount,def=0" json:"dirty_self_plus_precedents_count,omitempty"`
	IsInACycle                          *bool          `protobuf:"varint,4,opt,name=is_in_a_cycle,json=isInACycle,def=0" json:"is_in_a_cycle,omitempty"`
	Edge                                []*EdgeArchive `protobuf:"bytes,5,rep,name=edge" json:"edge,omitempty"` // Deprecated: Do not use.
	ContainsAFormula                    *bool          `protobuf:"varint,6,opt,name=contains_a_formula,json=containsAFormula,def=1" json:"contains_a_formula,omitempty"`
	HasCalculatedPrecedents             *bool          `protobuf:"varint,7,opt,name=has_calculated_precedents,json=hasCalculatedPrecedents,def=0" json:"has_calculated_precedents,omitempty"`
	CalculatePrecedentsOnNextRecalc     *bool          `protobuf:"varint,8,opt,name=calculate_precedents_on_next_recalc,json=calculatePrecedentsOnNextRecalc,def=0" json:"calculate_precedents_on_next_recalc,omitempty"` // Deprecated: Do not use.
	TranslateForExcelImportOnNextRecalc *bool          `protobuf:"varint,10,opt,name=translate_for_excel_import_on_next_recalc,json=translateForExcelImportOnNextRecalc,def=0" json:"translate_for_excel_import_on_next_recalc,omitempty"`
	Edges                               *EdgesArchive  `protobuf:"bytes,9,opt,name=edges" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}       `json:"-"`
	XXX_unrecognized                    []byte         `json:"-"`
	XXX_sizecache                       int32          `json:"-"`
}

func (m *CellRecordArchive) Reset()         { *m = CellRecordArchive{} }
func (m *CellRecordArchive) String() string { return proto.CompactTextString(m) }
func (*CellRecordArchive) ProtoMessage()    {}
func (*CellRecordArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{11}
}

func (m *CellRecordArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRecordArchive.Unmarshal(m, b)
}
func (m *CellRecordArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRecordArchive.Marshal(b, m, deterministic)
}
func (m *CellRecordArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRecordArchive.Merge(m, src)
}
func (m *CellRecordArchive) XXX_Size() int {
	return xxx_messageInfo_CellRecordArchive.Size(m)
}
func (m *CellRecordArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRecordArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellRecordArchive proto.InternalMessageInfo

const Default_CellRecordArchive_DirtySelfPlusPrecedentsCount uint64 = 0
const Default_CellRecordArchive_IsInACycle bool = false
const Default_CellRecordArchive_ContainsAFormula bool = true
const Default_CellRecordArchive_HasCalculatedPrecedents bool = false
const Default_CellRecordArchive_CalculatePrecedentsOnNextRecalc bool = false
const Default_CellRecordArchive_TranslateForExcelImportOnNextRecalc bool = false

func (m *CellRecordArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellRecordArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellRecordArchive) GetDirtySelfPlusPrecedentsCount() uint64 {
	if m != nil && m.DirtySelfPlusPrecedentsCount != nil {
		return *m.DirtySelfPlusPrecedentsCount
	}
	return Default_CellRecordArchive_DirtySelfPlusPrecedentsCount
}

func (m *CellRecordArchive) GetIsInACycle() bool {
	if m != nil && m.IsInACycle != nil {
		return *m.IsInACycle
	}
	return Default_CellRecordArchive_IsInACycle
}

// Deprecated: Do not use.
func (m *CellRecordArchive) GetEdge() []*EdgeArchive {
	if m != nil {
		return m.Edge
	}
	return nil
}

func (m *CellRecordArchive) GetContainsAFormula() bool {
	if m != nil && m.ContainsAFormula != nil {
		return *m.ContainsAFormula
	}
	return Default_CellRecordArchive_ContainsAFormula
}

func (m *CellRecordArchive) GetHasCalculatedPrecedents() bool {
	if m != nil && m.HasCalculatedPrecedents != nil {
		return *m.HasCalculatedPrecedents
	}
	return Default_CellRecordArchive_HasCalculatedPrecedents
}

// Deprecated: Do not use.
func (m *CellRecordArchive) GetCalculatePrecedentsOnNextRecalc() bool {
	if m != nil && m.CalculatePrecedentsOnNextRecalc != nil {
		return *m.CalculatePrecedentsOnNextRecalc
	}
	return Default_CellRecordArchive_CalculatePrecedentsOnNextRecalc
}

func (m *CellRecordArchive) GetTranslateForExcelImportOnNextRecalc() bool {
	if m != nil && m.TranslateForExcelImportOnNextRecalc != nil {
		return *m.TranslateForExcelImportOnNextRecalc
	}
	return Default_CellRecordArchive_TranslateForExcelImportOnNextRecalc
}

func (m *CellRecordArchive) GetEdges() *EdgesArchive {
	if m != nil {
		return m.Edges
	}
	return nil
}

type CellDependenciesArchive struct {
	CellRecord           []*CellRecordArchive `protobuf:"bytes,1,rep,name=cell_record,json=cellRecord" json:"cell_record,omitempty"`
	NumDirtyCells        *uint32              `protobuf:"varint,2,opt,name=num_dirty_cells,json=numDirtyCells" json:"num_dirty_cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CellDependenciesArchive) Reset()         { *m = CellDependenciesArchive{} }
func (m *CellDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*CellDependenciesArchive) ProtoMessage()    {}
func (*CellDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{12}
}

func (m *CellDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellDependenciesArchive.Unmarshal(m, b)
}
func (m *CellDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *CellDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellDependenciesArchive.Merge(m, src)
}
func (m *CellDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_CellDependenciesArchive.Size(m)
}
func (m *CellDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellDependenciesArchive proto.InternalMessageInfo

func (m *CellDependenciesArchive) GetCellRecord() []*CellRecordArchive {
	if m != nil {
		return m.CellRecord
	}
	return nil
}

func (m *CellDependenciesArchive) GetNumDirtyCells() uint32 {
	if m != nil && m.NumDirtyCells != nil {
		return *m.NumDirtyCells
	}
	return 0
}

type CellRecordExpandedArchive struct {
	Column                       *uint32               `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                          *uint32               `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	DirtySelfPlusPrecedentsCount *uint64               `protobuf:"varint,3,opt,name=dirty_self_plus_precedents_count,json=dirtySelfPlusPrecedentsCount,def=0" json:"dirty_self_plus_precedents_count,omitempty"`
	IsInACycle                   *bool                 `protobuf:"varint,4,opt,name=is_in_a_cycle,json=isInACycle,def=0" json:"is_in_a_cycle,omitempty"`
	HasCalculatedPrecedents      *bool                 `protobuf:"varint,5,opt,name=has_calculated_precedents,json=hasCalculatedPrecedents,def=0" json:"has_calculated_precedents,omitempty"`
	ExpandedEdges                *ExpandedEdgesArchive `protobuf:"bytes,6,opt,name=expanded_edges,json=expandedEdges" json:"expanded_edges,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}              `json:"-"`
	XXX_unrecognized             []byte                `json:"-"`
	XXX_sizecache                int32                 `json:"-"`
}

func (m *CellRecordExpandedArchive) Reset()         { *m = CellRecordExpandedArchive{} }
func (m *CellRecordExpandedArchive) String() string { return proto.CompactTextString(m) }
func (*CellRecordExpandedArchive) ProtoMessage()    {}
func (*CellRecordExpandedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{13}
}

func (m *CellRecordExpandedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRecordExpandedArchive.Unmarshal(m, b)
}
func (m *CellRecordExpandedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRecordExpandedArchive.Marshal(b, m, deterministic)
}
func (m *CellRecordExpandedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRecordExpandedArchive.Merge(m, src)
}
func (m *CellRecordExpandedArchive) XXX_Size() int {
	return xxx_messageInfo_CellRecordExpandedArchive.Size(m)
}
func (m *CellRecordExpandedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRecordExpandedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellRecordExpandedArchive proto.InternalMessageInfo

const Default_CellRecordExpandedArchive_DirtySelfPlusPrecedentsCount uint64 = 0
const Default_CellRecordExpandedArchive_IsInACycle bool = false
const Default_CellRecordExpandedArchive_HasCalculatedPrecedents bool = false

func (m *CellRecordExpandedArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellRecordExpandedArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *CellRecordExpandedArchive) GetDirtySelfPlusPrecedentsCount() uint64 {
	if m != nil && m.DirtySelfPlusPrecedentsCount != nil {
		return *m.DirtySelfPlusPrecedentsCount
	}
	return Default_CellRecordExpandedArchive_DirtySelfPlusPrecedentsCount
}

func (m *CellRecordExpandedArchive) GetIsInACycle() bool {
	if m != nil && m.IsInACycle != nil {
		return *m.IsInACycle
	}
	return Default_CellRecordExpandedArchive_IsInACycle
}

func (m *CellRecordExpandedArchive) GetHasCalculatedPrecedents() bool {
	if m != nil && m.HasCalculatedPrecedents != nil {
		return *m.HasCalculatedPrecedents
	}
	return Default_CellRecordExpandedArchive_HasCalculatedPrecedents
}

func (m *CellRecordExpandedArchive) GetExpandedEdges() *ExpandedEdgesArchive {
	if m != nil {
		return m.ExpandedEdges
	}
	return nil
}

type CellDependenciesExpandedArchive struct {
	CellRecord           []*CellRecordExpandedArchive `protobuf:"bytes,1,rep,name=cell_record,json=cellRecord" json:"cell_record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CellDependenciesExpandedArchive) Reset()         { *m = CellDependenciesExpandedArchive{} }
func (m *CellDependenciesExpandedArchive) String() string { return proto.CompactTextString(m) }
func (*CellDependenciesExpandedArchive) ProtoMessage()    {}
func (*CellDependenciesExpandedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{14}
}

func (m *CellDependenciesExpandedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellDependenciesExpandedArchive.Unmarshal(m, b)
}
func (m *CellDependenciesExpandedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellDependenciesExpandedArchive.Marshal(b, m, deterministic)
}
func (m *CellDependenciesExpandedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellDependenciesExpandedArchive.Merge(m, src)
}
func (m *CellDependenciesExpandedArchive) XXX_Size() int {
	return xxx_messageInfo_CellDependenciesExpandedArchive.Size(m)
}
func (m *CellDependenciesExpandedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellDependenciesExpandedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellDependenciesExpandedArchive proto.InternalMessageInfo

func (m *CellDependenciesExpandedArchive) GetCellRecord() []*CellRecordExpandedArchive {
	if m != nil {
		return m.CellRecord
	}
	return nil
}

type VolatileDependenciesArchive struct {
	VolatileTimeCellColumn           []uint32                 `protobuf:"varint,1,rep,name=volatile_time_cell_column,json=volatileTimeCellColumn" json:"volatile_time_cell_column,omitempty"`
	VolatileTimeCellRow              []uint32                 `protobuf:"varint,2,rep,name=volatile_time_cell_row,json=volatileTimeCellRow" json:"volatile_time_cell_row,omitempty"`
	VolatileRandomCellColumn         []uint32                 `protobuf:"varint,3,rep,name=volatile_random_cell_column,json=volatileRandomCellColumn" json:"volatile_random_cell_column,omitempty"`
	VolatileRandomCellRow            []uint32                 `protobuf:"varint,4,rep,name=volatile_random_cell_row,json=volatileRandomCellRow" json:"volatile_random_cell_row,omitempty"`
	VolatileLocaleCellColumn         []uint32                 `protobuf:"varint,15,rep,name=volatile_locale_cell_column,json=volatileLocaleCellColumn" json:"volatile_locale_cell_column,omitempty"`
	VolatileLocaleCellRow            []uint32                 `protobuf:"varint,16,rep,name=volatile_locale_cell_row,json=volatileLocaleCellRow" json:"volatile_locale_cell_row,omitempty"`
	VolatileLocationCellColumn       []uint32                 `protobuf:"varint,5,rep,name=volatile_location_cell_column,json=volatileLocationCellColumn" json:"volatile_location_cell_column,omitempty"`
	VolatileLocationCellRow          []uint32                 `protobuf:"varint,6,rep,name=volatile_location_cell_row,json=volatileLocationCellRow" json:"volatile_location_cell_row,omitempty"`
	VolatileCompassCellColumn        []uint32                 `protobuf:"varint,7,rep,name=volatile_compass_cell_column,json=volatileCompassCellColumn" json:"volatile_compass_cell_column,omitempty"`
	VolatileCompassCellRow           []uint32                 `protobuf:"varint,8,rep,name=volatile_compass_cell_row,json=volatileCompassCellRow" json:"volatile_compass_cell_row,omitempty"`
	VolatileRemoteDataCellColumn     []uint32                 `protobuf:"varint,19,rep,name=volatile_remote_data_cell_column,json=volatileRemoteDataCellColumn" json:"volatile_remote_data_cell_column,omitempty"`
	VolatileRemoteDataCellRow        []uint32                 `protobuf:"varint,20,rep,name=volatile_remote_data_cell_row,json=volatileRemoteDataCellRow" json:"volatile_remote_data_cell_row,omitempty"`
	VolatileSheetTableNameCellColumn []uint32                 `protobuf:"varint,17,rep,name=volatile_sheet_table_name_cell_column,json=volatileSheetTableNameCellColumn" json:"volatile_sheet_table_name_cell_column,omitempty"`
	VolatileSheetTableNameCellRow    []uint32                 `protobuf:"varint,18,rep,name=volatile_sheet_table_name_cell_row,json=volatileSheetTableNameCellRow" json:"volatile_sheet_table_name_cell_row,omitempty"`
	CalculatedDependencyCellColumn   []uint32                 `protobuf:"varint,9,rep,name=calculated_dependency_cell_column,json=calculatedDependencyCellColumn" json:"calculated_dependency_cell_column,omitempty"`
	CalculatedDependencyCellRow      []uint32                 `protobuf:"varint,10,rep,name=calculated_dependency_cell_row,json=calculatedDependencyCellRow" json:"calculated_dependency_cell_row,omitempty"`
	VolatileGeometryCellReference    []*CellReferenceArchive  `protobuf:"bytes,13,rep,name=volatile_geometry_cell_reference,json=volatileGeometryCellReference" json:"volatile_geometry_cell_reference,omitempty"`
	VolatileGeometryCell             []*CellCoordinateArchive `protobuf:"bytes,11,rep,name=volatile_geometry_cell,json=volatileGeometryCell" json:"volatile_geometry_cell,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                 `json:"-"`
	XXX_unrecognized                 []byte                   `json:"-"`
	XXX_sizecache                    int32                    `json:"-"`
}

func (m *VolatileDependenciesArchive) Reset()         { *m = VolatileDependenciesArchive{} }
func (m *VolatileDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*VolatileDependenciesArchive) ProtoMessage()    {}
func (*VolatileDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{15}
}

func (m *VolatileDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolatileDependenciesArchive.Unmarshal(m, b)
}
func (m *VolatileDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolatileDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *VolatileDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolatileDependenciesArchive.Merge(m, src)
}
func (m *VolatileDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_VolatileDependenciesArchive.Size(m)
}
func (m *VolatileDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_VolatileDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_VolatileDependenciesArchive proto.InternalMessageInfo

func (m *VolatileDependenciesArchive) GetVolatileTimeCellColumn() []uint32 {
	if m != nil {
		return m.VolatileTimeCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileTimeCellRow() []uint32 {
	if m != nil {
		return m.VolatileTimeCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRandomCellColumn() []uint32 {
	if m != nil {
		return m.VolatileRandomCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRandomCellRow() []uint32 {
	if m != nil {
		return m.VolatileRandomCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocaleCellColumn() []uint32 {
	if m != nil {
		return m.VolatileLocaleCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocaleCellRow() []uint32 {
	if m != nil {
		return m.VolatileLocaleCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocationCellColumn() []uint32 {
	if m != nil {
		return m.VolatileLocationCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileLocationCellRow() []uint32 {
	if m != nil {
		return m.VolatileLocationCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileCompassCellColumn() []uint32 {
	if m != nil {
		return m.VolatileCompassCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileCompassCellRow() []uint32 {
	if m != nil {
		return m.VolatileCompassCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRemoteDataCellColumn() []uint32 {
	if m != nil {
		return m.VolatileRemoteDataCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileRemoteDataCellRow() []uint32 {
	if m != nil {
		return m.VolatileRemoteDataCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileSheetTableNameCellColumn() []uint32 {
	if m != nil {
		return m.VolatileSheetTableNameCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileSheetTableNameCellRow() []uint32 {
	if m != nil {
		return m.VolatileSheetTableNameCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetCalculatedDependencyCellColumn() []uint32 {
	if m != nil {
		return m.CalculatedDependencyCellColumn
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetCalculatedDependencyCellRow() []uint32 {
	if m != nil {
		return m.CalculatedDependencyCellRow
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileGeometryCellReference() []*CellReferenceArchive {
	if m != nil {
		return m.VolatileGeometryCellReference
	}
	return nil
}

func (m *VolatileDependenciesArchive) GetVolatileGeometryCell() []*CellCoordinateArchive {
	if m != nil {
		return m.VolatileGeometryCell
	}
	return nil
}

type VolatileDependenciesExpandedArchive struct {
	VolatileTimeCells           *CellCoordSetArchive       `protobuf:"bytes,1,opt,name=volatile_time_cells,json=volatileTimeCells" json:"volatile_time_cells,omitempty"`
	VolatileRandomCells         *CellCoordSetArchive       `protobuf:"bytes,2,opt,name=volatile_random_cells,json=volatileRandomCells" json:"volatile_random_cells,omitempty"`
	VolatileLocaleCells         *CellCoordSetArchive       `protobuf:"bytes,3,opt,name=volatile_locale_cells,json=volatileLocaleCells" json:"volatile_locale_cells,omitempty"`
	VolatileSheetTableNameCells *CellCoordSetArchive       `protobuf:"bytes,4,opt,name=volatile_sheet_table_name_cells,json=volatileSheetTableNameCells" json:"volatile_sheet_table_name_cells,omitempty"`
	VolatileRemoteDataCells     *CellCoordSetArchive       `protobuf:"bytes,5,opt,name=volatile_remote_data_cells,json=volatileRemoteDataCells" json:"volatile_remote_data_cells,omitempty"`
	CalculatedDependencyCells   *CellCoordSetArchive       `protobuf:"bytes,6,opt,name=calculated_dependency_cells,json=calculatedDependencyCells" json:"calculated_dependency_cells,omitempty"`
	VolatileGeometryCellRefs    *InternalCellRefSetArchive `protobuf:"bytes,7,opt,name=volatile_geometry_cell_refs,json=volatileGeometryCellRefs" json:"volatile_geometry_cell_refs,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                   `json:"-"`
	XXX_unrecognized            []byte                     `json:"-"`
	XXX_sizecache               int32                      `json:"-"`
}

func (m *VolatileDependenciesExpandedArchive) Reset()         { *m = VolatileDependenciesExpandedArchive{} }
func (m *VolatileDependenciesExpandedArchive) String() string { return proto.CompactTextString(m) }
func (*VolatileDependenciesExpandedArchive) ProtoMessage()    {}
func (*VolatileDependenciesExpandedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{16}
}

func (m *VolatileDependenciesExpandedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolatileDependenciesExpandedArchive.Unmarshal(m, b)
}
func (m *VolatileDependenciesExpandedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolatileDependenciesExpandedArchive.Marshal(b, m, deterministic)
}
func (m *VolatileDependenciesExpandedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolatileDependenciesExpandedArchive.Merge(m, src)
}
func (m *VolatileDependenciesExpandedArchive) XXX_Size() int {
	return xxx_messageInfo_VolatileDependenciesExpandedArchive.Size(m)
}
func (m *VolatileDependenciesExpandedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_VolatileDependenciesExpandedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_VolatileDependenciesExpandedArchive proto.InternalMessageInfo

func (m *VolatileDependenciesExpandedArchive) GetVolatileTimeCells() *CellCoordSetArchive {
	if m != nil {
		return m.VolatileTimeCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetVolatileRandomCells() *CellCoordSetArchive {
	if m != nil {
		return m.VolatileRandomCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetVolatileLocaleCells() *CellCoordSetArchive {
	if m != nil {
		return m.VolatileLocaleCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetVolatileSheetTableNameCells() *CellCoordSetArchive {
	if m != nil {
		return m.VolatileSheetTableNameCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetVolatileRemoteDataCells() *CellCoordSetArchive {
	if m != nil {
		return m.VolatileRemoteDataCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetCalculatedDependencyCells() *CellCoordSetArchive {
	if m != nil {
		return m.CalculatedDependencyCells
	}
	return nil
}

func (m *VolatileDependenciesExpandedArchive) GetVolatileGeometryCellRefs() *InternalCellRefSetArchive {
	if m != nil {
		return m.VolatileGeometryCellRefs
	}
	return nil
}

type RangeBackDependencyArchive struct {
	CellCoordRow           *uint32                        `protobuf:"varint,1,req,name=cell_coord_row,json=cellCoordRow" json:"cell_coord_row,omitempty"`
	CellCoordColumn        *uint32                        `protobuf:"varint,2,req,name=cell_coord_column,json=cellCoordColumn" json:"cell_coord_column,omitempty"`
	RangeReference         *RangeReferenceArchive         `protobuf:"bytes,3,opt,name=range_reference,json=rangeReference" json:"range_reference,omitempty"`
	InternalRangeReference *InternalRangeReferenceArchive `protobuf:"bytes,4,opt,name=internal_range_reference,json=internalRangeReference" json:"internal_range_reference,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                       `json:"-"`
	XXX_unrecognized       []byte                         `json:"-"`
	XXX_sizecache          int32                          `json:"-"`
}

func (m *RangeBackDependencyArchive) Reset()         { *m = RangeBackDependencyArchive{} }
func (m *RangeBackDependencyArchive) String() string { return proto.CompactTextString(m) }
func (*RangeBackDependencyArchive) ProtoMessage()    {}
func (*RangeBackDependencyArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{17}
}

func (m *RangeBackDependencyArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeBackDependencyArchive.Unmarshal(m, b)
}
func (m *RangeBackDependencyArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeBackDependencyArchive.Marshal(b, m, deterministic)
}
func (m *RangeBackDependencyArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeBackDependencyArchive.Merge(m, src)
}
func (m *RangeBackDependencyArchive) XXX_Size() int {
	return xxx_messageInfo_RangeBackDependencyArchive.Size(m)
}
func (m *RangeBackDependencyArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeBackDependencyArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeBackDependencyArchive proto.InternalMessageInfo

func (m *RangeBackDependencyArchive) GetCellCoordRow() uint32 {
	if m != nil && m.CellCoordRow != nil {
		return *m.CellCoordRow
	}
	return 0
}

func (m *RangeBackDependencyArchive) GetCellCoordColumn() uint32 {
	if m != nil && m.CellCoordColumn != nil {
		return *m.CellCoordColumn
	}
	return 0
}

func (m *RangeBackDependencyArchive) GetRangeReference() *RangeReferenceArchive {
	if m != nil {
		return m.RangeReference
	}
	return nil
}

func (m *RangeBackDependencyArchive) GetInternalRangeReference() *InternalRangeReferenceArchive {
	if m != nil {
		return m.InternalRangeReference
	}
	return nil
}

type RTreeInternalNodeContentsArchive struct {
	Min                  []uint32          `protobuf:"varint,1,rep,name=min" json:"min,omitempty"`
	Max                  []uint32          `protobuf:"varint,2,rep,name=max" json:"max,omitempty"`
	Child                *RTreeNodeArchive `protobuf:"bytes,3,req,name=child" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RTreeInternalNodeContentsArchive) Reset()         { *m = RTreeInternalNodeContentsArchive{} }
func (m *RTreeInternalNodeContentsArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeInternalNodeContentsArchive) ProtoMessage()    {}
func (*RTreeInternalNodeContentsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{18}
}

func (m *RTreeInternalNodeContentsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Unmarshal(m, b)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Marshal(b, m, deterministic)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeInternalNodeContentsArchive.Merge(m, src)
}
func (m *RTreeInternalNodeContentsArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeInternalNodeContentsArchive.Size(m)
}
func (m *RTreeInternalNodeContentsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeInternalNodeContentsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeInternalNodeContentsArchive proto.InternalMessageInfo

func (m *RTreeInternalNodeContentsArchive) GetMin() []uint32 {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *RTreeInternalNodeContentsArchive) GetMax() []uint32 {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *RTreeInternalNodeContentsArchive) GetChild() *RTreeNodeArchive {
	if m != nil {
		return m.Child
	}
	return nil
}

type RTreeLeafNodeContentsArchive struct {
	Min                  []uint32              `protobuf:"varint,1,rep,name=min" json:"min,omitempty"`
	Max                  []uint32              `protobuf:"varint,2,rep,name=max" json:"max,omitempty"`
	CellReference        *CellReferenceArchive `protobuf:"bytes,3,req,name=cell_reference,json=cellReference" json:"cell_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RTreeLeafNodeContentsArchive) Reset()         { *m = RTreeLeafNodeContentsArchive{} }
func (m *RTreeLeafNodeContentsArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeLeafNodeContentsArchive) ProtoMessage()    {}
func (*RTreeLeafNodeContentsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{19}
}

func (m *RTreeLeafNodeContentsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Unmarshal(m, b)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Marshal(b, m, deterministic)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeLeafNodeContentsArchive.Merge(m, src)
}
func (m *RTreeLeafNodeContentsArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeLeafNodeContentsArchive.Size(m)
}
func (m *RTreeLeafNodeContentsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeLeafNodeContentsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeLeafNodeContentsArchive proto.InternalMessageInfo

func (m *RTreeLeafNodeContentsArchive) GetMin() []uint32 {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *RTreeLeafNodeContentsArchive) GetMax() []uint32 {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *RTreeLeafNodeContentsArchive) GetCellReference() *CellReferenceArchive {
	if m != nil {
		return m.CellReference
	}
	return nil
}

type RTreeNodeArchive struct {
	Level                *uint32                             `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	Count                *uint32                             `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	InternalNodeContents []*RTreeInternalNodeContentsArchive `protobuf:"bytes,3,rep,name=internal_node_contents,json=internalNodeContents" json:"internal_node_contents,omitempty"`
	LeafNodeContents     []*RTreeLeafNodeContentsArchive     `protobuf:"bytes,4,rep,name=leaf_node_contents,json=leafNodeContents" json:"leaf_node_contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RTreeNodeArchive) Reset()         { *m = RTreeNodeArchive{} }
func (m *RTreeNodeArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeNodeArchive) ProtoMessage()    {}
func (*RTreeNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{20}
}

func (m *RTreeNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeNodeArchive.Unmarshal(m, b)
}
func (m *RTreeNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeNodeArchive.Marshal(b, m, deterministic)
}
func (m *RTreeNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeNodeArchive.Merge(m, src)
}
func (m *RTreeNodeArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeNodeArchive.Size(m)
}
func (m *RTreeNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeNodeArchive proto.InternalMessageInfo

func (m *RTreeNodeArchive) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *RTreeNodeArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *RTreeNodeArchive) GetInternalNodeContents() []*RTreeInternalNodeContentsArchive {
	if m != nil {
		return m.InternalNodeContents
	}
	return nil
}

func (m *RTreeNodeArchive) GetLeafNodeContents() []*RTreeLeafNodeContentsArchive {
	if m != nil {
		return m.LeafNodeContents
	}
	return nil
}

type RTreeArchive struct {
	DataFileId           *uint32           `protobuf:"varint,1,req,name=data_file_id,json=dataFileId" json:"data_file_id,omitempty"`
	DataSize             *uint32           `protobuf:"varint,2,req,name=data_size,json=dataSize" json:"data_size,omitempty"`
	DataNumDims          *uint32           `protobuf:"varint,3,req,name=data_num_dims,json=dataNumDims" json:"data_num_dims,omitempty"`
	DataElemSize         *uint32           `protobuf:"varint,4,req,name=data_elem_size,json=dataElemSize" json:"data_elem_size,omitempty"`
	DataElemRealSize     *uint32           `protobuf:"varint,5,req,name=data_elem_real_size,json=dataElemRealSize" json:"data_elem_real_size,omitempty"`
	DataMaxNodes         *uint32           `protobuf:"varint,6,req,name=data_max_nodes,json=dataMaxNodes" json:"data_max_nodes,omitempty"`
	DataMinNodes         *uint32           `protobuf:"varint,7,req,name=data_min_nodes,json=dataMinNodes" json:"data_min_nodes,omitempty"`
	Root                 *RTreeNodeArchive `protobuf:"bytes,8,req,name=root" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RTreeArchive) Reset()         { *m = RTreeArchive{} }
func (m *RTreeArchive) String() string { return proto.CompactTextString(m) }
func (*RTreeArchive) ProtoMessage()    {}
func (*RTreeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{21}
}

func (m *RTreeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTreeArchive.Unmarshal(m, b)
}
func (m *RTreeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTreeArchive.Marshal(b, m, deterministic)
}
func (m *RTreeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTreeArchive.Merge(m, src)
}
func (m *RTreeArchive) XXX_Size() int {
	return xxx_messageInfo_RTreeArchive.Size(m)
}
func (m *RTreeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RTreeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RTreeArchive proto.InternalMessageInfo

func (m *RTreeArchive) GetDataFileId() uint32 {
	if m != nil && m.DataFileId != nil {
		return *m.DataFileId
	}
	return 0
}

func (m *RTreeArchive) GetDataSize() uint32 {
	if m != nil && m.DataSize != nil {
		return *m.DataSize
	}
	return 0
}

func (m *RTreeArchive) GetDataNumDims() uint32 {
	if m != nil && m.DataNumDims != nil {
		return *m.DataNumDims
	}
	return 0
}

func (m *RTreeArchive) GetDataElemSize() uint32 {
	if m != nil && m.DataElemSize != nil {
		return *m.DataElemSize
	}
	return 0
}

func (m *RTreeArchive) GetDataElemRealSize() uint32 {
	if m != nil && m.DataElemRealSize != nil {
		return *m.DataElemRealSize
	}
	return 0
}

func (m *RTreeArchive) GetDataMaxNodes() uint32 {
	if m != nil && m.DataMaxNodes != nil {
		return *m.DataMaxNodes
	}
	return 0
}

func (m *RTreeArchive) GetDataMinNodes() uint32 {
	if m != nil && m.DataMinNodes != nil {
		return *m.DataMinNodes
	}
	return 0
}

func (m *RTreeArchive) GetRoot() *RTreeNodeArchive {
	if m != nil {
		return m.Root
	}
	return nil
}

type RangeDependenciesArchive struct {
	RTree                *RTreeArchive                 `protobuf:"bytes,1,opt,name=r_tree,json=rTree" json:"r_tree,omitempty"`
	BackDependency       []*RangeBackDependencyArchive `protobuf:"bytes,2,rep,name=back_dependency,json=backDependency" json:"back_dependency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RangeDependenciesArchive) Reset()         { *m = RangeDependenciesArchive{} }
func (m *RangeDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*RangeDependenciesArchive) ProtoMessage()    {}
func (*RangeDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{22}
}

func (m *RangeDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeDependenciesArchive.Unmarshal(m, b)
}
func (m *RangeDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *RangeDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeDependenciesArchive.Merge(m, src)
}
func (m *RangeDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_RangeDependenciesArchive.Size(m)
}
func (m *RangeDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeDependenciesArchive proto.InternalMessageInfo

func (m *RangeDependenciesArchive) GetRTree() *RTreeArchive {
	if m != nil {
		return m.RTree
	}
	return nil
}

func (m *RangeDependenciesArchive) GetBackDependency() []*RangeBackDependencyArchive {
	if m != nil {
		return m.BackDependency
	}
	return nil
}

type SpanningDependenciesArchive struct {
	Column                       []uint32                                                    `protobuf:"varint,1,rep,name=column" json:"column,omitempty"`
	RangeContext                 []SpanningDependenciesArchive_RangeContext                  `protobuf:"varint,2,rep,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	Cell                         []*CellReferenceArchive                                     `protobuf:"bytes,3,rep,name=cell" json:"cell,omitempty"`
	TotalRangeForDeletedTable    *RangeCoordinateArchive                                     `protobuf:"bytes,4,opt,name=total_range_for_deleted_table,json=totalRangeForDeletedTable" json:"total_range_for_deleted_table,omitempty"`
	BodyRangeForDeletedTable     *RangeCoordinateArchive                                     `protobuf:"bytes,5,opt,name=body_range_for_deleted_table,json=bodyRangeForDeletedTable" json:"body_range_for_deleted_table,omitempty"`
	ReferringColumnToLocalCells  []*SpanningDependenciesArchive_ReferringColumnToLocalCells  `protobuf:"bytes,6,rep,name=referring_column_to_local_cells,json=referringColumnToLocalCells" json:"referring_column_to_local_cells,omitempty"`
	ReferringColumnToRemoteCells []*SpanningDependenciesArchive_ReferringColumnToRemoteCells `protobuf:"bytes,7,rep,name=referring_column_to_remote_cells,json=referringColumnToRemoteCells" json:"referring_column_to_remote_cells,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                                                    `json:"-"`
	XXX_unrecognized             []byte                                                      `json:"-"`
	XXX_sizecache                int32                                                       `json:"-"`
}

func (m *SpanningDependenciesArchive) Reset()         { *m = SpanningDependenciesArchive{} }
func (m *SpanningDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*SpanningDependenciesArchive) ProtoMessage()    {}
func (*SpanningDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{23}
}

func (m *SpanningDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive.Merge(m, src)
}
func (m *SpanningDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive.Size(m)
}
func (m *SpanningDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive proto.InternalMessageInfo

func (m *SpanningDependenciesArchive) GetColumn() []uint32 {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetRangeContext() []SpanningDependenciesArchive_RangeContext {
	if m != nil {
		return m.RangeContext
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetCell() []*CellReferenceArchive {
	if m != nil {
		return m.Cell
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetTotalRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.TotalRangeForDeletedTable
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetBodyRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.BodyRangeForDeletedTable
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetReferringColumnToLocalCells() []*SpanningDependenciesArchive_ReferringColumnToLocalCells {
	if m != nil {
		return m.ReferringColumnToLocalCells
	}
	return nil
}

func (m *SpanningDependenciesArchive) GetReferringColumnToRemoteCells() []*SpanningDependenciesArchive_ReferringColumnToRemoteCells {
	if m != nil {
		return m.ReferringColumnToRemoteCells
	}
	return nil
}

type SpanningDependenciesArchive_ReferringColumnToLocalCells struct {
	Column               *uint32                                   `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	RangeContext         *SpanningDependenciesArchive_RangeContext `protobuf:"varint,2,req,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	CellCoordinate       []*CellCoordinateArchive                  `protobuf:"bytes,3,rep,name=cell_coordinate,json=cellCoordinate" json:"cell_coordinate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) Reset() {
	*m = SpanningDependenciesArchive_ReferringColumnToLocalCells{}
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesArchive_ReferringColumnToLocalCells) ProtoMessage() {}
func (*SpanningDependenciesArchive_ReferringColumnToLocalCells) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{23, 0}
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Merge(m, src)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.Size(m)
}
func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToLocalCells proto.InternalMessageInfo

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetRangeContext() SpanningDependenciesArchive_RangeContext {
	if m != nil && m.RangeContext != nil {
		return *m.RangeContext
	}
	return SpanningDependenciesArchive_DEFAULT
}

func (m *SpanningDependenciesArchive_ReferringColumnToLocalCells) GetCellCoordinate() []*CellCoordinateArchive {
	if m != nil {
		return m.CellCoordinate
	}
	return nil
}

type SpanningDependenciesArchive_ReferringColumnToRemoteCells struct {
	Column                *uint32                                   `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	RangeContext          *SpanningDependenciesArchive_RangeContext `protobuf:"varint,2,req,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesArchive_RangeContext" json:"range_context,omitempty"`
	InternalCellReference []*InternalCellReferenceArchive           `protobuf:"bytes,3,rep,name=internal_cell_reference,json=internalCellReference" json:"internal_cell_reference,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                  `json:"-"`
	XXX_unrecognized      []byte                                    `json:"-"`
	XXX_sizecache         int32                                     `json:"-"`
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) Reset() {
	*m = SpanningDependenciesArchive_ReferringColumnToRemoteCells{}
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesArchive_ReferringColumnToRemoteCells) ProtoMessage() {}
func (*SpanningDependenciesArchive_ReferringColumnToRemoteCells) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{23, 1}
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Unmarshal(m, b)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Merge(m, src)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.Size(m)
}
func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesArchive_ReferringColumnToRemoteCells proto.InternalMessageInfo

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetRangeContext() SpanningDependenciesArchive_RangeContext {
	if m != nil && m.RangeContext != nil {
		return *m.RangeContext
	}
	return SpanningDependenciesArchive_DEFAULT
}

func (m *SpanningDependenciesArchive_ReferringColumnToRemoteCells) GetInternalCellReference() []*InternalCellReferenceArchive {
	if m != nil {
		return m.InternalCellReference
	}
	return nil
}

type SpanningDependenciesExpandedArchive struct {
	CoordRefersToSpans        []*SpanningDependenciesExpandedArchive_CellCoordRefersToExtents `protobuf:"bytes,1,rep,name=coord_refers_to_spans,json=coordRefersToSpans" json:"coord_refers_to_spans,omitempty"`
	TotalRangeForDeletedTable *RangeCoordinateArchive                                         `protobuf:"bytes,2,opt,name=total_range_for_deleted_table,json=totalRangeForDeletedTable" json:"total_range_for_deleted_table,omitempty"`
	BodyRangeForDeletedTable  *RangeCoordinateArchive                                         `protobuf:"bytes,3,opt,name=body_range_for_deleted_table,json=bodyRangeForDeletedTable" json:"body_range_for_deleted_table,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                                        `json:"-"`
	XXX_unrecognized          []byte                                                          `json:"-"`
	XXX_sizecache             int32                                                           `json:"-"`
}

func (m *SpanningDependenciesExpandedArchive) Reset()         { *m = SpanningDependenciesExpandedArchive{} }
func (m *SpanningDependenciesExpandedArchive) String() string { return proto.CompactTextString(m) }
func (*SpanningDependenciesExpandedArchive) ProtoMessage()    {}
func (*SpanningDependenciesExpandedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24}
}

func (m *SpanningDependenciesExpandedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive.Unmarshal(m, b)
}
func (m *SpanningDependenciesExpandedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesExpandedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesExpandedArchive.Merge(m, src)
}
func (m *SpanningDependenciesExpandedArchive) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive.Size(m)
}
func (m *SpanningDependenciesExpandedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesExpandedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesExpandedArchive proto.InternalMessageInfo

func (m *SpanningDependenciesExpandedArchive) GetCoordRefersToSpans() []*SpanningDependenciesExpandedArchive_CellCoordRefersToExtents {
	if m != nil {
		return m.CoordRefersToSpans
	}
	return nil
}

func (m *SpanningDependenciesExpandedArchive) GetTotalRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.TotalRangeForDeletedTable
	}
	return nil
}

func (m *SpanningDependenciesExpandedArchive) GetBodyRangeForDeletedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.BodyRangeForDeletedTable
	}
	return nil
}

type SpanningDependenciesExpandedArchive_ExtentRange struct {
	ExtentBegin          *uint32  `protobuf:"varint,1,req,name=extent_begin,json=extentBegin" json:"extent_begin,omitempty"`
	ExtentEnd            *uint32  `protobuf:"varint,2,opt,name=extent_end,json=extentEnd" json:"extent_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanningDependenciesExpandedArchive_ExtentRange) Reset() {
	*m = SpanningDependenciesExpandedArchive_ExtentRange{}
}
func (m *SpanningDependenciesExpandedArchive_ExtentRange) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesExpandedArchive_ExtentRange) ProtoMessage() {}
func (*SpanningDependenciesExpandedArchive_ExtentRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24, 0}
}

func (m *SpanningDependenciesExpandedArchive_ExtentRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange.Unmarshal(m, b)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange.Merge(m, src)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRange) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange.Size(m)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRange) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRange proto.InternalMessageInfo

func (m *SpanningDependenciesExpandedArchive_ExtentRange) GetExtentBegin() uint32 {
	if m != nil && m.ExtentBegin != nil {
		return *m.ExtentBegin
	}
	return 0
}

func (m *SpanningDependenciesExpandedArchive_ExtentRange) GetExtentEnd() uint32 {
	if m != nil && m.ExtentEnd != nil {
		return *m.ExtentEnd
	}
	return 0
}

type SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext struct {
	OwnerId              *uint32                                            `protobuf:"varint,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	RangeContext         *SpanningDependenciesExpandedArchive_RangeContext  `protobuf:"varint,2,req,name=range_context,json=rangeContext,enum=TSCE.SpanningDependenciesExpandedArchive_RangeContext" json:"range_context,omitempty"`
	Ranges               []*SpanningDependenciesExpandedArchive_ExtentRange `protobuf:"bytes,3,rep,name=ranges" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) Reset() {
	*m = SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext{}
}
func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) ProtoMessage() {}
func (*SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24, 1}
}

func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext.Unmarshal(m, b)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext.Merge(m, src)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext.Size(m)
}
func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext proto.InternalMessageInfo

func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) GetRangeContext() SpanningDependenciesExpandedArchive_RangeContext {
	if m != nil && m.RangeContext != nil {
		return *m.RangeContext
	}
	return SpanningDependenciesExpandedArchive_DEFAULT
}

func (m *SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext) GetRanges() []*SpanningDependenciesExpandedArchive_ExtentRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type SpanningDependenciesExpandedArchive_CellCoordRefersToExtents struct {
	Coordinate           *CellCoordinateArchive                                                 `protobuf:"bytes,1,req,name=coordinate" json:"coordinate,omitempty"`
	RangesByTableContext []*SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext `protobuf:"bytes,2,rep,name=ranges_by_table_context,json=rangesByTableContext" json:"ranges_by_table_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                 `json:"-"`
	XXX_sizecache        int32                                                                  `json:"-"`
}

func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) Reset() {
	*m = SpanningDependenciesExpandedArchive_CellCoordRefersToExtents{}
}
func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) String() string {
	return proto.CompactTextString(m)
}
func (*SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) ProtoMessage() {}
func (*SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{24, 2}
}

func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents.Unmarshal(m, b)
}
func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents.Marshal(b, m, deterministic)
}
func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents.Merge(m, src)
}
func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) XXX_Size() int {
	return xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents.Size(m)
}
func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents.DiscardUnknown(m)
}

var xxx_messageInfo_SpanningDependenciesExpandedArchive_CellCoordRefersToExtents proto.InternalMessageInfo

func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) GetCoordinate() *CellCoordinateArchive {
	if m != nil {
		return m.Coordinate
	}
	return nil
}

func (m *SpanningDependenciesExpandedArchive_CellCoordRefersToExtents) GetRangesByTableContext() []*SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext {
	if m != nil {
		return m.RangesByTableContext
	}
	return nil
}

type WholeOwnerDependenciesArchive struct {
	DependentCell        []*InternalCellReferenceArchive `protobuf:"bytes,1,rep,name=dependent_cell,json=dependentCell" json:"dependent_cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *WholeOwnerDependenciesArchive) Reset()         { *m = WholeOwnerDependenciesArchive{} }
func (m *WholeOwnerDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*WholeOwnerDependenciesArchive) ProtoMessage()    {}
func (*WholeOwnerDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{25}
}

func (m *WholeOwnerDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Unmarshal(m, b)
}
func (m *WholeOwnerDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *WholeOwnerDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WholeOwnerDependenciesArchive.Merge(m, src)
}
func (m *WholeOwnerDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_WholeOwnerDependenciesArchive.Size(m)
}
func (m *WholeOwnerDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_WholeOwnerDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_WholeOwnerDependenciesArchive proto.InternalMessageInfo

func (m *WholeOwnerDependenciesArchive) GetDependentCell() []*InternalCellReferenceArchive {
	if m != nil {
		return m.DependentCell
	}
	return nil
}

type WholeOwnerDependenciesExpandedArchive struct {
	DependentCells       *InternalCellRefSetArchive `protobuf:"bytes,1,opt,name=dependent_cells,json=dependentCells" json:"dependent_cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WholeOwnerDependenciesExpandedArchive) Reset()         { *m = WholeOwnerDependenciesExpandedArchive{} }
func (m *WholeOwnerDependenciesExpandedArchive) String() string { return proto.CompactTextString(m) }
func (*WholeOwnerDependenciesExpandedArchive) ProtoMessage()    {}
func (*WholeOwnerDependenciesExpandedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{26}
}

func (m *WholeOwnerDependenciesExpandedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WholeOwnerDependenciesExpandedArchive.Unmarshal(m, b)
}
func (m *WholeOwnerDependenciesExpandedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WholeOwnerDependenciesExpandedArchive.Marshal(b, m, deterministic)
}
func (m *WholeOwnerDependenciesExpandedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WholeOwnerDependenciesExpandedArchive.Merge(m, src)
}
func (m *WholeOwnerDependenciesExpandedArchive) XXX_Size() int {
	return xxx_messageInfo_WholeOwnerDependenciesExpandedArchive.Size(m)
}
func (m *WholeOwnerDependenciesExpandedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_WholeOwnerDependenciesExpandedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_WholeOwnerDependenciesExpandedArchive proto.InternalMessageInfo

func (m *WholeOwnerDependenciesExpandedArchive) GetDependentCells() *InternalCellRefSetArchive {
	if m != nil {
		return m.DependentCells
	}
	return nil
}

type CellErrorsArchive struct {
	Errors               []*CellErrorsArchive_ErrorForCell `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CellErrorsArchive) Reset()         { *m = CellErrorsArchive{} }
func (m *CellErrorsArchive) String() string { return proto.CompactTextString(m) }
func (*CellErrorsArchive) ProtoMessage()    {}
func (*CellErrorsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{27}
}

func (m *CellErrorsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellErrorsArchive.Unmarshal(m, b)
}
func (m *CellErrorsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellErrorsArchive.Marshal(b, m, deterministic)
}
func (m *CellErrorsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellErrorsArchive.Merge(m, src)
}
func (m *CellErrorsArchive) XXX_Size() int {
	return xxx_messageInfo_CellErrorsArchive.Size(m)
}
func (m *CellErrorsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellErrorsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellErrorsArchive proto.InternalMessageInfo

func (m *CellErrorsArchive) GetErrors() []*CellErrorsArchive_ErrorForCell {
	if m != nil {
		return m.Errors
	}
	return nil
}

type CellErrorsArchive_ErrorForCell struct {
	Coordinate           *CellCoordinateArchive         `protobuf:"bytes,1,req,name=coordinate" json:"coordinate,omitempty"`
	ErrorFlavor          *CellErrorsArchive_ErrorFlavor `protobuf:"varint,2,req,name=error_flavor,json=errorFlavor,enum=TSCE.CellErrorsArchive_ErrorFlavor" json:"error_flavor,omitempty"`
	ErrDueToCell         *InternalCellReferenceArchive  `protobuf:"bytes,3,opt,name=err_due_to_cell,json=errDueToCell" json:"err_due_to_cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CellErrorsArchive_ErrorForCell) Reset()         { *m = CellErrorsArchive_ErrorForCell{} }
func (m *CellErrorsArchive_ErrorForCell) String() string { return proto.CompactTextString(m) }
func (*CellErrorsArchive_ErrorForCell) ProtoMessage()    {}
func (*CellErrorsArchive_ErrorForCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{27, 0}
}

func (m *CellErrorsArchive_ErrorForCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellErrorsArchive_ErrorForCell.Unmarshal(m, b)
}
func (m *CellErrorsArchive_ErrorForCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellErrorsArchive_ErrorForCell.Marshal(b, m, deterministic)
}
func (m *CellErrorsArchive_ErrorForCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellErrorsArchive_ErrorForCell.Merge(m, src)
}
func (m *CellErrorsArchive_ErrorForCell) XXX_Size() int {
	return xxx_messageInfo_CellErrorsArchive_ErrorForCell.Size(m)
}
func (m *CellErrorsArchive_ErrorForCell) XXX_DiscardUnknown() {
	xxx_messageInfo_CellErrorsArchive_ErrorForCell.DiscardUnknown(m)
}

var xxx_messageInfo_CellErrorsArchive_ErrorForCell proto.InternalMessageInfo

func (m *CellErrorsArchive_ErrorForCell) GetCoordinate() *CellCoordinateArchive {
	if m != nil {
		return m.Coordinate
	}
	return nil
}

func (m *CellErrorsArchive_ErrorForCell) GetErrorFlavor() CellErrorsArchive_ErrorFlavor {
	if m != nil && m.ErrorFlavor != nil {
		return *m.ErrorFlavor
	}
	return CellErrorsArchive_NONE
}

func (m *CellErrorsArchive_ErrorForCell) GetErrDueToCell() *InternalCellReferenceArchive {
	if m != nil {
		return m.ErrDueToCell
	}
	return nil
}

type FormulaOwnerDependenciesArchive struct {
	FormulaOwnerUid            *TSP.UUID                                  `protobuf:"bytes,1,req,name=formula_owner_uid,json=formulaOwnerUid" json:"formula_owner_uid,omitempty"`
	InternalFormulaOwnerId     *uint32                                    `protobuf:"varint,2,req,name=internal_formula_owner_id,json=internalFormulaOwnerId" json:"internal_formula_owner_id,omitempty"`
	OwnerKind                  *FormulaOwnerDependenciesArchive_OwnerKind `protobuf:"varint,3,opt,name=owner_kind,json=ownerKind,enum=TSCE.FormulaOwnerDependenciesArchive_OwnerKind" json:"owner_kind,omitempty"`
	CellDependencies           *CellDependenciesExpandedArchive           `protobuf:"bytes,4,opt,name=cell_dependencies,json=cellDependencies" json:"cell_dependencies,omitempty"`
	RangeDependencies          *RangeDependenciesArchive                  `protobuf:"bytes,5,opt,name=range_dependencies,json=rangeDependencies" json:"range_dependencies,omitempty"`
	VolatileDependencies       *VolatileDependenciesExpandedArchive       `protobuf:"bytes,6,opt,name=volatile_dependencies,json=volatileDependencies" json:"volatile_dependencies,omitempty"`
	SpanningColumnDependencies *SpanningDependenciesExpandedArchive       `protobuf:"bytes,7,opt,name=spanning_column_dependencies,json=spanningColumnDependencies" json:"spanning_column_dependencies,omitempty"`
	SpanningRowDependencies    *SpanningDependenciesExpandedArchive       `protobuf:"bytes,8,opt,name=spanning_row_dependencies,json=spanningRowDependencies" json:"spanning_row_dependencies,omitempty"`
	WholeOwnerDependencies     *WholeOwnerDependenciesExpandedArchive     `protobuf:"bytes,9,opt,name=whole_owner_dependencies,json=wholeOwnerDependencies" json:"whole_owner_dependencies,omitempty"`
	CellErrors                 *CellErrorsArchive                         `protobuf:"bytes,10,opt,name=cell_errors,json=cellErrors" json:"cell_errors,omitempty"`
	FormulaOwner               *TSP.Reference                             `protobuf:"bytes,11,opt,name=formula_owner,json=formulaOwner" json:"formula_owner,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                   `json:"-"`
	XXX_unrecognized           []byte                                     `json:"-"`
	XXX_sizecache              int32                                      `json:"-"`
}

func (m *FormulaOwnerDependenciesArchive) Reset()         { *m = FormulaOwnerDependenciesArchive{} }
func (m *FormulaOwnerDependenciesArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaOwnerDependenciesArchive) ProtoMessage()    {}
func (*FormulaOwnerDependenciesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{28}
}

func (m *FormulaOwnerDependenciesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaOwnerDependenciesArchive.Unmarshal(m, b)
}
func (m *FormulaOwnerDependenciesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaOwnerDependenciesArchive.Marshal(b, m, deterministic)
}
func (m *FormulaOwnerDependenciesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaOwnerDependenciesArchive.Merge(m, src)
}
func (m *FormulaOwnerDependenciesArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaOwnerDependenciesArchive.Size(m)
}
func (m *FormulaOwnerDependenciesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaOwnerDependenciesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaOwnerDependenciesArchive proto.InternalMessageInfo

func (m *FormulaOwnerDependenciesArchive) GetFormulaOwnerUid() *TSP.UUID {
	if m != nil {
		return m.FormulaOwnerUid
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetInternalFormulaOwnerId() uint32 {
	if m != nil && m.InternalFormulaOwnerId != nil {
		return *m.InternalFormulaOwnerId
	}
	return 0
}

func (m *FormulaOwnerDependenciesArchive) GetOwnerKind() FormulaOwnerDependenciesArchive_OwnerKind {
	if m != nil && m.OwnerKind != nil {
		return *m.OwnerKind
	}
	return FormulaOwnerDependenciesArchive_NONE
}

func (m *FormulaOwnerDependenciesArchive) GetCellDependencies() *CellDependenciesExpandedArchive {
	if m != nil {
		return m.CellDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetRangeDependencies() *RangeDependenciesArchive {
	if m != nil {
		return m.RangeDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetVolatileDependencies() *VolatileDependenciesExpandedArchive {
	if m != nil {
		return m.VolatileDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetSpanningColumnDependencies() *SpanningDependenciesExpandedArchive {
	if m != nil {
		return m.SpanningColumnDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetSpanningRowDependencies() *SpanningDependenciesExpandedArchive {
	if m != nil {
		return m.SpanningRowDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetWholeOwnerDependencies() *WholeOwnerDependenciesExpandedArchive {
	if m != nil {
		return m.WholeOwnerDependencies
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetCellErrors() *CellErrorsArchive {
	if m != nil {
		return m.CellErrors
	}
	return nil
}

func (m *FormulaOwnerDependenciesArchive) GetFormulaOwner() *TSP.Reference {
	if m != nil {
		return m.FormulaOwner
	}
	return nil
}

type FormulaOwnerInfoArchive struct {
	FormulaOwnerId             *TSP.CFUUIDArchive             `protobuf:"bytes,1,req,name=formula_owner_id,json=formulaOwnerId" json:"formula_owner_id,omitempty"`
	CellDependencies           *CellDependenciesArchive       `protobuf:"bytes,2,opt,name=cell_dependencies,json=cellDependencies" json:"cell_dependencies,omitempty"`
	RangeDependencies          *RangeDependenciesArchive      `protobuf:"bytes,3,opt,name=range_dependencies,json=rangeDependencies" json:"range_dependencies,omitempty"`
	VolatileDependencies       *VolatileDependenciesArchive   `protobuf:"bytes,4,opt,name=volatile_dependencies,json=volatileDependencies" json:"volatile_dependencies,omitempty"`
	SpanningColumnDependencies *SpanningDependenciesArchive   `protobuf:"bytes,5,opt,name=spanning_column_dependencies,json=spanningColumnDependencies" json:"spanning_column_dependencies,omitempty"`
	SpanningRowDependencies    *SpanningDependenciesArchive   `protobuf:"bytes,6,opt,name=spanning_row_dependencies,json=spanningRowDependencies" json:"spanning_row_dependencies,omitempty"`
	WholeOwnerDependencies     *WholeOwnerDependenciesArchive `protobuf:"bytes,8,opt,name=whole_owner_dependencies,json=wholeOwnerDependencies" json:"whole_owner_dependencies,omitempty"`
	CellErrors                 *CellErrorsArchive             `protobuf:"bytes,9,opt,name=cell_errors,json=cellErrors" json:"cell_errors,omitempty"`
	FormulaOwner               *TSP.Reference                 `protobuf:"bytes,7,opt,name=formula_owner,json=formulaOwner" json:"formula_owner,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                       `json:"-"`
	XXX_unrecognized           []byte                         `json:"-"`
	XXX_sizecache              int32                          `json:"-"`
}

func (m *FormulaOwnerInfoArchive) Reset()         { *m = FormulaOwnerInfoArchive{} }
func (m *FormulaOwnerInfoArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaOwnerInfoArchive) ProtoMessage()    {}
func (*FormulaOwnerInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{29}
}

func (m *FormulaOwnerInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Unmarshal(m, b)
}
func (m *FormulaOwnerInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Marshal(b, m, deterministic)
}
func (m *FormulaOwnerInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaOwnerInfoArchive.Merge(m, src)
}
func (m *FormulaOwnerInfoArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaOwnerInfoArchive.Size(m)
}
func (m *FormulaOwnerInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaOwnerInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaOwnerInfoArchive proto.InternalMessageInfo

func (m *FormulaOwnerInfoArchive) GetFormulaOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.FormulaOwnerId
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetCellDependencies() *CellDependenciesArchive {
	if m != nil {
		return m.CellDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetRangeDependencies() *RangeDependenciesArchive {
	if m != nil {
		return m.RangeDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetVolatileDependencies() *VolatileDependenciesArchive {
	if m != nil {
		return m.VolatileDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetSpanningColumnDependencies() *SpanningDependenciesArchive {
	if m != nil {
		return m.SpanningColumnDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetSpanningRowDependencies() *SpanningDependenciesArchive {
	if m != nil {
		return m.SpanningRowDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetWholeOwnerDependencies() *WholeOwnerDependenciesArchive {
	if m != nil {
		return m.WholeOwnerDependencies
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetCellErrors() *CellErrorsArchive {
	if m != nil {
		return m.CellErrors
	}
	return nil
}

func (m *FormulaOwnerInfoArchive) GetFormulaOwner() *TSP.Reference {
	if m != nil {
		return m.FormulaOwner
	}
	return nil
}

type OwnerIDMapArchive struct {
	MapEntry             []*OwnerIDMapArchive_OwnerIDMapArchiveEntry `protobuf:"bytes,1,rep,name=map_entry,json=mapEntry" json:"map_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *OwnerIDMapArchive) Reset()         { *m = OwnerIDMapArchive{} }
func (m *OwnerIDMapArchive) String() string { return proto.CompactTextString(m) }
func (*OwnerIDMapArchive) ProtoMessage()    {}
func (*OwnerIDMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{30}
}

func (m *OwnerIDMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerIDMapArchive.Unmarshal(m, b)
}
func (m *OwnerIDMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerIDMapArchive.Marshal(b, m, deterministic)
}
func (m *OwnerIDMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerIDMapArchive.Merge(m, src)
}
func (m *OwnerIDMapArchive) XXX_Size() int {
	return xxx_messageInfo_OwnerIDMapArchive.Size(m)
}
func (m *OwnerIDMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerIDMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerIDMapArchive proto.InternalMessageInfo

func (m *OwnerIDMapArchive) GetMapEntry() []*OwnerIDMapArchive_OwnerIDMapArchiveEntry {
	if m != nil {
		return m.MapEntry
	}
	return nil
}

type OwnerIDMapArchive_OwnerIDMapArchiveEntry struct {
	InternalOwnerId      *uint32            `protobuf:"varint,1,req,name=internal_owner_id,json=internalOwnerId" json:"internal_owner_id,omitempty"`
	OwnerId              *TSP.CFUUIDArchive `protobuf:"bytes,2,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) Reset() {
	*m = OwnerIDMapArchive_OwnerIDMapArchiveEntry{}
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) String() string { return proto.CompactTextString(m) }
func (*OwnerIDMapArchive_OwnerIDMapArchiveEntry) ProtoMessage()    {}
func (*OwnerIDMapArchive_OwnerIDMapArchiveEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{30, 0}
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Unmarshal(m, b)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Marshal(b, m, deterministic)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Merge(m, src)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_Size() int {
	return xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.Size(m)
}
func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerIDMapArchive_OwnerIDMapArchiveEntry proto.InternalMessageInfo

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) GetInternalOwnerId() uint32 {
	if m != nil && m.InternalOwnerId != nil {
		return *m.InternalOwnerId
	}
	return 0
}

func (m *OwnerIDMapArchive_OwnerIDMapArchiveEntry) GetOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

type DependencyTrackerArchive struct {
	FormulaOwnerInfo         []*FormulaOwnerInfoArchive      `protobuf:"bytes,1,rep,name=formula_owner_info,json=formulaOwnerInfo" json:"formula_owner_info,omitempty"`
	DirtyLeaf                []*CellReferenceArchive         `protobuf:"bytes,2,rep,name=dirty_leaf,json=dirtyLeaf" json:"dirty_leaf,omitempty"` // Deprecated: Do not use.
	OwnerIdMap               *OwnerIDMapArchive              `protobuf:"bytes,3,opt,name=owner_id_map,json=ownerIdMap" json:"owner_id_map,omitempty"`
	InternalDirtyLeaf        []*InternalCellReferenceArchive `protobuf:"bytes,4,rep,name=internal_dirty_leaf,json=internalDirtyLeaf" json:"internal_dirty_leaf,omitempty"` // Deprecated: Do not use.
	NumberOfFormulas         *uint64                         `protobuf:"varint,5,opt,name=number_of_formulas,json=numberOfFormulas" json:"number_of_formulas,omitempty"`
	FormulaOwnerDependencies []*TSP.Reference                `protobuf:"bytes,6,rep,name=formula_owner_dependencies,json=formulaOwnerDependencies" json:"formula_owner_dependencies,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                        `json:"-"`
	XXX_unrecognized         []byte                          `json:"-"`
	XXX_sizecache            int32                           `json:"-"`
}

func (m *DependencyTrackerArchive) Reset()         { *m = DependencyTrackerArchive{} }
func (m *DependencyTrackerArchive) String() string { return proto.CompactTextString(m) }
func (*DependencyTrackerArchive) ProtoMessage()    {}
func (*DependencyTrackerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{31}
}

func (m *DependencyTrackerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DependencyTrackerArchive.Unmarshal(m, b)
}
func (m *DependencyTrackerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DependencyTrackerArchive.Marshal(b, m, deterministic)
}
func (m *DependencyTrackerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DependencyTrackerArchive.Merge(m, src)
}
func (m *DependencyTrackerArchive) XXX_Size() int {
	return xxx_messageInfo_DependencyTrackerArchive.Size(m)
}
func (m *DependencyTrackerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DependencyTrackerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DependencyTrackerArchive proto.InternalMessageInfo

func (m *DependencyTrackerArchive) GetFormulaOwnerInfo() []*FormulaOwnerInfoArchive {
	if m != nil {
		return m.FormulaOwnerInfo
	}
	return nil
}

// Deprecated: Do not use.
func (m *DependencyTrackerArchive) GetDirtyLeaf() []*CellReferenceArchive {
	if m != nil {
		return m.DirtyLeaf
	}
	return nil
}

func (m *DependencyTrackerArchive) GetOwnerIdMap() *OwnerIDMapArchive {
	if m != nil {
		return m.OwnerIdMap
	}
	return nil
}

// Deprecated: Do not use.
func (m *DependencyTrackerArchive) GetInternalDirtyLeaf() []*InternalCellReferenceArchive {
	if m != nil {
		return m.InternalDirtyLeaf
	}
	return nil
}

func (m *DependencyTrackerArchive) GetNumberOfFormulas() uint64 {
	if m != nil && m.NumberOfFormulas != nil {
		return *m.NumberOfFormulas
	}
	return 0
}

func (m *DependencyTrackerArchive) GetFormulaOwnerDependencies() []*TSP.Reference {
	if m != nil {
		return m.FormulaOwnerDependencies
	}
	return nil
}

type RemoteDataSpecifierArchive struct {
	FunctionIndex        *uint32  `protobuf:"varint,1,req,name=function_index,json=functionIndex" json:"function_index,omitempty"`
	Symbol               *string  `protobuf:"bytes,2,req,name=symbol" json:"symbol,omitempty"`
	Attribute            *uint32  `protobuf:"varint,3,req,name=attribute" json:"attribute,omitempty"`
	Date                 *float64 `protobuf:"fixed64,4,opt,name=date" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteDataSpecifierArchive) Reset()         { *m = RemoteDataSpecifierArchive{} }
func (m *RemoteDataSpecifierArchive) String() string { return proto.CompactTextString(m) }
func (*RemoteDataSpecifierArchive) ProtoMessage()    {}
func (*RemoteDataSpecifierArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{32}
}

func (m *RemoteDataSpecifierArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataSpecifierArchive.Unmarshal(m, b)
}
func (m *RemoteDataSpecifierArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataSpecifierArchive.Marshal(b, m, deterministic)
}
func (m *RemoteDataSpecifierArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataSpecifierArchive.Merge(m, src)
}
func (m *RemoteDataSpecifierArchive) XXX_Size() int {
	return xxx_messageInfo_RemoteDataSpecifierArchive.Size(m)
}
func (m *RemoteDataSpecifierArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataSpecifierArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataSpecifierArchive proto.InternalMessageInfo

func (m *RemoteDataSpecifierArchive) GetFunctionIndex() uint32 {
	if m != nil && m.FunctionIndex != nil {
		return *m.FunctionIndex
	}
	return 0
}

func (m *RemoteDataSpecifierArchive) GetSymbol() string {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return ""
}

func (m *RemoteDataSpecifierArchive) GetAttribute() uint32 {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return 0
}

func (m *RemoteDataSpecifierArchive) GetDate() float64 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

type RemoteDataValueMapArchive struct {
	Entry                []*RemoteDataValueMapArchive_RemoteDataMapEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *RemoteDataValueMapArchive) Reset()         { *m = RemoteDataValueMapArchive{} }
func (m *RemoteDataValueMapArchive) String() string { return proto.CompactTextString(m) }
func (*RemoteDataValueMapArchive) ProtoMessage()    {}
func (*RemoteDataValueMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{33}
}

func (m *RemoteDataValueMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataValueMapArchive.Unmarshal(m, b)
}
func (m *RemoteDataValueMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataValueMapArchive.Marshal(b, m, deterministic)
}
func (m *RemoteDataValueMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataValueMapArchive.Merge(m, src)
}
func (m *RemoteDataValueMapArchive) XXX_Size() int {
	return xxx_messageInfo_RemoteDataValueMapArchive.Size(m)
}
func (m *RemoteDataValueMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataValueMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataValueMapArchive proto.InternalMessageInfo

func (m *RemoteDataValueMapArchive) GetEntry() []*RemoteDataValueMapArchive_RemoteDataMapEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type RemoteDataValueMapArchive_RemoteDataMapEntry struct {
	Specifier            *RemoteDataSpecifierArchive `protobuf:"bytes,1,req,name=specifier" json:"specifier,omitempty"`
	Value                *CellValueArchive           `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) Reset() {
	*m = RemoteDataValueMapArchive_RemoteDataMapEntry{}
}
func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) String() string {
	return proto.CompactTextString(m)
}
func (*RemoteDataValueMapArchive_RemoteDataMapEntry) ProtoMessage() {}
func (*RemoteDataValueMapArchive_RemoteDataMapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{33, 0}
}

func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry.Unmarshal(m, b)
}
func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry.Marshal(b, m, deterministic)
}
func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry.Merge(m, src)
}
func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) XXX_Size() int {
	return xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry.Size(m)
}
func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataValueMapArchive_RemoteDataMapEntry proto.InternalMessageInfo

func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) GetSpecifier() *RemoteDataSpecifierArchive {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (m *RemoteDataValueMapArchive_RemoteDataMapEntry) GetValue() *CellValueArchive {
	if m != nil {
		return m.Value
	}
	return nil
}

type StockArchive struct {
	Symbol               *string                        `protobuf:"bytes,1,req,name=symbol" json:"symbol,omitempty"`
	Date                 *float64                       `protobuf:"fixed64,2,opt,name=date" json:"date,omitempty"`
	Attribute            []*StockArchive_AttributeEntry `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StockArchive) Reset()         { *m = StockArchive{} }
func (m *StockArchive) String() string { return proto.CompactTextString(m) }
func (*StockArchive) ProtoMessage()    {}
func (*StockArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{34}
}

func (m *StockArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockArchive.Unmarshal(m, b)
}
func (m *StockArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockArchive.Marshal(b, m, deterministic)
}
func (m *StockArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockArchive.Merge(m, src)
}
func (m *StockArchive) XXX_Size() int {
	return xxx_messageInfo_StockArchive.Size(m)
}
func (m *StockArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StockArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StockArchive proto.InternalMessageInfo

func (m *StockArchive) GetSymbol() string {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return ""
}

func (m *StockArchive) GetDate() float64 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

func (m *StockArchive) GetAttribute() []*StockArchive_AttributeEntry {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type StockArchive_AttributeEntry struct {
	Attribute            *uint32  `protobuf:"varint,1,req,name=attribute" json:"attribute,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockArchive_AttributeEntry) Reset()         { *m = StockArchive_AttributeEntry{} }
func (m *StockArchive_AttributeEntry) String() string { return proto.CompactTextString(m) }
func (*StockArchive_AttributeEntry) ProtoMessage()    {}
func (*StockArchive_AttributeEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{34, 0}
}

func (m *StockArchive_AttributeEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockArchive_AttributeEntry.Unmarshal(m, b)
}
func (m *StockArchive_AttributeEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockArchive_AttributeEntry.Marshal(b, m, deterministic)
}
func (m *StockArchive_AttributeEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockArchive_AttributeEntry.Merge(m, src)
}
func (m *StockArchive_AttributeEntry) XXX_Size() int {
	return xxx_messageInfo_StockArchive_AttributeEntry.Size(m)
}
func (m *StockArchive_AttributeEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_StockArchive_AttributeEntry.DiscardUnknown(m)
}

var xxx_messageInfo_StockArchive_AttributeEntry proto.InternalMessageInfo

func (m *StockArchive_AttributeEntry) GetAttribute() uint32 {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return 0
}

func (m *StockArchive_AttributeEntry) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type RemoteDataStoreArchive struct {
	ValueMap             *RemoteDataValueMapArchive `protobuf:"bytes,1,req,name=value_map,json=valueMap" json:"value_map,omitempty"`
	Stocks               []*StockArchive            `protobuf:"bytes,2,rep,name=stocks" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RemoteDataStoreArchive) Reset()         { *m = RemoteDataStoreArchive{} }
func (m *RemoteDataStoreArchive) String() string { return proto.CompactTextString(m) }
func (*RemoteDataStoreArchive) ProtoMessage()    {}
func (*RemoteDataStoreArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{35}
}

func (m *RemoteDataStoreArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteDataStoreArchive.Unmarshal(m, b)
}
func (m *RemoteDataStoreArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteDataStoreArchive.Marshal(b, m, deterministic)
}
func (m *RemoteDataStoreArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteDataStoreArchive.Merge(m, src)
}
func (m *RemoteDataStoreArchive) XXX_Size() int {
	return xxx_messageInfo_RemoteDataStoreArchive.Size(m)
}
func (m *RemoteDataStoreArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteDataStoreArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteDataStoreArchive proto.InternalMessageInfo

func (m *RemoteDataStoreArchive) GetValueMap() *RemoteDataValueMapArchive {
	if m != nil {
		return m.ValueMap
	}
	return nil
}

func (m *RemoteDataStoreArchive) GetStocks() []*StockArchive {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type NameTrackedReferencePair struct {
	Name                 *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	TrackedReference     *TSP.Reference `protobuf:"bytes,2,opt,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"`
	TrackedReferenceId   *uint32        `protobuf:"varint,3,opt,name=tracked_reference_id,json=trackedReferenceId" json:"tracked_reference_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NameTrackedReferencePair) Reset()         { *m = NameTrackedReferencePair{} }
func (m *NameTrackedReferencePair) String() string { return proto.CompactTextString(m) }
func (*NameTrackedReferencePair) ProtoMessage()    {}
func (*NameTrackedReferencePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{36}
}

func (m *NameTrackedReferencePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameTrackedReferencePair.Unmarshal(m, b)
}
func (m *NameTrackedReferencePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameTrackedReferencePair.Marshal(b, m, deterministic)
}
func (m *NameTrackedReferencePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameTrackedReferencePair.Merge(m, src)
}
func (m *NameTrackedReferencePair) XXX_Size() int {
	return xxx_messageInfo_NameTrackedReferencePair.Size(m)
}
func (m *NameTrackedReferencePair) XXX_DiscardUnknown() {
	xxx_messageInfo_NameTrackedReferencePair.DiscardUnknown(m)
}

var xxx_messageInfo_NameTrackedReferencePair proto.InternalMessageInfo

func (m *NameTrackedReferencePair) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NameTrackedReferencePair) GetTrackedReference() *TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

func (m *NameTrackedReferencePair) GetTrackedReferenceId() uint32 {
	if m != nil && m.TrackedReferenceId != nil {
		return *m.TrackedReferenceId
	}
	return 0
}

type NamesByTrackedReferenceArchive struct {
	TableId                  *TSP.CFUUIDArchive          `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	NameTrackedReferencePair []*NameTrackedReferencePair `protobuf:"bytes,2,rep,name=name_tracked_reference_pair,json=nameTrackedReferencePair" json:"name_tracked_reference_pair,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                    `json:"-"`
	XXX_unrecognized         []byte                      `json:"-"`
	XXX_sizecache            int32                       `json:"-"`
}

func (m *NamesByTrackedReferenceArchive) Reset()         { *m = NamesByTrackedReferenceArchive{} }
func (m *NamesByTrackedReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*NamesByTrackedReferenceArchive) ProtoMessage()    {}
func (*NamesByTrackedReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{37}
}

func (m *NamesByTrackedReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Unmarshal(m, b)
}
func (m *NamesByTrackedReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Marshal(b, m, deterministic)
}
func (m *NamesByTrackedReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamesByTrackedReferenceArchive.Merge(m, src)
}
func (m *NamesByTrackedReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_NamesByTrackedReferenceArchive.Size(m)
}
func (m *NamesByTrackedReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NamesByTrackedReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NamesByTrackedReferenceArchive proto.InternalMessageInfo

func (m *NamesByTrackedReferenceArchive) GetTableId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *NamesByTrackedReferenceArchive) GetNameTrackedReferencePair() []*NameTrackedReferencePair {
	if m != nil {
		return m.NameTrackedReferencePair
	}
	return nil
}

type NamedReferenceManagerArchive struct {
	ReferenceTracker               *TSP.Reference                    `protobuf:"bytes,1,req,name=reference_tracker,json=referenceTracker" json:"reference_tracker,omitempty"`
	NamesByTrackedReferenceByTable []*NamesByTrackedReferenceArchive `protobuf:"bytes,2,rep,name=names_by_tracked_reference_by_table,json=namesByTrackedReferenceByTable" json:"names_by_tracked_reference_by_table,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral           struct{}                          `json:"-"`
	XXX_unrecognized               []byte                            `json:"-"`
	XXX_sizecache                  int32                             `json:"-"`
}

func (m *NamedReferenceManagerArchive) Reset()         { *m = NamedReferenceManagerArchive{} }
func (m *NamedReferenceManagerArchive) String() string { return proto.CompactTextString(m) }
func (*NamedReferenceManagerArchive) ProtoMessage()    {}
func (*NamedReferenceManagerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{38}
}

func (m *NamedReferenceManagerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedReferenceManagerArchive.Unmarshal(m, b)
}
func (m *NamedReferenceManagerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedReferenceManagerArchive.Marshal(b, m, deterministic)
}
func (m *NamedReferenceManagerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedReferenceManagerArchive.Merge(m, src)
}
func (m *NamedReferenceManagerArchive) XXX_Size() int {
	return xxx_messageInfo_NamedReferenceManagerArchive.Size(m)
}
func (m *NamedReferenceManagerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedReferenceManagerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NamedReferenceManagerArchive proto.InternalMessageInfo

func (m *NamedReferenceManagerArchive) GetReferenceTracker() *TSP.Reference {
	if m != nil {
		return m.ReferenceTracker
	}
	return nil
}

// Deprecated: Do not use.
func (m *NamedReferenceManagerArchive) GetNamesByTrackedReferenceByTable() []*NamesByTrackedReferenceArchive {
	if m != nil {
		return m.NamesByTrackedReferenceByTable
	}
	return nil
}

type UuidSetStoreArchive struct {
	UuidSet              []*UuidSetStoreArchive_UuidSet `protobuf:"bytes,1,rep,name=uuidSet" json:"uuidSet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *UuidSetStoreArchive) Reset()         { *m = UuidSetStoreArchive{} }
func (m *UuidSetStoreArchive) String() string { return proto.CompactTextString(m) }
func (*UuidSetStoreArchive) ProtoMessage()    {}
func (*UuidSetStoreArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{39}
}

func (m *UuidSetStoreArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UuidSetStoreArchive.Unmarshal(m, b)
}
func (m *UuidSetStoreArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UuidSetStoreArchive.Marshal(b, m, deterministic)
}
func (m *UuidSetStoreArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UuidSetStoreArchive.Merge(m, src)
}
func (m *UuidSetStoreArchive) XXX_Size() int {
	return xxx_messageInfo_UuidSetStoreArchive.Size(m)
}
func (m *UuidSetStoreArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UuidSetStoreArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UuidSetStoreArchive proto.InternalMessageInfo

func (m *UuidSetStoreArchive) GetUuidSet() []*UuidSetStoreArchive_UuidSet {
	if m != nil {
		return m.UuidSet
	}
	return nil
}

type UuidSetStoreArchive_UuidSet struct {
	Uuid                 []*TSP.UUID `protobuf:"bytes,1,rep,name=uuid" json:"uuid,omitempty"`
	IndexOfSet           *uint32     `protobuf:"varint,2,req,name=index_of_set,json=indexOfSet" json:"index_of_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UuidSetStoreArchive_UuidSet) Reset()         { *m = UuidSetStoreArchive_UuidSet{} }
func (m *UuidSetStoreArchive_UuidSet) String() string { return proto.CompactTextString(m) }
func (*UuidSetStoreArchive_UuidSet) ProtoMessage()    {}
func (*UuidSetStoreArchive_UuidSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{39, 0}
}

func (m *UuidSetStoreArchive_UuidSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UuidSetStoreArchive_UuidSet.Unmarshal(m, b)
}
func (m *UuidSetStoreArchive_UuidSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UuidSetStoreArchive_UuidSet.Marshal(b, m, deterministic)
}
func (m *UuidSetStoreArchive_UuidSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UuidSetStoreArchive_UuidSet.Merge(m, src)
}
func (m *UuidSetStoreArchive_UuidSet) XXX_Size() int {
	return xxx_messageInfo_UuidSetStoreArchive_UuidSet.Size(m)
}
func (m *UuidSetStoreArchive_UuidSet) XXX_DiscardUnknown() {
	xxx_messageInfo_UuidSetStoreArchive_UuidSet.DiscardUnknown(m)
}

var xxx_messageInfo_UuidSetStoreArchive_UuidSet proto.InternalMessageInfo

func (m *UuidSetStoreArchive_UuidSet) GetUuid() []*TSP.UUID {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *UuidSetStoreArchive_UuidSet) GetIndexOfSet() uint32 {
	if m != nil && m.IndexOfSet != nil {
		return *m.IndexOfSet
	}
	return 0
}

type UuidReferenceMapArchive struct {
	CellRefsForUuid      []*UuidReferenceMapArchive_CellRefsForUuid `protobuf:"bytes,1,rep,name=cell_refs_for_uuid,json=cellRefsForUuid" json:"cell_refs_for_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UuidReferenceMapArchive) Reset()         { *m = UuidReferenceMapArchive{} }
func (m *UuidReferenceMapArchive) String() string { return proto.CompactTextString(m) }
func (*UuidReferenceMapArchive) ProtoMessage()    {}
func (*UuidReferenceMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{40}
}

func (m *UuidReferenceMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UuidReferenceMapArchive.Unmarshal(m, b)
}
func (m *UuidReferenceMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UuidReferenceMapArchive.Marshal(b, m, deterministic)
}
func (m *UuidReferenceMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UuidReferenceMapArchive.Merge(m, src)
}
func (m *UuidReferenceMapArchive) XXX_Size() int {
	return xxx_messageInfo_UuidReferenceMapArchive.Size(m)
}
func (m *UuidReferenceMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UuidReferenceMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UuidReferenceMapArchive proto.InternalMessageInfo

func (m *UuidReferenceMapArchive) GetCellRefsForUuid() []*UuidReferenceMapArchive_CellRefsForUuid {
	if m != nil {
		return m.CellRefsForUuid
	}
	return nil
}

type UuidReferenceMapArchive_CellRefsForUuid struct {
	Uuid                 *TSP.UUID                       `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	CellRef              []*InternalCellReferenceArchive `protobuf:"bytes,2,rep,name=cell_ref,json=cellRef" json:"cell_ref,omitempty"`
	CellRefs             *InternalCellRefSetArchive      `protobuf:"bytes,3,opt,name=cell_refs,json=cellRefs" json:"cell_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UuidReferenceMapArchive_CellRefsForUuid) Reset() {
	*m = UuidReferenceMapArchive_CellRefsForUuid{}
}
func (m *UuidReferenceMapArchive_CellRefsForUuid) String() string { return proto.CompactTextString(m) }
func (*UuidReferenceMapArchive_CellRefsForUuid) ProtoMessage()    {}
func (*UuidReferenceMapArchive_CellRefsForUuid) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{40, 0}
}

func (m *UuidReferenceMapArchive_CellRefsForUuid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid.Unmarshal(m, b)
}
func (m *UuidReferenceMapArchive_CellRefsForUuid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid.Marshal(b, m, deterministic)
}
func (m *UuidReferenceMapArchive_CellRefsForUuid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid.Merge(m, src)
}
func (m *UuidReferenceMapArchive_CellRefsForUuid) XXX_Size() int {
	return xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid.Size(m)
}
func (m *UuidReferenceMapArchive_CellRefsForUuid) XXX_DiscardUnknown() {
	xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid.DiscardUnknown(m)
}

var xxx_messageInfo_UuidReferenceMapArchive_CellRefsForUuid proto.InternalMessageInfo

func (m *UuidReferenceMapArchive_CellRefsForUuid) GetUuid() *TSP.UUID {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *UuidReferenceMapArchive_CellRefsForUuid) GetCellRef() []*InternalCellReferenceArchive {
	if m != nil {
		return m.CellRef
	}
	return nil
}

func (m *UuidReferenceMapArchive_CellRefsForUuid) GetCellRefs() *InternalCellRefSetArchive {
	if m != nil {
		return m.CellRefs
	}
	return nil
}

type GroupByNodeMapArchive struct {
	RefsForGroupBy       []*GroupByNodeMapArchive_GroupNodesForGroupBy `protobuf:"bytes,1,rep,name=refs_for_group_by,json=refsForGroupBy" json:"refs_for_group_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *GroupByNodeMapArchive) Reset()         { *m = GroupByNodeMapArchive{} }
func (m *GroupByNodeMapArchive) String() string { return proto.CompactTextString(m) }
func (*GroupByNodeMapArchive) ProtoMessage()    {}
func (*GroupByNodeMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{41}
}

func (m *GroupByNodeMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupByNodeMapArchive.Unmarshal(m, b)
}
func (m *GroupByNodeMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupByNodeMapArchive.Marshal(b, m, deterministic)
}
func (m *GroupByNodeMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupByNodeMapArchive.Merge(m, src)
}
func (m *GroupByNodeMapArchive) XXX_Size() int {
	return xxx_messageInfo_GroupByNodeMapArchive.Size(m)
}
func (m *GroupByNodeMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupByNodeMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_GroupByNodeMapArchive proto.InternalMessageInfo

func (m *GroupByNodeMapArchive) GetRefsForGroupBy() []*GroupByNodeMapArchive_GroupNodesForGroupBy {
	if m != nil {
		return m.RefsForGroupBy
	}
	return nil
}

type GroupByNodeMapArchive_CellRefsForGroupNode struct {
	GroupNodeUid         *TSP.UUID                       `protobuf:"bytes,1,req,name=group_node_uid,json=groupNodeUid" json:"group_node_uid,omitempty"`
	CellRef              []*InternalCellReferenceArchive `protobuf:"bytes,2,rep,name=cell_ref,json=cellRef" json:"cell_ref,omitempty"`
	CellRefs             *InternalCellRefSetArchive      `protobuf:"bytes,3,opt,name=cell_refs,json=cellRefs" json:"cell_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GroupByNodeMapArchive_CellRefsForGroupNode) Reset() {
	*m = GroupByNodeMapArchive_CellRefsForGroupNode{}
}
func (m *GroupByNodeMapArchive_CellRefsForGroupNode) String() string {
	return proto.CompactTextString(m)
}
func (*GroupByNodeMapArchive_CellRefsForGroupNode) ProtoMessage() {}
func (*GroupByNodeMapArchive_CellRefsForGroupNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{41, 0}
}

func (m *GroupByNodeMapArchive_CellRefsForGroupNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode.Unmarshal(m, b)
}
func (m *GroupByNodeMapArchive_CellRefsForGroupNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode.Marshal(b, m, deterministic)
}
func (m *GroupByNodeMapArchive_CellRefsForGroupNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode.Merge(m, src)
}
func (m *GroupByNodeMapArchive_CellRefsForGroupNode) XXX_Size() int {
	return xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode.Size(m)
}
func (m *GroupByNodeMapArchive_CellRefsForGroupNode) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode.DiscardUnknown(m)
}

var xxx_messageInfo_GroupByNodeMapArchive_CellRefsForGroupNode proto.InternalMessageInfo

func (m *GroupByNodeMapArchive_CellRefsForGroupNode) GetGroupNodeUid() *TSP.UUID {
	if m != nil {
		return m.GroupNodeUid
	}
	return nil
}

func (m *GroupByNodeMapArchive_CellRefsForGroupNode) GetCellRef() []*InternalCellReferenceArchive {
	if m != nil {
		return m.CellRef
	}
	return nil
}

func (m *GroupByNodeMapArchive_CellRefsForGroupNode) GetCellRefs() *InternalCellRefSetArchive {
	if m != nil {
		return m.CellRefs
	}
	return nil
}

type GroupByNodeMapArchive_GroupNodesForGroupBy struct {
	GroupByUid           *TSP.UUID                                     `protobuf:"bytes,1,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	RefsForGroupNode     []*GroupByNodeMapArchive_CellRefsForGroupNode `protobuf:"bytes,2,rep,name=refs_for_group_node,json=refsForGroupNode" json:"refs_for_group_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) Reset() {
	*m = GroupByNodeMapArchive_GroupNodesForGroupBy{}
}
func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) String() string {
	return proto.CompactTextString(m)
}
func (*GroupByNodeMapArchive_GroupNodesForGroupBy) ProtoMessage() {}
func (*GroupByNodeMapArchive_GroupNodesForGroupBy) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{41, 1}
}

func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy.Unmarshal(m, b)
}
func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy.Marshal(b, m, deterministic)
}
func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy.Merge(m, src)
}
func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) XXX_Size() int {
	return xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy.Size(m)
}
func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy.DiscardUnknown(m)
}

var xxx_messageInfo_GroupByNodeMapArchive_GroupNodesForGroupBy proto.InternalMessageInfo

func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *GroupByNodeMapArchive_GroupNodesForGroupBy) GetRefsForGroupNode() []*GroupByNodeMapArchive_CellRefsForGroupNode {
	if m != nil {
		return m.RefsForGroupNode
	}
	return nil
}

type CalculationEngineArchive struct {
	BaseDate_1904         *bool                                         `protobuf:"varint,1,opt,name=base_date_1904,json=baseDate1904" json:"base_date_1904,omitempty"`
	DependencyTracker     *DependencyTrackerArchive                     `protobuf:"bytes,2,req,name=dependency_tracker,json=dependencyTracker" json:"dependency_tracker,omitempty"`
	NamedReferenceManager *TSP.Reference                                `protobuf:"bytes,3,opt,name=named_reference_manager,json=namedReferenceManager" json:"named_reference_manager,omitempty"`
	ExcelImportDateMode   *CalculationEngineArchive_ExcelImportDateMode `protobuf:"varint,4,opt,name=excel_import_date_mode,json=excelImportDateMode,enum=TSCE.CalculationEngineArchive_ExcelImportDateMode,def=1" json:"excel_import_date_mode,omitempty"`
	SavedLocaleIdentifier *string                                       `protobuf:"bytes,5,opt,name=saved_locale_identifier,json=savedLocaleIdentifier" json:"saved_locale_identifier,omitempty"`
	DocumentRandomSeed    *uint64                                       `protobuf:"varint,6,opt,name=document_random_seed,json=documentRandomSeed" json:"document_random_seed,omitempty"`
	UuidReferenceMap      *UuidReferenceMapArchive                      `protobuf:"bytes,7,opt,name=uuid_reference_map,json=uuidReferenceMap" json:"uuid_reference_map,omitempty"`
	DocumentTimestamp     *float64                                      `protobuf:"fixed64,9,opt,name=document_timestamp,json=documentTimestamp" json:"document_timestamp,omitempty"`
	DocumentTimezone      *string                                       `protobuf:"bytes,10,opt,name=document_timezone,json=documentTimezone" json:"document_timezone,omitempty"`
	TableUidHistory       *RewriteTableUIDInfoArchive                   `protobuf:"bytes,11,opt,name=table_uid_history,json=tableUidHistory" json:"table_uid_history,omitempty"`
	RemoteDataStore       *TSP.Reference                                `protobuf:"bytes,12,opt,name=remote_data_store,json=remoteDataStore" json:"remote_data_store,omitempty"`
	GroupNodeMap          *GroupByNodeMapArchive                        `protobuf:"bytes,13,opt,name=group_node_map,json=groupNodeMap" json:"group_node_map,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                      `json:"-"`
	XXX_unrecognized      []byte                                        `json:"-"`
	XXX_sizecache         int32                                         `json:"-"`
}

func (m *CalculationEngineArchive) Reset()         { *m = CalculationEngineArchive{} }
func (m *CalculationEngineArchive) String() string { return proto.CompactTextString(m) }
func (*CalculationEngineArchive) ProtoMessage()    {}
func (*CalculationEngineArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{42}
}

func (m *CalculationEngineArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationEngineArchive.Unmarshal(m, b)
}
func (m *CalculationEngineArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationEngineArchive.Marshal(b, m, deterministic)
}
func (m *CalculationEngineArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationEngineArchive.Merge(m, src)
}
func (m *CalculationEngineArchive) XXX_Size() int {
	return xxx_messageInfo_CalculationEngineArchive.Size(m)
}
func (m *CalculationEngineArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationEngineArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationEngineArchive proto.InternalMessageInfo

const Default_CalculationEngineArchive_ExcelImportDateMode CalculationEngineArchive_ExcelImportDateMode = CalculationEngineArchive_DATE_MODE_1900

func (m *CalculationEngineArchive) GetBaseDate_1904() bool {
	if m != nil && m.BaseDate_1904 != nil {
		return *m.BaseDate_1904
	}
	return false
}

func (m *CalculationEngineArchive) GetDependencyTracker() *DependencyTrackerArchive {
	if m != nil {
		return m.DependencyTracker
	}
	return nil
}

func (m *CalculationEngineArchive) GetNamedReferenceManager() *TSP.Reference {
	if m != nil {
		return m.NamedReferenceManager
	}
	return nil
}

func (m *CalculationEngineArchive) GetExcelImportDateMode() CalculationEngineArchive_ExcelImportDateMode {
	if m != nil && m.ExcelImportDateMode != nil {
		return *m.ExcelImportDateMode
	}
	return Default_CalculationEngineArchive_ExcelImportDateMode
}

func (m *CalculationEngineArchive) GetSavedLocaleIdentifier() string {
	if m != nil && m.SavedLocaleIdentifier != nil {
		return *m.SavedLocaleIdentifier
	}
	return ""
}

func (m *CalculationEngineArchive) GetDocumentRandomSeed() uint64 {
	if m != nil && m.DocumentRandomSeed != nil {
		return *m.DocumentRandomSeed
	}
	return 0
}

func (m *CalculationEngineArchive) GetUuidReferenceMap() *UuidReferenceMapArchive {
	if m != nil {
		return m.UuidReferenceMap
	}
	return nil
}

func (m *CalculationEngineArchive) GetDocumentTimestamp() float64 {
	if m != nil && m.DocumentTimestamp != nil {
		return *m.DocumentTimestamp
	}
	return 0
}

func (m *CalculationEngineArchive) GetDocumentTimezone() string {
	if m != nil && m.DocumentTimezone != nil {
		return *m.DocumentTimezone
	}
	return ""
}

func (m *CalculationEngineArchive) GetTableUidHistory() *RewriteTableUIDInfoArchive {
	if m != nil {
		return m.TableUidHistory
	}
	return nil
}

func (m *CalculationEngineArchive) GetRemoteDataStore() *TSP.Reference {
	if m != nil {
		return m.RemoteDataStore
	}
	return nil
}

func (m *CalculationEngineArchive) GetGroupNodeMap() *GroupByNodeMapArchive {
	if m != nil {
		return m.GroupNodeMap
	}
	return nil
}

type PreserveColumnRowFlagsArchive struct {
	BeginRowIsAbsolute    *bool    `protobuf:"varint,1,req,name=begin_row_is_absolute,json=beginRowIsAbsolute" json:"begin_row_is_absolute,omitempty"`
	BeginColumnIsAbsolute *bool    `protobuf:"varint,2,req,name=begin_column_is_absolute,json=beginColumnIsAbsolute" json:"begin_column_is_absolute,omitempty"`
	EndRowIsAbsolute      *bool    `protobuf:"varint,3,opt,name=end_row_is_absolute,json=endRowIsAbsolute" json:"end_row_is_absolute,omitempty"`
	EndColumnIsAbsolute   *bool    `protobuf:"varint,4,opt,name=end_column_is_absolute,json=endColumnIsAbsolute" json:"end_column_is_absolute,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *PreserveColumnRowFlagsArchive) Reset()         { *m = PreserveColumnRowFlagsArchive{} }
func (m *PreserveColumnRowFlagsArchive) String() string { return proto.CompactTextString(m) }
func (*PreserveColumnRowFlagsArchive) ProtoMessage()    {}
func (*PreserveColumnRowFlagsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{43}
}

func (m *PreserveColumnRowFlagsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreserveColumnRowFlagsArchive.Unmarshal(m, b)
}
func (m *PreserveColumnRowFlagsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreserveColumnRowFlagsArchive.Marshal(b, m, deterministic)
}
func (m *PreserveColumnRowFlagsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreserveColumnRowFlagsArchive.Merge(m, src)
}
func (m *PreserveColumnRowFlagsArchive) XXX_Size() int {
	return xxx_messageInfo_PreserveColumnRowFlagsArchive.Size(m)
}
func (m *PreserveColumnRowFlagsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PreserveColumnRowFlagsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PreserveColumnRowFlagsArchive proto.InternalMessageInfo

func (m *PreserveColumnRowFlagsArchive) GetBeginRowIsAbsolute() bool {
	if m != nil && m.BeginRowIsAbsolute != nil {
		return *m.BeginRowIsAbsolute
	}
	return false
}

func (m *PreserveColumnRowFlagsArchive) GetBeginColumnIsAbsolute() bool {
	if m != nil && m.BeginColumnIsAbsolute != nil {
		return *m.BeginColumnIsAbsolute
	}
	return false
}

func (m *PreserveColumnRowFlagsArchive) GetEndRowIsAbsolute() bool {
	if m != nil && m.EndRowIsAbsolute != nil {
		return *m.EndRowIsAbsolute
	}
	return false
}

func (m *PreserveColumnRowFlagsArchive) GetEndColumnIsAbsolute() bool {
	if m != nil && m.EndColumnIsAbsolute != nil {
		return *m.EndColumnIsAbsolute
	}
	return false
}

type CategoryReferenceArchive struct {
	GroupByUid           *TSP.UUID                               `protobuf:"bytes,1,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	ColumnUid            *TSP.UUID                               `protobuf:"bytes,2,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	AggregateType        *CategoryAggType                        `protobuf:"varint,3,req,name=aggregate_type,json=aggregateType,enum=TSCE.CategoryAggType" json:"aggregate_type,omitempty"`
	GroupLevel           *int32                                  `protobuf:"zigzag32,4,req,name=group_level,json=groupLevel" json:"group_level,omitempty"`
	GroupUids            *CategoryReferenceArchive_CatRefUidList `protobuf:"bytes,6,opt,name=group_uids,json=groupUids" json:"group_uids,omitempty"`
	PreserveFlags        *PreserveColumnRowFlagsArchive          `protobuf:"bytes,7,opt,name=preserve_flags,json=preserveFlags" json:"preserve_flags,omitempty"`
	RelativeColumn       *int32                                  `protobuf:"varint,8,opt,name=relative_column,json=relativeColumn" json:"relative_column,omitempty"`
	RelativeGroupUid     *TSP.UUID                               `protobuf:"bytes,9,opt,name=relative_group_uid,json=relativeGroupUid" json:"relative_group_uid,omitempty"`
	AbsoluteGroupUid     *TSP.UUID                               `protobuf:"bytes,10,opt,name=absolute_group_uid,json=absoluteGroupUid" json:"absolute_group_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *CategoryReferenceArchive) Reset()         { *m = CategoryReferenceArchive{} }
func (m *CategoryReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*CategoryReferenceArchive) ProtoMessage()    {}
func (*CategoryReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{44}
}

func (m *CategoryReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryReferenceArchive.Unmarshal(m, b)
}
func (m *CategoryReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryReferenceArchive.Marshal(b, m, deterministic)
}
func (m *CategoryReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryReferenceArchive.Merge(m, src)
}
func (m *CategoryReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryReferenceArchive.Size(m)
}
func (m *CategoryReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryReferenceArchive proto.InternalMessageInfo

func (m *CategoryReferenceArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *CategoryReferenceArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *CategoryReferenceArchive) GetAggregateType() CategoryAggType {
	if m != nil && m.AggregateType != nil {
		return *m.AggregateType
	}
	return CategoryAggType_AGGR_NONE
}

func (m *CategoryReferenceArchive) GetGroupLevel() int32 {
	if m != nil && m.GroupLevel != nil {
		return *m.GroupLevel
	}
	return 0
}

func (m *CategoryReferenceArchive) GetGroupUids() *CategoryReferenceArchive_CatRefUidList {
	if m != nil {
		return m.GroupUids
	}
	return nil
}

func (m *CategoryReferenceArchive) GetPreserveFlags() *PreserveColumnRowFlagsArchive {
	if m != nil {
		return m.PreserveFlags
	}
	return nil
}

func (m *CategoryReferenceArchive) GetRelativeColumn() int32 {
	if m != nil && m.RelativeColumn != nil {
		return *m.RelativeColumn
	}
	return 0
}

func (m *CategoryReferenceArchive) GetRelativeGroupUid() *TSP.UUID {
	if m != nil {
		return m.RelativeGroupUid
	}
	return nil
}

func (m *CategoryReferenceArchive) GetAbsoluteGroupUid() *TSP.UUID {
	if m != nil {
		return m.AbsoluteGroupUid
	}
	return nil
}

type CategoryReferenceArchive_CatRefUidList struct {
	Uid                  []*TSP.UUID `protobuf:"bytes,1,rep,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CategoryReferenceArchive_CatRefUidList) Reset() {
	*m = CategoryReferenceArchive_CatRefUidList{}
}
func (m *CategoryReferenceArchive_CatRefUidList) String() string { return proto.CompactTextString(m) }
func (*CategoryReferenceArchive_CatRefUidList) ProtoMessage()    {}
func (*CategoryReferenceArchive_CatRefUidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{44, 0}
}

func (m *CategoryReferenceArchive_CatRefUidList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryReferenceArchive_CatRefUidList.Unmarshal(m, b)
}
func (m *CategoryReferenceArchive_CatRefUidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryReferenceArchive_CatRefUidList.Marshal(b, m, deterministic)
}
func (m *CategoryReferenceArchive_CatRefUidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryReferenceArchive_CatRefUidList.Merge(m, src)
}
func (m *CategoryReferenceArchive_CatRefUidList) XXX_Size() int {
	return xxx_messageInfo_CategoryReferenceArchive_CatRefUidList.Size(m)
}
func (m *CategoryReferenceArchive_CatRefUidList) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryReferenceArchive_CatRefUidList.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryReferenceArchive_CatRefUidList proto.InternalMessageInfo

func (m *CategoryReferenceArchive_CatRefUidList) GetUid() []*TSP.UUID {
	if m != nil {
		return m.Uid
	}
	return nil
}

type ASTNodeArrayArchive struct {
	ASTNode              []*ASTNodeArrayArchive_ASTNodeArchive `protobuf:"bytes,1,rep,name=AST_node,json=ASTNode" json:"AST_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ASTNodeArrayArchive) Reset()         { *m = ASTNodeArrayArchive{} }
func (m *ASTNodeArrayArchive) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive) ProtoMessage()    {}
func (*ASTNodeArrayArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45}
}

func (m *ASTNodeArrayArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive.Size(m)
}
func (m *ASTNodeArrayArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive) GetASTNode() []*ASTNodeArrayArchive_ASTNodeArchive {
	if m != nil {
		return m.ASTNode
	}
	return nil
}

type ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive struct {
	RowHandle            *uint32  `protobuf:"varint,1,req,name=row_handle,json=rowHandle" json:"row_handle,omitempty"`
	ColumnHandle         *uint32  `protobuf:"varint,2,req,name=column_handle,json=columnHandle" json:"column_handle,omitempty"`
	RowIsSticky          *uint32  `protobuf:"varint,3,req,name=row_is_sticky,json=rowIsSticky" json:"row_is_sticky,omitempty"`
	ColumnIsSticky       *uint32  `protobuf:"varint,4,req,name=column_is_sticky,json=columnIsSticky" json:"column_is_sticky,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive{}
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 0}
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetRowHandle() uint32 {
	if m != nil && m.RowHandle != nil {
		return *m.RowHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetColumnHandle() uint32 {
	if m != nil && m.ColumnHandle != nil {
		return *m.ColumnHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetRowIsSticky() uint32 {
	if m != nil && m.RowIsSticky != nil {
		return *m.RowIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive) GetColumnIsSticky() uint32 {
	if m != nil && m.ColumnIsSticky != nil {
		return *m.ColumnIsSticky
	}
	return 0
}

type ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive struct {
	RowHandle                               *uint32            `protobuf:"varint,1,req,name=row_handle,json=rowHandle" json:"row_handle,omitempty"`
	ColumnHandle                            *uint32            `protobuf:"varint,2,req,name=column_handle,json=columnHandle" json:"column_handle,omitempty"`
	RowIsSticky                             *uint32            `protobuf:"varint,3,req,name=row_is_sticky,json=rowIsSticky" json:"row_is_sticky,omitempty"`
	ColumnIsSticky                          *uint32            `protobuf:"varint,4,req,name=column_is_sticky,json=columnIsSticky" json:"column_is_sticky,omitempty"`
	TableId                                 *TSP.CFUUIDArchive `protobuf:"bytes,5,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	ASTReferenceWhitespaceAfterSheetName    *string            `protobuf:"bytes,6,opt,name=AST_reference_whitespace_after_sheet_name,json=ASTReferenceWhitespaceAfterSheetName" json:"AST_reference_whitespace_after_sheet_name,omitempty"`
	ASTReferenceWhitespaceBeforeTableName   *string            `protobuf:"bytes,7,opt,name=AST_reference_whitespace_before_table_name,json=ASTReferenceWhitespaceBeforeTableName" json:"AST_reference_whitespace_before_table_name,omitempty"`
	ASTReferenceWhitespaceAfterTableName    *string            `protobuf:"bytes,8,opt,name=AST_reference_whitespace_after_table_name,json=ASTReferenceWhitespaceAfterTableName" json:"AST_reference_whitespace_after_table_name,omitempty"`
	ASTReferenceWhitespaceBeforeCellAddress *string            `protobuf:"bytes,9,opt,name=AST_reference_whitespace_before_cell_address,json=ASTReferenceWhitespaceBeforeCellAddress" json:"AST_reference_whitespace_before_cell_address,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}           `json:"-"`
	XXX_unrecognized                        []byte             `json:"-"`
	XXX_sizecache                           int32              `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive{}
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 1}
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetRowHandle() uint32 {
	if m != nil && m.RowHandle != nil {
		return *m.RowHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetColumnHandle() uint32 {
	if m != nil && m.ColumnHandle != nil {
		return *m.ColumnHandle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetRowIsSticky() uint32 {
	if m != nil && m.RowIsSticky != nil {
		return *m.RowIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetColumnIsSticky() uint32 {
	if m != nil && m.ColumnIsSticky != nil {
		return *m.ColumnIsSticky
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetTableId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceAfterSheetName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterSheetName != nil {
		return *m.ASTReferenceWhitespaceAfterSheetName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceBeforeTableName() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeTableName != nil {
		return *m.ASTReferenceWhitespaceBeforeTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceAfterTableName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterTableName != nil {
		return *m.ASTReferenceWhitespaceAfterTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive) GetASTReferenceWhitespaceBeforeCellAddress() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeCellAddress != nil {
		return *m.ASTReferenceWhitespaceBeforeCellAddress
	}
	return ""
}

type ASTNodeArrayArchive_ASTColumnCoordinateArchive struct {
	Column               *int32   `protobuf:"zigzag32,1,req,name=column" json:"column,omitempty"`
	Absolute             *bool    `protobuf:"varint,2,opt,name=absolute,def=0" json:"absolute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTColumnCoordinateArchive{}
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTColumnCoordinateArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTColumnCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 2}
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTColumnCoordinateArchive proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTColumnCoordinateArchive_Absolute bool = false

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) GetColumn() int32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTColumnCoordinateArchive) GetAbsolute() bool {
	if m != nil && m.Absolute != nil {
		return *m.Absolute
	}
	return Default_ASTNodeArrayArchive_ASTColumnCoordinateArchive_Absolute
}

type ASTNodeArrayArchive_ASTRowCoordinateArchive struct {
	Row                  *int32   `protobuf:"zigzag32,1,req,name=row" json:"row,omitempty"`
	Absolute             *bool    `protobuf:"varint,2,opt,name=absolute,def=0" json:"absolute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTRowCoordinateArchive{}
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTRowCoordinateArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTRowCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 3}
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTRowCoordinateArchive proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTRowCoordinateArchive_Absolute bool = false

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) GetRow() int32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTRowCoordinateArchive) GetAbsolute() bool {
	if m != nil && m.Absolute != nil {
		return *m.Absolute
	}
	return Default_ASTNodeArrayArchive_ASTRowCoordinateArchive_Absolute
}

type ASTNodeArrayArchive_ASTUidList struct {
	Uid                  []*TSP.UUID `protobuf:"bytes,1,rep,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTUidList) Reset()         { *m = ASTNodeArrayArchive_ASTUidList{} }
func (m *ASTNodeArrayArchive_ASTUidList) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTUidList) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTUidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 4}
}

func (m *ASTNodeArrayArchive_ASTUidList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidList.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTUidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidList.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTUidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidList.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTUidList) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidList.Size(m)
}
func (m *ASTNodeArrayArchive_ASTUidList) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidList.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTUidList proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTUidList) GetUid() []*TSP.UUID {
	if m != nil {
		return m.Uid
	}
	return nil
}

type ASTNodeArrayArchive_ASTUidTract struct {
	ColumnUids           *ASTNodeArrayArchive_ASTUidList         `protobuf:"bytes,1,req,name=columnUids" json:"columnUids,omitempty"`
	RowUids              *ASTNodeArrayArchive_ASTUidList         `protobuf:"bytes,2,req,name=rowUids" json:"rowUids,omitempty"`
	IsRangeRef           *bool                                   `protobuf:"varint,3,opt,name=is_range_ref,json=isRangeRef" json:"is_range_ref,omitempty"`
	Purpose              *ASTNodeArrayArchive_ASTUidTractPurpose `protobuf:"varint,4,opt,name=purpose,enum=TSCE.ASTNodeArrayArchive_ASTUidTractPurpose" json:"purpose,omitempty"`
	PreserveRectangular  *bool                                   `protobuf:"varint,5,opt,name=preserve_rectangular,json=preserveRectangular,def=1" json:"preserve_rectangular,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTUidTract) Reset()         { *m = ASTNodeArrayArchive_ASTUidTract{} }
func (m *ASTNodeArrayArchive_ASTUidTract) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTUidTract) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTUidTract) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 5}
}

func (m *ASTNodeArrayArchive_ASTUidTract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTUidTract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTUidTract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTUidTract) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract.Size(m)
}
func (m *ASTNodeArrayArchive_ASTUidTract) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTUidTract proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTUidTract_PreserveRectangular bool = true

func (m *ASTNodeArrayArchive_ASTUidTract) GetColumnUids() *ASTNodeArrayArchive_ASTUidList {
	if m != nil {
		return m.ColumnUids
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTUidTract) GetRowUids() *ASTNodeArrayArchive_ASTUidList {
	if m != nil {
		return m.RowUids
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTUidTract) GetIsRangeRef() bool {
	if m != nil && m.IsRangeRef != nil {
		return *m.IsRangeRef
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTUidTract) GetPurpose() ASTNodeArrayArchive_ASTUidTractPurpose {
	if m != nil && m.Purpose != nil {
		return *m.Purpose
	}
	return ASTNodeArrayArchive_UIDS_INCLUDED
}

func (m *ASTNodeArrayArchive_ASTUidTract) GetPreserveRectangular() bool {
	if m != nil && m.PreserveRectangular != nil {
		return *m.PreserveRectangular
	}
	return Default_ASTNodeArrayArchive_ASTUidTract_PreserveRectangular
}

type ASTNodeArrayArchive_ASTStickyBits struct {
	BeginRowIsAbsolute    *bool    `protobuf:"varint,1,req,name=begin_row_is_absolute,json=beginRowIsAbsolute" json:"begin_row_is_absolute,omitempty"`
	BeginColumnIsAbsolute *bool    `protobuf:"varint,2,req,name=begin_column_is_absolute,json=beginColumnIsAbsolute" json:"begin_column_is_absolute,omitempty"`
	EndRowIsAbsolute      *bool    `protobuf:"varint,3,req,name=end_row_is_absolute,json=endRowIsAbsolute" json:"end_row_is_absolute,omitempty"`
	EndColumnIsAbsolute   *bool    `protobuf:"varint,4,req,name=end_column_is_absolute,json=endColumnIsAbsolute" json:"end_column_is_absolute,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTStickyBits) Reset()         { *m = ASTNodeArrayArchive_ASTStickyBits{} }
func (m *ASTNodeArrayArchive_ASTStickyBits) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTStickyBits) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTStickyBits) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 6}
}

func (m *ASTNodeArrayArchive_ASTStickyBits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTStickyBits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTStickyBits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTStickyBits) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits.Size(m)
}
func (m *ASTNodeArrayArchive_ASTStickyBits) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTStickyBits proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTStickyBits) GetBeginRowIsAbsolute() bool {
	if m != nil && m.BeginRowIsAbsolute != nil {
		return *m.BeginRowIsAbsolute
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTStickyBits) GetBeginColumnIsAbsolute() bool {
	if m != nil && m.BeginColumnIsAbsolute != nil {
		return *m.BeginColumnIsAbsolute
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTStickyBits) GetEndRowIsAbsolute() bool {
	if m != nil && m.EndRowIsAbsolute != nil {
		return *m.EndRowIsAbsolute
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTStickyBits) GetEndColumnIsAbsolute() bool {
	if m != nil && m.EndColumnIsAbsolute != nil {
		return *m.EndColumnIsAbsolute
	}
	return false
}

type ASTNodeArrayArchive_ASTUidTractList struct {
	Tract                []*ASTNodeArrayArchive_ASTUidTract `protobuf:"bytes,1,rep,name=tract" json:"tract,omitempty"`
	StickyBits           *ASTNodeArrayArchive_ASTStickyBits `protobuf:"bytes,2,req,name=sticky_bits,json=stickyBits" json:"sticky_bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTUidTractList) Reset()         { *m = ASTNodeArrayArchive_ASTUidTractList{} }
func (m *ASTNodeArrayArchive_ASTUidTractList) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTUidTractList) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTUidTractList) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 7}
}

func (m *ASTNodeArrayArchive_ASTUidTractList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTUidTractList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTUidTractList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTUidTractList) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList.Size(m)
}
func (m *ASTNodeArrayArchive_ASTUidTractList) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTUidTractList proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTUidTractList) GetTract() []*ASTNodeArrayArchive_ASTUidTract {
	if m != nil {
		return m.Tract
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTUidTractList) GetStickyBits() *ASTNodeArrayArchive_ASTStickyBits {
	if m != nil {
		return m.StickyBits
	}
	return nil
}

type ASTNodeArrayArchive_ASTUidCoordinateArchive struct {
	ColumnUid            *TSP.UUID `protobuf:"bytes,1,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	RowUid               *TSP.UUID `protobuf:"bytes,2,req,name=row_uid,json=rowUid" json:"row_uid,omitempty"`
	ColumnAbsolute       *bool     `protobuf:"varint,3,req,name=column_absolute,json=columnAbsolute" json:"column_absolute,omitempty"`
	RowAbsolute          *bool     `protobuf:"varint,4,req,name=row_absolute,json=rowAbsolute" json:"row_absolute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTUidCoordinateArchive{}
}
func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTUidCoordinateArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTUidCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 8}
}

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTUidCoordinateArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) GetRowUid() *TSP.UUID {
	if m != nil {
		return m.RowUid
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) GetColumnAbsolute() bool {
	if m != nil && m.ColumnAbsolute != nil {
		return *m.ColumnAbsolute
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTUidCoordinateArchive) GetRowAbsolute() bool {
	if m != nil && m.RowAbsolute != nil {
		return *m.RowAbsolute
	}
	return false
}

type ASTNodeArrayArchive_ASTCategoryReferenceArchive struct {
	CategoryRef          *CategoryReferenceArchive `protobuf:"bytes,1,req,name=category_ref,json=categoryRef" json:"category_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTCategoryReferenceArchive{}
}
func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTCategoryReferenceArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTCategoryReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 9}
}

func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTCategoryReferenceArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTCategoryReferenceArchive) GetCategoryRef() *CategoryReferenceArchive {
	if m != nil {
		return m.CategoryRef
	}
	return nil
}

type ASTNodeArrayArchive_ASTColonTractArchive struct {
	RelativeColumn       []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive `protobuf:"bytes,1,rep,name=relative_column,json=relativeColumn" json:"relative_column,omitempty"`
	RelativeRow          []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive `protobuf:"bytes,2,rep,name=relative_row,json=relativeRow" json:"relative_row,omitempty"`
	AbsoluteColumn       []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive `protobuf:"bytes,3,rep,name=absolute_column,json=absoluteColumn" json:"absolute_column,omitempty"`
	AbsoluteRow          []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive `protobuf:"bytes,4,rep,name=absolute_row,json=absoluteRow" json:"absolute_row,omitempty"`
	PreserveRectangular  *bool                                                                         `protobuf:"varint,5,opt,name=preserve_rectangular,json=preserveRectangular,def=1" json:"preserve_rectangular,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                        `json:"-"`
	XXX_sizecache        int32                                                                         `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTColonTractArchive{}
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTColonTractArchive) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTColonTractArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 10}
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive proto.InternalMessageInfo

const Default_ASTNodeArrayArchive_ASTColonTractArchive_PreserveRectangular bool = true

func (m *ASTNodeArrayArchive_ASTColonTractArchive) GetRelativeColumn() []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive {
	if m != nil {
		return m.RelativeColumn
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) GetRelativeRow() []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive {
	if m != nil {
		return m.RelativeRow
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) GetAbsoluteColumn() []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive {
	if m != nil {
		return m.AbsoluteColumn
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) GetAbsoluteRow() []*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive {
	if m != nil {
		return m.AbsoluteRow
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive) GetPreserveRectangular() bool {
	if m != nil && m.PreserveRectangular != nil {
		return *m.PreserveRectangular
	}
	return Default_ASTNodeArrayArchive_ASTColonTractArchive_PreserveRectangular
}

type ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive struct {
	RangeBegin           *int32   `protobuf:"varint,1,req,name=range_begin,json=rangeBegin" json:"range_begin,omitempty"`
	RangeEnd             *int32   `protobuf:"varint,2,opt,name=range_end,json=rangeEnd" json:"range_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive{}
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 10, 0}
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) GetRangeBegin() int32 {
	if m != nil && m.RangeBegin != nil {
		return *m.RangeBegin
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive) GetRangeEnd() int32 {
	if m != nil && m.RangeEnd != nil {
		return *m.RangeEnd
	}
	return 0
}

type ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive struct {
	RangeBegin           *uint32  `protobuf:"varint,1,req,name=range_begin,json=rangeBegin" json:"range_begin,omitempty"`
	RangeEnd             *uint32  `protobuf:"varint,2,opt,name=range_end,json=rangeEnd" json:"range_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive{}
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 10, 1}
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) GetRangeBegin() uint32 {
	if m != nil && m.RangeBegin != nil {
		return *m.RangeBegin
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive) GetRangeEnd() uint32 {
	if m != nil && m.RangeEnd != nil {
		return *m.RangeEnd
	}
	return 0
}

type ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive struct {
	TableId                                 *TSP.CFUUIDArchive `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	ASTReferenceWhitespaceAfterSheetName    *string            `protobuf:"bytes,2,opt,name=AST_reference_whitespace_after_sheet_name,json=ASTReferenceWhitespaceAfterSheetName" json:"AST_reference_whitespace_after_sheet_name,omitempty"`
	ASTReferenceWhitespaceBeforeTableName   *string            `protobuf:"bytes,3,opt,name=AST_reference_whitespace_before_table_name,json=ASTReferenceWhitespaceBeforeTableName" json:"AST_reference_whitespace_before_table_name,omitempty"`
	ASTReferenceWhitespaceAfterTableName    *string            `protobuf:"bytes,4,opt,name=AST_reference_whitespace_after_table_name,json=ASTReferenceWhitespaceAfterTableName" json:"AST_reference_whitespace_after_table_name,omitempty"`
	ASTReferenceWhitespaceBeforeCellAddress *string            `protobuf:"bytes,5,opt,name=AST_reference_whitespace_before_cell_address,json=ASTReferenceWhitespaceBeforeCellAddress" json:"AST_reference_whitespace_before_cell_address,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}           `json:"-"`
	XXX_unrecognized                        []byte             `json:"-"`
	XXX_sizecache                           int32              `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) Reset() {
	*m = ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive{}
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) String() string {
	return proto.CompactTextString(m)
}
func (*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) ProtoMessage() {}
func (*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 11}
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetTableId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceAfterSheetName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterSheetName != nil {
		return *m.ASTReferenceWhitespaceAfterSheetName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceBeforeTableName() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeTableName != nil {
		return *m.ASTReferenceWhitespaceBeforeTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceAfterTableName() string {
	if m != nil && m.ASTReferenceWhitespaceAfterTableName != nil {
		return *m.ASTReferenceWhitespaceAfterTableName
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive) GetASTReferenceWhitespaceBeforeCellAddress() string {
	if m != nil && m.ASTReferenceWhitespaceBeforeCellAddress != nil {
		return *m.ASTReferenceWhitespaceBeforeCellAddress
	}
	return ""
}

type ASTNodeArrayArchive_ASTLetNodeWhitespace struct {
	ASTLetWhitespaceAfterLet        *string  `protobuf:"bytes,1,opt,name=AST_let_whitespace_after_let,json=ASTLetWhitespaceAfterLet" json:"AST_let_whitespace_after_let,omitempty"`
	ASTLetWhitespaceAfterIdentifier *string  `protobuf:"bytes,2,opt,name=AST_let_whitespace_after_identifier,json=ASTLetWhitespaceAfterIdentifier" json:"AST_let_whitespace_after_identifier,omitempty"`
	ASTLetWhitespaceAfterEquals     *string  `protobuf:"bytes,3,opt,name=AST_let_whitespace_after_equals,json=ASTLetWhitespaceAfterEquals" json:"AST_let_whitespace_after_equals,omitempty"`
	ASTLetWhitespaceAfterDelimiter  *string  `protobuf:"bytes,4,opt,name=AST_let_whitespace_after_delimiter,json=ASTLetWhitespaceAfterDelimiter" json:"AST_let_whitespace_after_delimiter,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) Reset() {
	*m = ASTNodeArrayArchive_ASTLetNodeWhitespace{}
}
func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTLetNodeWhitespace) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTLetNodeWhitespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 12}
}

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace.Size(m)
}
func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTLetNodeWhitespace proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) GetASTLetWhitespaceAfterLet() string {
	if m != nil && m.ASTLetWhitespaceAfterLet != nil {
		return *m.ASTLetWhitespaceAfterLet
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) GetASTLetWhitespaceAfterIdentifier() string {
	if m != nil && m.ASTLetWhitespaceAfterIdentifier != nil {
		return *m.ASTLetWhitespaceAfterIdentifier
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) GetASTLetWhitespaceAfterEquals() string {
	if m != nil && m.ASTLetWhitespaceAfterEquals != nil {
		return *m.ASTLetWhitespaceAfterEquals
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTLetNodeWhitespace) GetASTLetWhitespaceAfterDelimiter() string {
	if m != nil && m.ASTLetWhitespaceAfterDelimiter != nil {
		return *m.ASTLetWhitespaceAfterDelimiter
	}
	return ""
}

type ASTNodeArrayArchive_ASTNodeArchive struct {
	ASTNodeType                             *ASTNodeArrayArchive_ASTNodeType                            `protobuf:"varint,1,req,name=AST_node_type,json=ASTNodeType,enum=TSCE.ASTNodeArrayArchive_ASTNodeType" json:"AST_node_type,omitempty"`
	ASTFunctionNodeIndex                    *uint32                                                     `protobuf:"varint,2,opt,name=AST_function_node_index,json=ASTFunctionNodeIndex" json:"AST_function_node_index,omitempty"`
	ASTFunctionNodeNumArgs                  *uint32                                                     `protobuf:"varint,3,opt,name=AST_function_node_numArgs,json=ASTFunctionNodeNumArgs" json:"AST_function_node_numArgs,omitempty"`
	ASTNumberNodeNumber                     *float64                                                    `protobuf:"fixed64,4,opt,name=AST_number_node_number,json=ASTNumberNodeNumber" json:"AST_number_node_number,omitempty"`
	ASTBooleanNodeBoolean                   *bool                                                       `protobuf:"varint,5,opt,name=AST_boolean_node_boolean,json=ASTBooleanNodeBoolean" json:"AST_boolean_node_boolean,omitempty"`
	ASTStringNodeString                     *string                                                     `protobuf:"bytes,6,opt,name=AST_string_node_string,json=ASTStringNodeString" json:"AST_string_node_string,omitempty"`
	ASTDateNodeDateNum                      *float64                                                    `protobuf:"fixed64,7,opt,name=AST_date_node_dateNum,json=ASTDateNodeDateNum" json:"AST_date_node_dateNum,omitempty"`
	ASTDateNodeSuppressDateFormat           *bool                                                       `protobuf:"varint,19,opt,name=AST_date_node_suppress_date_format,json=ASTDateNodeSuppressDateFormat" json:"AST_date_node_suppress_date_format,omitempty"`
	ASTDateNodeSuppressTimeFormat           *bool                                                       `protobuf:"varint,20,opt,name=AST_date_node_suppress_time_format,json=ASTDateNodeSuppressTimeFormat" json:"AST_date_node_suppress_time_format,omitempty"`
	ASTDateNodeDateTimeFormat               *string                                                     `protobuf:"bytes,21,opt,name=AST_date_node_date_time_format,json=ASTDateNodeDateTimeFormat" json:"AST_date_node_date_time_format,omitempty"`
	ASTDurationNodeUnitNum                  *float64                                                    `protobuf:"fixed64,8,opt,name=AST_duration_node_unitNum,json=ASTDurationNodeUnitNum" json:"AST_duration_node_unitNum,omitempty"`
	ASTDurationNodeUnit                     *int32                                                      `protobuf:"varint,9,opt,name=AST_duration_node_unit,json=ASTDurationNodeUnit" json:"AST_duration_node_unit,omitempty"`
	ASTDurationNodeStyle                    *uint32                                                     `protobuf:"varint,22,opt,name=AST_duration_node_style,json=ASTDurationNodeStyle" json:"AST_duration_node_style,omitempty"`
	ASTDurationNodeDurationUnitLargest      *uint32                                                     `protobuf:"varint,23,opt,name=AST_duration_node_duration_unit_largest,json=ASTDurationNodeDurationUnitLargest" json:"AST_duration_node_duration_unit_largest,omitempty"`
	ASTDurationNodeDurationUnitSmallest     *uint32                                                     `protobuf:"varint,24,opt,name=AST_duration_node_duration_unit_smallest,json=ASTDurationNodeDurationUnitSmallest" json:"AST_duration_node_duration_unit_smallest,omitempty"`
	ASTDurationNodeUseAutomaticUnits        *bool                                                       `protobuf:"varint,29,opt,name=AST_duration_node_use_automatic_units,json=ASTDurationNodeUseAutomaticUnits" json:"AST_duration_node_use_automatic_units,omitempty"`
	ASTTokenNodeBoolean                     *bool                                                       `protobuf:"varint,10,opt,name=AST_token_node_boolean,json=ASTTokenNodeBoolean" json:"AST_token_node_boolean,omitempty"`
	ASTArrayNodeNumCol                      *uint32                                                     `protobuf:"varint,11,opt,name=AST_array_node_numCol,json=ASTArrayNodeNumCol" json:"AST_array_node_numCol,omitempty"`
	ASTArrayNodeNumRow                      *uint32                                                     `protobuf:"varint,12,opt,name=AST_array_node_numRow,json=ASTArrayNodeNumRow" json:"AST_array_node_numRow,omitempty"`
	ASTListNodeNumArgs                      *uint32                                                     `protobuf:"varint,13,opt,name=AST_list_node_numArgs,json=ASTListNodeNumArgs" json:"AST_list_node_numArgs,omitempty"`
	ASTThunkNodeArray                       *ASTNodeArrayArchive                                        `protobuf:"bytes,14,opt,name=AST_thunk_node_array,json=ASTThunkNodeArray" json:"AST_thunk_node_array,omitempty"`
	ASTLocalCellReferenceNodeReference      *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive       `protobuf:"bytes,15,opt,name=AST_local_cell_reference_node_reference,json=ASTLocalCellReferenceNodeReference" json:"AST_local_cell_reference_node_reference,omitempty"`
	ASTCrossTableCellReferenceNodeReference *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive  `protobuf:"bytes,16,opt,name=AST_cross_table_cell_reference_node_reference,json=ASTCrossTableCellReferenceNodeReference" json:"AST_cross_table_cell_reference_node_reference,omitempty"`
	ASTUnknownFunctionNodeString            *string                                                     `protobuf:"bytes,17,opt,name=AST_unknown_function_node_string,json=ASTUnknownFunctionNodeString" json:"AST_unknown_function_node_string,omitempty"`
	ASTUnknownFunctionNodeNumArgs           *uint32                                                     `protobuf:"varint,18,opt,name=AST_unknown_function_node_numArgs,json=ASTUnknownFunctionNodeNumArgs" json:"AST_unknown_function_node_numArgs,omitempty"`
	ASTWhitespace                           *string                                                     `protobuf:"bytes,25,opt,name=AST_whitespace,json=ASTWhitespace" json:"AST_whitespace,omitempty"`
	ASTColumn                               *ASTNodeArrayArchive_ASTColumnCoordinateArchive             `protobuf:"bytes,26,opt,name=AST_column,json=ASTColumn" json:"AST_column,omitempty"`
	ASTRow                                  *ASTNodeArrayArchive_ASTRowCoordinateArchive                `protobuf:"bytes,27,opt,name=AST_row,json=ASTRow" json:"AST_row,omitempty"`
	ASTCrossTableReferenceExtraInfo         *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive `protobuf:"bytes,28,opt,name=AST_cross_table_reference_extra_info,json=ASTCrossTableReferenceExtraInfo" json:"AST_cross_table_reference_extra_info,omitempty"`
	ASTUidCoordinate                        *ASTNodeArrayArchive_ASTUidCoordinateArchive                `protobuf:"bytes,30,opt,name=AST_uid_coordinate,json=ASTUidCoordinate" json:"AST_uid_coordinate,omitempty"`
	ASTStickyBits                           *ASTNodeArrayArchive_ASTStickyBits                          `protobuf:"bytes,33,opt,name=AST_sticky_bits,json=ASTStickyBits" json:"AST_sticky_bits,omitempty"`
	ASTFrozenStickyBits                     *ASTNodeArrayArchive_ASTStickyBits                          `protobuf:"bytes,41,opt,name=AST_frozen_sticky_bits,json=ASTFrozenStickyBits" json:"AST_frozen_sticky_bits,omitempty"`
	ASTLetIdentifier                        *string                                                     `protobuf:"bytes,34,opt,name=AST_let_identifier,json=ASTLetIdentifier" json:"AST_let_identifier,omitempty"`
	ASTLetE2                                *ASTNodeArrayArchive                                        `protobuf:"bytes,35,opt,name=AST_let_e2,json=ASTLetE2" json:"AST_let_e2,omitempty"`
	ASTLetWhitespace                        *ASTNodeArrayArchive_ASTLetNodeWhitespace                   `protobuf:"bytes,36,opt,name=AST_let_whitespace,json=ASTLetWhitespace" json:"AST_let_whitespace,omitempty"`
	ASTSymbol                               *uint32                                                     `protobuf:"varint,37,opt,name=AST_symbol,json=ASTSymbol" json:"AST_symbol,omitempty"`
	ASTTractList                            *ASTNodeArrayArchive_ASTUidTractList                        `protobuf:"bytes,38,opt,name=AST_tract_list,json=ASTTractList" json:"AST_tract_list,omitempty"`
	ASTCategoryRef                          *ASTNodeArrayArchive_ASTCategoryReferenceArchive            `protobuf:"bytes,39,opt,name=AST_category_ref,json=ASTCategoryRef" json:"AST_category_ref,omitempty"`
	ASTColonTract                           *ASTNodeArrayArchive_ASTColonTractArchive                   `protobuf:"bytes,40,opt,name=AST_colon_tract,json=ASTColonTract" json:"AST_colon_tract,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}                                                    `json:"-"`
	XXX_unrecognized                        []byte                                                      `json:"-"`
	XXX_sizecache                           int32                                                       `json:"-"`
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) Reset()         { *m = ASTNodeArrayArchive_ASTNodeArchive{} }
func (m *ASTNodeArrayArchive_ASTNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ASTNodeArrayArchive_ASTNodeArchive) ProtoMessage()    {}
func (*ASTNodeArrayArchive_ASTNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{45, 13}
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Unmarshal(m, b)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Marshal(b, m, deterministic)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Merge(m, src)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.Size(m)
}
func (m *ASTNodeArrayArchive_ASTNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ASTNodeArrayArchive_ASTNodeArchive proto.InternalMessageInfo

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTNodeType() ASTNodeArrayArchive_ASTNodeType {
	if m != nil && m.ASTNodeType != nil {
		return *m.ASTNodeType
	}
	return ASTNodeArrayArchive_ADDITION_NODE
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTFunctionNodeIndex() uint32 {
	if m != nil && m.ASTFunctionNodeIndex != nil {
		return *m.ASTFunctionNodeIndex
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTFunctionNodeNumArgs() uint32 {
	if m != nil && m.ASTFunctionNodeNumArgs != nil {
		return *m.ASTFunctionNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTNumberNodeNumber() float64 {
	if m != nil && m.ASTNumberNodeNumber != nil {
		return *m.ASTNumberNodeNumber
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTBooleanNodeBoolean() bool {
	if m != nil && m.ASTBooleanNodeBoolean != nil {
		return *m.ASTBooleanNodeBoolean
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTStringNodeString() string {
	if m != nil && m.ASTStringNodeString != nil {
		return *m.ASTStringNodeString
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeDateNum() float64 {
	if m != nil && m.ASTDateNodeDateNum != nil {
		return *m.ASTDateNodeDateNum
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeSuppressDateFormat() bool {
	if m != nil && m.ASTDateNodeSuppressDateFormat != nil {
		return *m.ASTDateNodeSuppressDateFormat
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeSuppressTimeFormat() bool {
	if m != nil && m.ASTDateNodeSuppressTimeFormat != nil {
		return *m.ASTDateNodeSuppressTimeFormat
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDateNodeDateTimeFormat() string {
	if m != nil && m.ASTDateNodeDateTimeFormat != nil {
		return *m.ASTDateNodeDateTimeFormat
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUnitNum() float64 {
	if m != nil && m.ASTDurationNodeUnitNum != nil {
		return *m.ASTDurationNodeUnitNum
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUnit() int32 {
	if m != nil && m.ASTDurationNodeUnit != nil {
		return *m.ASTDurationNodeUnit
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeStyle() uint32 {
	if m != nil && m.ASTDurationNodeStyle != nil {
		return *m.ASTDurationNodeStyle
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeDurationUnitLargest() uint32 {
	if m != nil && m.ASTDurationNodeDurationUnitLargest != nil {
		return *m.ASTDurationNodeDurationUnitLargest
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeDurationUnitSmallest() uint32 {
	if m != nil && m.ASTDurationNodeDurationUnitSmallest != nil {
		return *m.ASTDurationNodeDurationUnitSmallest
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTDurationNodeUseAutomaticUnits() bool {
	if m != nil && m.ASTDurationNodeUseAutomaticUnits != nil {
		return *m.ASTDurationNodeUseAutomaticUnits
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTTokenNodeBoolean() bool {
	if m != nil && m.ASTTokenNodeBoolean != nil {
		return *m.ASTTokenNodeBoolean
	}
	return false
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTArrayNodeNumCol() uint32 {
	if m != nil && m.ASTArrayNodeNumCol != nil {
		return *m.ASTArrayNodeNumCol
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTArrayNodeNumRow() uint32 {
	if m != nil && m.ASTArrayNodeNumRow != nil {
		return *m.ASTArrayNodeNumRow
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTListNodeNumArgs() uint32 {
	if m != nil && m.ASTListNodeNumArgs != nil {
		return *m.ASTListNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTThunkNodeArray() *ASTNodeArrayArchive {
	if m != nil {
		return m.ASTThunkNodeArray
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTLocalCellReferenceNodeReference() *ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive {
	if m != nil {
		return m.ASTLocalCellReferenceNodeReference
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTCrossTableCellReferenceNodeReference() *ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive {
	if m != nil {
		return m.ASTCrossTableCellReferenceNodeReference
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTUnknownFunctionNodeString() string {
	if m != nil && m.ASTUnknownFunctionNodeString != nil {
		return *m.ASTUnknownFunctionNodeString
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTUnknownFunctionNodeNumArgs() uint32 {
	if m != nil && m.ASTUnknownFunctionNodeNumArgs != nil {
		return *m.ASTUnknownFunctionNodeNumArgs
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTWhitespace() string {
	if m != nil && m.ASTWhitespace != nil {
		return *m.ASTWhitespace
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTColumn() *ASTNodeArrayArchive_ASTColumnCoordinateArchive {
	if m != nil {
		return m.ASTColumn
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTRow() *ASTNodeArrayArchive_ASTRowCoordinateArchive {
	if m != nil {
		return m.ASTRow
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTCrossTableReferenceExtraInfo() *ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive {
	if m != nil {
		return m.ASTCrossTableReferenceExtraInfo
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTUidCoordinate() *ASTNodeArrayArchive_ASTUidCoordinateArchive {
	if m != nil {
		return m.ASTUidCoordinate
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTStickyBits() *ASTNodeArrayArchive_ASTStickyBits {
	if m != nil {
		return m.ASTStickyBits
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTFrozenStickyBits() *ASTNodeArrayArchive_ASTStickyBits {
	if m != nil {
		return m.ASTFrozenStickyBits
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTLetIdentifier() string {
	if m != nil && m.ASTLetIdentifier != nil {
		return *m.ASTLetIdentifier
	}
	return ""
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTLetE2() *ASTNodeArrayArchive {
	if m != nil {
		return m.ASTLetE2
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTLetWhitespace() *ASTNodeArrayArchive_ASTLetNodeWhitespace {
	if m != nil {
		return m.ASTLetWhitespace
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTSymbol() uint32 {
	if m != nil && m.ASTSymbol != nil {
		return *m.ASTSymbol
	}
	return 0
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTTractList() *ASTNodeArrayArchive_ASTUidTractList {
	if m != nil {
		return m.ASTTractList
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTCategoryRef() *ASTNodeArrayArchive_ASTCategoryReferenceArchive {
	if m != nil {
		return m.ASTCategoryRef
	}
	return nil
}

func (m *ASTNodeArrayArchive_ASTNodeArchive) GetASTColonTract() *ASTNodeArrayArchive_ASTColonTractArchive {
	if m != nil {
		return m.ASTColonTract
	}
	return nil
}

type FormulaTranslationFlagsArchive struct {
	ExcelImportTranslation                 *bool    `protobuf:"varint,1,opt,name=excel_import_translation,json=excelImportTranslation,def=0" json:"excel_import_translation,omitempty"`
	NumberToDateCoercionRemovalTranslation *bool    `protobuf:"varint,2,opt,name=number_to_date_coercion_removal_translation,json=numberToDateCoercionRemovalTranslation,def=0" json:"number_to_date_coercion_removal_translation,omitempty"`
	ContainsUidFormReferences              *bool    `protobuf:"varint,3,opt,name=contains_uid_form_references,json=containsUidFormReferences,def=0" json:"contains_uid_form_references,omitempty"`
	ContainsFrozenReferences               *bool    `protobuf:"varint,4,opt,name=contains_frozen_references,json=containsFrozenReferences,def=0" json:"contains_frozen_references,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{} `json:"-"`
	XXX_unrecognized                       []byte   `json:"-"`
	XXX_sizecache                          int32    `json:"-"`
}

func (m *FormulaTranslationFlagsArchive) Reset()         { *m = FormulaTranslationFlagsArchive{} }
func (m *FormulaTranslationFlagsArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaTranslationFlagsArchive) ProtoMessage()    {}
func (*FormulaTranslationFlagsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{46}
}

func (m *FormulaTranslationFlagsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Unmarshal(m, b)
}
func (m *FormulaTranslationFlagsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Marshal(b, m, deterministic)
}
func (m *FormulaTranslationFlagsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaTranslationFlagsArchive.Merge(m, src)
}
func (m *FormulaTranslationFlagsArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaTranslationFlagsArchive.Size(m)
}
func (m *FormulaTranslationFlagsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaTranslationFlagsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaTranslationFlagsArchive proto.InternalMessageInfo

const Default_FormulaTranslationFlagsArchive_ExcelImportTranslation bool = false
const Default_FormulaTranslationFlagsArchive_NumberToDateCoercionRemovalTranslation bool = false
const Default_FormulaTranslationFlagsArchive_ContainsUidFormReferences bool = false
const Default_FormulaTranslationFlagsArchive_ContainsFrozenReferences bool = false

func (m *FormulaTranslationFlagsArchive) GetExcelImportTranslation() bool {
	if m != nil && m.ExcelImportTranslation != nil {
		return *m.ExcelImportTranslation
	}
	return Default_FormulaTranslationFlagsArchive_ExcelImportTranslation
}

func (m *FormulaTranslationFlagsArchive) GetNumberToDateCoercionRemovalTranslation() bool {
	if m != nil && m.NumberToDateCoercionRemovalTranslation != nil {
		return *m.NumberToDateCoercionRemovalTranslation
	}
	return Default_FormulaTranslationFlagsArchive_NumberToDateCoercionRemovalTranslation
}

func (m *FormulaTranslationFlagsArchive) GetContainsUidFormReferences() bool {
	if m != nil && m.ContainsUidFormReferences != nil {
		return *m.ContainsUidFormReferences
	}
	return Default_FormulaTranslationFlagsArchive_ContainsUidFormReferences
}

func (m *FormulaTranslationFlagsArchive) GetContainsFrozenReferences() bool {
	if m != nil && m.ContainsFrozenReferences != nil {
		return *m.ContainsFrozenReferences
	}
	return Default_FormulaTranslationFlagsArchive_ContainsFrozenReferences
}

type FormulaArchive struct {
	ASTNodeArray         *ASTNodeArrayArchive            `protobuf:"bytes,1,req,name=AST_node_array,json=ASTNodeArray" json:"AST_node_array,omitempty"`
	HostColumn           *uint32                         `protobuf:"varint,2,opt,name=host_column,json=hostColumn" json:"host_column,omitempty"`
	HostRow              *uint32                         `protobuf:"varint,3,opt,name=host_row,json=hostRow" json:"host_row,omitempty"`
	HostColumnIsNegative *bool                           `protobuf:"varint,4,opt,name=host_column_is_negative,json=hostColumnIsNegative,def=0" json:"host_column_is_negative,omitempty"`
	HostRowIsNegative    *bool                           `protobuf:"varint,5,opt,name=host_row_is_negative,json=hostRowIsNegative,def=0" json:"host_row_is_negative,omitempty"`
	TranslationFlags     *FormulaTranslationFlagsArchive `protobuf:"bytes,6,opt,name=translation_flags,json=translationFlags" json:"translation_flags,omitempty"`
	HostTableUid         *TSP.UUID                       `protobuf:"bytes,7,opt,name=host_table_uid,json=hostTableUid" json:"host_table_uid,omitempty"`
	HostColumnUid        *TSP.UUID                       `protobuf:"bytes,8,opt,name=host_column_uid,json=hostColumnUid" json:"host_column_uid,omitempty"`
	HostRowUid           *TSP.UUID                       `protobuf:"bytes,9,opt,name=host_row_uid,json=hostRowUid" json:"host_row_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FormulaArchive) Reset()         { *m = FormulaArchive{} }
func (m *FormulaArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaArchive) ProtoMessage()    {}
func (*FormulaArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{47}
}

func (m *FormulaArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaArchive.Unmarshal(m, b)
}
func (m *FormulaArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaArchive.Marshal(b, m, deterministic)
}
func (m *FormulaArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaArchive.Merge(m, src)
}
func (m *FormulaArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaArchive.Size(m)
}
func (m *FormulaArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaArchive proto.InternalMessageInfo

const Default_FormulaArchive_HostColumnIsNegative bool = false
const Default_FormulaArchive_HostRowIsNegative bool = false

func (m *FormulaArchive) GetASTNodeArray() *ASTNodeArrayArchive {
	if m != nil {
		return m.ASTNodeArray
	}
	return nil
}

func (m *FormulaArchive) GetHostColumn() uint32 {
	if m != nil && m.HostColumn != nil {
		return *m.HostColumn
	}
	return 0
}

func (m *FormulaArchive) GetHostRow() uint32 {
	if m != nil && m.HostRow != nil {
		return *m.HostRow
	}
	return 0
}

func (m *FormulaArchive) GetHostColumnIsNegative() bool {
	if m != nil && m.HostColumnIsNegative != nil {
		return *m.HostColumnIsNegative
	}
	return Default_FormulaArchive_HostColumnIsNegative
}

func (m *FormulaArchive) GetHostRowIsNegative() bool {
	if m != nil && m.HostRowIsNegative != nil {
		return *m.HostRowIsNegative
	}
	return Default_FormulaArchive_HostRowIsNegative
}

func (m *FormulaArchive) GetTranslationFlags() *FormulaTranslationFlagsArchive {
	if m != nil {
		return m.TranslationFlags
	}
	return nil
}

func (m *FormulaArchive) GetHostTableUid() *TSP.UUID {
	if m != nil {
		return m.HostTableUid
	}
	return nil
}

func (m *FormulaArchive) GetHostColumnUid() *TSP.UUID {
	if m != nil {
		return m.HostColumnUid
	}
	return nil
}

func (m *FormulaArchive) GetHostRowUid() *TSP.UUID {
	if m != nil {
		return m.HostRowUid
	}
	return nil
}

type FunctorArchive struct {
	Formula              *FormulaArchive `protobuf:"bytes,1,req,name=formula" json:"formula,omitempty"`
	NumArgs              *uint32         `protobuf:"varint,2,req,name=num_args,json=numArgs" json:"num_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FunctorArchive) Reset()         { *m = FunctorArchive{} }
func (m *FunctorArchive) String() string { return proto.CompactTextString(m) }
func (*FunctorArchive) ProtoMessage()    {}
func (*FunctorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{48}
}

func (m *FunctorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctorArchive.Unmarshal(m, b)
}
func (m *FunctorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctorArchive.Marshal(b, m, deterministic)
}
func (m *FunctorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctorArchive.Merge(m, src)
}
func (m *FunctorArchive) XXX_Size() int {
	return xxx_messageInfo_FunctorArchive.Size(m)
}
func (m *FunctorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FunctorArchive proto.InternalMessageInfo

func (m *FunctorArchive) GetFormula() *FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

func (m *FunctorArchive) GetNumArgs() uint32 {
	if m != nil && m.NumArgs != nil {
		return *m.NumArgs
	}
	return 0
}

type FormatStructArchive struct {
	FormatType             *uint32  `protobuf:"varint,1,req,name=format_type,json=formatType" json:"format_type,omitempty"`
	DecimalPlaces          *uint32  `protobuf:"varint,2,opt,name=decimal_places,json=decimalPlaces" json:"decimal_places,omitempty"`
	CurrencyCode           *string  `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	NegativeStyle          *uint32  `protobuf:"varint,4,opt,name=negative_style,json=negativeStyle" json:"negative_style,omitempty"`
	ShowThousandsSeparator *bool    `protobuf:"varint,5,opt,name=show_thousands_separator,json=showThousandsSeparator" json:"show_thousands_separator,omitempty"`
	UseAccountingStyle     *bool    `protobuf:"varint,6,opt,name=use_accounting_style,json=useAccountingStyle" json:"use_accounting_style,omitempty"`
	DurationStyle          *uint32  `protobuf:"varint,7,opt,name=duration_style,json=durationStyle" json:"duration_style,omitempty"`
	Base                   *uint32  `protobuf:"varint,8,opt,name=base" json:"base,omitempty"`
	BasePlaces             *uint32  `protobuf:"varint,9,opt,name=base_places,json=basePlaces" json:"base_places,omitempty"`
	BaseUseMinusSign       *bool    `protobuf:"varint,10,opt,name=base_use_minus_sign,json=baseUseMinusSign" json:"base_use_minus_sign,omitempty"`
	FractionAccuracy       *uint32  `protobuf:"varint,11,opt,name=fraction_accuracy,json=fractionAccuracy" json:"fraction_accuracy,omitempty"`
	SuppressDateFormat     *bool    `protobuf:"varint,12,opt,name=suppress_date_format,json=suppressDateFormat" json:"suppress_date_format,omitempty"`
	SuppressTimeFormat     *bool    `protobuf:"varint,13,opt,name=suppress_time_format,json=suppressTimeFormat" json:"suppress_time_format,omitempty"`
	DateTimeFormat         *string  `protobuf:"bytes,14,opt,name=date_time_format,json=dateTimeFormat" json:"date_time_format,omitempty"`
	DurationUnitLargest    *uint32  `protobuf:"varint,15,opt,name=duration_unit_largest,json=durationUnitLargest" json:"duration_unit_largest,omitempty"`
	DurationUnitSmallest   *uint32  `protobuf:"varint,16,opt,name=duration_unit_smallest,json=durationUnitSmallest" json:"duration_unit_smallest,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FormatStructArchive) Reset()         { *m = FormatStructArchive{} }
func (m *FormatStructArchive) String() string { return proto.CompactTextString(m) }
func (*FormatStructArchive) ProtoMessage()    {}
func (*FormatStructArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{49}
}

func (m *FormatStructArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatStructArchive.Unmarshal(m, b)
}
func (m *FormatStructArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatStructArchive.Marshal(b, m, deterministic)
}
func (m *FormatStructArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatStructArchive.Merge(m, src)
}
func (m *FormatStructArchive) XXX_Size() int {
	return xxx_messageInfo_FormatStructArchive.Size(m)
}
func (m *FormatStructArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatStructArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormatStructArchive proto.InternalMessageInfo

func (m *FormatStructArchive) GetFormatType() uint32 {
	if m != nil && m.FormatType != nil {
		return *m.FormatType
	}
	return 0
}

func (m *FormatStructArchive) GetDecimalPlaces() uint32 {
	if m != nil && m.DecimalPlaces != nil {
		return *m.DecimalPlaces
	}
	return 0
}

func (m *FormatStructArchive) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *FormatStructArchive) GetNegativeStyle() uint32 {
	if m != nil && m.NegativeStyle != nil {
		return *m.NegativeStyle
	}
	return 0
}

func (m *FormatStructArchive) GetShowThousandsSeparator() bool {
	if m != nil && m.ShowThousandsSeparator != nil {
		return *m.ShowThousandsSeparator
	}
	return false
}

func (m *FormatStructArchive) GetUseAccountingStyle() bool {
	if m != nil && m.UseAccountingStyle != nil {
		return *m.UseAccountingStyle
	}
	return false
}

func (m *FormatStructArchive) GetDurationStyle() uint32 {
	if m != nil && m.DurationStyle != nil {
		return *m.DurationStyle
	}
	return 0
}

func (m *FormatStructArchive) GetBase() uint32 {
	if m != nil && m.Base != nil {
		return *m.Base
	}
	return 0
}

func (m *FormatStructArchive) GetBasePlaces() uint32 {
	if m != nil && m.BasePlaces != nil {
		return *m.BasePlaces
	}
	return 0
}

func (m *FormatStructArchive) GetBaseUseMinusSign() bool {
	if m != nil && m.BaseUseMinusSign != nil {
		return *m.BaseUseMinusSign
	}
	return false
}

func (m *FormatStructArchive) GetFractionAccuracy() uint32 {
	if m != nil && m.FractionAccuracy != nil {
		return *m.FractionAccuracy
	}
	return 0
}

func (m *FormatStructArchive) GetSuppressDateFormat() bool {
	if m != nil && m.SuppressDateFormat != nil {
		return *m.SuppressDateFormat
	}
	return false
}

func (m *FormatStructArchive) GetSuppressTimeFormat() bool {
	if m != nil && m.SuppressTimeFormat != nil {
		return *m.SuppressTimeFormat
	}
	return false
}

func (m *FormatStructArchive) GetDateTimeFormat() string {
	if m != nil && m.DateTimeFormat != nil {
		return *m.DateTimeFormat
	}
	return ""
}

func (m *FormatStructArchive) GetDurationUnitLargest() uint32 {
	if m != nil && m.DurationUnitLargest != nil {
		return *m.DurationUnitLargest
	}
	return 0
}

func (m *FormatStructArchive) GetDurationUnitSmallest() uint32 {
	if m != nil && m.DurationUnitSmallest != nil {
		return *m.DurationUnitSmallest
	}
	return 0
}

type RangeCoordinateArchive struct {
	TopLeftColumn        *uint32  `protobuf:"varint,1,req,name=top_left_column,json=topLeftColumn" json:"top_left_column,omitempty"`
	TopLeftRow           *uint32  `protobuf:"varint,2,req,name=top_left_row,json=topLeftRow" json:"top_left_row,omitempty"`
	BottomRightColumn    *uint32  `protobuf:"varint,3,req,name=bottom_right_column,json=bottomRightColumn" json:"bottom_right_column,omitempty"`
	BottomRightRow       *uint32  `protobuf:"varint,4,req,name=bottom_right_row,json=bottomRightRow" json:"bottom_right_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeCoordinateArchive) Reset()         { *m = RangeCoordinateArchive{} }
func (m *RangeCoordinateArchive) String() string { return proto.CompactTextString(m) }
func (*RangeCoordinateArchive) ProtoMessage()    {}
func (*RangeCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{50}
}

func (m *RangeCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeCoordinateArchive.Unmarshal(m, b)
}
func (m *RangeCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *RangeCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeCoordinateArchive.Merge(m, src)
}
func (m *RangeCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_RangeCoordinateArchive.Size(m)
}
func (m *RangeCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RangeCoordinateArchive proto.InternalMessageInfo

func (m *RangeCoordinateArchive) GetTopLeftColumn() uint32 {
	if m != nil && m.TopLeftColumn != nil {
		return *m.TopLeftColumn
	}
	return 0
}

func (m *RangeCoordinateArchive) GetTopLeftRow() uint32 {
	if m != nil && m.TopLeftRow != nil {
		return *m.TopLeftRow
	}
	return 0
}

func (m *RangeCoordinateArchive) GetBottomRightColumn() uint32 {
	if m != nil && m.BottomRightColumn != nil {
		return *m.BottomRightColumn
	}
	return 0
}

func (m *RangeCoordinateArchive) GetBottomRightRow() uint32 {
	if m != nil && m.BottomRightRow != nil {
		return *m.BottomRightRow
	}
	return 0
}

type TableTransposeInfoArchive struct {
	NumberOfFooterRows          *uint32                 `protobuf:"varint,3,req,name=number_of_footer_rows,json=numberOfFooterRows" json:"number_of_footer_rows,omitempty"`
	BodyRangeForTransposedTable *RangeCoordinateArchive `protobuf:"bytes,4,req,name=body_range_for_transposed_table,json=bodyRangeForTransposedTable" json:"body_range_for_transposed_table,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                `json:"-"`
	XXX_unrecognized            []byte                  `json:"-"`
	XXX_sizecache               int32                   `json:"-"`
}

func (m *TableTransposeInfoArchive) Reset()         { *m = TableTransposeInfoArchive{} }
func (m *TableTransposeInfoArchive) String() string { return proto.CompactTextString(m) }
func (*TableTransposeInfoArchive) ProtoMessage()    {}
func (*TableTransposeInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{51}
}

func (m *TableTransposeInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableTransposeInfoArchive.Unmarshal(m, b)
}
func (m *TableTransposeInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableTransposeInfoArchive.Marshal(b, m, deterministic)
}
func (m *TableTransposeInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableTransposeInfoArchive.Merge(m, src)
}
func (m *TableTransposeInfoArchive) XXX_Size() int {
	return xxx_messageInfo_TableTransposeInfoArchive.Size(m)
}
func (m *TableTransposeInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableTransposeInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableTransposeInfoArchive proto.InternalMessageInfo

func (m *TableTransposeInfoArchive) GetNumberOfFooterRows() uint32 {
	if m != nil && m.NumberOfFooterRows != nil {
		return *m.NumberOfFooterRows
	}
	return 0
}

func (m *TableTransposeInfoArchive) GetBodyRangeForTransposedTable() *RangeCoordinateArchive {
	if m != nil {
		return m.BodyRangeForTransposedTable
	}
	return nil
}

type MergeOriginMovedArchive struct {
	SrcColumn            []uint32 `protobuf:"varint,1,rep,name=src_column,json=srcColumn" json:"src_column,omitempty"`
	SrcRow               []uint32 `protobuf:"varint,2,rep,name=src_row,json=srcRow" json:"src_row,omitempty"`
	DstColumn            []uint32 `protobuf:"varint,3,rep,name=dst_column,json=dstColumn" json:"dst_column,omitempty"`
	DstRow               []uint32 `protobuf:"varint,4,rep,name=dst_row,json=dstRow" json:"dst_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeOriginMovedArchive) Reset()         { *m = MergeOriginMovedArchive{} }
func (m *MergeOriginMovedArchive) String() string { return proto.CompactTextString(m) }
func (*MergeOriginMovedArchive) ProtoMessage()    {}
func (*MergeOriginMovedArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{52}
}

func (m *MergeOriginMovedArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeOriginMovedArchive.Unmarshal(m, b)
}
func (m *MergeOriginMovedArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeOriginMovedArchive.Marshal(b, m, deterministic)
}
func (m *MergeOriginMovedArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeOriginMovedArchive.Merge(m, src)
}
func (m *MergeOriginMovedArchive) XXX_Size() int {
	return xxx_messageInfo_MergeOriginMovedArchive.Size(m)
}
func (m *MergeOriginMovedArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeOriginMovedArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MergeOriginMovedArchive proto.InternalMessageInfo

func (m *MergeOriginMovedArchive) GetSrcColumn() []uint32 {
	if m != nil {
		return m.SrcColumn
	}
	return nil
}

func (m *MergeOriginMovedArchive) GetSrcRow() []uint32 {
	if m != nil {
		return m.SrcRow
	}
	return nil
}

func (m *MergeOriginMovedArchive) GetDstColumn() []uint32 {
	if m != nil {
		return m.DstColumn
	}
	return nil
}

func (m *MergeOriginMovedArchive) GetDstRow() []uint32 {
	if m != nil {
		return m.DstRow
	}
	return nil
}

type OwnerUIDMapperArchive struct {
	TableUid                             *TSP.UUID `protobuf:"bytes,1,req,name=table_uid,json=tableUid" json:"table_uid,omitempty"`
	NextTableUid                         *TSP.UUID `protobuf:"bytes,2,req,name=next_table_uid,json=nextTableUid" json:"next_table_uid,omitempty"`
	HiddenStateForRowsOwnerUid           *TSP.UUID `protobuf:"bytes,3,req,name=hidden_state_for_rows_owner_uid,json=hiddenStateForRowsOwnerUid" json:"hidden_state_for_rows_owner_uid,omitempty"`
	NextHiddenStateForRowsOwnerUid       *TSP.UUID `protobuf:"bytes,4,req,name=next_hidden_state_for_rows_owner_uid,json=nextHiddenStateForRowsOwnerUid" json:"next_hidden_state_for_rows_owner_uid,omitempty"`
	HiddenStateForColumnsOwnerUid        *TSP.UUID `protobuf:"bytes,5,req,name=hidden_state_for_columns_owner_uid,json=hiddenStateForColumnsOwnerUid" json:"hidden_state_for_columns_owner_uid,omitempty"`
	NextHiddenStateForColumnsOwnerUid    *TSP.UUID `protobuf:"bytes,6,req,name=next_hidden_state_for_columns_owner_uid,json=nextHiddenStateForColumnsOwnerUid" json:"next_hidden_state_for_columns_owner_uid,omitempty"`
	ConditionalStyleOwnerUid             *TSP.UUID `protobuf:"bytes,7,req,name=conditional_style_owner_uid,json=conditionalStyleOwnerUid" json:"conditional_style_owner_uid,omitempty"`
	NextConditionalStyleOwnerUid         *TSP.UUID `protobuf:"bytes,8,req,name=next_conditional_style_owner_uid,json=nextConditionalStyleOwnerUid" json:"next_conditional_style_owner_uid,omitempty"`
	SortRuleReferenceTrackerOwnerUid     *TSP.UUID `protobuf:"bytes,9,req,name=sort_rule_reference_tracker_owner_uid,json=sortRuleReferenceTrackerOwnerUid" json:"sort_rule_reference_tracker_owner_uid,omitempty"`
	NextSortRuleReferenceTrackerOwnerUid *TSP.UUID `protobuf:"bytes,10,req,name=next_sort_rule_reference_tracker_owner_uid,json=nextSortRuleReferenceTrackerOwnerUid" json:"next_sort_rule_reference_tracker_owner_uid,omitempty"`
	MergeOwnerUid                        *TSP.UUID `protobuf:"bytes,11,req,name=merge_owner_uid,json=mergeOwnerUid" json:"merge_owner_uid,omitempty"`
	NextMergeOwnerUid                    *TSP.UUID `protobuf:"bytes,12,req,name=next_merge_owner_uid,json=nextMergeOwnerUid" json:"next_merge_owner_uid,omitempty"`
	CategoryOwnerUid                     *TSP.UUID `protobuf:"bytes,13,req,name=category_owner_uid,json=categoryOwnerUid" json:"category_owner_uid,omitempty"`
	NextCategoryOwnerUid                 *TSP.UUID `protobuf:"bytes,14,req,name=next_category_owner_uid,json=nextCategoryOwnerUid" json:"next_category_owner_uid,omitempty"`
	CategoryAggregatesOwnerUid           *TSP.UUID `protobuf:"bytes,15,req,name=category_aggregates_owner_uid,json=categoryAggregatesOwnerUid" json:"category_aggregates_owner_uid,omitempty"`
	NextCategoryAggregatesOwnerUid       *TSP.UUID `protobuf:"bytes,16,req,name=next_category_aggregates_owner_uid,json=nextCategoryAggregatesOwnerUid" json:"next_category_aggregates_owner_uid,omitempty"`
	GroupByUid                           *TSP.UUID `protobuf:"bytes,17,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	NextGroupByUid                       *TSP.UUID `protobuf:"bytes,18,req,name=next_group_by_uid,json=nextGroupByUid" json:"next_group_by_uid,omitempty"`
	PencilAnnotationOwnerUid             *TSP.UUID `protobuf:"bytes,19,req,name=pencil_annotation_owner_uid,json=pencilAnnotationOwnerUid" json:"pencil_annotation_owner_uid,omitempty"`
	NextPencilAnnotationOwnerUid         *TSP.UUID `protobuf:"bytes,20,req,name=next_pencil_annotation_owner_uid,json=nextPencilAnnotationOwnerUid" json:"next_pencil_annotation_owner_uid,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}  `json:"-"`
	XXX_unrecognized                     []byte    `json:"-"`
	XXX_sizecache                        int32     `json:"-"`
}

func (m *OwnerUIDMapperArchive) Reset()         { *m = OwnerUIDMapperArchive{} }
func (m *OwnerUIDMapperArchive) String() string { return proto.CompactTextString(m) }
func (*OwnerUIDMapperArchive) ProtoMessage()    {}
func (*OwnerUIDMapperArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{53}
}

func (m *OwnerUIDMapperArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerUIDMapperArchive.Unmarshal(m, b)
}
func (m *OwnerUIDMapperArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerUIDMapperArchive.Marshal(b, m, deterministic)
}
func (m *OwnerUIDMapperArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerUIDMapperArchive.Merge(m, src)
}
func (m *OwnerUIDMapperArchive) XXX_Size() int {
	return xxx_messageInfo_OwnerUIDMapperArchive.Size(m)
}
func (m *OwnerUIDMapperArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerUIDMapperArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerUIDMapperArchive proto.InternalMessageInfo

func (m *OwnerUIDMapperArchive) GetTableUid() *TSP.UUID {
	if m != nil {
		return m.TableUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextTableUid() *TSP.UUID {
	if m != nil {
		return m.NextTableUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetHiddenStateForRowsOwnerUid() *TSP.UUID {
	if m != nil {
		return m.HiddenStateForRowsOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextHiddenStateForRowsOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextHiddenStateForRowsOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetHiddenStateForColumnsOwnerUid() *TSP.UUID {
	if m != nil {
		return m.HiddenStateForColumnsOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextHiddenStateForColumnsOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextHiddenStateForColumnsOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetConditionalStyleOwnerUid() *TSP.UUID {
	if m != nil {
		return m.ConditionalStyleOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextConditionalStyleOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextConditionalStyleOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetSortRuleReferenceTrackerOwnerUid() *TSP.UUID {
	if m != nil {
		return m.SortRuleReferenceTrackerOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextSortRuleReferenceTrackerOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextSortRuleReferenceTrackerOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetMergeOwnerUid() *TSP.UUID {
	if m != nil {
		return m.MergeOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextMergeOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextMergeOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetCategoryOwnerUid() *TSP.UUID {
	if m != nil {
		return m.CategoryOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextCategoryOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextCategoryOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetCategoryAggregatesOwnerUid() *TSP.UUID {
	if m != nil {
		return m.CategoryAggregatesOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextCategoryAggregatesOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextCategoryAggregatesOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextGroupByUid() *TSP.UUID {
	if m != nil {
		return m.NextGroupByUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetPencilAnnotationOwnerUid() *TSP.UUID {
	if m != nil {
		return m.PencilAnnotationOwnerUid
	}
	return nil
}

func (m *OwnerUIDMapperArchive) GetNextPencilAnnotationOwnerUid() *TSP.UUID {
	if m != nil {
		return m.NextPencilAnnotationOwnerUid
	}
	return nil
}

type RewriteTableUIDInfoArchive struct {
	TableUidMap          []*RewriteTableUIDInfoArchive_TableUIDMapEntryArchive `protobuf:"bytes,1,rep,name=table_uid_map,json=tableUidMap" json:"table_uid_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *RewriteTableUIDInfoArchive) Reset()         { *m = RewriteTableUIDInfoArchive{} }
func (m *RewriteTableUIDInfoArchive) String() string { return proto.CompactTextString(m) }
func (*RewriteTableUIDInfoArchive) ProtoMessage()    {}
func (*RewriteTableUIDInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{54}
}

func (m *RewriteTableUIDInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewriteTableUIDInfoArchive.Unmarshal(m, b)
}
func (m *RewriteTableUIDInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewriteTableUIDInfoArchive.Marshal(b, m, deterministic)
}
func (m *RewriteTableUIDInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewriteTableUIDInfoArchive.Merge(m, src)
}
func (m *RewriteTableUIDInfoArchive) XXX_Size() int {
	return xxx_messageInfo_RewriteTableUIDInfoArchive.Size(m)
}
func (m *RewriteTableUIDInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RewriteTableUIDInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RewriteTableUIDInfoArchive proto.InternalMessageInfo

func (m *RewriteTableUIDInfoArchive) GetTableUidMap() []*RewriteTableUIDInfoArchive_TableUIDMapEntryArchive {
	if m != nil {
		return m.TableUidMap
	}
	return nil
}

type RewriteTableUIDInfoArchive_TableUIDMapEntryArchive struct {
	PrevTableUid         *TSP.UUID `protobuf:"bytes,1,req,name=prev_table_uid,json=prevTableUid" json:"prev_table_uid,omitempty"`
	NewTableUid          *TSP.UUID `protobuf:"bytes,2,req,name=new_table_uid,json=newTableUid" json:"new_table_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) Reset() {
	*m = RewriteTableUIDInfoArchive_TableUIDMapEntryArchive{}
}
func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) String() string {
	return proto.CompactTextString(m)
}
func (*RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) ProtoMessage() {}
func (*RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{54, 0}
}

func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive.Unmarshal(m, b)
}
func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive.Marshal(b, m, deterministic)
}
func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive.Merge(m, src)
}
func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) XXX_Size() int {
	return xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive.Size(m)
}
func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RewriteTableUIDInfoArchive_TableUIDMapEntryArchive proto.InternalMessageInfo

func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) GetPrevTableUid() *TSP.UUID {
	if m != nil {
		return m.PrevTableUid
	}
	return nil
}

func (m *RewriteTableUIDInfoArchive_TableUIDMapEntryArchive) GetNewTableUid() *TSP.UUID {
	if m != nil {
		return m.NewTableUid
	}
	return nil
}

type GroupByChangeArchive struct {
	ChangeType           *GroupByChangeArchive_ChangeType `protobuf:"varint,1,req,name=change_type,json=changeType,enum=TSCE.GroupByChangeArchive_ChangeType" json:"change_type,omitempty"`
	GroupByUid           *TSP.UUID                        `protobuf:"bytes,2,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	PreviousLevel        *uint32                          `protobuf:"varint,3,opt,name=previous_level,json=previousLevel" json:"previous_level,omitempty"`
	UpdatedLevel         *uint32                          `protobuf:"varint,4,opt,name=updated_level,json=updatedLevel" json:"updated_level,omitempty"`
	PreviousToUpdatedMap *TSP.UUIDMapArchive              `protobuf:"bytes,5,opt,name=previous_to_updated_map,json=previousToUpdatedMap" json:"previous_to_updated_map,omitempty"`
	UpdatedToPreviousMap *TSP.UUIDMapArchive              `protobuf:"bytes,6,opt,name=updated_to_previous_map,json=updatedToPreviousMap" json:"updated_to_previous_map,omitempty"`
	RemovedGroupUids     []*TSP.UUID                      `protobuf:"bytes,7,rep,name=removed_group_uids,json=removedGroupUids" json:"removed_group_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GroupByChangeArchive) Reset()         { *m = GroupByChangeArchive{} }
func (m *GroupByChangeArchive) String() string { return proto.CompactTextString(m) }
func (*GroupByChangeArchive) ProtoMessage()    {}
func (*GroupByChangeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{55}
}

func (m *GroupByChangeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupByChangeArchive.Unmarshal(m, b)
}
func (m *GroupByChangeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupByChangeArchive.Marshal(b, m, deterministic)
}
func (m *GroupByChangeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupByChangeArchive.Merge(m, src)
}
func (m *GroupByChangeArchive) XXX_Size() int {
	return xxx_messageInfo_GroupByChangeArchive.Size(m)
}
func (m *GroupByChangeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupByChangeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_GroupByChangeArchive proto.InternalMessageInfo

func (m *GroupByChangeArchive) GetChangeType() GroupByChangeArchive_ChangeType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return GroupByChangeArchive_NONE
}

func (m *GroupByChangeArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *GroupByChangeArchive) GetPreviousLevel() uint32 {
	if m != nil && m.PreviousLevel != nil {
		return *m.PreviousLevel
	}
	return 0
}

func (m *GroupByChangeArchive) GetUpdatedLevel() uint32 {
	if m != nil && m.UpdatedLevel != nil {
		return *m.UpdatedLevel
	}
	return 0
}

func (m *GroupByChangeArchive) GetPreviousToUpdatedMap() *TSP.UUIDMapArchive {
	if m != nil {
		return m.PreviousToUpdatedMap
	}
	return nil
}

func (m *GroupByChangeArchive) GetUpdatedToPreviousMap() *TSP.UUIDMapArchive {
	if m != nil {
		return m.UpdatedToPreviousMap
	}
	return nil
}

func (m *GroupByChangeArchive) GetRemovedGroupUids() []*TSP.UUID {
	if m != nil {
		return m.RemovedGroupUids
	}
	return nil
}

type RewriteGroupNodeUIDInfoArchive struct {
	GroupByUid           *TSP.UUID           `protobuf:"bytes,1,opt,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	GroupNodeUidMap      *TSP.UUIDMapArchive `protobuf:"bytes,2,req,name=group_node_uid_map,json=groupNodeUidMap" json:"group_node_uid_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RewriteGroupNodeUIDInfoArchive) Reset()         { *m = RewriteGroupNodeUIDInfoArchive{} }
func (m *RewriteGroupNodeUIDInfoArchive) String() string { return proto.CompactTextString(m) }
func (*RewriteGroupNodeUIDInfoArchive) ProtoMessage()    {}
func (*RewriteGroupNodeUIDInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{56}
}

func (m *RewriteGroupNodeUIDInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewriteGroupNodeUIDInfoArchive.Unmarshal(m, b)
}
func (m *RewriteGroupNodeUIDInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewriteGroupNodeUIDInfoArchive.Marshal(b, m, deterministic)
}
func (m *RewriteGroupNodeUIDInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewriteGroupNodeUIDInfoArchive.Merge(m, src)
}
func (m *RewriteGroupNodeUIDInfoArchive) XXX_Size() int {
	return xxx_messageInfo_RewriteGroupNodeUIDInfoArchive.Size(m)
}
func (m *RewriteGroupNodeUIDInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RewriteGroupNodeUIDInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RewriteGroupNodeUIDInfoArchive proto.InternalMessageInfo

func (m *RewriteGroupNodeUIDInfoArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *RewriteGroupNodeUIDInfoArchive) GetGroupNodeUidMap() *TSP.UUIDMapArchive {
	if m != nil {
		return m.GroupNodeUidMap
	}
	return nil
}

type IndexedUidsArchive struct {
	Uids                 []*IndexedUidsArchive_IndexedUid `protobuf:"bytes,1,rep,name=uids" json:"uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *IndexedUidsArchive) Reset()         { *m = IndexedUidsArchive{} }
func (m *IndexedUidsArchive) String() string { return proto.CompactTextString(m) }
func (*IndexedUidsArchive) ProtoMessage()    {}
func (*IndexedUidsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{57}
}

func (m *IndexedUidsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexedUidsArchive.Unmarshal(m, b)
}
func (m *IndexedUidsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexedUidsArchive.Marshal(b, m, deterministic)
}
func (m *IndexedUidsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexedUidsArchive.Merge(m, src)
}
func (m *IndexedUidsArchive) XXX_Size() int {
	return xxx_messageInfo_IndexedUidsArchive.Size(m)
}
func (m *IndexedUidsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexedUidsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_IndexedUidsArchive proto.InternalMessageInfo

func (m *IndexedUidsArchive) GetUids() []*IndexedUidsArchive_IndexedUid {
	if m != nil {
		return m.Uids
	}
	return nil
}

type IndexedUidsArchive_IndexedUid struct {
	UidForIndex          *TSP.UUID `protobuf:"bytes,1,req,name=uid_for_index,json=uidForIndex" json:"uid_for_index,omitempty"`
	IndexForUid          *uint32   `protobuf:"varint,2,req,name=index_for_uid,json=indexForUid" json:"index_for_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IndexedUidsArchive_IndexedUid) Reset()         { *m = IndexedUidsArchive_IndexedUid{} }
func (m *IndexedUidsArchive_IndexedUid) String() string { return proto.CompactTextString(m) }
func (*IndexedUidsArchive_IndexedUid) ProtoMessage()    {}
func (*IndexedUidsArchive_IndexedUid) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{57, 0}
}

func (m *IndexedUidsArchive_IndexedUid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexedUidsArchive_IndexedUid.Unmarshal(m, b)
}
func (m *IndexedUidsArchive_IndexedUid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexedUidsArchive_IndexedUid.Marshal(b, m, deterministic)
}
func (m *IndexedUidsArchive_IndexedUid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexedUidsArchive_IndexedUid.Merge(m, src)
}
func (m *IndexedUidsArchive_IndexedUid) XXX_Size() int {
	return xxx_messageInfo_IndexedUidsArchive_IndexedUid.Size(m)
}
func (m *IndexedUidsArchive_IndexedUid) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexedUidsArchive_IndexedUid.DiscardUnknown(m)
}

var xxx_messageInfo_IndexedUidsArchive_IndexedUid proto.InternalMessageInfo

func (m *IndexedUidsArchive_IndexedUid) GetUidForIndex() *TSP.UUID {
	if m != nil {
		return m.UidForIndex
	}
	return nil
}

func (m *IndexedUidsArchive_IndexedUid) GetIndexForUid() uint32 {
	if m != nil && m.IndexForUid != nil {
		return *m.IndexForUid
	}
	return 0
}

type RewriteRangeEntryArchive struct {
	RangeLocation        *uint32     `protobuf:"varint,1,req,name=range_location,json=rangeLocation" json:"range_location,omitempty"`
	RangeLength          *uint32     `protobuf:"varint,2,req,name=range_length,json=rangeLength" json:"range_length,omitempty"`
	RangeUids            []*TSP.UUID `protobuf:"bytes,3,rep,name=range_uids,json=rangeUids" json:"range_uids,omitempty"`
	Offset               *uint32     `protobuf:"varint,4,req,name=offset" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RewriteRangeEntryArchive) Reset()         { *m = RewriteRangeEntryArchive{} }
func (m *RewriteRangeEntryArchive) String() string { return proto.CompactTextString(m) }
func (*RewriteRangeEntryArchive) ProtoMessage()    {}
func (*RewriteRangeEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{58}
}

func (m *RewriteRangeEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RewriteRangeEntryArchive.Unmarshal(m, b)
}
func (m *RewriteRangeEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RewriteRangeEntryArchive.Marshal(b, m, deterministic)
}
func (m *RewriteRangeEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RewriteRangeEntryArchive.Merge(m, src)
}
func (m *RewriteRangeEntryArchive) XXX_Size() int {
	return xxx_messageInfo_RewriteRangeEntryArchive.Size(m)
}
func (m *RewriteRangeEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RewriteRangeEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RewriteRangeEntryArchive proto.InternalMessageInfo

func (m *RewriteRangeEntryArchive) GetRangeLocation() uint32 {
	if m != nil && m.RangeLocation != nil {
		return *m.RangeLocation
	}
	return 0
}

func (m *RewriteRangeEntryArchive) GetRangeLength() uint32 {
	if m != nil && m.RangeLength != nil {
		return *m.RangeLength
	}
	return 0
}

func (m *RewriteRangeEntryArchive) GetRangeUids() []*TSP.UUID {
	if m != nil {
		return m.RangeUids
	}
	return nil
}

func (m *RewriteRangeEntryArchive) GetOffset() uint32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

type ColumnOrRowUuidsInfoArchive struct {
	IsRows               *bool                       `protobuf:"varint,1,req,name=is_rows,json=isRows" json:"is_rows,omitempty"`
	TableUid             *TSP.UUID                   `protobuf:"bytes,2,req,name=table_uid,json=tableUid" json:"table_uid,omitempty"`
	CondStyleOwnerUid    *TSP.UUID                   `protobuf:"bytes,3,req,name=cond_style_owner_uid,json=condStyleOwnerUid" json:"cond_style_owner_uid,omitempty"`
	GroupByUid           *TSP.UUID                   `protobuf:"bytes,4,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	Uids                 *IndexedUidsArchive         `protobuf:"bytes,5,req,name=uids" json:"uids,omitempty"`
	RangeEntries         []*RewriteRangeEntryArchive `protobuf:"bytes,6,rep,name=range_entries,json=rangeEntries" json:"range_entries,omitempty"`
	TableRange           *RangeCoordinateArchive     `protobuf:"bytes,7,req,name=table_range,json=tableRange" json:"table_range,omitempty"`
	InsertAtUid          *TSP.UUID                   `protobuf:"bytes,8,opt,name=insert_at_uid,json=insertAtUid" json:"insert_at_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ColumnOrRowUuidsInfoArchive) Reset()         { *m = ColumnOrRowUuidsInfoArchive{} }
func (m *ColumnOrRowUuidsInfoArchive) String() string { return proto.CompactTextString(m) }
func (*ColumnOrRowUuidsInfoArchive) ProtoMessage()    {}
func (*ColumnOrRowUuidsInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{59}
}

func (m *ColumnOrRowUuidsInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnOrRowUuidsInfoArchive.Unmarshal(m, b)
}
func (m *ColumnOrRowUuidsInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnOrRowUuidsInfoArchive.Marshal(b, m, deterministic)
}
func (m *ColumnOrRowUuidsInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnOrRowUuidsInfoArchive.Merge(m, src)
}
func (m *ColumnOrRowUuidsInfoArchive) XXX_Size() int {
	return xxx_messageInfo_ColumnOrRowUuidsInfoArchive.Size(m)
}
func (m *ColumnOrRowUuidsInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnOrRowUuidsInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnOrRowUuidsInfoArchive proto.InternalMessageInfo

func (m *ColumnOrRowUuidsInfoArchive) GetIsRows() bool {
	if m != nil && m.IsRows != nil {
		return *m.IsRows
	}
	return false
}

func (m *ColumnOrRowUuidsInfoArchive) GetTableUid() *TSP.UUID {
	if m != nil {
		return m.TableUid
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetCondStyleOwnerUid() *TSP.UUID {
	if m != nil {
		return m.CondStyleOwnerUid
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetUids() *IndexedUidsArchive {
	if m != nil {
		return m.Uids
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetRangeEntries() []*RewriteRangeEntryArchive {
	if m != nil {
		return m.RangeEntries
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetTableRange() *RangeCoordinateArchive {
	if m != nil {
		return m.TableRange
	}
	return nil
}

func (m *ColumnOrRowUuidsInfoArchive) GetInsertAtUid() *TSP.UUID {
	if m != nil {
		return m.InsertAtUid
	}
	return nil
}

type RegionInfoArchive struct {
	TableUid             *TSP.UUID           `protobuf:"bytes,1,req,name=table_uid,json=tableUid" json:"table_uid,omitempty"`
	ColumnUids           *IndexedUidsArchive `protobuf:"bytes,2,req,name=column_uids,json=columnUids" json:"column_uids,omitempty"`
	RowUids              *IndexedUidsArchive `protobuf:"bytes,3,req,name=row_uids,json=rowUids" json:"row_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RegionInfoArchive) Reset()         { *m = RegionInfoArchive{} }
func (m *RegionInfoArchive) String() string { return proto.CompactTextString(m) }
func (*RegionInfoArchive) ProtoMessage()    {}
func (*RegionInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{60}
}

func (m *RegionInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionInfoArchive.Unmarshal(m, b)
}
func (m *RegionInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionInfoArchive.Marshal(b, m, deterministic)
}
func (m *RegionInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionInfoArchive.Merge(m, src)
}
func (m *RegionInfoArchive) XXX_Size() int {
	return xxx_messageInfo_RegionInfoArchive.Size(m)
}
func (m *RegionInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RegionInfoArchive proto.InternalMessageInfo

func (m *RegionInfoArchive) GetTableUid() *TSP.UUID {
	if m != nil {
		return m.TableUid
	}
	return nil
}

func (m *RegionInfoArchive) GetColumnUids() *IndexedUidsArchive {
	if m != nil {
		return m.ColumnUids
	}
	return nil
}

func (m *RegionInfoArchive) GetRowUids() *IndexedUidsArchive {
	if m != nil {
		return m.RowUids
	}
	return nil
}

type RegionMovedInfoArchive struct {
	SrcRegion            *RegionInfoArchive `protobuf:"bytes,1,req,name=src_region,json=srcRegion" json:"src_region,omitempty"`
	DstRegion            *RegionInfoArchive `protobuf:"bytes,2,req,name=dst_region,json=dstRegion" json:"dst_region,omitempty"`
	SpanRows             *bool              `protobuf:"varint,3,opt,name=span_rows,json=spanRows" json:"span_rows,omitempty"`
	SpanColumns          *bool              `protobuf:"varint,4,opt,name=span_columns,json=spanColumns" json:"span_columns,omitempty"`
	OriginalSrcRegion    *RegionInfoArchive `protobuf:"bytes,5,opt,name=original_src_region,json=originalSrcRegion" json:"original_src_region,omitempty"`
	FinalDestTableUid    *TSP.UUID          `protobuf:"bytes,6,opt,name=final_dest_table_uid,json=finalDestTableUid" json:"final_dest_table_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RegionMovedInfoArchive) Reset()         { *m = RegionMovedInfoArchive{} }
func (m *RegionMovedInfoArchive) String() string { return proto.CompactTextString(m) }
func (*RegionMovedInfoArchive) ProtoMessage()    {}
func (*RegionMovedInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{61}
}

func (m *RegionMovedInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionMovedInfoArchive.Unmarshal(m, b)
}
func (m *RegionMovedInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionMovedInfoArchive.Marshal(b, m, deterministic)
}
func (m *RegionMovedInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionMovedInfoArchive.Merge(m, src)
}
func (m *RegionMovedInfoArchive) XXX_Size() int {
	return xxx_messageInfo_RegionMovedInfoArchive.Size(m)
}
func (m *RegionMovedInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionMovedInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RegionMovedInfoArchive proto.InternalMessageInfo

func (m *RegionMovedInfoArchive) GetSrcRegion() *RegionInfoArchive {
	if m != nil {
		return m.SrcRegion
	}
	return nil
}

func (m *RegionMovedInfoArchive) GetDstRegion() *RegionInfoArchive {
	if m != nil {
		return m.DstRegion
	}
	return nil
}

func (m *RegionMovedInfoArchive) GetSpanRows() bool {
	if m != nil && m.SpanRows != nil {
		return *m.SpanRows
	}
	return false
}

func (m *RegionMovedInfoArchive) GetSpanColumns() bool {
	if m != nil && m.SpanColumns != nil {
		return *m.SpanColumns
	}
	return false
}

func (m *RegionMovedInfoArchive) GetOriginalSrcRegion() *RegionInfoArchive {
	if m != nil {
		return m.OriginalSrcRegion
	}
	return nil
}

func (m *RegionMovedInfoArchive) GetFinalDestTableUid() *TSP.UUID {
	if m != nil {
		return m.FinalDestTableUid
	}
	return nil
}

type MergeSourceArchive struct {
	CoordColumn          *uint32  `protobuf:"varint,1,req,name=coord_column,json=coordColumn" json:"coord_column,omitempty"`
	CoordRow             *uint32  `protobuf:"varint,2,req,name=coord_row,json=coordRow" json:"coord_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeSourceArchive) Reset()         { *m = MergeSourceArchive{} }
func (m *MergeSourceArchive) String() string { return proto.CompactTextString(m) }
func (*MergeSourceArchive) ProtoMessage()    {}
func (*MergeSourceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{62}
}

func (m *MergeSourceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeSourceArchive.Unmarshal(m, b)
}
func (m *MergeSourceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeSourceArchive.Marshal(b, m, deterministic)
}
func (m *MergeSourceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeSourceArchive.Merge(m, src)
}
func (m *MergeSourceArchive) XXX_Size() int {
	return xxx_messageInfo_MergeSourceArchive.Size(m)
}
func (m *MergeSourceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeSourceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MergeSourceArchive proto.InternalMessageInfo

func (m *MergeSourceArchive) GetCoordColumn() uint32 {
	if m != nil && m.CoordColumn != nil {
		return *m.CoordColumn
	}
	return 0
}

func (m *MergeSourceArchive) GetCoordRow() uint32 {
	if m != nil && m.CoordRow != nil {
		return *m.CoordRow
	}
	return 0
}

type FormulaRewriteSpecArchive struct {
	RewriteType             *FormulaRewriteSpecArchive_RewriteType `protobuf:"varint,1,req,name=rewrite_type,json=rewriteType,enum=TSCE.FormulaRewriteSpecArchive_RewriteType" json:"rewrite_type,omitempty"`
	TableUid                *TSP.UUID                              `protobuf:"bytes,2,opt,name=table_uid,json=tableUid" json:"table_uid,omitempty"`
	CondStyleOwnerUid       *TSP.UUID                              `protobuf:"bytes,3,opt,name=cond_style_owner_uid,json=condStyleOwnerUid" json:"cond_style_owner_uid,omitempty"`
	GroupByUid              *TSP.UUID                              `protobuf:"bytes,4,opt,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	ColumnOrRowUuidsInfo    *ColumnOrRowUuidsInfoArchive           `protobuf:"bytes,5,opt,name=column_or_row_uuids_info,json=columnOrRowUuidsInfo" json:"column_or_row_uuids_info,omitempty"`
	AuxColumnOrRowUuidsInfo *ColumnOrRowUuidsInfoArchive           `protobuf:"bytes,6,opt,name=aux_column_or_row_uuids_info,json=auxColumnOrRowUuidsInfo" json:"aux_column_or_row_uuids_info,omitempty"`
	RegionMovedInfo         *RegionMovedInfoArchive                `protobuf:"bytes,7,opt,name=region_moved_info,json=regionMovedInfo" json:"region_moved_info,omitempty"`
	RegionInfo              *RegionInfoArchive                     `protobuf:"bytes,8,opt,name=region_info,json=regionInfo" json:"region_info,omitempty"`
	RewriteTableIdInfo      *RewriteTableUIDInfoArchive            `protobuf:"bytes,9,opt,name=rewrite_table_id_info,json=rewriteTableIdInfo" json:"rewrite_table_id_info,omitempty"`
	TransposedTableInfo     *TableTransposeInfoArchive             `protobuf:"bytes,10,opt,name=transposed_table_info,json=transposedTableInfo" json:"transposed_table_info,omitempty"`
	MergeOriginMovedInfo    *MergeOriginMovedArchive               `protobuf:"bytes,11,opt,name=merge_origin_moved_info,json=mergeOriginMovedInfo" json:"merge_origin_moved_info,omitempty"`
	MergeSource             *MergeSourceArchive                    `protobuf:"bytes,12,opt,name=merge_source,json=mergeSource" json:"merge_source,omitempty"`
	GroupNodeInfo           *RewriteGroupNodeUIDInfoArchive        `protobuf:"bytes,13,opt,name=group_node_info,json=groupNodeInfo" json:"group_node_info,omitempty"`
	GroupbyChange           *GroupByChangeArchive                  `protobuf:"bytes,14,opt,name=groupby_change,json=groupbyChange" json:"groupby_change,omitempty"`
	IsInverse               *bool                                  `protobuf:"varint,15,opt,name=is_inverse,json=isInverse" json:"is_inverse,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                               `json:"-"`
	XXX_unrecognized        []byte                                 `json:"-"`
	XXX_sizecache           int32                                  `json:"-"`
}

func (m *FormulaRewriteSpecArchive) Reset()         { *m = FormulaRewriteSpecArchive{} }
func (m *FormulaRewriteSpecArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaRewriteSpecArchive) ProtoMessage()    {}
func (*FormulaRewriteSpecArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{63}
}

func (m *FormulaRewriteSpecArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Unmarshal(m, b)
}
func (m *FormulaRewriteSpecArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Marshal(b, m, deterministic)
}
func (m *FormulaRewriteSpecArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaRewriteSpecArchive.Merge(m, src)
}
func (m *FormulaRewriteSpecArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaRewriteSpecArchive.Size(m)
}
func (m *FormulaRewriteSpecArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaRewriteSpecArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaRewriteSpecArchive proto.InternalMessageInfo

func (m *FormulaRewriteSpecArchive) GetRewriteType() FormulaRewriteSpecArchive_RewriteType {
	if m != nil && m.RewriteType != nil {
		return *m.RewriteType
	}
	return FormulaRewriteSpecArchive_DELETE_OWNER
}

func (m *FormulaRewriteSpecArchive) GetTableUid() *TSP.UUID {
	if m != nil {
		return m.TableUid
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetCondStyleOwnerUid() *TSP.UUID {
	if m != nil {
		return m.CondStyleOwnerUid
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetColumnOrRowUuidsInfo() *ColumnOrRowUuidsInfoArchive {
	if m != nil {
		return m.ColumnOrRowUuidsInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetAuxColumnOrRowUuidsInfo() *ColumnOrRowUuidsInfoArchive {
	if m != nil {
		return m.AuxColumnOrRowUuidsInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetRegionMovedInfo() *RegionMovedInfoArchive {
	if m != nil {
		return m.RegionMovedInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetRegionInfo() *RegionInfoArchive {
	if m != nil {
		return m.RegionInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetRewriteTableIdInfo() *RewriteTableUIDInfoArchive {
	if m != nil {
		return m.RewriteTableIdInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetTransposedTableInfo() *TableTransposeInfoArchive {
	if m != nil {
		return m.TransposedTableInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetMergeOriginMovedInfo() *MergeOriginMovedArchive {
	if m != nil {
		return m.MergeOriginMovedInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetMergeSource() *MergeSourceArchive {
	if m != nil {
		return m.MergeSource
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetGroupNodeInfo() *RewriteGroupNodeUIDInfoArchive {
	if m != nil {
		return m.GroupNodeInfo
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetGroupbyChange() *GroupByChangeArchive {
	if m != nil {
		return m.GroupbyChange
	}
	return nil
}

func (m *FormulaRewriteSpecArchive) GetIsInverse() bool {
	if m != nil && m.IsInverse != nil {
		return *m.IsInverse
	}
	return false
}

type CellCoordinateArchive struct {
	PackedData           *uint32  `protobuf:"fixed32,1,opt,name=packedData" json:"packedData,omitempty"`
	Column               *uint32  `protobuf:"varint,2,opt,name=column" json:"column,omitempty"`
	Row                  *uint32  `protobuf:"varint,3,opt,name=row" json:"row,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellCoordinateArchive) Reset()         { *m = CellCoordinateArchive{} }
func (m *CellCoordinateArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateArchive) ProtoMessage()    {}
func (*CellCoordinateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{64}
}

func (m *CellCoordinateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateArchive.Unmarshal(m, b)
}
func (m *CellCoordinateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateArchive.Merge(m, src)
}
func (m *CellCoordinateArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateArchive.Size(m)
}
func (m *CellCoordinateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateArchive proto.InternalMessageInfo

func (m *CellCoordinateArchive) GetPackedData() uint32 {
	if m != nil && m.PackedData != nil {
		return *m.PackedData
	}
	return 0
}

func (m *CellCoordinateArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *CellCoordinateArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

type CellCoordinateVectorArchive struct {
	CellCoord            []*CellCoordinateArchive `protobuf:"bytes,1,rep,name=cell_coord,json=cellCoord" json:"cell_coord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CellCoordinateVectorArchive) Reset()         { *m = CellCoordinateVectorArchive{} }
func (m *CellCoordinateVectorArchive) String() string { return proto.CompactTextString(m) }
func (*CellCoordinateVectorArchive) ProtoMessage()    {}
func (*CellCoordinateVectorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{65}
}

func (m *CellCoordinateVectorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordinateVectorArchive.Unmarshal(m, b)
}
func (m *CellCoordinateVectorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordinateVectorArchive.Marshal(b, m, deterministic)
}
func (m *CellCoordinateVectorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordinateVectorArchive.Merge(m, src)
}
func (m *CellCoordinateVectorArchive) XXX_Size() int {
	return xxx_messageInfo_CellCoordinateVectorArchive.Size(m)
}
func (m *CellCoordinateVectorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordinateVectorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordinateVectorArchive proto.InternalMessageInfo

func (m *CellCoordinateVectorArchive) GetCellCoord() []*CellCoordinateArchive {
	if m != nil {
		return m.CellCoord
	}
	return nil
}

type ExpandedCellRefObjectPairArchive struct {
	CellRef              *CellReferenceArchive `protobuf:"bytes,1,req,name=cell_ref,json=cellRef" json:"cell_ref,omitempty"`
	Object               *TSP.Reference        `protobuf:"bytes,2,req,name=object" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ExpandedCellRefObjectPairArchive) Reset()         { *m = ExpandedCellRefObjectPairArchive{} }
func (m *ExpandedCellRefObjectPairArchive) String() string { return proto.CompactTextString(m) }
func (*ExpandedCellRefObjectPairArchive) ProtoMessage()    {}
func (*ExpandedCellRefObjectPairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{66}
}

func (m *ExpandedCellRefObjectPairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedCellRefObjectPairArchive.Unmarshal(m, b)
}
func (m *ExpandedCellRefObjectPairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedCellRefObjectPairArchive.Marshal(b, m, deterministic)
}
func (m *ExpandedCellRefObjectPairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedCellRefObjectPairArchive.Merge(m, src)
}
func (m *ExpandedCellRefObjectPairArchive) XXX_Size() int {
	return xxx_messageInfo_ExpandedCellRefObjectPairArchive.Size(m)
}
func (m *ExpandedCellRefObjectPairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedCellRefObjectPairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedCellRefObjectPairArchive proto.InternalMessageInfo

func (m *ExpandedCellRefObjectPairArchive) GetCellRef() *CellReferenceArchive {
	if m != nil {
		return m.CellRef
	}
	return nil
}

func (m *ExpandedCellRefObjectPairArchive) GetObject() *TSP.Reference {
	if m != nil {
		return m.Object
	}
	return nil
}

type ExpandedCellRefObjectMapArchive struct {
	CellRefObjectPair    []*ExpandedCellRefObjectPairArchive `protobuf:"bytes,1,rep,name=cell_ref_object_pair,json=cellRefObjectPair" json:"cell_ref_object_pair,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ExpandedCellRefObjectMapArchive) Reset()         { *m = ExpandedCellRefObjectMapArchive{} }
func (m *ExpandedCellRefObjectMapArchive) String() string { return proto.CompactTextString(m) }
func (*ExpandedCellRefObjectMapArchive) ProtoMessage()    {}
func (*ExpandedCellRefObjectMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{67}
}

func (m *ExpandedCellRefObjectMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedCellRefObjectMapArchive.Unmarshal(m, b)
}
func (m *ExpandedCellRefObjectMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedCellRefObjectMapArchive.Marshal(b, m, deterministic)
}
func (m *ExpandedCellRefObjectMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedCellRefObjectMapArchive.Merge(m, src)
}
func (m *ExpandedCellRefObjectMapArchive) XXX_Size() int {
	return xxx_messageInfo_ExpandedCellRefObjectMapArchive.Size(m)
}
func (m *ExpandedCellRefObjectMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedCellRefObjectMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedCellRefObjectMapArchive proto.InternalMessageInfo

func (m *ExpandedCellRefObjectMapArchive) GetCellRefObjectPair() []*ExpandedCellRefObjectPairArchive {
	if m != nil {
		return m.CellRefObjectPair
	}
	return nil
}

type FormulaAtCoordArchive struct {
	Column               *uint32         `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Row                  *uint32         `protobuf:"varint,2,req,name=row" json:"row,omitempty"`
	Formula              *FormulaArchive `protobuf:"bytes,3,opt,name=formula" json:"formula,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FormulaAtCoordArchive) Reset()         { *m = FormulaAtCoordArchive{} }
func (m *FormulaAtCoordArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaAtCoordArchive) ProtoMessage()    {}
func (*FormulaAtCoordArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{68}
}

func (m *FormulaAtCoordArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaAtCoordArchive.Unmarshal(m, b)
}
func (m *FormulaAtCoordArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaAtCoordArchive.Marshal(b, m, deterministic)
}
func (m *FormulaAtCoordArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaAtCoordArchive.Merge(m, src)
}
func (m *FormulaAtCoordArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaAtCoordArchive.Size(m)
}
func (m *FormulaAtCoordArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaAtCoordArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaAtCoordArchive proto.InternalMessageInfo

func (m *FormulaAtCoordArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *FormulaAtCoordArchive) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *FormulaAtCoordArchive) GetFormula() *FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

type FormulaCoordPairsByOwnerArchive struct {
	OwnerKind            *FormulaCoordPairsByOwnerArchive_OwnerKind `protobuf:"varint,1,req,name=owner_kind,json=ownerKind,enum=TSCE.FormulaCoordPairsByOwnerArchive_OwnerKind" json:"owner_kind,omitempty"`
	OwnerUid             *TSP.UUID                                  `protobuf:"bytes,2,opt,name=owner_uid,json=ownerUid" json:"owner_uid,omitempty"`
	FormulaAtCoords      []*FormulaAtCoordArchive                   `protobuf:"bytes,3,rep,name=formula_at_coords,json=formulaAtCoords" json:"formula_at_coords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *FormulaCoordPairsByOwnerArchive) Reset()         { *m = FormulaCoordPairsByOwnerArchive{} }
func (m *FormulaCoordPairsByOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaCoordPairsByOwnerArchive) ProtoMessage()    {}
func (*FormulaCoordPairsByOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{69}
}

func (m *FormulaCoordPairsByOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaCoordPairsByOwnerArchive.Unmarshal(m, b)
}
func (m *FormulaCoordPairsByOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaCoordPairsByOwnerArchive.Marshal(b, m, deterministic)
}
func (m *FormulaCoordPairsByOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaCoordPairsByOwnerArchive.Merge(m, src)
}
func (m *FormulaCoordPairsByOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaCoordPairsByOwnerArchive.Size(m)
}
func (m *FormulaCoordPairsByOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaCoordPairsByOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaCoordPairsByOwnerArchive proto.InternalMessageInfo

func (m *FormulaCoordPairsByOwnerArchive) GetOwnerKind() FormulaCoordPairsByOwnerArchive_OwnerKind {
	if m != nil && m.OwnerKind != nil {
		return *m.OwnerKind
	}
	return FormulaCoordPairsByOwnerArchive_Unknown
}

func (m *FormulaCoordPairsByOwnerArchive) GetOwnerUid() *TSP.UUID {
	if m != nil {
		return m.OwnerUid
	}
	return nil
}

func (m *FormulaCoordPairsByOwnerArchive) GetFormulaAtCoords() []*FormulaAtCoordArchive {
	if m != nil {
		return m.FormulaAtCoords
	}
	return nil
}

type FormulasForUndoArchive struct {
	FormulasForOwner     []*FormulaCoordPairsByOwnerArchive `protobuf:"bytes,1,rep,name=formulas_for_owner,json=formulasForOwner" json:"formulas_for_owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *FormulasForUndoArchive) Reset()         { *m = FormulasForUndoArchive{} }
func (m *FormulasForUndoArchive) String() string { return proto.CompactTextString(m) }
func (*FormulasForUndoArchive) ProtoMessage()    {}
func (*FormulasForUndoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{70}
}

func (m *FormulasForUndoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulasForUndoArchive.Unmarshal(m, b)
}
func (m *FormulasForUndoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulasForUndoArchive.Marshal(b, m, deterministic)
}
func (m *FormulasForUndoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulasForUndoArchive.Merge(m, src)
}
func (m *FormulasForUndoArchive) XXX_Size() int {
	return xxx_messageInfo_FormulasForUndoArchive.Size(m)
}
func (m *FormulasForUndoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulasForUndoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulasForUndoArchive proto.InternalMessageInfo

func (m *FormulasForUndoArchive) GetFormulasForOwner() []*FormulaCoordPairsByOwnerArchive {
	if m != nil {
		return m.FormulasForOwner
	}
	return nil
}

type FormulaRewriteCommandArchive struct {
	TableRewriteCommand  *TSP.Reference      `protobuf:"bytes,1,opt,name=table_rewrite_command,json=tableRewriteCommand" json:"table_rewrite_command,omitempty"`
	Super                *TSK.CommandArchive `protobuf:"bytes,2,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FormulaRewriteCommandArchive) Reset()         { *m = FormulaRewriteCommandArchive{} }
func (m *FormulaRewriteCommandArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaRewriteCommandArchive) ProtoMessage()    {}
func (*FormulaRewriteCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{71}
}

func (m *FormulaRewriteCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Unmarshal(m, b)
}
func (m *FormulaRewriteCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Marshal(b, m, deterministic)
}
func (m *FormulaRewriteCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaRewriteCommandArchive.Merge(m, src)
}
func (m *FormulaRewriteCommandArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaRewriteCommandArchive.Size(m)
}
func (m *FormulaRewriteCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaRewriteCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaRewriteCommandArchive proto.InternalMessageInfo

func (m *FormulaRewriteCommandArchive) GetTableRewriteCommand() *TSP.Reference {
	if m != nil {
		return m.TableRewriteCommand
	}
	return nil
}

func (m *FormulaRewriteCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type ExtendTableIDHistoryCommandArchive struct {
	Super                   *TSK.CommandArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	RewriteSpec             *FormulaRewriteSpecArchive  `protobuf:"bytes,2,req,name=rewrite_spec,json=rewriteSpec" json:"rewrite_spec,omitempty"`
	TableUidHistoryRollback *RewriteTableUIDInfoArchive `protobuf:"bytes,3,opt,name=table_uid_history_rollback,json=tableUidHistoryRollback" json:"table_uid_history_rollback,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                    `json:"-"`
	XXX_unrecognized        []byte                      `json:"-"`
	XXX_sizecache           int32                       `json:"-"`
}

func (m *ExtendTableIDHistoryCommandArchive) Reset()         { *m = ExtendTableIDHistoryCommandArchive{} }
func (m *ExtendTableIDHistoryCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ExtendTableIDHistoryCommandArchive) ProtoMessage()    {}
func (*ExtendTableIDHistoryCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{72}
}

func (m *ExtendTableIDHistoryCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtendTableIDHistoryCommandArchive.Unmarshal(m, b)
}
func (m *ExtendTableIDHistoryCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtendTableIDHistoryCommandArchive.Marshal(b, m, deterministic)
}
func (m *ExtendTableIDHistoryCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendTableIDHistoryCommandArchive.Merge(m, src)
}
func (m *ExtendTableIDHistoryCommandArchive) XXX_Size() int {
	return xxx_messageInfo_ExtendTableIDHistoryCommandArchive.Size(m)
}
func (m *ExtendTableIDHistoryCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendTableIDHistoryCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendTableIDHistoryCommandArchive proto.InternalMessageInfo

func (m *ExtendTableIDHistoryCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ExtendTableIDHistoryCommandArchive) GetRewriteSpec() *FormulaRewriteSpecArchive {
	if m != nil {
		return m.RewriteSpec
	}
	return nil
}

func (m *ExtendTableIDHistoryCommandArchive) GetTableUidHistoryRollback() *RewriteTableUIDInfoArchive {
	if m != nil {
		return m.TableUidHistoryRollback
	}
	return nil
}

type NumberTrackedReferencePairArchive struct {
	Number               *uint32        `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	TrackedReference     *TSP.Reference `protobuf:"bytes,2,opt,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NumberTrackedReferencePairArchive) Reset()         { *m = NumberTrackedReferencePairArchive{} }
func (m *NumberTrackedReferencePairArchive) String() string { return proto.CompactTextString(m) }
func (*NumberTrackedReferencePairArchive) ProtoMessage()    {}
func (*NumberTrackedReferencePairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{73}
}

func (m *NumberTrackedReferencePairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Unmarshal(m, b)
}
func (m *NumberTrackedReferencePairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Marshal(b, m, deterministic)
}
func (m *NumberTrackedReferencePairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberTrackedReferencePairArchive.Merge(m, src)
}
func (m *NumberTrackedReferencePairArchive) XXX_Size() int {
	return xxx_messageInfo_NumberTrackedReferencePairArchive.Size(m)
}
func (m *NumberTrackedReferencePairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberTrackedReferencePairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberTrackedReferencePairArchive proto.InternalMessageInfo

func (m *NumberTrackedReferencePairArchive) GetNumber() uint32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *NumberTrackedReferencePairArchive) GetTrackedReference() *TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

type NumberToTrackedReferenceMapArchive struct {
	NumberTrackedReferencePair []*NumberTrackedReferencePairArchive `protobuf:"bytes,1,rep,name=number_tracked_reference_pair,json=numberTrackedReferencePair" json:"number_tracked_reference_pair,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                             `json:"-"`
	XXX_unrecognized           []byte                               `json:"-"`
	XXX_sizecache              int32                                `json:"-"`
}

func (m *NumberToTrackedReferenceMapArchive) Reset()         { *m = NumberToTrackedReferenceMapArchive{} }
func (m *NumberToTrackedReferenceMapArchive) String() string { return proto.CompactTextString(m) }
func (*NumberToTrackedReferenceMapArchive) ProtoMessage()    {}
func (*NumberToTrackedReferenceMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{74}
}

func (m *NumberToTrackedReferenceMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Unmarshal(m, b)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Marshal(b, m, deterministic)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberToTrackedReferenceMapArchive.Merge(m, src)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_Size() int {
	return xxx_messageInfo_NumberToTrackedReferenceMapArchive.Size(m)
}
func (m *NumberToTrackedReferenceMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberToTrackedReferenceMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberToTrackedReferenceMapArchive proto.InternalMessageInfo

func (m *NumberToTrackedReferenceMapArchive) GetNumberTrackedReferencePair() []*NumberTrackedReferencePairArchive {
	if m != nil {
		return m.NumberTrackedReferencePair
	}
	return nil
}

type TrackedReferencesRewriteCommandArchive struct {
	ReferencesInReferenceTracker   *NumberToTrackedReferenceMapArchive `protobuf:"bytes,1,opt,name=references_in_reference_tracker,json=referencesInReferenceTracker" json:"references_in_reference_tracker,omitempty"`       // Deprecated: Do not use.
	OriginalTrackedReferenceCopies *NumberToTrackedReferenceMapArchive `protobuf:"bytes,2,opt,name=original_tracked_reference_copies,json=originalTrackedReferenceCopies" json:"original_tracked_reference_copies,omitempty"` // Deprecated: Do not use.
	RewriteSpec                    *FormulaRewriteSpecArchive          `protobuf:"bytes,3,opt,name=rewrite_spec,json=rewriteSpec" json:"rewrite_spec,omitempty"`
	ReferenceTracker               *TSP.Reference                      `protobuf:"bytes,4,req,name=reference_tracker,json=referenceTracker" json:"reference_tracker,omitempty"`
	Super                          *TSK.CommandArchive                 `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                            `json:"-"`
	XXX_unrecognized               []byte                              `json:"-"`
	XXX_sizecache                  int32                               `json:"-"`
}

func (m *TrackedReferencesRewriteCommandArchive) Reset() {
	*m = TrackedReferencesRewriteCommandArchive{}
}
func (m *TrackedReferencesRewriteCommandArchive) String() string { return proto.CompactTextString(m) }
func (*TrackedReferencesRewriteCommandArchive) ProtoMessage()    {}
func (*TrackedReferencesRewriteCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{75}
}

func (m *TrackedReferencesRewriteCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Unmarshal(m, b)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Marshal(b, m, deterministic)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Merge(m, src)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_Size() int {
	return xxx_messageInfo_TrackedReferencesRewriteCommandArchive.Size(m)
}
func (m *TrackedReferencesRewriteCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackedReferencesRewriteCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TrackedReferencesRewriteCommandArchive proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *TrackedReferencesRewriteCommandArchive) GetReferencesInReferenceTracker() *NumberToTrackedReferenceMapArchive {
	if m != nil {
		return m.ReferencesInReferenceTracker
	}
	return nil
}

// Deprecated: Do not use.
func (m *TrackedReferencesRewriteCommandArchive) GetOriginalTrackedReferenceCopies() *NumberToTrackedReferenceMapArchive {
	if m != nil {
		return m.OriginalTrackedReferenceCopies
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetRewriteSpec() *FormulaRewriteSpecArchive {
	if m != nil {
		return m.RewriteSpec
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetReferenceTracker() *TSP.Reference {
	if m != nil {
		return m.ReferenceTracker
	}
	return nil
}

func (m *TrackedReferencesRewriteCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type TrackedReferenceArchive struct {
	Ast                  *ASTNodeArrayArchive `protobuf:"bytes,1,req,name=ast" json:"ast,omitempty"`
	FormulaId            *uint32              `protobuf:"varint,2,req,name=formula_id,json=formulaId" json:"formula_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TrackedReferenceArchive) Reset()         { *m = TrackedReferenceArchive{} }
func (m *TrackedReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*TrackedReferenceArchive) ProtoMessage()    {}
func (*TrackedReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{76}
}

func (m *TrackedReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackedReferenceArchive.Unmarshal(m, b)
}
func (m *TrackedReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackedReferenceArchive.Marshal(b, m, deterministic)
}
func (m *TrackedReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackedReferenceArchive.Merge(m, src)
}
func (m *TrackedReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_TrackedReferenceArchive.Size(m)
}
func (m *TrackedReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackedReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TrackedReferenceArchive proto.InternalMessageInfo

func (m *TrackedReferenceArchive) GetAst() *ASTNodeArrayArchive {
	if m != nil {
		return m.Ast
	}
	return nil
}

func (m *TrackedReferenceArchive) GetFormulaId() uint32 {
	if m != nil && m.FormulaId != nil {
		return *m.FormulaId
	}
	return 0
}

type ExpandedTrackedReferenceArchive struct {
	Ast                  *ASTNodeArrayArchive `protobuf:"bytes,1,req,name=ast" json:"ast,omitempty"`
	FormulaColumn        *uint32              `protobuf:"varint,2,req,name=formula_column,json=formulaColumn" json:"formula_column,omitempty"`
	FormulaRow           *uint32              `protobuf:"varint,3,req,name=formula_row,json=formulaRow" json:"formula_row,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ExpandedTrackedReferenceArchive) Reset()         { *m = ExpandedTrackedReferenceArchive{} }
func (m *ExpandedTrackedReferenceArchive) String() string { return proto.CompactTextString(m) }
func (*ExpandedTrackedReferenceArchive) ProtoMessage()    {}
func (*ExpandedTrackedReferenceArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{77}
}

func (m *ExpandedTrackedReferenceArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedTrackedReferenceArchive.Unmarshal(m, b)
}
func (m *ExpandedTrackedReferenceArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedTrackedReferenceArchive.Marshal(b, m, deterministic)
}
func (m *ExpandedTrackedReferenceArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedTrackedReferenceArchive.Merge(m, src)
}
func (m *ExpandedTrackedReferenceArchive) XXX_Size() int {
	return xxx_messageInfo_ExpandedTrackedReferenceArchive.Size(m)
}
func (m *ExpandedTrackedReferenceArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedTrackedReferenceArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedTrackedReferenceArchive proto.InternalMessageInfo

func (m *ExpandedTrackedReferenceArchive) GetAst() *ASTNodeArrayArchive {
	if m != nil {
		return m.Ast
	}
	return nil
}

func (m *ExpandedTrackedReferenceArchive) GetFormulaColumn() uint32 {
	if m != nil && m.FormulaColumn != nil {
		return *m.FormulaColumn
	}
	return 0
}

func (m *ExpandedTrackedReferenceArchive) GetFormulaRow() uint32 {
	if m != nil && m.FormulaRow != nil {
		return *m.FormulaRow
	}
	return 0
}

type ReferenceTrackerArchive struct {
	Uuid                              *TSP.CFUUIDArchive                 `protobuf:"bytes,1,req,name=uuid" json:"uuid,omitempty"`
	TrackedReference                  []*TSP.Reference                   `protobuf:"bytes,2,rep,name=tracked_reference,json=trackedReference" json:"tracked_reference,omitempty"` // Deprecated: Do not use.
	ContainedTrackedReference         []*TrackedReferenceArchive         `protobuf:"bytes,3,rep,name=contained_tracked_reference,json=containedTrackedReference" json:"contained_tracked_reference,omitempty"`
	ContainedExpandedTrackedReference []*ExpandedTrackedReferenceArchive `protobuf:"bytes,4,rep,name=contained_expanded_tracked_reference,json=containedExpandedTrackedReference" json:"contained_expanded_tracked_reference,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                           `json:"-"`
	XXX_unrecognized                  []byte                             `json:"-"`
	XXX_sizecache                     int32                              `json:"-"`
}

func (m *ReferenceTrackerArchive) Reset()         { *m = ReferenceTrackerArchive{} }
func (m *ReferenceTrackerArchive) String() string { return proto.CompactTextString(m) }
func (*ReferenceTrackerArchive) ProtoMessage()    {}
func (*ReferenceTrackerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{78}
}

func (m *ReferenceTrackerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceTrackerArchive.Unmarshal(m, b)
}
func (m *ReferenceTrackerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceTrackerArchive.Marshal(b, m, deterministic)
}
func (m *ReferenceTrackerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceTrackerArchive.Merge(m, src)
}
func (m *ReferenceTrackerArchive) XXX_Size() int {
	return xxx_messageInfo_ReferenceTrackerArchive.Size(m)
}
func (m *ReferenceTrackerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceTrackerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceTrackerArchive proto.InternalMessageInfo

func (m *ReferenceTrackerArchive) GetUuid() *TSP.CFUUIDArchive {
	if m != nil {
		return m.Uuid
	}
	return nil
}

// Deprecated: Do not use.
func (m *ReferenceTrackerArchive) GetTrackedReference() []*TSP.Reference {
	if m != nil {
		return m.TrackedReference
	}
	return nil
}

func (m *ReferenceTrackerArchive) GetContainedTrackedReference() []*TrackedReferenceArchive {
	if m != nil {
		return m.ContainedTrackedReference
	}
	return nil
}

func (m *ReferenceTrackerArchive) GetContainedExpandedTrackedReference() []*ExpandedTrackedReferenceArchive {
	if m != nil {
		return m.ContainedExpandedTrackedReference
	}
	return nil
}

type BooleanCellValueArchive struct {
	Value                *bool                    `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	FormatIsExplicit     *bool                    `protobuf:"varint,3,opt,name=format_is_explicit,json=formatIsExplicit,def=0" json:"format_is_explicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BooleanCellValueArchive) Reset()         { *m = BooleanCellValueArchive{} }
func (m *BooleanCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*BooleanCellValueArchive) ProtoMessage()    {}
func (*BooleanCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{79}
}

func (m *BooleanCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanCellValueArchive.Unmarshal(m, b)
}
func (m *BooleanCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanCellValueArchive.Marshal(b, m, deterministic)
}
func (m *BooleanCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanCellValueArchive.Merge(m, src)
}
func (m *BooleanCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_BooleanCellValueArchive.Size(m)
}
func (m *BooleanCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanCellValueArchive proto.InternalMessageInfo

const Default_BooleanCellValueArchive_FormatIsExplicit bool = false

func (m *BooleanCellValueArchive) GetValue() bool {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return false
}

func (m *BooleanCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *BooleanCellValueArchive) GetFormatIsExplicit() bool {
	if m != nil && m.FormatIsExplicit != nil {
		return *m.FormatIsExplicit
	}
	return Default_BooleanCellValueArchive_FormatIsExplicit
}

type DateCellValueArchive struct {
	Value                *float64                 `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,2,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,3,opt,name=format_is_implicit,json=formatIsImplicit" json:"format_is_implicit,omitempty"` // Deprecated: Do not use.
	FormatIsExplicit     *bool                    `protobuf:"varint,4,opt,name=format_is_explicit,json=formatIsExplicit,def=0" json:"format_is_explicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DateCellValueArchive) Reset()         { *m = DateCellValueArchive{} }
func (m *DateCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*DateCellValueArchive) ProtoMessage()    {}
func (*DateCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{80}
}

func (m *DateCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateCellValueArchive.Unmarshal(m, b)
}
func (m *DateCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateCellValueArchive.Marshal(b, m, deterministic)
}
func (m *DateCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateCellValueArchive.Merge(m, src)
}
func (m *DateCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_DateCellValueArchive.Size(m)
}
func (m *DateCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DateCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DateCellValueArchive proto.InternalMessageInfo

const Default_DateCellValueArchive_FormatIsExplicit bool = false

func (m *DateCellValueArchive) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *DateCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

// Deprecated: Do not use.
func (m *DateCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return false
}

func (m *DateCellValueArchive) GetFormatIsExplicit() bool {
	if m != nil && m.FormatIsExplicit != nil {
		return *m.FormatIsExplicit
	}
	return Default_DateCellValueArchive_FormatIsExplicit
}

type NumberCellValueArchive struct {
	Value                *float64                 `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
	UnitIndex            *int32                   `protobuf:"varint,2,opt,name=unit_index,json=unitIndex" json:"unit_index,omitempty"`
	CurrencyCode         *string                  `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,3,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,4,opt,name=format_is_implicit,json=formatIsImplicit" json:"format_is_implicit,omitempty"` // Deprecated: Do not use.
	FormatIsExplicit     *bool                    `protobuf:"varint,6,opt,name=format_is_explicit,json=formatIsExplicit,def=0" json:"format_is_explicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *NumberCellValueArchive) Reset()         { *m = NumberCellValueArchive{} }
func (m *NumberCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*NumberCellValueArchive) ProtoMessage()    {}
func (*NumberCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{81}
}

func (m *NumberCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberCellValueArchive.Unmarshal(m, b)
}
func (m *NumberCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberCellValueArchive.Marshal(b, m, deterministic)
}
func (m *NumberCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberCellValueArchive.Merge(m, src)
}
func (m *NumberCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_NumberCellValueArchive.Size(m)
}
func (m *NumberCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberCellValueArchive proto.InternalMessageInfo

const Default_NumberCellValueArchive_FormatIsExplicit bool = false

func (m *NumberCellValueArchive) GetValue() float64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NumberCellValueArchive) GetUnitIndex() int32 {
	if m != nil && m.UnitIndex != nil {
		return *m.UnitIndex
	}
	return 0
}

func (m *NumberCellValueArchive) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *NumberCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

// Deprecated: Do not use.
func (m *NumberCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return false
}

func (m *NumberCellValueArchive) GetFormatIsExplicit() bool {
	if m != nil && m.FormatIsExplicit != nil {
		return *m.FormatIsExplicit
	}
	return Default_NumberCellValueArchive_FormatIsExplicit
}

type StringCellValueArchive struct {
	Value                *string                  `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,2,req,name=format" json:"format,omitempty"`
	FormatIsImplicit     *bool                    `protobuf:"varint,3,opt,name=format_is_implicit,json=formatIsImplicit" json:"format_is_implicit,omitempty"` // Deprecated: Do not use.
	FormatIsExplicit     *bool                    `protobuf:"varint,4,opt,name=format_is_explicit,json=formatIsExplicit,def=0" json:"format_is_explicit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StringCellValueArchive) Reset()         { *m = StringCellValueArchive{} }
func (m *StringCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*StringCellValueArchive) ProtoMessage()    {}
func (*StringCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{82}
}

func (m *StringCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringCellValueArchive.Unmarshal(m, b)
}
func (m *StringCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringCellValueArchive.Marshal(b, m, deterministic)
}
func (m *StringCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringCellValueArchive.Merge(m, src)
}
func (m *StringCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_StringCellValueArchive.Size(m)
}
func (m *StringCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StringCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StringCellValueArchive proto.InternalMessageInfo

const Default_StringCellValueArchive_FormatIsExplicit bool = false

func (m *StringCellValueArchive) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *StringCellValueArchive) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

// Deprecated: Do not use.
func (m *StringCellValueArchive) GetFormatIsImplicit() bool {
	if m != nil && m.FormatIsImplicit != nil {
		return *m.FormatIsImplicit
	}
	return false
}

func (m *StringCellValueArchive) GetFormatIsExplicit() bool {
	if m != nil && m.FormatIsExplicit != nil {
		return *m.FormatIsExplicit
	}
	return Default_StringCellValueArchive_FormatIsExplicit
}

type ErrorCellValueArchive struct {
	ErrorType            *ErrorCellValueArchive_ErrorType `protobuf:"varint,1,req,name=error_type,json=errorType,enum=TSCE.ErrorCellValueArchive_ErrorType" json:"error_type,omitempty"`
	ExtraInfoInt         *int32                           `protobuf:"varint,3,opt,name=extra_info_int,json=extraInfoInt" json:"extra_info_int,omitempty"`
	ExtraInfoString      *string                          `protobuf:"bytes,4,opt,name=extra_info_string,json=extraInfoString" json:"extra_info_string,omitempty"`
	ExtraInfoDouble      *float64                         `protobuf:"fixed64,5,opt,name=extra_info_double,json=extraInfoDouble" json:"extra_info_double,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ErrorCellValueArchive) Reset()         { *m = ErrorCellValueArchive{} }
func (m *ErrorCellValueArchive) String() string { return proto.CompactTextString(m) }
func (*ErrorCellValueArchive) ProtoMessage()    {}
func (*ErrorCellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{83}
}

func (m *ErrorCellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorCellValueArchive.Unmarshal(m, b)
}
func (m *ErrorCellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorCellValueArchive.Marshal(b, m, deterministic)
}
func (m *ErrorCellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorCellValueArchive.Merge(m, src)
}
func (m *ErrorCellValueArchive) XXX_Size() int {
	return xxx_messageInfo_ErrorCellValueArchive.Size(m)
}
func (m *ErrorCellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorCellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorCellValueArchive proto.InternalMessageInfo

func (m *ErrorCellValueArchive) GetErrorType() ErrorCellValueArchive_ErrorType {
	if m != nil && m.ErrorType != nil {
		return *m.ErrorType
	}
	return ErrorCellValueArchive_UnknownError
}

func (m *ErrorCellValueArchive) GetExtraInfoInt() int32 {
	if m != nil && m.ExtraInfoInt != nil {
		return *m.ExtraInfoInt
	}
	return 0
}

func (m *ErrorCellValueArchive) GetExtraInfoString() string {
	if m != nil && m.ExtraInfoString != nil {
		return *m.ExtraInfoString
	}
	return ""
}

func (m *ErrorCellValueArchive) GetExtraInfoDouble() float64 {
	if m != nil && m.ExtraInfoDouble != nil {
		return *m.ExtraInfoDouble
	}
	return 0
}

type CellValueArchive struct {
	CellValueType        *CellValueArchive_CellValueType `protobuf:"varint,1,req,name=cell_value_type,json=cellValueType,enum=TSCE.CellValueArchive_CellValueType" json:"cell_value_type,omitempty"`
	BooleanValue         *BooleanCellValueArchive        `protobuf:"bytes,2,opt,name=boolean_value,json=booleanValue" json:"boolean_value,omitempty"`
	DateValue            *DateCellValueArchive           `protobuf:"bytes,3,opt,name=date_value,json=dateValue" json:"date_value,omitempty"`
	NumberValue          *NumberCellValueArchive         `protobuf:"bytes,4,opt,name=number_value,json=numberValue" json:"number_value,omitempty"`
	StringValue          *StringCellValueArchive         `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	ErrorValue           *ErrorCellValueArchive          `protobuf:"bytes,6,opt,name=error_value,json=errorValue" json:"error_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CellValueArchive) Reset()         { *m = CellValueArchive{} }
func (m *CellValueArchive) String() string { return proto.CompactTextString(m) }
func (*CellValueArchive) ProtoMessage()    {}
func (*CellValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ffa1b78b626be3, []int{84}
}

func (m *CellValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellValueArchive.Unmarshal(m, b)
}
func (m *CellValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellValueArchive.Marshal(b, m, deterministic)
}
func (m *CellValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellValueArchive.Merge(m, src)
}
func (m *CellValueArchive) XXX_Size() int {
	return xxx_messageInfo_CellValueArchive.Size(m)
}
func (m *CellValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellValueArchive proto.InternalMessageInfo

func (m *CellValueArchive) GetCellValueType() CellValueArchive_CellValueType {
	if m != nil && m.CellValueType != nil {
		return *m.CellValueType
	}
	return CellValueArchive_NIL_TYPE
}

func (m *CellValueArchive) GetBooleanValue() *BooleanCellValueArchive {
	if m != nil {
		return m.BooleanValue
	}
	return nil
}

func (m *CellValueArchive) GetDateValue() *DateCellValueArchive {
	if m != nil {
		return m.DateValue
	}
	return nil
}

func (m *CellValueArchive) GetNumberValue() *NumberCellValueArchive {
	if m != nil {
		return m.NumberValue
	}
	return nil
}

func (m *CellValueArchive) GetStringValue() *StringCellValueArchive {
	if m != nil {
		return m.StringValue
	}
	return nil
}

func (m *CellValueArchive) GetErrorValue() *ErrorCellValueArchive {
	if m != nil {
		return m.ErrorValue
	}
	return nil
}

func init() {
	proto.RegisterEnum("TSCE.CategoryAggType", CategoryAggType_name, CategoryAggType_value)
	proto.RegisterEnum("TSCE.ReferenceArchive_ReferenceType", ReferenceArchive_ReferenceType_name, ReferenceArchive_ReferenceType_value)
	proto.RegisterEnum("TSCE.SpanningDependenciesArchive_RangeContext", SpanningDependenciesArchive_RangeContext_name, SpanningDependenciesArchive_RangeContext_value)
	proto.RegisterEnum("TSCE.SpanningDependenciesExpandedArchive_RangeContext", SpanningDependenciesExpandedArchive_RangeContext_name, SpanningDependenciesExpandedArchive_RangeContext_value)
	proto.RegisterEnum("TSCE.CellErrorsArchive_ErrorFlavor", CellErrorsArchive_ErrorFlavor_name, CellErrorsArchive_ErrorFlavor_value)
	proto.RegisterEnum("TSCE.FormulaOwnerDependenciesArchive_OwnerKind", FormulaOwnerDependenciesArchive_OwnerKind_name, FormulaOwnerDependenciesArchive_OwnerKind_value)
	proto.RegisterEnum("TSCE.CalculationEngineArchive_ExcelImportDateMode", CalculationEngineArchive_ExcelImportDateMode_name, CalculationEngineArchive_ExcelImportDateMode_value)
	proto.RegisterEnum("TSCE.ASTNodeArrayArchive_ASTNodeType", ASTNodeArrayArchive_ASTNodeType_name, ASTNodeArrayArchive_ASTNodeType_value)
	proto.RegisterEnum("TSCE.ASTNodeArrayArchive_ASTUidTractPurpose", ASTNodeArrayArchive_ASTUidTractPurpose_name, ASTNodeArrayArchive_ASTUidTractPurpose_value)
	proto.RegisterEnum("TSCE.GroupByChangeArchive_ChangeType", GroupByChangeArchive_ChangeType_name, GroupByChangeArchive_ChangeType_value)
	proto.RegisterEnum("TSCE.FormulaRewriteSpecArchive_RewriteType", FormulaRewriteSpecArchive_RewriteType_name, FormulaRewriteSpecArchive_RewriteType_value)
	proto.RegisterEnum("TSCE.FormulaCoordPairsByOwnerArchive_OwnerKind", FormulaCoordPairsByOwnerArchive_OwnerKind_name, FormulaCoordPairsByOwnerArchive_OwnerKind_value)
	proto.RegisterEnum("TSCE.ErrorCellValueArchive_ErrorType", ErrorCellValueArchive_ErrorType_name, ErrorCellValueArchive_ErrorType_value)
	proto.RegisterEnum("TSCE.CellValueArchive_CellValueType", CellValueArchive_CellValueType_name, CellValueArchive_CellValueType_value)
	proto.RegisterType((*CellReferenceArchive)(nil), "TSCE.CellReferenceArchive")
	proto.RegisterType((*InternalCellReferenceArchive)(nil), "TSCE.InternalCellReferenceArchive")
	proto.RegisterType((*RangeReferenceArchive)(nil), "TSCE.RangeReferenceArchive")
	proto.RegisterType((*InternalRangeReferenceArchive)(nil), "TSCE.InternalRangeReferenceArchive")
	proto.RegisterType((*IndexSetArchive)(nil), "TSCE.IndexSetArchive")
	proto.RegisterType((*IndexSetArchive_IndexSetEntry)(nil), "TSCE.IndexSetArchive.IndexSetEntry")
	proto.RegisterType((*CellCoordSetArchive)(nil), "TSCE.CellCoordSetArchive")
	proto.RegisterType((*CellCoordSetArchive_ColumnEntry)(nil), "TSCE.CellCoordSetArchive.ColumnEntry")
	proto.RegisterType((*InternalCellRefSetArchive)(nil), "TSCE.InternalCellRefSetArchive")
	proto.RegisterType((*InternalCellRefSetArchive_OwnerEntry)(nil), "TSCE.InternalCellRefSetArchive.OwnerEntry")
	proto.RegisterType((*ReferenceArchive)(nil), "TSCE.ReferenceArchive")
	proto.RegisterType((*EdgeArchive)(nil), "TSCE.EdgeArchive")
	proto.RegisterType((*EdgesArchive)(nil), "TSCE.EdgesArchive")
	proto.RegisterType((*ExpandedEdgesArchive)(nil), "TSCE.ExpandedEdgesArchive")
	proto.RegisterType((*CellRecordArchive)(nil), "TSCE.CellRecordArchive")
	proto.RegisterType((*CellDependenciesArchive)(nil), "TSCE.CellDependenciesArchive")
	proto.RegisterType((*CellRecordExpandedArchive)(nil), "TSCE.CellRecordExpandedArchive")
	proto.RegisterType((*CellDependenciesExpandedArchive)(nil), "TSCE.CellDependenciesExpandedArchive")
	proto.RegisterType((*VolatileDependenciesArchive)(nil), "TSCE.VolatileDependenciesArchive")
	proto.RegisterType((*VolatileDependenciesExpandedArchive)(nil), "TSCE.VolatileDependenciesExpandedArchive")
	proto.RegisterType((*RangeBackDependencyArchive)(nil), "TSCE.RangeBackDependencyArchive")
	proto.RegisterType((*RTreeInternalNodeContentsArchive)(nil), "TSCE.RTreeInternalNodeContentsArchive")
	proto.RegisterType((*RTreeLeafNodeContentsArchive)(nil), "TSCE.RTreeLeafNodeContentsArchive")
	proto.RegisterType((*RTreeNodeArchive)(nil), "TSCE.RTreeNodeArchive")
	proto.RegisterType((*RTreeArchive)(nil), "TSCE.RTreeArchive")
	proto.RegisterType((*RangeDependenciesArchive)(nil), "TSCE.RangeDependenciesArchive")
	proto.RegisterType((*SpanningDependenciesArchive)(nil), "TSCE.SpanningDependenciesArchive")
	proto.RegisterType((*SpanningDependenciesArchive_ReferringColumnToLocalCells)(nil), "TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells")
	proto.RegisterType((*SpanningDependenciesArchive_ReferringColumnToRemoteCells)(nil), "TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells")
	proto.RegisterType((*SpanningDependenciesExpandedArchive)(nil), "TSCE.SpanningDependenciesExpandedArchive")
	proto.RegisterType((*SpanningDependenciesExpandedArchive_ExtentRange)(nil), "TSCE.SpanningDependenciesExpandedArchive.ExtentRange")
	proto.RegisterType((*SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContext)(nil), "TSCE.SpanningDependenciesExpandedArchive.ExtentRangeWithTableWithContext")
	proto.RegisterType((*SpanningDependenciesExpandedArchive_CellCoordRefersToExtents)(nil), "TSCE.SpanningDependenciesExpandedArchive.CellCoordRefersToExtents")
	proto.RegisterType((*WholeOwnerDependenciesArchive)(nil), "TSCE.WholeOwnerDependenciesArchive")
	proto.RegisterType((*WholeOwnerDependenciesExpandedArchive)(nil), "TSCE.WholeOwnerDependenciesExpandedArchive")
	proto.RegisterType((*CellErrorsArchive)(nil), "TSCE.CellErrorsArchive")
	proto.RegisterType((*CellErrorsArchive_ErrorForCell)(nil), "TSCE.CellErrorsArchive.ErrorForCell")
	proto.RegisterType((*FormulaOwnerDependenciesArchive)(nil), "TSCE.FormulaOwnerDependenciesArchive")
	proto.RegisterType((*FormulaOwnerInfoArchive)(nil), "TSCE.FormulaOwnerInfoArchive")
	proto.RegisterType((*OwnerIDMapArchive)(nil), "TSCE.OwnerIDMapArchive")
	proto.RegisterType((*OwnerIDMapArchive_OwnerIDMapArchiveEntry)(nil), "TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry")
	proto.RegisterType((*DependencyTrackerArchive)(nil), "TSCE.DependencyTrackerArchive")
	proto.RegisterType((*RemoteDataSpecifierArchive)(nil), "TSCE.RemoteDataSpecifierArchive")
	proto.RegisterType((*RemoteDataValueMapArchive)(nil), "TSCE.RemoteDataValueMapArchive")
	proto.RegisterType((*RemoteDataValueMapArchive_RemoteDataMapEntry)(nil), "TSCE.RemoteDataValueMapArchive.RemoteDataMapEntry")
	proto.RegisterType((*StockArchive)(nil), "TSCE.StockArchive")
	proto.RegisterType((*StockArchive_AttributeEntry)(nil), "TSCE.StockArchive.AttributeEntry")
	proto.RegisterType((*RemoteDataStoreArchive)(nil), "TSCE.RemoteDataStoreArchive")
	proto.RegisterType((*NameTrackedReferencePair)(nil), "TSCE.NameTrackedReferencePair")
	proto.RegisterType((*NamesByTrackedReferenceArchive)(nil), "TSCE.NamesByTrackedReferenceArchive")
	proto.RegisterType((*NamedReferenceManagerArchive)(nil), "TSCE.NamedReferenceManagerArchive")
	proto.RegisterType((*UuidSetStoreArchive)(nil), "TSCE.UuidSetStoreArchive")
	proto.RegisterType((*UuidSetStoreArchive_UuidSet)(nil), "TSCE.UuidSetStoreArchive.UuidSet")
	proto.RegisterType((*UuidReferenceMapArchive)(nil), "TSCE.UuidReferenceMapArchive")
	proto.RegisterType((*UuidReferenceMapArchive_CellRefsForUuid)(nil), "TSCE.UuidReferenceMapArchive.CellRefsForUuid")
	proto.RegisterType((*GroupByNodeMapArchive)(nil), "TSCE.GroupByNodeMapArchive")
	proto.RegisterType((*GroupByNodeMapArchive_CellRefsForGroupNode)(nil), "TSCE.GroupByNodeMapArchive.CellRefsForGroupNode")
	proto.RegisterType((*GroupByNodeMapArchive_GroupNodesForGroupBy)(nil), "TSCE.GroupByNodeMapArchive.GroupNodesForGroupBy")
	proto.RegisterType((*CalculationEngineArchive)(nil), "TSCE.CalculationEngineArchive")
	proto.RegisterType((*PreserveColumnRowFlagsArchive)(nil), "TSCE.PreserveColumnRowFlagsArchive")
	proto.RegisterType((*CategoryReferenceArchive)(nil), "TSCE.CategoryReferenceArchive")
	proto.RegisterType((*CategoryReferenceArchive_CatRefUidList)(nil), "TSCE.CategoryReferenceArchive.CatRefUidList")
	proto.RegisterType((*ASTNodeArrayArchive)(nil), "TSCE.ASTNodeArrayArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTColumnCoordinateArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTRowCoordinateArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTUidList)(nil), "TSCE.ASTNodeArrayArchive.ASTUidList")
	proto.RegisterType((*ASTNodeArrayArchive_ASTUidTract)(nil), "TSCE.ASTNodeArrayArchive.ASTUidTract")
	proto.RegisterType((*ASTNodeArrayArchive_ASTStickyBits)(nil), "TSCE.ASTNodeArrayArchive.ASTStickyBits")
	proto.RegisterType((*ASTNodeArrayArchive_ASTUidTractList)(nil), "TSCE.ASTNodeArrayArchive.ASTUidTractList")
	proto.RegisterType((*ASTNodeArrayArchive_ASTUidCoordinateArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTUidCoordinateArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTCategoryReferenceArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTCategoryReferenceArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTColonTractArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTColonTractArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive")
	proto.RegisterType((*ASTNodeArrayArchive_ASTLetNodeWhitespace)(nil), "TSCE.ASTNodeArrayArchive.ASTLetNodeWhitespace")
	proto.RegisterType((*ASTNodeArrayArchive_ASTNodeArchive)(nil), "TSCE.ASTNodeArrayArchive.ASTNodeArchive")
	proto.RegisterType((*FormulaTranslationFlagsArchive)(nil), "TSCE.FormulaTranslationFlagsArchive")
	proto.RegisterType((*FormulaArchive)(nil), "TSCE.FormulaArchive")
	proto.RegisterType((*FunctorArchive)(nil), "TSCE.FunctorArchive")
	proto.RegisterType((*FormatStructArchive)(nil), "TSCE.FormatStructArchive")
	proto.RegisterType((*RangeCoordinateArchive)(nil), "TSCE.RangeCoordinateArchive")
	proto.RegisterType((*TableTransposeInfoArchive)(nil), "TSCE.TableTransposeInfoArchive")
	proto.RegisterType((*MergeOriginMovedArchive)(nil), "TSCE.MergeOriginMovedArchive")
	proto.RegisterType((*OwnerUIDMapperArchive)(nil), "TSCE.OwnerUIDMapperArchive")
	proto.RegisterType((*RewriteTableUIDInfoArchive)(nil), "TSCE.RewriteTableUIDInfoArchive")
	proto.RegisterType((*RewriteTableUIDInfoArchive_TableUIDMapEntryArchive)(nil), "TSCE.RewriteTableUIDInfoArchive.TableUIDMapEntryArchive")
	proto.RegisterType((*GroupByChangeArchive)(nil), "TSCE.GroupByChangeArchive")
	proto.RegisterType((*RewriteGroupNodeUIDInfoArchive)(nil), "TSCE.RewriteGroupNodeUIDInfoArchive")
	proto.RegisterType((*IndexedUidsArchive)(nil), "TSCE.IndexedUidsArchive")
	proto.RegisterType((*IndexedUidsArchive_IndexedUid)(nil), "TSCE.IndexedUidsArchive.IndexedUid")
	proto.RegisterType((*RewriteRangeEntryArchive)(nil), "TSCE.RewriteRangeEntryArchive")
	proto.RegisterType((*ColumnOrRowUuidsInfoArchive)(nil), "TSCE.ColumnOrRowUuidsInfoArchive")
	proto.RegisterType((*RegionInfoArchive)(nil), "TSCE.RegionInfoArchive")
	proto.RegisterType((*RegionMovedInfoArchive)(nil), "TSCE.RegionMovedInfoArchive")
	proto.RegisterType((*MergeSourceArchive)(nil), "TSCE.MergeSourceArchive")
	proto.RegisterType((*FormulaRewriteSpecArchive)(nil), "TSCE.FormulaRewriteSpecArchive")
	proto.RegisterType((*CellCoordinateArchive)(nil), "TSCE.CellCoordinateArchive")
	proto.RegisterType((*CellCoordinateVectorArchive)(nil), "TSCE.CellCoordinateVectorArchive")
	proto.RegisterType((*ExpandedCellRefObjectPairArchive)(nil), "TSCE.ExpandedCellRefObjectPairArchive")
	proto.RegisterType((*ExpandedCellRefObjectMapArchive)(nil), "TSCE.ExpandedCellRefObjectMapArchive")
	proto.RegisterType((*FormulaAtCoordArchive)(nil), "TSCE.FormulaAtCoordArchive")
	proto.RegisterType((*FormulaCoordPairsByOwnerArchive)(nil), "TSCE.FormulaCoordPairsByOwnerArchive")
	proto.RegisterType((*FormulasForUndoArchive)(nil), "TSCE.FormulasForUndoArchive")
	proto.RegisterType((*FormulaRewriteCommandArchive)(nil), "TSCE.FormulaRewriteCommandArchive")
	proto.RegisterType((*ExtendTableIDHistoryCommandArchive)(nil), "TSCE.ExtendTableIDHistoryCommandArchive")
	proto.RegisterType((*NumberTrackedReferencePairArchive)(nil), "TSCE.NumberTrackedReferencePairArchive")
	proto.RegisterType((*NumberToTrackedReferenceMapArchive)(nil), "TSCE.NumberToTrackedReferenceMapArchive")
	proto.RegisterType((*TrackedReferencesRewriteCommandArchive)(nil), "TSCE.TrackedReferencesRewriteCommandArchive")
	proto.RegisterType((*TrackedReferenceArchive)(nil), "TSCE.TrackedReferenceArchive")
	proto.RegisterType((*ExpandedTrackedReferenceArchive)(nil), "TSCE.ExpandedTrackedReferenceArchive")
	proto.RegisterType((*ReferenceTrackerArchive)(nil), "TSCE.ReferenceTrackerArchive")
	proto.RegisterType((*BooleanCellValueArchive)(nil), "TSCE.BooleanCellValueArchive")
	proto.RegisterType((*DateCellValueArchive)(nil), "TSCE.DateCellValueArchive")
	proto.RegisterType((*NumberCellValueArchive)(nil), "TSCE.NumberCellValueArchive")
	proto.RegisterType((*StringCellValueArchive)(nil), "TSCE.StringCellValueArchive")
	proto.RegisterType((*ErrorCellValueArchive)(nil), "TSCE.ErrorCellValueArchive")
	proto.RegisterType((*CellValueArchive)(nil), "TSCE.CellValueArchive")
}

func init() { proto.RegisterFile("TSCEArchives.proto", fileDescriptor_18ffa1b78b626be3) }

var fileDescriptor_18ffa1b78b626be3 = []byte{
	// 10685 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x7d, 0x5b, 0x6c, 0x23, 0x49,
	0x92, 0xd8, 0x96, 0xa8, 0x17, 0x83, 0xa4, 0x44, 0xa5, 0x5e, 0x14, 0xd5, 0xea, 0x47, 0x75, 0xf7,
	0x4c, 0xcf, 0xab, 0x67, 0xa6, 0xe7, 0xb5, 0x33, 0xb3, 0xb3, 0x33, 0x14, 0x59, 0x52, 0x73, 0x86,
	0x22, 0xb5, 0x49, 0xaa, 0xfb, 0x7a, 0x6f, 0x67, 0x6b, 0x4b, 0x64, 0x49, 0x5d, 0xdb, 0x64, 0x15,
	0xb7, 0xaa, 0xd8, 0x6a, 0x8d, 0x7f, 0x7c, 0x6b, 0xd8, 0xf0, 0xc1, 0x38, 0xdc, 0x19, 0x06, 0x0c,
	0xff, 0xdc, 0xdd, 0x8f, 0xd7, 0xb0, 0x7d, 0xf0, 0x7e, 0x9c, 0xed, 0x35, 0x60, 0x1b, 0x86, 0x5f,
	0x07, 0xfb, 0xe7, 0x00, 0x63, 0x61, 0x03, 0x7e, 0x1b, 0xf0, 0xcf, 0x1a, 0xf7, 0x61, 0x03, 0x06,
	0xee, 0x00, 0xff, 0x19, 0x19, 0x99, 0x55, 0x95, 0x55, 0x2c, 0x52, 0xea, 0x99, 0x1b, 0xfb, 0xee,
	0x8f, 0x15, 0x19, 0x11, 0x19, 0x19, 0x99, 0x19, 0x19, 0x19, 0x19, 0x99, 0x04, 0xd2, 0x69, 0x57,
	0xb5, 0x8a, 0xdb, 0x7d, 0x6c, 0x3d, 0x35, 0xbd, 0xbb, 0x43, 0xd7, 0xf1, 0x1d, 0x32, 0xcb, 0x60,
	0xe5, 0x95, 0x4e, 0xfb, 0xf0, 0xc0, 0xf4, 0x3c, 0xe3, 0x34, 0x28, 0x60, 0xa0, 0xcf, 0xe2, 0xb8,
	0xaa, 0x03, 0x6b, 0x55, 0xb3, 0xdf, 0xa7, 0xe6, 0x89, 0xe9, 0x9a, 0x76, 0xd7, 0x14, 0xc5, 0x64,
	0x03, 0xe6, 0xbb, 0x4e, 0x7f, 0x34, 0xb0, 0x4b, 0xca, 0xf5, 0x99, 0x3b, 0x05, 0x2a, 0xbe, 0x48,
	0x11, 0x32, 0xae, 0x73, 0x56, 0x9a, 0x41, 0x20, 0xfb, 0x49, 0x5e, 0x83, 0x45, 0xdf, 0x38, 0xee,
	0x9b, 0xba, 0xd5, 0x2b, 0x65, 0xae, 0xcf, 0xdc, 0xc9, 0xdd, 0x23, 0x77, 0x3b, 0xed, 0xc3, 0xbb,
	0xd5, 0xbd, 0xa3, 0xa3, 0x7a, 0x4d, 0xf0, 0xa3, 0x0b, 0x88, 0x53, 0xef, 0xa9, 0x4f, 0xe1, 0x4a,
	0xdd, 0xf6, 0x4d, 0xd7, 0x36, 0xfa, 0xa9, 0x15, 0x7f, 0x08, 0xd0, 0x75, 0x1c, 0xb7, 0x67, 0xd9,
	0x86, 0x6f, 0x62, 0xe5, 0xb9, 0x7b, 0xdb, 0x77, 0x59, 0x8b, 0xee, 0x32, 0xfc, 0x6a, 0x58, 0x16,
	0x70, 0x96, 0xd0, 0xc9, 0x16, 0x2c, 0x3a, 0x67, 0xb6, 0xe9, 0x32, 0x59, 0xb8, 0x88, 0x0b, 0xf8,
	0x5d, 0xef, 0xa9, 0x7f, 0xa0, 0xc0, 0x3a, 0x35, 0xec, 0x53, 0x73, 0xac, 0x46, 0xb9, 0x01, 0xca,
	0x85, 0x0d, 0x20, 0x2f, 0xc0, 0xb2, 0xef, 0x0c, 0xf5, 0xbe, 0x79, 0xe2, 0xeb, 0x42, 0x45, 0xbc,
	0xaa, 0x82, 0xef, 0x0c, 0x1b, 0xe6, 0x89, 0x5f, 0xe5, 0x9a, 0xba, 0x0e, 0xf9, 0x10, 0x8f, 0xa9,
	0x2c, 0x83, 0x48, 0x20, 0x90, 0xa8, 0x73, 0x46, 0xee, 0xc2, 0xea, 0xb1, 0xe3, 0xfb, 0xce, 0x40,
	0x77, 0xad, 0xd3, 0xc7, 0x21, 0xb7, 0x59, 0x44, 0x5c, 0xe1, 0x45, 0x94, 0x95, 0x08, 0x8e, 0x77,
	0xa0, 0x18, 0xc3, 0x67, 0x5c, 0xe7, 0x10, 0x79, 0x49, 0x42, 0xa6, 0xce, 0x99, 0x6a, 0xc3, 0x4e,
	0xa0, 0xe4, 0xf4, 0x36, 0xcb, 0x8a, 0x52, 0x62, 0x8a, 0x22, 0xf7, 0x60, 0xce, 0x65, 0x34, 0xd8,
	0xaa, 0xdc, 0xbd, 0x2b, 0x5c, 0xf7, 0xc8, 0x66, 0x5c, 0xf9, 0x1c, 0x55, 0xfd, 0x6d, 0x05, 0x96,
	0xeb, 0x76, 0xcf, 0x7c, 0xd6, 0x36, 0xfd, 0xa0, 0x8a, 0x8f, 0x60, 0xc1, 0xb4, 0x7d, 0xd7, 0x32,
	0xbd, 0x92, 0x72, 0x3d, 0x73, 0x27, 0x77, 0xef, 0x26, 0xe7, 0x94, 0xc0, 0x0b, 0xbf, 0x35, 0xdb,
	0x77, 0xcf, 0x69, 0x40, 0x53, 0x3e, 0x80, 0x42, 0xac, 0x84, 0x5c, 0x83, 0x1c, 0x56, 0xa6, 0x1f,
	0x9b, 0xa7, 0x16, 0x1f, 0x96, 0x73, 0x14, 0x10, 0xb4, 0xcb, 0x20, 0x64, 0x1b, 0xb2, 0x1c, 0xc1,
	0xb4, 0x59, 0xef, 0x2b, 0x77, 0xe6, 0xe8, 0x22, 0x02, 0x34, 0xbb, 0xa7, 0xfe, 0x43, 0x05, 0x56,
	0xc3, 0xf1, 0x23, 0x49, 0xd9, 0x80, 0x25, 0xae, 0x76, 0x3d, 0x2e, 0xec, 0xed, 0xc4, 0x90, 0x93,
	0x04, 0xe6, 0xbd, 0xc1, 0xc5, 0x2d, 0x74, 0xc3, 0x0f, 0x26, 0xf4, 0x11, 0xe4, 0xa4, 0xd2, 0x89,
	0x93, 0xe8, 0x2e, 0x2c, 0xb8, 0xce, 0x99, 0xee, 0x99, 0xbe, 0x50, 0xf2, 0x7a, 0xaa, 0x6a, 0xe8,
	0xbc, 0xeb, 0x9c, 0xb5, 0x4d, 0x5f, 0xfd, 0x7d, 0x05, 0xb6, 0x12, 0x93, 0x46, 0x6a, 0x42, 0x0b,
	0x0a, 0xbc, 0x2f, 0xe3, 0x2d, 0x78, 0x39, 0xe0, 0x39, 0x81, 0xee, 0x6e, 0x8b, 0x11, 0xf1, 0x66,
	0xe4, 0x9d, 0xe0, 0x37, 0x6b, 0x85, 0x0e, 0x10, 0x95, 0x4d, 0x1b, 0x2a, 0xef, 0x42, 0x16, 0x27,
	0x9f, 0xd4, 0x92, 0xad, 0x89, 0x7a, 0xa3, 0x8b, 0x5d, 0x01, 0x50, 0xff, 0xc1, 0x0c, 0x14, 0xc7,
	0x86, 0xe4, 0x67, 0xb0, 0xe4, 0x06, 0x30, 0xdd, 0x3f, 0x1f, 0xf2, 0xc9, 0xbf, 0x74, 0xef, 0x96,
	0x18, 0x80, 0x09, 0xfc, 0x08, 0xd0, 0x39, 0x1f, 0x9a, 0xb4, 0xe0, 0xca, 0x9f, 0xa4, 0x02, 0x4b,
	0x5d, 0xb3, 0xdf, 0xd7, 0x43, 0x28, 0x0e, 0x88, 0xdc, 0xbd, 0x72, 0x24, 0x5e, 0x92, 0x21, 0x2d,
	0x74, 0x65, 0x28, 0xa9, 0xc1, 0x32, 0x1f, 0x4e, 0x11, 0x8f, 0x0c, 0xf2, 0xd8, 0x96, 0x66, 0xc4,
	0x18, 0x93, 0x25, 0x37, 0x06, 0x56, 0x0f, 0xa0, 0x10, 0x13, 0x94, 0x10, 0x58, 0xaa, 0x6a, 0x8d,
	0x86, 0x4e, 0xb5, 0x3d, 0x8d, 0x6a, 0xcd, 0xaa, 0x56, 0x54, 0xc8, 0x2a, 0x2c, 0xd3, 0x4a, 0x73,
	0x5f, 0x93, 0x80, 0x33, 0x0c, 0xd8, 0xac, 0x1c, 0x68, 0x7a, 0x4d, 0x3b, 0xd4, 0x9a, 0x35, 0xad,
	0x59, 0x7d, 0x54, 0xcc, 0xa8, 0xbf, 0xaa, 0x40, 0x4e, 0xeb, 0x9d, 0x7e, 0x09, 0x33, 0x7d, 0x03,
	0xf2, 0x96, 0xa7, 0x0f, 0x5d, 0xb3, 0x6b, 0xf6, 0x4c, 0xdb, 0x47, 0x73, 0xb4, 0x48, 0x73, 0x96,
	0x77, 0x18, 0x80, 0x98, 0x21, 0x0c, 0x7b, 0x7a, 0x16, 0x9b, 0x9a, 0x6a, 0x08, 0x03, 0x8b, 0xfa,
	0x7f, 0x14, 0xc8, 0x33, 0x59, 0xbc, 0x40, 0x98, 0xf7, 0x61, 0x6b, 0x68, 0x74, 0x9f, 0x98, 0x3d,
	0xdd, 0xec, 0x9d, 0x9a, 0xfa, 0x99, 0xe5, 0x3f, 0x76, 0x46, 0xbe, 0x8e, 0xf8, 0xa5, 0xec, 0xf5,
	0xcc, 0x9d, 0x02, 0xdd, 0xe0, 0x08, 0x8c, 0xec, 0x21, 0x2f, 0xc6, 0x91, 0x46, 0xde, 0x82, 0x8d,
	0x24, 0xa9, 0xa0, 0x03, 0xa4, 0x5b, 0x8d, 0xd3, 0x71, 0xa2, 0x8f, 0x60, 0x25, 0x90, 0x57, 0x3f,
	0x71, 0x5c, 0x24, 0x2d, 0xe5, 0x70, 0xf0, 0xa7, 0x09, 0xbe, 0x24, 0x04, 0xdf, 0x73, 0x5c, 0xc6,
	0x87, 0x7c, 0x00, 0x65, 0x4b, 0x4c, 0x0e, 0x7d, 0x9c, 0x4f, 0x9e, 0xcb, 0x1b, 0x60, 0xb4, 0x62,
	0xb4, 0xea, 0x4f, 0x67, 0x60, 0x4d, 0x7b, 0x36, 0x34, 0xec, 0x1e, 0x17, 0x2a, 0xd4, 0xc1, 0x3b,
	0xb0, 0x39, 0xde, 0x78, 0x66, 0xa9, 0xf9, 0xb4, 0x2c, 0xd0, 0x35, 0x33, 0xd1, 0x76, 0xea, 0x9c,
	0x79, 0xe4, 0x43, 0x28, 0xa7, 0x90, 0xf1, 0xce, 0xf4, 0x4a, 0x33, 0x48, 0xb9, 0x99, 0xa4, 0xe4,
	0xa6, 0xc6, 0x23, 0xaf, 0xc3, 0x5a, 0x42, 0x6b, 0xbc, 0xc2, 0x0c, 0x92, 0xad, 0x98, 0xb2, 0xd2,
	0xb0, 0x36, 0x59, 0xc8, 0x44, 0x55, 0xb3, 0x71, 0x21, 0x63, 0xf5, 0x4c, 0x57, 0xd8, 0xdc, 0x54,
	0x85, 0xfd, 0x6c, 0x16, 0x56, 0xf8, 0xac, 0xeb, 0x3a, 0x6e, 0xef, 0xf9, 0x87, 0x6f, 0x1d, 0xae,
	0xf7, 0x2c, 0xd7, 0x3f, 0xd7, 0x3d, 0xb3, 0x7f, 0xa2, 0x0f, 0xfb, 0x23, 0x69, 0x2c, 0x7b, 0x7a,
	0xd7, 0x19, 0xe1, 0x90, 0x56, 0xee, 0xcc, 0x7e, 0xa0, 0xbc, 0x41, 0xaf, 0x20, 0x6a, 0xdb, 0xec,
	0x9f, 0x1c, 0xf6, 0x47, 0xd1, 0x00, 0xf7, 0xaa, 0x0c, 0x8d, 0xdc, 0x81, 0x82, 0xe5, 0xe9, 0x96,
	0xad, 0x1b, 0x7a, 0xf7, 0xbc, 0xdb, 0x37, 0x71, 0xac, 0x2f, 0x7e, 0x30, 0x77, 0x62, 0xf4, 0x3d,
	0x93, 0x82, 0xe5, 0xd5, 0xed, 0x4a, 0x95, 0x15, 0x90, 0x97, 0x60, 0x36, 0x6c, 0x5a, 0xee, 0xde,
	0x0a, 0x9f, 0xf7, 0xd2, 0xf4, 0xdb, 0x9d, 0x29, 0x29, 0x14, 0x51, 0xc8, 0x3d, 0x20, 0x5d, 0xc7,
	0xf6, 0x0d, 0xcb, 0xf6, 0x74, 0x83, 0x29, 0x65, 0x30, 0xea, 0x1b, 0xa5, 0x79, 0xe4, 0x3c, 0xeb,
	0xbb, 0x23, 0x93, 0x16, 0x83, 0xf2, 0xca, 0x1e, 0x2f, 0x25, 0x15, 0xd8, 0x7a, 0x6c, 0x78, 0x7a,
	0xd7, 0xe8, 0x77, 0x47, 0x7d, 0xc3, 0x37, 0x7b, 0x52, 0x93, 0x4a, 0x0b, 0xb2, 0x50, 0x9b, 0x8f,
	0x0d, 0xaf, 0x1a, 0xa2, 0x45, 0x0d, 0x22, 0x0f, 0xe1, 0x66, 0x48, 0x2e, 0x2b, 0xc4, 0xb1, 0x75,
	0xdb, 0x7c, 0xe6, 0xeb, 0xae, 0xc9, 0x8a, 0x4b, 0x8b, 0x12, 0x33, 0x14, 0xfa, 0x5a, 0x48, 0x15,
	0x31, 0x6b, 0xd9, 0x4d, 0xf3, 0x99, 0x4f, 0x91, 0x82, 0x7c, 0x0e, 0x2f, 0xf9, 0xae, 0x61, 0x7b,
	0xc8, 0x18, 0xfb, 0xf8, 0x59, 0xd7, 0xec, 0xeb, 0xd6, 0x60, 0xe8, 0xb8, 0x7e, 0x92, 0x3d, 0xc8,
	0xb2, 0xde, 0x0c, 0xe9, 0x58, 0xdf, 0x33, 0xaa, 0x3a, 0x12, 0xc5, 0xd8, 0xdf, 0x81, 0x39, 0xa6,
	0x36, 0xaf, 0x94, 0x0d, 0xed, 0x8c, 0x50, 0xad, 0x17, 0xba, 0x16, 0x88, 0xa0, 0xfe, 0x19, 0xd8,
	0x64, 0xe3, 0xa6, 0x66, 0x0e, 0x4d, 0xbb, 0x67, 0xda, 0x5d, 0x2b, 0x9a, 0x6b, 0xdf, 0x84, 0x9c,
	0x30, 0xf2, 0x6c, 0x4c, 0x89, 0x65, 0x6f, 0x53, 0xb6, 0xf0, 0xd2, 0x58, 0xa3, 0xd0, 0x0d, 0x41,
	0xcc, 0x87, 0xb3, 0x47, 0x03, 0x9d, 0x8f, 0x28, 0x06, 0xf7, 0x70, 0x7d, 0x28, 0xd0, 0x82, 0x3d,
	0x1a, 0xd4, 0x18, 0x94, 0xd1, 0x7b, 0xea, 0x3f, 0x9d, 0x81, 0xad, 0x88, 0x53, 0x30, 0xe1, 0xff,
	0x94, 0x8c, 0xde, 0xa9, 0xc3, 0x6b, 0xee, 0x52, 0xc3, 0xab, 0x02, 0x4b, 0xa6, 0x68, 0xb4, 0xce,
	0xfb, 0x6b, 0x5e, 0x5e, 0x46, 0xd3, 0x2c, 0x20, 0x2d, 0x98, 0x32, 0x54, 0xed, 0xc2, 0xb5, 0x64,
	0xff, 0x25, 0xf5, 0xf8, 0x49, 0x5a, 0x3f, 0x5e, 0x4b, 0xf6, 0x63, 0x82, 0x4a, 0xee, 0x4f, 0xf5,
	0x17, 0x59, 0xd8, 0x7e, 0xe0, 0xf4, 0x0d, 0xdf, 0xea, 0x9b, 0x69, 0x23, 0xe5, 0x7d, 0xd8, 0x7a,
	0x2a, 0x8a, 0x75, 0xdf, 0x1a, 0x98, 0xd8, 0xe7, 0x7a, 0xd8, 0x79, 0x68, 0xb8, 0x02, 0x84, 0x8e,
	0x35, 0x30, 0xb9, 0xfb, 0x82, 0x9d, 0xf9, 0x16, 0x6c, 0xa4, 0x90, 0xf2, 0xfe, 0xc5, 0x95, 0x29,
	0x49, 0xc7, 0x3c, 0xfb, 0x8f, 0x60, 0x3b, 0x24, 0x72, 0x0d, 0xbb, 0xe7, 0x0c, 0x62, 0x35, 0x72,
	0xc3, 0x5c, 0x0a, 0x50, 0x28, 0x62, 0x48, 0x75, 0xbe, 0x07, 0xa5, 0x54, 0x72, 0x56, 0x2b, 0x37,
	0xd0, 0xeb, 0xe3, 0xb4, 0xc9, 0x7a, 0xfb, 0x4e, 0xd7, 0xe8, 0xc7, 0x5b, 0xba, 0x1c, 0xaf, 0xb7,
	0x81, 0x18, 0x13, 0xea, 0x95, 0xc9, 0x59, 0xbd, 0xc5, 0x78, 0xbd, 0x11, 0x2d, 0xab, 0xb7, 0x02,
	0x3b, 0x31, 0x42, 0xdf, 0x72, 0xec, 0x58, 0xcd, 0x7c, 0x71, 0x28, 0xcb, 0xd4, 0x0c, 0x47, 0xaa,
	0xfb, 0x43, 0x28, 0x4f, 0x60, 0xc1, 0x6a, 0x9f, 0xe7, 0x2b, 0x60, 0x1a, 0x3d, 0xab, 0xff, 0x63,
	0xb8, 0x12, 0x12, 0x77, 0x9d, 0xc1, 0xd0, 0xf0, 0xbc, 0x58, 0xf5, 0x0b, 0x48, 0x1e, 0x8e, 0x81,
	0x2a, 0x47, 0x91, 0x6a, 0x97, 0x07, 0x48, 0x8c, 0x01, 0xab, 0x7c, 0x31, 0x3e, 0x40, 0x24, 0x6a,
	0x56, 0xf7, 0x1e, 0x5c, 0x8f, 0x3a, 0xcb, 0x1c, 0x38, 0xbe, 0xa9, 0xf7, 0x0c, 0xdf, 0x88, 0xd5,
	0xbf, 0x8a, 0x1c, 0x42, 0x19, 0x29, 0xa2, 0xd5, 0x0c, 0xdf, 0x90, 0x44, 0xf8, 0x44, 0xd2, 0xe1,
	0x18, 0x1f, 0x26, 0xc6, 0x5a, 0xbc, 0x11, 0x71, 0x26, 0x4c, 0x92, 0x16, 0xdc, 0x0e, 0x39, 0x78,
	0x8f, 0x4d, 0xd3, 0xd7, 0xf9, 0xbe, 0xd6, 0x36, 0x12, 0x23, 0x7e, 0x05, 0x39, 0x85, 0x62, 0xb7,
	0x19, 0x6e, 0x87, 0xa1, 0x36, 0x8d, 0xd8, 0xd8, 0xaf, 0x83, 0x7a, 0x01, 0x43, 0x26, 0x17, 0x41,
	0x6e, 0x3b, 0x93, 0xb9, 0x51, 0xb4, 0x80, 0x37, 0x24, 0x43, 0xd4, 0x0b, 0xe6, 0xe8, 0x79, 0x4c,
	0x2e, 0xee, 0x23, 0x5e, 0x8d, 0x10, 0xc3, 0xb9, 0x7c, 0x2e, 0x49, 0x55, 0x85, 0xab, 0x53, 0x58,
	0x31, 0x89, 0xb8, 0xcf, 0xb8, 0x3d, 0x89, 0x0f, 0x93, 0xa7, 0x2b, 0xf5, 0xda, 0xa9, 0xe9, 0x0c,
	0x4c, 0xdf, 0x0d, 0x18, 0x84, 0xee, 0x7e, 0x01, 0x0d, 0xd1, 0xb4, 0x2d, 0x43, 0xd8, 0xe8, 0x7d,
	0xc1, 0x22, 0x86, 0x45, 0xbe, 0x23, 0xd9, 0x8e, 0x58, 0x25, 0xc2, 0x4b, 0x9d, 0x1a, 0xd7, 0x58,
	0x4b, 0xe3, 0xad, 0xfe, 0x78, 0x0e, 0x6e, 0xa6, 0x59, 0xba, 0xa4, 0x4d, 0xad, 0xc3, 0xea, 0xb8,
	0xd9, 0x62, 0x3e, 0xa8, 0x32, 0x7d, 0x93, 0xb6, 0x92, 0x34, 0x67, 0x1e, 0x39, 0x80, 0xf5, 0x34,
	0x6b, 0xe4, 0x89, 0x2d, 0xd5, 0x14, 0x66, 0xab, 0xe3, 0x56, 0x2a, 0xce, 0x4e, 0x32, 0x32, 0x9e,
	0xd8, 0x5d, 0x5d, 0x86, 0x5d, 0x64, 0x7c, 0x3c, 0xa2, 0xc3, 0xb5, 0xe9, 0x63, 0xd4, 0x13, 0x7b,
	0x99, 0x29, 0x8c, 0xb7, 0x27, 0x8f, 0x5d, 0x8f, 0x3c, 0x90, 0x0c, 0x53, 0x72, 0x5e, 0xf2, 0x75,
	0x74, 0x2a, 0xef, 0xcd, 0xf4, 0xf9, 0xea, 0x91, 0x47, 0xb0, 0x3d, 0x79, 0x18, 0x07, 0x0b, 0xed,
	0x14, 0xc6, 0x5b, 0x93, 0x86, 0xb7, 0x47, 0xbe, 0x2f, 0x2d, 0x03, 0x63, 0x83, 0x9b, 0xbb, 0x96,
	0xe1, 0x02, 0x3b, 0x31, 0x3e, 0x10, 0xad, 0x13, 0x89, 0xc1, 0xed, 0xa9, 0x7f, 0x65, 0x06, 0xca,
	0xb8, 0xfd, 0xdd, 0x35, 0xba, 0x4f, 0xa2, 0xca, 0x83, 0xb1, 0x77, 0x4b, 0x6c, 0xbe, 0x79, 0x6c,
	0x80, 0x4d, 0x48, 0xee, 0x1f, 0xe5, 0xbb, 0x41, 0x33, 0xd8, 0x0c, 0x7c, 0x19, 0x56, 0x24, 0xac,
	0x58, 0x24, 0x6d, 0x39, 0x44, 0x14, 0x53, 0xfe, 0x8f, 0x65, 0x2f, 0x4e, 0x3e, 0x87, 0x52, 0xb8,
	0x7f, 0x49, 0xb2, 0xe3, 0x63, 0xe4, 0x66, 0x5c, 0x27, 0xe9, 0x6c, 0xc3, 0x2d, 0x4e, 0xbc, 0x58,
	0xf5, 0xe1, 0x3a, 0xed, 0xb8, 0xa6, 0x19, 0x50, 0x37, 0x9d, 0x9e, 0x59, 0x75, 0x6c, 0x9f, 0x79,
	0x52, 0x81, 0x6a, 0x8a, 0x90, 0x19, 0x58, 0x81, 0xcb, 0xc1, 0x7e, 0x22, 0xc4, 0x78, 0x26, 0x9c,
	0x09, 0xf6, 0x93, 0xbc, 0x0a, 0x73, 0xdd, 0xc7, 0x56, 0x3f, 0x88, 0xa6, 0x6e, 0x88, 0x26, 0x32,
	0xd6, 0x8c, 0x65, 0xe8, 0x1f, 0x23, 0x92, 0xfa, 0xe7, 0x15, 0xb8, 0x82, 0x65, 0x0d, 0xd3, 0x38,
	0xf9, 0xb2, 0x55, 0x8e, 0x87, 0x4b, 0x78, 0xdd, 0x97, 0x0f, 0x97, 0xa8, 0xff, 0x53, 0x81, 0x62,
	0x52, 0x46, 0xb2, 0x06, 0x73, 0x7d, 0xf3, 0xa9, 0xd9, 0x17, 0x03, 0x80, 0x7f, 0x30, 0x28, 0x77,
	0x79, 0x79, 0x6f, 0xf3, 0x0f, 0xf2, 0x3d, 0x08, 0x15, 0xab, 0xdb, 0x4e, 0x8f, 0xad, 0xc3, 0xbc,
	0x21, 0xe8, 0x2e, 0xe5, 0xee, 0xbd, 0x20, 0xe9, 0x61, 0x8a, 0x8a, 0xe9, 0x9a, 0x95, 0x52, 0x48,
	0x0e, 0x81, 0xf4, 0x4d, 0xe3, 0x24, 0xc1, 0x79, 0x16, 0x39, 0xab, 0x12, 0xe7, 0x09, 0x5a, 0xa4,
	0xc5, 0x7e, 0xa2, 0x40, 0xfd, 0x27, 0x33, 0x90, 0x47, 0x92, 0xa0, 0xb1, 0xd7, 0x21, 0x8f, 0x86,
	0xe1, 0xc4, 0x8a, 0x62, 0xc9, 0x05, 0x0a, 0x0c, 0xb6, 0x67, 0x61, 0xe8, 0x78, 0x1b, 0xb2, 0x88,
	0xe1, 0x59, 0x5f, 0x98, 0xa2, 0xf1, 0x8b, 0x0c, 0xd0, 0xb6, 0xbe, 0x30, 0x89, 0x0a, 0x05, 0x2c,
	0xe4, 0x1b, 0x93, 0x81, 0x27, 0x02, 0xc6, 0x39, 0x06, 0x6c, 0xb2, 0x5d, 0xc9, 0xc0, 0x63, 0x33,
	0x0b, 0x71, 0xcc, 0xbe, 0x39, 0xe0, 0x5c, 0x78, 0xb0, 0x18, 0x2b, 0xd6, 0xfa, 0xe6, 0x00, 0x39,
	0xbd, 0x06, 0xab, 0x11, 0x96, 0x6b, 0x1a, 0x7d, 0x8e, 0xca, 0x43, 0xc5, 0xc5, 0x00, 0x95, 0x9a,
	0x46, 0x1f, 0xd1, 0x03, 0xa6, 0x03, 0xe3, 0x19, 0xaa, 0x87, 0xd9, 0x9e, 0x90, 0xe9, 0x81, 0xf1,
	0x8c, 0xb5, 0x3a, 0xaa, 0x7a, 0x60, 0xd9, 0x02, 0x6b, 0x41, 0xc2, 0xb2, 0x6c, 0x8e, 0xf5, 0x32,
	0xcc, 0xba, 0x8e, 0xe3, 0x97, 0x16, 0xa7, 0x0e, 0x5d, 0xc4, 0x51, 0x7f, 0x43, 0x81, 0x12, 0x4e,
	0xa1, 0x34, 0x8f, 0xfd, 0x25, 0x98, 0x77, 0x75, 0xdf, 0x35, 0x4d, 0xb1, 0x64, 0x11, 0x89, 0x55,
	0x14, 0x7c, 0x66, 0x5f, 0xa4, 0x0e, 0xcb, 0xc7, 0x46, 0xf7, 0x89, 0x64, 0x42, 0x71, 0x68, 0xe7,
	0xee, 0x5d, 0x97, 0x8c, 0x43, 0xaa, 0xa5, 0xa2, 0x4b, 0xc7, 0x31, 0xb0, 0xfa, 0x47, 0x8b, 0xb0,
	0xdd, 0x1e, 0x1a, 0xb6, 0x6d, 0xd9, 0xa7, 0x69, 0x52, 0xc9, 0x3b, 0xbe, 0x8c, 0xb4, 0xe3, 0x6b,
	0x43, 0x81, 0x1b, 0x14, 0x1c, 0x59, 0xcf, 0x7c, 0x14, 0x60, 0xe9, 0xde, 0x5d, 0x2e, 0xc0, 0x14,
	0x8e, 0x41, 0x5c, 0x1d, 0xa9, 0x68, 0xde, 0x95, 0xbe, 0xc8, 0x5d, 0x98, 0x45, 0x5f, 0x21, 0x73,
	0xa1, 0x1b, 0x82, 0x78, 0xe4, 0xfb, 0xb0, 0xe3, 0x3b, 0x7e, 0x68, 0xdb, 0xd8, 0xa6, 0xbd, 0x67,
	0xf6, 0x4d, 0xb6, 0xba, 0xe0, 0x92, 0x28, 0x6c, 0xdc, 0xf4, 0x80, 0xfe, 0x16, 0xb2, 0xc0, 0xc2,
	0x3d, 0xc7, 0xad, 0x71, 0x7a, 0x5c, 0x11, 0xc9, 0xf7, 0xe0, 0xca, 0xb1, 0xd3, 0x3b, 0x9f, 0xc8,
	0x7e, 0xee, 0x12, 0xec, 0x4b, 0x8c, 0x43, 0x2a, 0xf7, 0x3f, 0xa7, 0xc0, 0x35, 0x34, 0x3f, 0xae,
	0x65, 0x9f, 0x8a, 0xe5, 0x40, 0xf7, 0x1d, 0xee, 0x22, 0x84, 0x6b, 0x22, 0xd3, 0xc4, 0x47, 0x97,
	0xd0, 0x6a, 0xc0, 0x88, 0xaf, 0x1f, 0x1d, 0x07, 0x3d, 0x06, 0x5c, 0x1c, 0xe9, 0xb6, 0x3b, 0xb9,
	0x90, 0xfc, 0x05, 0x05, 0xae, 0xa7, 0x49, 0x21, 0x16, 0x7e, 0x2e, 0xc6, 0x02, 0x8a, 0xf1, 0xed,
	0x2f, 0x21, 0x06, 0xf7, 0x01, 0xb8, 0x1c, 0x57, 0xdc, 0x29, 0xa5, 0xe5, 0x7f, 0xa3, 0xc0, 0xf6,
	0x94, 0x56, 0x4c, 0x8c, 0x3d, 0xa4, 0x8c, 0xc4, 0x99, 0xaf, 0x3c, 0x12, 0x6b, 0xb0, 0x1c, 0x2d,
	0xd5, 0xfc, 0x60, 0x2e, 0x73, 0xb1, 0x03, 0xbb, 0xd4, 0x8d, 0x81, 0xcb, 0xbf, 0x60, 0x2b, 0xd5,
	0x94, 0x36, 0xff, 0xbf, 0x6d, 0xd3, 0x77, 0x61, 0x33, 0x5c, 0x6e, 0xc6, 0xd6, 0x3e, 0x69, 0x55,
	0x98, 0x76, 0x58, 0x49, 0xd7, 0xad, 0xb4, 0x52, 0xf5, 0x0d, 0xc8, 0xcb, 0x35, 0x93, 0x1c, 0x2c,
	0xd4, 0xb4, 0xbd, 0xca, 0x51, 0xa3, 0x53, 0xfc, 0x06, 0x59, 0x85, 0xe5, 0x7a, 0xb3, 0xda, 0x38,
	0xaa, 0x69, 0xfa, 0x7d, 0xad, 0x52, 0xd3, 0x68, 0xbb, 0xa8, 0xa8, 0x3f, 0x59, 0x80, 0x9b, 0x69,
	0x0d, 0x49, 0xba, 0xf5, 0x23, 0x58, 0x17, 0x5e, 0x15, 0xab, 0xcc, 0x63, 0x43, 0xd3, 0x1b, 0x1a,
	0x76, 0x70, 0xe6, 0xb3, 0x3b, 0x59, 0x25, 0x09, 0x4e, 0x51, 0x9f, 0xa1, 0xd8, 0x5e, 0xc7, 0xd1,
	0x9e, 0xe1, 0xba, 0x46, 0x49, 0x57, 0x86, 0x32, 0x56, 0xde, 0xc5, 0xa6, 0x65, 0xe6, 0xeb, 0x35,
	0x2d, 0x99, 0xaf, 0x62, 0x5a, 0xca, 0x2d, 0xc8, 0xf1, 0xc6, 0x61, 0x29, 0xb9, 0x01, 0x79, 0x13,
	0x3f, 0xa5, 0x93, 0xc4, 0x02, 0xcd, 0x71, 0x18, 0x3f, 0x4a, 0xdc, 0x01, 0x10, 0x28, 0xc1, 0x59,
	0x62, 0x81, 0x66, 0x39, 0x44, 0xb3, 0x7b, 0xe5, 0xff, 0xa1, 0xc0, 0x35, 0x89, 0xe3, 0x43, 0xcb,
	0x7f, 0x8c, 0x35, 0xb1, 0x1f, 0x41, 0x9f, 0x4f, 0x39, 0x36, 0xfb, 0xe5, 0xf4, 0xf1, 0xfc, 0xee,
	0xe5, 0x3b, 0x6f, 0xca, 0xb8, 0x3e, 0x80, 0x79, 0xfc, 0x0e, 0xdc, 0xa6, 0x77, 0x2e, 0xcf, 0x55,
	0x6a, 0x12, 0x15, 0x4c, 0xca, 0xff, 0x51, 0x81, 0xd2, 0xa4, 0xa1, 0xf2, 0xd5, 0xce, 0xea, 0xff,
	0xac, 0x02, 0x9b, 0xbc, 0x12, 0xfd, 0xf8, 0x5c, 0x6c, 0xda, 0xe4, 0xe5, 0x33, 0x77, 0xaf, 0xfe,
	0xa5, 0x44, 0x4f, 0xeb, 0x0d, 0xba, 0xc6, 0x6b, 0xda, 0x3d, 0xc7, 0x12, 0x01, 0xfd, 0x12, 0xf3,
	0xf4, 0x87, 0xb0, 0xf3, 0xf0, 0xb1, 0xd3, 0x37, 0xf1, 0x74, 0x23, 0xcd, 0x43, 0xa8, 0xc3, 0x52,
	0xe0, 0x87, 0xf8, 0x7c, 0xab, 0xaf, 0x5c, 0xda, 0x9a, 0x14, 0x42, 0x4a, 0xdc, 0xea, 0xff, 0x08,
	0x6e, 0xa7, 0xd7, 0x95, 0x34, 0x0a, 0xf7, 0x61, 0x39, 0x5e, 0x67, 0xb0, 0xcf, 0xbf, 0x70, 0x8b,
	0xb7, 0x14, 0xab, 0xd1, 0x53, 0x7f, 0x33, 0xc3, 0x4f, 0x69, 0x34, 0xd7, 0x75, 0xdc, 0xb0, 0x4d,
	0xdf, 0x82, 0x79, 0x13, 0x01, 0xa2, 0x2d, 0xb7, 0xa2, 0x2e, 0x8e, 0x21, 0xde, 0xc5, 0xaf, 0x3d,
	0xc7, 0xc5, 0x8a, 0x04, 0x4d, 0xf9, 0xbf, 0x2a, 0x90, 0x97, 0x0b, 0xbe, 0xda, 0xa8, 0xd9, 0x83,
	0x3c, 0xf2, 0xd5, 0x4f, 0xfa, 0xc6, 0x53, 0xc7, 0x15, 0x53, 0xe7, 0xe6, 0x74, 0x89, 0x10, 0x95,
	0xe6, 0xcc, 0xe8, 0x83, 0x39, 0x8d, 0xa6, 0xeb, 0xea, 0xbd, 0x91, 0xc9, 0x6c, 0xa8, 0xf0, 0xb3,
	0x94, 0x4b, 0x76, 0x14, 0x13, 0xa1, 0x36, 0x32, 0x3b, 0x0e, 0xf6, 0x93, 0x05, 0x39, 0xa9, 0x1a,
	0xb2, 0x08, 0xb3, 0xcd, 0x56, 0x53, 0x2b, 0x7e, 0x83, 0x64, 0x61, 0x4e, 0xa3, 0xb4, 0x45, 0x8b,
	0x0a, 0x29, 0x40, 0x96, 0x6a, 0x7b, 0x3a, 0xff, 0x9c, 0x21, 0x1b, 0x40, 0xaa, 0x75, 0x5a, 0x3d,
	0x6a, 0x54, 0xa8, 0x1e, 0xc1, 0x33, 0xe4, 0x2a, 0x94, 0x8f, 0x9a, 0xed, 0xa3, 0xc3, 0xc3, 0x16,
	0xed, 0x68, 0x35, 0x7d, 0xef, 0xa8, 0x59, 0xed, 0xd4, 0x5b, 0x4d, 0x51, 0x3e, 0xab, 0xfe, 0xa7,
	0x45, 0xb8, 0x26, 0x4e, 0x8f, 0x26, 0x8e, 0xc0, 0x77, 0x60, 0x45, 0x1c, 0x3f, 0x89, 0x43, 0xba,
	0x51, 0x98, 0xd7, 0x92, 0xc5, 0x53, 0xd1, 0xa3, 0xa3, 0x7a, 0x8d, 0x2e, 0x9f, 0x48, 0x6c, 0x8e,
	0xac, 0x1e, 0x79, 0x1f, 0xb6, 0xc2, 0xf5, 0x30, 0x4e, 0x1f, 0xe6, 0xd2, 0x84, 0xfb, 0x33, 0x59,
	0x84, 0x7a, 0x8f, 0x34, 0x01, 0x38, 0xe6, 0x13, 0xcb, 0xee, 0xa1, 0x1a, 0x97, 0xee, 0xbd, 0xce,
	0xd5, 0x78, 0x81, 0xb0, 0x3c, 0x07, 0xe1, 0x33, 0xcb, 0xee, 0xd1, 0xac, 0x13, 0xfc, 0x24, 0x54,
	0x44, 0x06, 0x7a, 0x12, 0x81, 0x70, 0x5e, 0xa5, 0xb4, 0x8c, 0x29, 0x33, 0x82, 0x16, 0xbb, 0x09,
	0x04, 0x72, 0x00, 0x84, 0xdb, 0xdc, 0x18, 0x53, 0xee, 0xb2, 0x5e, 0x95, 0xd6, 0x95, 0x14, 0x21,
	0xe9, 0x8a, 0x9b, 0x2c, 0x21, 0xdf, 0x97, 0x82, 0x58, 0x31, 0x8e, 0x3c, 0x6c, 0xf3, 0x12, 0xe7,
	0x78, 0x89, 0x40, 0x5d, 0x14, 0xe6, 0x8b, 0xf1, 0x7f, 0x02, 0x57, 0x3c, 0x61, 0xf6, 0x02, 0x2f,
	0x34, 0x56, 0xcd, 0x82, 0x5c, 0xcd, 0x25, 0x0c, 0x24, 0x2d, 0x07, 0xec, 0xb8, 0xe3, 0x15, 0xab,
	0xcc, 0x84, 0xad, 0xb0, 0x32, 0xd7, 0x39, 0x8b, 0xd7, 0xb4, 0xf8, 0xbc, 0x35, 0x6d, 0x06, 0xbc,
	0xa8, 0x73, 0x96, 0xa8, 0xa6, 0x74, 0xc6, 0xec, 0x99, 0x18, 0x56, 0xb1, 0x5a, 0xf8, 0x31, 0xe0,
	0x2b, 0xbc, 0x96, 0x4b, 0x59, 0x3d, 0xba, 0x71, 0x96, 0x8a, 0x16, 0x9e, 0x0a, 0x0a, 0x93, 0x05,
	0xc8, 0x79, 0x73, 0x82, 0x81, 0xe0, 0xa7, 0x48, 0x1c, 0x44, 0xde, 0x82, 0x42, 0x6c, 0xe4, 0x97,
	0x72, 0x48, 0xbb, 0x84, 0xb3, 0x26, 0x34, 0x02, 0x34, 0x2f, 0x4f, 0x1d, 0xf5, 0x5f, 0x2b, 0x90,
	0x0d, 0x47, 0x71, 0x7c, 0xf2, 0x77, 0x2a, 0xbb, 0x0d, 0xad, 0xa8, 0xb0, 0x9f, 0xd5, 0xfb, 0x15,
	0xda, 0x29, 0xce, 0x90, 0x25, 0x80, 0x6a, 0xab, 0x59, 0xd3, 0xdb, 0x9d, 0x47, 0x0d, 0xad, 0x98,
	0x21, 0x2b, 0x50, 0xb8, 0x5f, 0xaf, 0xd5, 0xb4, 0xa6, 0xde, 0xee, 0x54, 0x3a, 0x5a, 0xbb, 0x38,
	0x4b, 0x96, 0x21, 0x77, 0xa0, 0xd1, 0x7d, 0x4d, 0x6f, 0x3d, 0x6c, 0x6a, 0xb4, 0x38, 0xc7, 0x16,
	0xa2, 0x76, 0x8b, 0x76, 0x74, 0x7a, 0xd4, 0x08, 0x80, 0xf3, 0x0c, 0x8b, 0x19, 0x8e, 0x0e, 0xad,
	0x54, 0x3f, 0xd3, 0x68, 0x71, 0x81, 0xe4, 0x61, 0x71, 0x9f, 0xb6, 0x8e, 0x0e, 0xf5, 0xdd, 0x47,
	0xc5, 0x45, 0x34, 0x30, 0x95, 0x8e, 0xb6, 0xdf, 0xa2, 0x8f, 0xf4, 0xca, 0xfe, 0xbe, 0x20, 0xcb,
	0x92, 0x6d, 0xd8, 0x3c, 0xd4, 0x9a, 0xd5, 0x7a, 0x43, 0xaf, 0x34, 0x9b, 0xad, 0x4e, 0x05, 0xad,
	0x0b, 0x2f, 0x04, 0xf5, 0x3f, 0xcf, 0xc1, 0x66, 0x6c, 0x6a, 0xdb, 0x27, 0x4e, 0xb4, 0x06, 0x14,
	0xc7, 0xac, 0xc2, 0xe4, 0x64, 0xb9, 0xa5, 0x93, 0xb8, 0x85, 0xf8, 0x34, 0x6d, 0x46, 0x73, 0x9f,
	0x71, 0x27, 0x7d, 0x46, 0x3f, 0xef, 0x4c, 0xce, 0x7c, 0xd9, 0x99, 0xfc, 0x60, 0xd2, 0x4c, 0xe6,
	0x06, 0xe7, 0xc6, 0xe4, 0x99, 0x3c, 0x7d, 0x06, 0x77, 0x2f, 0x98, 0xc1, 0x73, 0x32, 0xfb, 0x29,
	0x7b, 0x98, 0xa9, 0x33, 0xf7, 0xf3, 0x69, 0x33, 0x77, 0xfe, 0xb2, 0x35, 0x4c, 0x9c, 0xb1, 0x9f,
	0x4f, 0x99, 0xb1, 0x8b, 0x72, 0xc0, 0x74, 0xaa, 0x4f, 0x74, 0xd9, 0x99, 0x9a, 0xfd, 0x0a, 0x33,
	0x75, 0xe1, 0x12, 0x33, 0xf5, 0xdf, 0x29, 0xb0, 0xc2, 0x07, 0x64, 0xed, 0xc0, 0x18, 0x46, 0x69,
	0x67, 0xd9, 0x81, 0x31, 0xc4, 0xdc, 0xb9, 0x73, 0xe1, 0xdf, 0x88, 0x8d, 0xe5, 0x18, 0xee, 0x38,
	0x84, 0x67, 0xcf, 0x2d, 0x0e, 0x8c, 0x21, 0xfe, 0x2a, 0x7b, 0xb0, 0x91, 0x8e, 0x43, 0x5e, 0x86,
	0x95, 0xb1, 0xdc, 0x19, 0xb1, 0x2f, 0x58, 0x4e, 0xa4, 0xcc, 0xc4, 0xf2, 0xb0, 0x66, 0x26, 0x27,
	0xa4, 0x06, 0x79, 0x58, 0x7f, 0x3f, 0x03, 0xa5, 0x28, 0x86, 0xd5, 0x71, 0x8d, 0xee, 0x13, 0xd3,
	0x8d, 0x9a, 0x47, 0x12, 0xf3, 0xd6, 0x3e, 0x71, 0x44, 0x3b, 0x77, 0xc6, 0xd7, 0x68, 0x69, 0xca,
	0xd3, 0xe2, 0x49, 0xa2, 0x80, 0x7c, 0x04, 0xc0, 0xd3, 0x18, 0xfa, 0xa6, 0x71, 0x22, 0x9c, 0xf4,
	0x29, 0x71, 0x29, 0xcc, 0x34, 0xc9, 0x22, 0x45, 0xc3, 0x34, 0x4e, 0xc8, 0xfb, 0x90, 0x0f, 0xd3,
	0x86, 0x06, 0xc6, 0x50, 0xcc, 0xd9, 0xcd, 0x09, 0xda, 0xa6, 0x20, 0x1a, 0x78, 0x60, 0x0c, 0xc9,
	0x03, 0x58, 0x0d, 0xd5, 0x27, 0x89, 0x30, 0x7b, 0x59, 0xdf, 0x1a, 0x45, 0x09, 0x7b, 0xa0, 0x16,
	0x8a, 0xf4, 0x2a, 0x10, 0x7b, 0x34, 0x38, 0x36, 0x5d, 0xdd, 0x39, 0x09, 0xdc, 0x1e, 0x3e, 0x37,
	0x67, 0x69, 0x91, 0x97, 0xb4, 0x4e, 0x84, 0x82, 0x3c, 0xd2, 0x80, 0x72, 0x5c, 0x99, 0x89, 0xf9,
	0x96, 0x49, 0x19, 0x83, 0xa5, 0x93, 0x09, 0x2e, 0x90, 0xfa, 0x6b, 0x0a, 0x94, 0xa3, 0x43, 0xa1,
	0xf6, 0xd0, 0xec, 0x5a, 0x27, 0x56, 0xd4, 0x73, 0xb7, 0x61, 0xe9, 0x64, 0x64, 0x77, 0xf1, 0x1c,
	0xdc, 0xb2, 0x7b, 0xe6, 0x33, 0x31, 0x5c, 0x0a, 0x01, 0x14, 0xb3, 0x45, 0xc9, 0x06, 0xcc, 0x7b,
	0xe7, 0x83, 0x63, 0xa7, 0x8f, 0x43, 0x25, 0x4b, 0xc5, 0x17, 0xb9, 0x02, 0x59, 0xc3, 0xf7, 0x5d,
	0xeb, 0x78, 0xe4, 0x9b, 0x22, 0x94, 0x1c, 0x01, 0x08, 0x81, 0xd9, 0x1e, 0xf3, 0xbe, 0x99, 0x91,
	0x53, 0x28, 0xfe, 0x56, 0xff, 0x40, 0x81, 0xad, 0x48, 0x9e, 0x07, 0x46, 0x7f, 0x64, 0x4a, 0xf3,
	0xe4, 0x3e, 0xcc, 0xc9, 0x73, 0xe4, 0x5e, 0x90, 0x95, 0x39, 0x01, 0x5f, 0x2a, 0x39, 0x10, 0xb3,
	0x83, 0x72, 0x06, 0xe5, 0x1f, 0x2b, 0x40, 0xc6, 0x4b, 0xc9, 0xb7, 0x21, 0xeb, 0x05, 0x3a, 0x10,
	0x4b, 0xcb, 0xf5, 0x64, 0x25, 0x49, 0x25, 0xd1, 0x88, 0x84, 0xbc, 0x0a, 0x73, 0x4f, 0x99, 0x0c,
	0x62, 0xca, 0x6c, 0x44, 0xe3, 0x12, 0x45, 0x0b, 0x83, 0xc6, 0x88, 0xa4, 0xfe, 0x33, 0x05, 0xf2,
	0x6d, 0xdf, 0xe9, 0x3e, 0x91, 0x42, 0xbb, 0x42, 0x8f, 0x4a, 0x4c, 0x8f, 0x81, 0xa6, 0x66, 0x22,
	0x4d, 0x91, 0x8f, 0xe3, 0xba, 0xcd, 0x48, 0x66, 0x56, 0x62, 0x79, 0xb7, 0x12, 0xe0, 0xf0, 0xe6,
	0x47, 0x34, 0xe5, 0x1a, 0x2c, 0xc5, 0x0b, 0xe3, 0xdd, 0xa5, 0x24, 0xbb, 0x6b, 0x4d, 0x6e, 0x5b,
	0x36, 0x68, 0xc3, 0x8f, 0x15, 0xd8, 0x90, 0x74, 0xe3, 0x3b, 0xae, 0x19, 0x2d, 0xd7, 0x59, 0xc4,
	0xc1, 0x79, 0xc6, 0x95, 0x79, 0xed, 0x82, 0x1e, 0xa3, 0x8b, 0x4f, 0x05, 0x80, 0xbc, 0x0c, 0xf3,
	0x1e, 0x6b, 0x88, 0x27, 0xe6, 0x38, 0x19, 0x6f, 0x1c, 0x15, 0x18, 0xea, 0x6f, 0x2a, 0x50, 0x6a,
	0x1a, 0x03, 0x93, 0xdb, 0x9d, 0x5e, 0x38, 0xf0, 0x0f, 0x0d, 0xcb, 0x65, 0xca, 0xb3, 0x8d, 0x81,
	0x29, 0x54, 0x8a, 0xbf, 0xc9, 0x87, 0xb0, 0xe2, 0x73, 0xdc, 0xb1, 0xec, 0xdc, 0xe4, 0xdc, 0x29,
	0xfa, 0x09, 0xa6, 0xe4, 0x0d, 0x58, 0x1b, 0x23, 0xe6, 0x17, 0x0f, 0x94, 0x3b, 0x05, 0x4a, 0x92,
	0xf8, 0xf5, 0x9e, 0xfa, 0x53, 0x05, 0xae, 0x32, 0xf9, 0xd8, 0xde, 0x3f, 0x51, 0xfa, 0x25, 0x2f,
	0x00, 0x7c, 0x0e, 0xdb, 0x78, 0xb8, 0x3c, 0x2e, 0xc8, 0xd0, 0xb0, 0x5c, 0xa1, 0x32, 0xe1, 0x89,
	0x4c, 0xd2, 0x0c, 0x2d, 0xd9, 0x13, 0x4a, 0xd4, 0x9f, 0x2b, 0x70, 0x85, 0x91, 0x45, 0xe0, 0x03,
	0xc3, 0x36, 0x4e, 0x23, 0xc3, 0xf0, 0x21, 0xac, 0x48, 0x89, 0xd2, 0xdc, 0xdc, 0x0b, 0xb9, 0xc7,
	0x14, 0x18, 0x65, 0x45, 0x73, 0x3c, 0x32, 0x82, 0x9b, 0xac, 0x66, 0x1e, 0x73, 0x19, 0x6b, 0x40,
	0x10, 0x88, 0x11, 0x8d, 0xb8, 0x15, 0x35, 0x62, 0xb2, 0xfa, 0xd0, 0xb4, 0x5e, 0xb5, 0xd3, 0x71,
	0x44, 0xc0, 0x45, 0xfd, 0x2d, 0x05, 0x56, 0x8f, 0x46, 0x56, 0xaf, 0x6d, 0xfa, 0xb1, 0x71, 0xfa,
	0x21, 0x2c, 0x8c, 0x38, 0x58, 0xd8, 0x15, 0x31, 0x8f, 0x52, 0x70, 0x03, 0x18, 0x0d, 0x28, 0xca,
	0x9f, 0xc2, 0x82, 0x80, 0x91, 0x1d, 0x98, 0x1d, 0xf1, 0x7d, 0x6e, 0x26, 0xbe, 0xcf, 0x45, 0x30,
	0xb9, 0x0e, 0x79, 0x34, 0xa1, 0xcc, 0xca, 0x07, 0xb9, 0xea, 0x05, 0x0a, 0x08, 0x6b, 0x9d, 0xb4,
	0x4d, 0x5f, 0xfd, 0xc9, 0x0c, 0x6c, 0x32, 0x66, 0x92, 0xd2, 0x43, 0xd3, 0xf7, 0x5d, 0x20, 0xe1,
	0xe1, 0x39, 0x06, 0x27, 0xa5, 0xaa, 0x5e, 0x8b, 0xe4, 0x4d, 0x21, 0x0d, 0x96, 0x45, 0x6f, 0xcf,
	0x71, 0x11, 0x65, 0xb9, 0x1b, 0x07, 0x94, 0xff, 0x8e, 0x02, 0xcb, 0x09, 0x24, 0xa9, 0x31, 0x33,
	0x69, 0x8d, 0xf9, 0x08, 0x16, 0x03, 0x71, 0x44, 0x3f, 0x5d, 0x26, 0x66, 0xb1, 0x20, 0x6a, 0x66,
	0xa6, 0x21, 0x4a, 0x05, 0xc8, 0x5c, 0x2e, 0x4e, 0xb4, 0x18, 0x88, 0xad, 0xfe, 0xf7, 0x0c, 0xac,
	0xef, 0xbb, 0xce, 0x68, 0xb8, 0x7b, 0xde, 0x74, 0x7a, 0xb2, 0x96, 0x7e, 0x19, 0x87, 0x25, 0x57,
	0xd0, 0x29, 0xc3, 0xd0, 0x8f, 0x83, 0xc5, 0xe2, 0x0d, 0xce, 0x3f, 0x95, 0x8e, 0x43, 0xf1, 0xf4,
	0x70, 0xcf, 0x71, 0x05, 0x0a, 0x5d, 0x72, 0xb9, 0x3e, 0xc4, 0x77, 0xf9, 0x5f, 0x2a, 0xe1, 0x3d,
	0xa5, 0x10, 0xcc, 0x68, 0xc8, 0xeb, 0xb0, 0xc4, 0x2b, 0xc3, 0x83, 0xdd, 0x54, 0xad, 0xe5, 0x4f,
	0x03, 0xec, 0xa3, 0xff, 0xcf, 0xda, 0x2b, 0xff, 0x75, 0x05, 0xd6, 0xd2, 0xda, 0x4b, 0x5e, 0x81,
	0x7c, 0xa0, 0xb3, 0xf4, 0x46, 0xc0, 0x29, 0xc7, 0x64, 0x4d, 0xd0, 0x61, 0x35, 0xa1, 0x69, 0xd6,
	0x78, 0xd1, 0x9a, 0xa9, 0xba, 0x4e, 0x53, 0x21, 0x1a, 0x89, 0x18, 0x44, 0xfd, 0xcb, 0x0b, 0x50,
	0x0a, 0xf2, 0x41, 0x2d, 0xc7, 0xd6, 0xec, 0x53, 0xcb, 0x36, 0xa5, 0xec, 0x8e, 0x63, 0xc3, 0xc3,
	0x24, 0x18, 0x53, 0x7f, 0xf3, 0xfd, 0x37, 0xde, 0xc6, 0x60, 0xe3, 0x22, 0xcd, 0x33, 0x68, 0xcd,
	0xf0, 0x4d, 0x06, 0x63, 0xbb, 0x34, 0x29, 0xa5, 0x25, 0xb0, 0x52, 0x7c, 0x69, 0x16, 0xb6, 0x71,
	0x92, 0xcf, 0x4a, 0x57, 0x7a, 0xc9, 0x12, 0xb2, 0x07, 0x9b, 0xcc, 0xc2, 0xc8, 0xb6, 0x6a, 0xc0,
	0xad, 0xa2, 0xe8, 0x84, 0xa4, 0xe5, 0x5b, 0xb7, 0xd3, 0x4c, 0x28, 0x39, 0x83, 0x8d, 0x58, 0x22,
	0x33, 0x36, 0x62, 0xc0, 0xb4, 0x37, 0x8b, 0x61, 0x2b, 0xe1, 0xd6, 0x4c, 0x6a, 0xfc, 0x5d, 0x29,
	0x9f, 0x99, 0x35, 0xf5, 0xc0, 0xe9, 0x99, 0x1f, 0x2c, 0xd5, 0x2a, 0x1d, 0x4d, 0x3f, 0x68, 0xd5,
	0x34, 0xa6, 0x8e, 0x37, 0xe8, 0xaa, 0x39, 0x8e, 0x44, 0xde, 0x85, 0x4d, 0xcf, 0x78, 0x6a, 0xf6,
	0x82, 0x94, 0x27, 0xab, 0x67, 0xda, 0x3e, 0xf7, 0x75, 0x98, 0xb7, 0x99, 0xa5, 0xeb, 0x58, 0xcc,
	0x33, 0x9b, 0xea, 0x61, 0x21, 0x5b, 0xf0, 0x7a, 0x4e, 0x77, 0x34, 0x30, 0x6d, 0x3f, 0x48, 0xbe,
	0xf2, 0x4c, 0xb3, 0x87, 0x9b, 0xbb, 0x59, 0x4a, 0x82, 0x32, 0x9e, 0x60, 0xd5, 0x36, 0xcd, 0x1e,
	0xf3, 0xf8, 0x99, 0x99, 0x88, 0x69, 0x6a, 0x28, 0x36, 0x48, 0x3b, 0x53, 0xad, 0x15, 0x2d, 0x8e,
	0x12, 0x05, 0xe4, 0x35, 0x08, 0xab, 0xc0, 0x34, 0x32, 0xcf, 0x37, 0x06, 0x43, 0xdc, 0xa9, 0x29,
	0x74, 0x25, 0x28, 0xe9, 0x04, 0x05, 0xe4, 0x15, 0x58, 0x89, 0xa1, 0x7f, 0xe1, 0xd8, 0x26, 0x46,
	0x60, 0xb2, 0xb4, 0x28, 0x63, 0x33, 0x38, 0x69, 0xc0, 0x0a, 0x5f, 0x76, 0x99, 0xb4, 0x8f, 0x2d,
	0xcf, 0x77, 0xdc, 0x73, 0x11, 0x72, 0x09, 0x1d, 0xbf, 0x33, 0xd7, 0xf2, 0x4d, 0x5c, 0x42, 0x8e,
	0xea, 0x35, 0x79, 0x73, 0xb2, 0x8c, 0xa4, 0x47, 0x56, 0xef, 0x3e, 0x27, 0x24, 0x1f, 0x30, 0xf3,
	0x13, 0x65, 0x67, 0x31, 0xa0, 0x59, 0xca, 0xa7, 0x8e, 0x8d, 0x65, 0x37, 0xee, 0x34, 0x91, 0x4a,
	0xcc, 0x88, 0x30, 0x75, 0x15, 0xe4, 0xec, 0xa2, 0xd4, 0xb9, 0x24, 0x99, 0x95, 0x03, 0x63, 0xa8,
	0xea, 0xb0, 0x9a, 0x32, 0x36, 0x08, 0x81, 0xc4, 0xe8, 0x28, 0x2a, 0x64, 0x0b, 0xd6, 0xe3, 0x30,
	0xbd, 0xa1, 0xed, 0x57, 0xaa, 0x8f, 0x8a, 0x33, 0x63, 0x45, 0x6f, 0x07, 0x45, 0x19, 0xf5, 0x7f,
	0x29, 0xb0, 0x73, 0xe8, 0x9a, 0x9e, 0xe9, 0x3e, 0x35, 0x79, 0x24, 0x80, 0x3a, 0x67, 0x7b, 0x7d,
	0xe3, 0x34, 0x0c, 0xfc, 0xbe, 0x09, 0xeb, 0x78, 0xa0, 0x85, 0x91, 0x00, 0xcb, 0xd3, 0x8d, 0x63,
	0xcf, 0xe9, 0x07, 0xee, 0xe4, 0x22, 0x25, 0x58, 0x48, 0x9d, 0xb3, 0xba, 0x57, 0x11, 0x25, 0xe4,
	0x3d, 0x28, 0x71, 0x12, 0x11, 0xa1, 0x90, 0xa9, 0x66, 0x90, 0x8a, 0xb3, 0xe4, 0x15, 0x4a, 0x84,
	0xaf, 0xc1, 0xaa, 0x69, 0xf7, 0xc6, 0x6a, 0xca, 0xa0, 0x25, 0x28, 0x9a, 0x76, 0x2f, 0x5e, 0xcf,
	0x5b, 0xb0, 0xc1, 0xd0, 0x53, 0x6a, 0xc1, 0xec, 0x75, 0xca, 0x98, 0x25, 0xeb, 0x50, 0x7f, 0x77,
	0x96, 0x59, 0x21, 0xdf, 0x3c, 0x75, 0xdc, 0xf3, 0x31, 0x9f, 0xed, 0xb9, 0x0c, 0xe6, 0x1d, 0x00,
	0x51, 0xf5, 0x28, 0xdc, 0x52, 0x4b, 0xa8, 0x59, 0x5e, 0xc8, 0x30, 0xbf, 0x05, 0x4b, 0xc6, 0xe9,
	0xa9, 0x6b, 0x9e, 0x32, 0xbb, 0x80, 0x97, 0xd0, 0x32, 0x78, 0xc0, 0xb0, 0x1e, 0xd8, 0x05, 0x2e,
	0x4e, 0xe5, 0xf4, 0x94, 0xdf, 0x3a, 0x0b, 0x91, 0xf1, 0x6e, 0xd7, 0x35, 0xc8, 0x71, 0xa1, 0x78,
	0xd2, 0xd3, 0xec, 0xf5, 0x99, 0x3b, 0x2b, 0x42, 0x90, 0x06, 0x66, 0x3e, 0x7d, 0x06, 0xfc, 0x8b,
	0xc9, 0x11, 0x04, 0x68, 0x5e, 0x8d, 0xb3, 0x1e, 0xbb, 0xe7, 0x56, 0x35, 0x7c, 0x6a, 0x9e, 0x1c,
	0x59, 0xbd, 0x86, 0xe5, 0xf9, 0x34, 0x8b, 0xf4, 0x47, 0x56, 0xcf, 0x23, 0x9f, 0xc2, 0xd2, 0x50,
	0x0c, 0x08, 0xfd, 0x84, 0x0d, 0x04, 0x31, 0xc9, 0x45, 0x4c, 0x66, 0xea, 0x60, 0xa1, 0x85, 0x80,
	0x14, 0xa1, 0xe4, 0x45, 0x58, 0x76, 0x4d, 0x66, 0xf0, 0x9e, 0x9a, 0x41, 0x2a, 0xde, 0x22, 0xde,
	0xa0, 0x5c, 0x0a, 0xc0, 0x61, 0x8a, 0x38, 0x09, 0x11, 0xc3, 0xa6, 0x88, 0xd0, 0x8d, 0xa4, 0xd2,
	0x62, 0x80, 0xb4, 0x2f, 0xc4, 0x65, 0x84, 0x41, 0xa7, 0x4b, 0x84, 0x30, 0x46, 0x18, 0x20, 0x05,
	0x84, 0xe5, 0x57, 0xa1, 0x10, 0x53, 0x01, 0xd9, 0x86, 0x4c, 0xaa, 0xab, 0xc7, 0xa0, 0xea, 0xcf,
	0xbe, 0x05, 0xab, 0x95, 0x76, 0x87, 0x67, 0x1b, 0xb9, 0x46, 0x98, 0x93, 0x58, 0x85, 0xc5, 0x4a,
	0xbb, 0xc3, 0x17, 0x4a, 0x4e, 0x79, 0x87, 0xab, 0x29, 0x05, 0x39, 0x82, 0x89, 0xc5, 0x5f, 0x7c,
	0x97, 0xff, 0x9e, 0x02, 0xd7, 0x2b, 0xed, 0x4e, 0x98, 0x86, 0x11, 0xf6, 0x95, 0x9c, 0xf3, 0xb6,
	0x03, 0xc0, 0xa6, 0xc5, 0x63, 0xc3, 0xee, 0xf5, 0xc3, 0xad, 0x9c, 0xeb, 0x9c, 0xdd, 0x47, 0x00,
	0xb9, 0x09, 0xe2, 0xce, 0x68, 0x80, 0x31, 0x23, 0x72, 0x23, 0x11, 0x28, 0x90, 0x54, 0x28, 0x88,
	0xa9, 0xe5, 0xf9, 0x56, 0xf7, 0xc9, 0x79, 0x90, 0x0b, 0xe6, 0xb2, 0x59, 0xd5, 0x46, 0x10, 0xb9,
	0x03, 0xc5, 0x68, 0x3e, 0x09, 0x34, 0x9e, 0x0d, 0x26, 0x6e, 0xb4, 0x06, 0x98, 0xe5, 0x7f, 0x3b,
	0x0b, 0xb7, 0x2b, 0xed, 0x4e, 0xd5, 0x75, 0x3c, 0x8f, 0x9f, 0x7f, 0xfe, 0xa9, 0x91, 0x3d, 0xb6,
	0x37, 0x9b, 0xbb, 0x78, 0x6f, 0xf6, 0x10, 0x5e, 0x62, 0xdd, 0x1c, 0xad, 0x7d, 0x67, 0x8f, 0x2d,
	0xdf, 0xf4, 0x86, 0x46, 0xd7, 0xd4, 0x8d, 0x13, 0xdf, 0x74, 0x45, 0x8e, 0x30, 0xee, 0x4a, 0xe7,
	0x71, 0x61, 0xba, 0x55, 0x69, 0x77, 0x42, 0x65, 0x3c, 0x0c, 0xd1, 0x2b, 0x0c, 0x1b, 0xf3, 0x81,
	0xd9, 0xf6, 0x87, 0x3c, 0x82, 0x97, 0x27, 0x32, 0x3e, 0x36, 0x4f, 0x1c, 0xd7, 0x94, 0xf2, 0x8e,
	0x71, 0x22, 0x66, 0xe9, 0xed, 0x74, 0xce, 0xbb, 0x88, 0x1e, 0x66, 0x19, 0x5f, 0x42, 0x66, 0x89,
	0xf3, 0xe2, 0x85, 0x32, 0x47, 0x8c, 0x3f, 0x87, 0x57, 0x2f, 0x92, 0x19, 0x7d, 0x59, 0xa3, 0xd7,
	0x73, 0x4d, 0x8f, 0x07, 0x60, 0xb3, 0xf4, 0xc5, 0x69, 0x52, 0xb3, 0x91, 0x53, 0xe1, 0xe8, 0xe5,
	0x87, 0x50, 0x66, 0xa3, 0x0a, 0xfb, 0x6b, 0xec, 0xd0, 0x36, 0x91, 0xcc, 0xb3, 0x12, 0x26, 0xf3,
	0xdc, 0x80, 0x45, 0x69, 0x89, 0x91, 0x2e, 0x21, 0x85, 0xe0, 0x72, 0x13, 0x36, 0x99, 0x0c, 0xce,
	0xd9, 0x38, 0x57, 0x71, 0xb5, 0x8a, 0xb3, 0x14, 0xf7, 0x5a, 0x2f, 0xe4, 0xf7, 0x12, 0x40, 0xa5,
	0xdd, 0xb9, 0x8c, 0xf9, 0x28, 0xff, 0x6c, 0x06, 0x72, 0x1c, 0x97, 0x79, 0x9e, 0x3e, 0xa9, 0x05,
	0x2b, 0x07, 0xb3, 0xb8, 0x62, 0x91, 0xb9, 0x35, 0xd5, 0x70, 0x04, 0x86, 0x5a, 0xa2, 0x23, 0xdf,
	0xc6, 0xfb, 0xde, 0xc8, 0x62, 0xe6, 0x39, 0x58, 0x04, 0x44, 0xb8, 0x7d, 0xf5, 0xa2, 0x94, 0x65,
	0xb1, 0xcc, 0x82, 0xe5, 0x05, 0x19, 0xc8, 0x64, 0x0f, 0x16, 0x86, 0x23, 0x77, 0xe8, 0x78, 0x81,
	0x23, 0xfb, 0xea, 0x45, 0x35, 0x60, 0xfb, 0x0e, 0x39, 0x0d, 0x0d, 0x88, 0xc9, 0x7b, 0xb0, 0x16,
	0xae, 0x29, 0xae, 0xd9, 0xf5, 0x0d, 0xfb, 0x74, 0xd4, 0x37, 0x5c, 0x71, 0x5d, 0x8c, 0x5f, 0x64,
	0x5c, 0x0d, 0x30, 0x68, 0x84, 0x50, 0xfe, 0x6f, 0x0a, 0x14, 0x2a, 0xed, 0x0e, 0x9f, 0xb5, 0xbb,
	0x96, 0xef, 0xfd, 0xc9, 0x70, 0x47, 0x66, 0x9e, 0xdb, 0x1d, 0x99, 0x99, 0xe0, 0x8e, 0x94, 0xff,
	0x9a, 0x02, 0xcb, 0x92, 0xea, 0x70, 0x2c, 0x7d, 0x08, 0x73, 0x6c, 0x6b, 0xe3, 0xc7, 0x1f, 0x0d,
	0xb8, 0x40, 0xe9, 0x94, 0xd3, 0x90, 0xfb, 0x90, 0xe3, 0xa6, 0x4f, 0x3f, 0xb6, 0xfc, 0x60, 0x64,
	0xbc, 0x38, 0x95, 0x45, 0xa4, 0x5e, 0x0a, 0x5e, 0xf8, 0xbb, 0xfc, 0x77, 0x15, 0x9c, 0x31, 0x47,
	0x56, 0x6f, 0x7c, 0xc6, 0xc4, 0x7d, 0x1f, 0x65, 0x8a, 0xef, 0xa3, 0xf2, 0x57, 0x09, 0x52, 0x5d,
	0xa4, 0x79, 0x3e, 0x14, 0x99, 0x9f, 0x20, 0xb8, 0x25, 0x94, 0x2c, 0xec, 0x76, 0xa8, 0xe2, 0x1b,
	0x90, 0x67, 0xcc, 0x12, 0x8a, 0x65, 0x8b, 0x40, 0xa8, 0xd0, 0x1f, 0xc0, 0x36, 0xb3, 0x1f, 0x93,
	0x3c, 0xbc, 0x0a, 0xe4, 0xbb, 0xa2, 0x0c, 0x07, 0xbd, 0x22, 0xef, 0x1d, 0x27, 0x51, 0xd1, 0x5c,
	0x37, 0x2a, 0x29, 0xff, 0xe1, 0x1c, 0xac, 0x71, 0x13, 0xe5, 0xd8, 0xa8, 0xfa, 0x80, 0xf7, 0xf9,
	0xb8, 0xbb, 0xc3, 0x7b, 0xf0, 0x70, 0xaa, 0xfa, 0xc7, 0x18, 0xc5, 0x81, 0x54, 0xb0, 0xc4, 0x59,
	0x19, 0x5d, 0x42, 0x88, 0x3b, 0x50, 0x1e, 0xe4, 0xc3, 0xaa, 0x83, 0x5b, 0x84, 0x5f, 0x47, 0xbd,
	0xb9, 0xa0, 0x16, 0xea, 0x9c, 0xb1, 0xf6, 0x86, 0xce, 0x97, 0x74, 0x07, 0xf1, 0x2b, 0xd6, 0x1b,
	0xf4, 0x64, 0xbc, 0xbd, 0x41, 0x45, 0x51, 0x7b, 0xc3, 0xaa, 0x83, 0xfb, 0x8b, 0x5f, 0x47, 0xbd,
	0xb9, 0xa0, 0x16, 0xd6, 0xde, 0x2f, 0x6d, 0xc6, 0x0c, 0xb8, 0x71, 0xa1, 0x6a, 0xbf, 0xda, 0x4b,
	0x24, 0x63, 0x55, 0xa4, 0xb5, 0x26, 0xad, 0x8a, 0xc2, 0xf4, 0x2a, 0x0a, 0x52, 0x15, 0xff, 0x22,
	0x03, 0x2f, 0xc4, 0x1c, 0xbe, 0x70, 0x9a, 0x68, 0xcf, 0x7c, 0xd7, 0x90, 0xcf, 0xf5, 0x9f, 0x33,
	0xf6, 0xfd, 0x5c, 0xfe, 0xd5, 0xcc, 0xd7, 0xe6, 0x5f, 0x65, 0xbe, 0x36, 0xff, 0x6a, 0xf6, 0x6b,
	0xf4, 0xaf, 0xe6, 0x9e, 0xcf, 0xbf, 0xfa, 0xd9, 0x0c, 0x5a, 0xaf, 0x86, 0xe9, 0xb3, 0x39, 0x12,
	0x61, 0x92, 0x6f, 0xc3, 0x15, 0x56, 0x6f, 0xdf, 0xf4, 0xc7, 0x9b, 0xd2, 0xc7, 0x48, 0x3a, 0xab,
	0xa7, 0xc4, 0x69, 0x13, 0xd2, 0x37, 0x4c, 0x9f, 0x34, 0xe0, 0xe6, 0x44, 0x7a, 0x29, 0x2e, 0xc5,
	0xbb, 0xef, 0x5a, 0x2a, 0x1b, 0x29, 0x42, 0x55, 0x83, 0x6b, 0x13, 0xb9, 0x99, 0x3f, 0x1a, 0x19,
	0xe2, 0x66, 0x5f, 0x96, 0x6e, 0xa7, 0x72, 0xd2, 0x10, 0x85, 0x7c, 0x0a, 0xea, 0x44, 0x2e, 0x3d,
	0xb3, 0x6f, 0x0d, 0x2c, 0xdf, 0x74, 0x45, 0xef, 0x5c, 0x4d, 0x65, 0x54, 0x0b, 0xb0, 0xca, 0xff,
	0x7e, 0x03, 0x96, 0xe2, 0x5b, 0x38, 0x52, 0x47, 0xef, 0x84, 0xc7, 0x77, 0xa4, 0xb7, 0x65, 0x6e,
	0x5f, 0xb8, 0x07, 0xc4, 0x6d, 0x7e, 0x4e, 0xfa, 0x20, 0xef, 0xe0, 0x5a, 0xab, 0x87, 0x67, 0xb3,
	0xc8, 0x93, 0x1f, 0xd0, 0xf2, 0x79, 0xc8, 0x3a, 0x6d, 0x4f, 0x94, 0x32, 0x2a, 0x7e, 0x4e, 0xfb,
	0x3e, 0x6c, 0x8d, 0x93, 0xd9, 0xa3, 0x41, 0xc5, 0x3d, 0xf5, 0xc4, 0xf1, 0xd5, 0x46, 0x82, 0xb0,
	0xc9, 0x4b, 0x99, 0xbb, 0x82, 0xc2, 0xf3, 0x83, 0xea, 0x80, 0xf0, 0x58, 0xe8, 0x43, 0xa1, 0xb8,
	0xe1, 0x45, 0x80, 0xa0, 0x3a, 0x36, 0x5d, 0xe6, 0x4b, 0x31, 0xa2, 0x63, 0xc7, 0xe9, 0x9b, 0x86,
	0xa8, 0x4e, 0x7c, 0x70, 0x33, 0x48, 0xd7, 0x2b, 0xed, 0xce, 0x2e, 0x87, 0x30, 0x3a, 0xf1, 0x33,
	0xa8, 0xcd, 0xf3, 0xf1, 0x0a, 0x04, 0xd2, 0xf1, 0xdf, 0x62, 0xbf, 0xb4, 0x8a, 0x7e, 0x08, 0x03,
	0x30, 0x2a, 0xfe, 0x8b, 0x39, 0x7b, 0x8c, 0x08, 0xc3, 0xa9, 0x48, 0xc2, 0x7e, 0x35, 0x47, 0x03,
	0xdc, 0x09, 0x29, 0x94, 0x54, 0xda, 0x9d, 0x1a, 0x83, 0x38, 0x3d, 0x0c, 0x11, 0x37, 0x47, 0x03,
	0x52, 0xe7, 0x3d, 0x1e, 0x91, 0x78, 0xa3, 0x21, 0x33, 0xc9, 0x1e, 0x07, 0x9d, 0x38, 0xee, 0xc0,
	0xf0, 0x4b, 0xab, 0x28, 0xea, 0x8e, 0x44, 0xdf, 0x16, 0x68, 0x35, 0xfe, 0xc2, 0xc4, 0xc0, 0xf0,
	0xa7, 0xb0, 0xc2, 0xab, 0xaf, 0x82, 0xd5, 0xda, 0x44, 0x56, 0x1d, 0x6b, 0x10, 0xb0, 0xaa, 0xc0,
	0xd5, 0xf1, 0x86, 0xc4, 0xd8, 0xac, 0xa3, 0x16, 0xb6, 0x12, 0x2d, 0x92, 0x58, 0x88, 0x9e, 0xee,
	0x8d, 0x5c, 0x23, 0xea, 0xe9, 0x91, 0x6d, 0xf9, 0x4c, 0x1f, 0x8b, 0xa8, 0x0f, 0xa6, 0xe1, 0x9a,
	0x28, 0xc7, 0x83, 0x09, 0x5e, 0x1a, 0xe8, 0x7e, 0x9c, 0x14, 0xf7, 0x66, 0x73, 0xa8, 0xfb, 0x24,
	0x5d, 0x30, 0x20, 0xe3, 0x44, 0x9e, 0x7f, 0xde, 0x37, 0x4b, 0x1b, 0xe1, 0x80, 0x94, 0xa9, 0xda,
	0xac, 0x8c, 0xb4, 0xe1, 0xc5, 0x71, 0xb2, 0xf0, 0x8b, 0x55, 0xaa, 0xf7, 0x0d, 0xf7, 0xd4, 0xf4,
	0xfc, 0xd2, 0x26, 0xb2, 0x51, 0x13, 0x6c, 0x82, 0xdf, 0x4c, 0x88, 0x06, 0xc7, 0x24, 0x47, 0x70,
	0xe7, 0x22, 0xa6, 0xde, 0xc0, 0xe8, 0xf7, 0x19, 0xd7, 0x12, 0x72, 0xbd, 0x39, 0x85, 0x6b, 0x5b,
	0xa0, 0x92, 0x16, 0x06, 0x30, 0x92, 0x7a, 0xf1, 0x4c, 0xdd, 0x18, 0xf9, 0xce, 0xc0, 0xf0, 0xad,
	0x2e, 0xf2, 0xf6, 0x4a, 0x3b, 0xd8, 0xc7, 0xd7, 0x93, 0x6a, 0xf2, 0xcc, 0x4a, 0x80, 0xc8, 0xf8,
	0x86, 0x53, 0xca, 0x77, 0x9e, 0x98, 0x89, 0xb9, 0x01, 0x3c, 0x20, 0x59, 0x69, 0x77, 0x3a, 0xac,
	0x50, 0x9e, 0x19, 0x62, 0x90, 0x1b, 0xcc, 0x4c, 0x84, 0xd3, 0xb0, 0xea, 0xf4, 0x31, 0x68, 0x5d,
	0xc0, 0x41, 0x8e, 0x26, 0x44, 0xcc, 0xc2, 0xaa, 0xd3, 0x4f, 0x27, 0xa1, 0xce, 0x19, 0x46, 0xa6,
	0xc7, 0x49, 0x98, 0xef, 0x22, 0x48, 0xfa, 0x96, 0xe7, 0xc7, 0x8d, 0x44, 0x21, 0x24, 0x61, 0x7b,
	0x0f, 0xd9, 0x40, 0x7c, 0x8a, 0x0b, 0x85, 0xee, 0x3f, 0x1e, 0xd9, 0x4f, 0x38, 0x0d, 0x56, 0x58,
	0x5a, 0x92, 0xef, 0x10, 0xa7, 0x18, 0x39, 0xba, 0xc2, 0x9a, 0xc9, 0xa8, 0xc2, 0x12, 0xf2, 0xeb,
	0x0a, 0x1f, 0x17, 0xd1, 0xbd, 0x2b, 0x69, 0x81, 0x43, 0xde, 0xd1, 0xa9, 0xfd, 0x32, 0xf2, 0xff,
	0x60, 0xaa, 0x11, 0x9d, 0x1a, 0x2c, 0xc3, 0x31, 0x95, 0x8e, 0x11, 0x9d, 0xf9, 0xff, 0xb6, 0x02,
	0xaf, 0x31, 0x89, 0xba, 0xcc, 0x9d, 0x09, 0x2e, 0x0a, 0x4c, 0x95, 0xab, 0x88, 0x72, 0x7d, 0x3c,
	0xdd, 0xc7, 0xbc, 0x30, 0x1a, 0x86, 0x2b, 0xf5, 0x14, 0xb4, 0x48, 0xc2, 0x3d, 0x0c, 0x0b, 0xea,
	0x23, 0xfb, 0x89, 0xed, 0x9c, 0xd9, 0x09, 0x1b, 0x2f, 0x8c, 0xe7, 0x0a, 0x9a, 0x0d, 0xb6, 0x70,
	0x1f, 0x71, 0x34, 0xd9, 0xd2, 0x0b, 0x2b, 0x7a, 0x1f, 0x5d, 0xc3, 0x09, 0x7c, 0x82, 0x61, 0x40,
	0x70, 0x18, 0xec, 0xa4, 0x33, 0x0a, 0x46, 0xc4, 0x6d, 0x5c, 0x01, 0xa5, 0xa5, 0xb4, 0xb4, 0x85,
	0xf5, 0xb3, 0x55, 0x50, 0xf2, 0x24, 0xda, 0x18, 0x19, 0x09, 0xb6, 0x04, 0x65, 0x54, 0xdb, 0xdb,
	0x17, 0xb9, 0xe6, 0x69, 0xe1, 0x1e, 0x9a, 0x0d, 0xcb, 0xc8, 0xa7, 0xb0, 0x80, 0x6e, 0x91, 0x73,
	0x56, 0xda, 0x46, 0x8e, 0x6f, 0x4e, 0xe5, 0x98, 0x16, 0xe7, 0xa1, 0xf3, 0xbc, 0x80, 0x8d, 0xc6,
	0x5b, 0xc9, 0xbe, 0x8f, 0xba, 0xdd, 0x64, 0xde, 0x2c, 0xcf, 0x68, 0xbb, 0x82, 0x35, 0x7d, 0x72,
	0xc9, 0x2e, 0x9f, 0xe8, 0x0f, 0xa3, 0xbb, 0x33, 0x0d, 0x8f, 0xe8, 0x40, 0xb0, 0x8f, 0xac, 0x9e,
	0x7c, 0x1d, 0xee, 0xea, 0x25, 0x1a, 0x9a, 0xb6, 0x3d, 0xa7, 0xc5, 0x64, 0x01, 0x69, 0x61, 0x98,
	0x41, 0x97, 0x43, 0x03, 0x37, 0x90, 0xfb, 0xa5, 0x43, 0x03, 0x89, 0x40, 0xcc, 0xf7, 0xb8, 0xad,
	0x3b, 0x71, 0x9d, 0x2f, 0x4c, 0x3b, 0xc6, 0xf7, 0xa5, 0xe7, 0xe3, 0xcb, 0x8c, 0xe2, 0x1e, 0x72,
	0x91, 0xb8, 0xbf, 0xca, 0xf5, 0xc1, 0x1c, 0x37, 0xc9, 0x77, 0x54, 0xf9, 0x99, 0x1f, 0x77, 0xd4,
	0x24, 0x67, 0xf1, 0x3d, 0x3e, 0xe0, 0x18, 0xb6, 0x79, 0xaf, 0x74, 0xf3, 0x22, 0xfb, 0xb4, 0xc8,
	0x19, 0x68, 0xf7, 0xc8, 0xf7, 0xa2, 0x6a, 0xa4, 0x41, 0x7d, 0x0b, 0x19, 0xdc, 0x9d, 0x6e, 0x80,
	0x92, 0xfe, 0x73, 0x20, 0x96, 0x34, 0x0f, 0x76, 0xb8, 0x58, 0x22, 0x01, 0xec, 0x36, 0xbf, 0xef,
	0xc5, 0x1a, 0xcf, 0x73, 0xc0, 0x5a, 0x7c, 0x36, 0x61, 0xd8, 0x06, 0x0d, 0x73, 0xe9, 0x05, 0x39,
	0x2b, 0xfe, 0x82, 0x78, 0x0f, 0xc6, 0xf2, 0xf2, 0xcc, 0xd2, 0x86, 0x71, 0x23, 0x1d, 0x8a, 0x38,
	0xaa, 0xe5, 0xf8, 0xc6, 0x8b, 0xc8, 0xf2, 0x9d, 0xe9, 0x23, 0x78, 0x52, 0xd8, 0x63, 0x29, 0x5e,
	0x48, 0x1e, 0xf0, 0x41, 0xd4, 0x65, 0xbb, 0x4c, 0x2e, 0x77, 0xe9, 0xce, 0x25, 0x74, 0x35, 0xb6,
	0xf1, 0xc6, 0xb1, 0x14, 0x41, 0xd5, 0xbf, 0xb5, 0x08, 0x31, 0x67, 0x78, 0x05, 0x0a, 0x95, 0x5a,
	0xad, 0x8e, 0x69, 0xe4, 0xcd, 0x56, 0x4d, 0x2b, 0x2a, 0x64, 0x0d, 0x8a, 0xed, 0xa3, 0xdd, 0x0e,
	0xad, 0x54, 0x23, 0xe8, 0x0c, 0xd9, 0x84, 0xd5, 0x83, 0xa3, 0x46, 0xa7, 0x7e, 0xd8, 0xa8, 0x57,
	0x2b, 0x51, 0x01, 0x66, 0xc0, 0xd7, 0xea, 0x0f, 0xea, 0xed, 0x10, 0x34, 0x4b, 0x96, 0x00, 0x0e,
	0x5b, 0x0f, 0x35, 0xca, 0xbf, 0xe7, 0x30, 0x99, 0xbd, 0xd5, 0xac, 0x56, 0x3a, 0x5a, 0x53, 0x22,
	0x9d, 0x27, 0xeb, 0xb0, 0xb2, 0x4f, 0xb5, 0x4a, 0x47, 0xa3, 0x7a, 0xe7, 0x7e, 0x45, 0x80, 0x17,
	0xc8, 0x0d, 0xd8, 0x89, 0x81, 0x5b, 0x54, 0xd7, 0xbe, 0x73, 0x54, 0x69, 0xe8, 0x9d, 0x16, 0x47,
	0x59, 0x24, 0x04, 0x96, 0x1a, 0x5a, 0xbb, 0x2d, 0x91, 0x65, 0xc9, 0x55, 0x28, 0x47, 0xb0, 0x31,
	0x1a, 0x60, 0x82, 0xc6, 0x41, 0x39, 0x26, 0x40, 0xb3, 0xd5, 0x49, 0x60, 0xe6, 0x19, 0x66, 0x53,
	0xdb, 0x97, 0x44, 0x2d, 0xb0, 0x0a, 0x0f, 0x1b, 0x47, 0x6d, 0xbd, 0x5d, 0xdf, 0x17, 0xb0, 0x25,
	0x52, 0x84, 0xfc, 0xa1, 0x46, 0xab, 0x5a, 0xb3, 0xc3, 0x21, 0xcb, 0x8c, 0x30, 0xbc, 0xf2, 0x83,
	0xa0, 0x22, 0x59, 0x86, 0x5c, 0xf3, 0xe8, 0x60, 0x37, 0x50, 0xc6, 0x0a, 0xa3, 0xda, 0x6d, 0xb5,
	0x1a, 0x5a, 0x20, 0x38, 0x61, 0x28, 0xed, 0x0e, 0xad, 0x37, 0xf7, 0x39, 0x60, 0x95, 0x14, 0x20,
	0x8b, 0xa7, 0xc8, 0xf8, 0xb9, 0x86, 0x1a, 0x3e, 0xa2, 0x92, 0x38, 0xeb, 0xac, 0x37, 0xb4, 0x83,
	0xc3, 0xce, 0x23, 0xbd, 0x42, 0xf7, 0x8f, 0x0e, 0x42, 0x09, 0x36, 0x98, 0xea, 0x3b, 0xad, 0xcf,
	0x34, 0x81, 0xb8, 0xc9, 0xbe, 0x2b, 0x94, 0x56, 0x1e, 0xf1, 0xef, 0x12, 0x63, 0xdd, 0xa8, 0xb7,
	0x05, 0xfa, 0x16, 0xa2, 0xdf, 0x3f, 0x6a, 0x7e, 0xc6, 0xbf, 0xcb, 0x64, 0x07, 0xb6, 0x1a, 0xad,
	0x6a, 0xa5, 0xa1, 0xc7, 0x9f, 0xb8, 0xe4, 0xc5, 0xdb, 0xe4, 0x26, 0x5c, 0xab, 0xd2, 0x16, 0xd3,
	0x71, 0x65, 0xb7, 0xa1, 0xa5, 0x22, 0x5d, 0xe1, 0x57, 0x24, 0x1a, 0x81, 0xac, 0x3b, 0xa4, 0x04,
	0x6b, 0x11, 0x0e, 0x5e, 0x84, 0xe2, 0x25, 0x57, 0xc9, 0x16, 0xac, 0x1f, 0x35, 0x3f, 0x6b, 0xb6,
	0x1e, 0x36, 0xf5, 0xb8, 0xda, 0xae, 0x91, 0x32, 0x6c, 0x54, 0x0e, 0x0f, 0xb5, 0x66, 0x4d, 0x7f,
	0x78, 0xbf, 0xde, 0xd1, 0xda, 0x87, 0x95, 0xa0, 0x82, 0xeb, 0x78, 0x07, 0x82, 0x6a, 0xa9, 0x85,
	0x37, 0x58, 0x0b, 0x76, 0xb5, 0xfd, 0x7a, 0x53, 0xd7, 0x0e, 0x76, 0xb5, 0x5a, 0x4d, 0xab, 0x61,
	0x81, 0x8e, 0x4a, 0x28, 0xaa, 0xac, 0x1f, 0x19, 0x9d, 0xd4, 0xe8, 0x9b, 0x4c, 0x99, 0x69, 0x2d,
	0xb9, 0xc5, 0x24, 0x8f, 0x5a, 0xa2, 0x3f, 0xac, 0x77, 0xee, 0xeb, 0x47, 0xf5, 0x5a, 0xbb, 0xf8,
	0x1a, 0xab, 0x25, 0xd9, 0xa6, 0xa8, 0xf8, 0x2e, 0x1b, 0xf0, 0x47, 0xf5, 0x5a, 0x92, 0xe1, 0x1b,
	0x24, 0x0f, 0x8b, 0x0d, 0x4d, 0x28, 0xff, 0x6d, 0x36, 0x12, 0xd8, 0xd7, 0x83, 0x8a, 0x50, 0xc8,
	0x3b, 0x01, 0x84, 0x49, 0x88, 0x90, 0x77, 0x99, 0x08, 0x8d, 0x7a, 0xf3, 0x33, 0xad, 0x16, 0x2a,
	0x9b, 0x97, 0x7c, 0xcc, 0x34, 0x14, 0x94, 0xb4, 0x1a, 0x47, 0x07, 0xcd, 0xa8, 0xec, 0x13, 0xd6,
	0x22, 0x51, 0x46, 0x5b, 0x0f, 0xa3, 0x82, 0x0a, 0x1b, 0xf0, 0xe1, 0xb5, 0x92, 0x10, 0xbc, 0xcb,
	0xa6, 0x3c, 0x6f, 0x28, 0xce, 0x7a, 0x0e, 0xad, 0xaa, 0xbf, 0xa3, 0xa0, 0xcd, 0x4e, 0x9c, 0x35,
	0xb0, 0xe1, 0xc8, 0x9a, 0xa9, 0x8b, 0xcb, 0x95, 0xb5, 0xe2, 0x37, 0x42, 0xd0, 0x21, 0xd5, 0xf0,
	0xea, 0x4b, 0x51, 0x11, 0x2a, 0xe0, 0xa0, 0xd6, 0x03, 0x8d, 0x6a, 0xfb, 0xf5, 0x56, 0xb3, 0x38,
	0x13, 0xa2, 0x6a, 0xbf, 0x24, 0xa8, 0x33, 0x6c, 0xfc, 0x23, 0x88, 0x19, 0x9c, 0x07, 0xcc, 0x7e,
	0xb0, 0x71, 0x21, 0xb3, 0xd3, 0x3b, 0xad, 0xc3, 0x86, 0xb6, 0xd7, 0x29, 0xce, 0x31, 0x7d, 0x60,
	0x11, 0xe7, 0x5a, 0xd3, 0x77, 0x1f, 0xe9, 0xec, 0x47, 0x71, 0x5e, 0xfd, 0xf9, 0x0c, 0x5c, 0x15,
	0x89, 0xde, 0x1d, 0xf1, 0x80, 0xa1, 0xe5, 0xd8, 0xb1, 0x04, 0x8b, 0x8f, 0xa1, 0x14, 0x4b, 0x1e,
	0xf2, 0x23, 0x3c, 0x9e, 0x03, 0x15, 0x1c, 0x3d, 0x6d, 0x48, 0x19, 0x40, 0x12, 0x33, 0x72, 0x0c,
	0xaf, 0x88, 0x4d, 0xbc, 0xef, 0xf0, 0x8d, 0x65, 0xd7, 0x31, 0xdd, 0x2e, 0x73, 0xf1, 0x5c, 0x73,
	0xe0, 0x3c, 0x35, 0xfa, 0x31, 0x9e, 0xb1, 0xe3, 0xac, 0x17, 0x38, 0x65, 0xc7, 0x61, 0xbb, 0xcd,
	0xaa, 0x20, 0xa3, 0x9c, 0x4a, 0xae, 0x63, 0x0f, 0xae, 0x84, 0x0f, 0x51, 0x8e, 0xf8, 0xfb, 0x9c,
	0x83, 0xc8, 0x65, 0xe2, 0xa1, 0x86, 0x90, 0xe9, 0x56, 0x80, 0x7a, 0x64, 0xf5, 0x58, 0xe3, 0xc3,
	0x75, 0xc5, 0x23, 0x55, 0x28, 0x87, 0x7c, 0x84, 0xeb, 0x20, 0x71, 0x89, 0x3d, 0x3a, 0x58, 0x0a,
	0x10, 0xb9, 0x73, 0x10, 0x31, 0x51, 0x7f, 0x91, 0x81, 0x25, 0xa1, 0xd4, 0x48, 0x89, 0x4b, 0x61,
	0x24, 0x86, 0xef, 0x52, 0x14, 0xf9, 0xe1, 0xe0, 0x34, 0x2f, 0x20, 0x2f, 0x03, 0xc9, 0x35, 0xc8,
	0x3d, 0x76, 0x3c, 0xe9, 0xed, 0x6d, 0xb6, 0x58, 0x03, 0x03, 0x09, 0xff, 0x73, 0x0b, 0x16, 0x11,
	0x81, 0x3f, 0xba, 0xcd, 0x4a, 0x17, 0xd8, 0x37, 0x73, 0x27, 0xbf, 0x05, 0x9b, 0x12, 0xad, 0x6e,
	0x79, 0xba, 0x6d, 0x9e, 0x62, 0x80, 0x37, 0xde, 0xa2, 0xb5, 0x88, 0x5d, 0xdd, 0x6b, 0x0a, 0x14,
	0xf2, 0x2e, 0xac, 0x05, 0x8c, 0x63, 0xa4, 0xb1, 0xb7, 0x14, 0x57, 0x44, 0x5d, 0x12, 0xdd, 0x77,
	0x30, 0xe3, 0x39, 0xe8, 0x21, 0x91, 0xab, 0xc1, 0x93, 0x3f, 0x6e, 0xc5, 0xae, 0x60, 0x4c, 0x18,
	0x78, 0x98, 0x07, 0x1d, 0x2b, 0x20, 0xaf, 0xc3, 0x12, 0x8a, 0x12, 0x26, 0x50, 0x89, 0xdc, 0x0f,
	0x39, 0xed, 0x91, 0x21, 0x74, 0x44, 0x96, 0x14, 0x79, 0x13, 0x96, 0xe5, 0x96, 0x33, 0x8a, 0xc5,
	0x24, 0x45, 0x21, 0x6a, 0x35, 0x23, 0x79, 0x05, 0xf2, 0x61, 0x73, 0x53, 0x93, 0x3c, 0x40, 0x34,
	0xf5, 0xc8, 0xea, 0xa9, 0xbf, 0x0c, 0x4b, 0xb8, 0x0f, 0x71, 0xc2, 0x34, 0xe5, 0xbb, 0xb0, 0x10,
	0x3c, 0x83, 0xca, 0x7b, 0x78, 0x2d, 0xd6, 0xd6, 0x30, 0xb4, 0x2c, 0x90, 0x58, 0xb7, 0xd9, 0xa3,
	0x81, 0x6e, 0xb0, 0x3d, 0x8e, 0x78, 0xbb, 0x5d, 0x6c, 0x79, 0xd4, 0xdf, 0x9b, 0x83, 0x55, 0x1e,
	0x5c, 0x69, 0xfb, 0xee, 0x28, 0x3a, 0xc6, 0xb9, 0x06, 0x39, 0x1e, 0x94, 0x89, 0x62, 0x7a, 0x05,
	0x0a, 0x1c, 0x84, 0xee, 0xc9, 0x6d, 0x58, 0xea, 0x99, 0x5d, 0x6b, 0x60, 0xf4, 0xf5, 0x61, 0xdf,
	0xe8, 0x9a, 0xe1, 0x33, 0x9f, 0x02, 0x7a, 0x88, 0x40, 0xcc, 0x6b, 0x18, 0xb9, 0x2e, 0x7f, 0x7d,
	0xcb, 0xe9, 0x05, 0xf1, 0xe5, 0x7c, 0x00, 0xac, 0x3a, 0x3d, 0xe4, 0x15, 0xf4, 0xb8, 0x88, 0xae,
	0xcc, 0x8a, 0x27, 0x43, 0x05, 0x94, 0x87, 0x55, 0xbe, 0x09, 0x25, 0xef, 0xb1, 0x73, 0xa6, 0xfb,
	0x8f, 0x9d, 0x91, 0x67, 0xd8, 0x3d, 0x4f, 0xf7, 0xcc, 0xa1, 0xe1, 0x1a, 0xbe, 0x23, 0x8e, 0x1f,
	0xe8, 0x06, 0x2b, 0xef, 0x04, 0xc5, 0xed, 0xa0, 0x94, 0xbc, 0x01, 0x6b, 0x18, 0xd2, 0xe8, 0xe2,
	0x7b, 0x48, 0x96, 0x7d, 0x2a, 0xaa, 0xc1, 0x47, 0x64, 0x29, 0x19, 0x79, 0x66, 0x25, 0x2c, 0xe2,
	0x75, 0xb1, 0xe6, 0x05, 0x21, 0x11, 0x8e, 0xbb, 0x20, 0x9a, 0x27, 0xa0, 0x1c, 0x8d, 0xc0, 0xec,
	0xb1, 0xe1, 0xf1, 0xdc, 0x81, 0x02, 0xc5, 0xdf, 0x4c, 0x75, 0x98, 0xc5, 0x29, 0xd4, 0x92, 0xe5,
	0xb3, 0x88, 0x81, 0x84, 0x4e, 0x5e, 0x83, 0x55, 0x44, 0x60, 0x22, 0x0d, 0x2c, 0x7b, 0xe4, 0xe9,
	0x9e, 0x75, 0x1a, 0x84, 0x47, 0x8a, 0xac, 0xe8, 0xc8, 0x33, 0x0f, 0x58, 0x41, 0xdb, 0x3a, 0xb5,
	0xc9, 0x2b, 0xb0, 0x72, 0xc2, 0xac, 0x3c, 0x13, 0xc5, 0xe8, 0x76, 0x47, 0xae, 0xd1, 0x3d, 0x17,
	0x71, 0x91, 0x62, 0x50, 0x50, 0x11, 0x70, 0xd6, 0xd2, 0xd4, 0x60, 0x5f, 0x9e, 0xb7, 0xd4, 0x1b,
	0x8f, 0xf0, 0xc9, 0x14, 0x72, 0x30, 0xae, 0x10, 0xa7, 0x90, 0xa2, 0x70, 0x77, 0xa0, 0x38, 0x16,
	0xba, 0x5b, 0xc2, 0x6e, 0x5d, 0xea, 0xc5, 0xe3, 0x75, 0xf7, 0x60, 0x3d, 0x3d, 0xec, 0xb5, 0x8c,
	0xe2, 0xaf, 0xf6, 0x52, 0xe2, 0x5c, 0x6f, 0xc3, 0xc6, 0x84, 0xa8, 0x56, 0x91, 0x87, 0xdc, 0x7a,
	0x29, 0x61, 0x2c, 0xf5, 0x1f, 0x2b, 0xb0, 0x91, 0xfe, 0x7a, 0x45, 0xda, 0xbf, 0x0a, 0x28, 0x97,
	0xf9, 0x57, 0x81, 0x99, 0xcb, 0xfe, 0xab, 0x40, 0xe6, 0x79, 0xfe, 0x55, 0x60, 0x36, 0xf5, 0x5f,
	0x05, 0x7e, 0x57, 0x81, 0x2d, 0x34, 0x28, 0x68, 0xa7, 0xd8, 0x62, 0x2e, 0x9f, 0x24, 0xbd, 0x09,
	0xeb, 0xf2, 0x55, 0x2a, 0xc7, 0x8f, 0x9e, 0xa1, 0x66, 0xcc, 0x48, 0x74, 0x9b, 0x8a, 0x15, 0xe1,
	0x3b, 0xd4, 0xc7, 0x70, 0x2d, 0xf1, 0xec, 0x87, 0x1f, 0x70, 0x8e, 0xde, 0x2c, 0xba, 0xf8, 0x4f,
	0x08, 0xb6, 0xe5, 0x97, 0x3f, 0x42, 0xd9, 0xf8, 0xe3, 0x1f, 0xea, 0xaf, 0x2a, 0xb0, 0x79, 0x60,
	0xba, 0xa7, 0x66, 0xcb, 0xb5, 0x4e, 0x2d, 0xfb, 0xc0, 0x79, 0x1a, 0x3d, 0x9c, 0xb0, 0x03, 0xe0,
	0xb9, 0xdd, 0xf8, 0x3b, 0xb0, 0x59, 0xcf, 0xed, 0x0a, 0xcd, 0x6c, 0xc2, 0x02, 0x2b, 0x8e, 0xde,
	0x7a, 0x9d, 0xf7, 0xdc, 0x2e, 0x53, 0xf1, 0x0e, 0x40, 0xcf, 0xf3, 0xe3, 0xaf, 0xb9, 0x66, 0x7b,
	0xe1, 0x02, 0xb4, 0x09, 0x0b, 0x3d, 0xcf, 0x97, 0x5e, 0x6b, 0x9d, 0xef, 0xa1, 0x9d, 0x54, 0xff,
	0x51, 0x0e, 0xd6, 0xf9, 0x85, 0x7b, 0xbc, 0xe8, 0x36, 0x8c, 0xee, 0x74, 0xbc, 0x00, 0xd9, 0xc8,
	0x94, 0x8f, 0x1d, 0xd2, 0x2f, 0x06, 0xc9, 0xae, 0xcc, 0xee, 0xe3, 0xc3, 0xcb, 0x11, 0xf2, 0xd8,
	0x51, 0x7d, 0x9e, 0x21, 0x84, 0x76, 0xbf, 0x09, 0xd7, 0x1e, 0x5b, 0xbd, 0x1e, 0x6e, 0xfc, 0x83,
	0xa7, 0x9c, 0x59, 0xaf, 0x48, 0x6f, 0x03, 0x64, 0x92, 0x1c, 0xca, 0x9c, 0xa2, 0xed, 0xf3, 0xf9,
	0xc7, 0xba, 0x2a, 0x7c, 0x26, 0xe0, 0x21, 0xdc, 0x42, 0x01, 0x2e, 0x62, 0x3a, 0x9b, 0x64, 0x7a,
	0x95, 0x91, 0xdd, 0x9f, 0xcc, 0xb8, 0x03, 0xea, 0x18, 0x4f, 0xf1, 0x28, 0xb9, 0xc4, 0x76, 0x2e,
	0xc9, 0x76, 0x27, 0x2e, 0xab, 0x78, 0xaa, 0x3c, 0xe4, 0xfa, 0x39, 0xbc, 0x98, 0x2e, 0xee, 0x38,
	0xeb, 0xf9, 0x24, 0xeb, 0x1b, 0xe3, 0x12, 0x27, 0xd9, 0xdf, 0x87, 0xed, 0xae, 0x63, 0xf7, 0x2c,
	0x36, 0xd3, 0x8d, 0x3e, 0xb7, 0xc1, 0x12, 0xcb, 0x85, 0x24, 0xcb, 0x92, 0x84, 0x8d, 0xb6, 0x39,
	0xe4, 0xf4, 0x1d, 0xb8, 0x8e, 0x82, 0x4e, 0x63, 0xb7, 0x98, 0x64, 0x77, 0x85, 0x91, 0x54, 0x27,
	0xb1, 0xfc, 0x2e, 0xdc, 0xf6, 0x98, 0x9b, 0xea, 0x8e, 0x62, 0x41, 0x33, 0x91, 0x8b, 0x2f, 0xf1,
	0xcd, 0x26, 0xf9, 0x5e, 0x67, 0x74, 0x74, 0x24, 0xc5, 0xbf, 0x44, 0x1e, 0x7e, 0xc8, 0xbb, 0x0b,
	0x2f, 0xa3, 0xb8, 0x97, 0xab, 0x00, 0x92, 0x15, 0xe0, 0x18, 0x6a, 0x5f, 0x54, 0xc9, 0x9b, 0xb0,
	0x3c, 0x60, 0x33, 0x57, 0xe2, 0x94, 0x4b, 0x72, 0x2a, 0x20, 0x46, 0x48, 0xf2, 0x01, 0xac, 0xa1,
	0x5c, 0x49, 0xba, 0x7c, 0x92, 0x6e, 0x85, 0xa1, 0x1d, 0xc4, 0x68, 0xdf, 0x03, 0x12, 0x06, 0x64,
	0x22, 0xca, 0x42, 0x92, 0xb2, 0x18, 0x20, 0x85, 0x84, 0x9f, 0xc0, 0x26, 0xef, 0xbb, 0x71, 0xea,
	0xa5, 0x24, 0x35, 0x8a, 0x57, 0x4d, 0x72, 0x68, 0xc0, 0x4e, 0x48, 0x1c, 0xa6, 0x14, 0xcb, 0x83,
	0x73, 0x79, 0x6c, 0x8e, 0x76, 0xa3, 0x54, 0x64, 0x81, 0x1e, 0x72, 0x3b, 0x02, 0x35, 0x2e, 0x4f,
	0x2a, 0xcb, 0x62, 0xea, 0x0c, 0xad, 0x4e, 0x66, 0x9b, 0x4c, 0xb9, 0x5e, 0x99, 0x96, 0x72, 0xfd,
	0x36, 0xa0, 0x86, 0xf5, 0x18, 0x05, 0x49, 0x52, 0xa0, 0x31, 0xdb, 0x8f, 0xa8, 0xee, 0xc3, 0xf6,
	0xd0, 0xb4, 0xbb, 0x56, 0x5f, 0x37, 0x6c, 0xdb, 0xf1, 0xf9, 0xfa, 0x1a, 0x89, 0xbc, 0x3a, 0x36,
	0x9f, 0x38, 0x76, 0x25, 0x44, 0x1e, 0x9b, 0x4f, 0xd3, 0xd8, 0xad, 0xa5, 0xce, 0xa7, 0xc3, 0x09,
	0x2c, 0xd5, 0x3f, 0xc4, 0xfb, 0xba, 0x93, 0x6e, 0x24, 0x90, 0xef, 0x41, 0x21, 0xba, 0xce, 0xc0,
	0xaf, 0x5d, 0x66, 0xee, 0xe4, 0xee, 0x7d, 0xf3, 0xa2, 0xab, 0x0c, 0x77, 0x03, 0x58, 0x70, 0x13,
	0x36, 0xcc, 0x68, 0x09, 0xac, 0xfe, 0x81, 0x31, 0x2c, 0x9f, 0xc3, 0xe6, 0x04, 0x3c, 0xb6, 0x26,
	0x0c, 0x5d, 0xf3, 0xa9, 0x3e, 0x65, 0x01, 0xc9, 0x33, 0x84, 0x70, 0x4d, 0x78, 0x0d, 0x0a, 0xb6,
	0x79, 0x36, 0x6d, 0x0d, 0xc9, 0xd9, 0xe6, 0x59, 0x80, 0xae, 0xfe, 0xd6, 0xac, 0xb8, 0xb4, 0xb4,
	0x7b, 0x5e, 0x7d, 0x2c, 0x27, 0xa9, 0xec, 0x41, 0xae, 0x8b, 0x80, 0x94, 0x23, 0xf5, 0x34, 0x82,
	0xbb, 0xfc, 0x0b, 0x8f, 0xd4, 0xa1, 0x1b, 0xfe, 0x1e, 0x1b, 0x58, 0x33, 0xd3, 0x06, 0xd6, 0x6d,
	0xde, 0x5a, 0xcb, 0x19, 0x79, 0x22, 0xcd, 0x9e, 0xef, 0xf1, 0x0a, 0x01, 0x94, 0x67, 0xda, 0xdf,
	0x84, 0xc2, 0x68, 0xd8, 0xc3, 0xa7, 0x75, 0x83, 0x64, 0x7c, 0x86, 0x95, 0x17, 0x40, 0x8e, 0xf4,
	0x29, 0x6c, 0x86, 0xbc, 0x7c, 0x47, 0x0f, 0x08, 0x58, 0xe7, 0xf1, 0xe7, 0x19, 0x56, 0x43, 0x19,
	0xa4, 0x8b, 0x1f, 0x6b, 0x01, 0x4d, 0xc7, 0x39, 0xe2, 0x14, 0x07, 0xc6, 0x90, 0xf1, 0x0a, 0xe8,
	0x7d, 0x47, 0x0f, 0xd9, 0x32, 0x5e, 0xf3, 0x53, 0x78, 0x09, 0x9a, 0x8e, 0x73, 0x28, 0x28, 0x18,
	0x2f, 0x4c, 0xb2, 0x1f, 0x30, 0x4f, 0x45, 0x97, 0xae, 0x0b, 0x2c, 0x24, 0x33, 0x56, 0x8b, 0x02,
	0x29, 0x48, 0x95, 0xf7, 0x54, 0x1f, 0x20, 0xd2, 0xb1, 0xf4, 0x18, 0xc9, 0x06, 0x10, 0xfe, 0x38,
	0xc8, 0x83, 0x4a, 0xe3, 0x48, 0xd3, 0xab, 0xf7, 0x2b, 0xcd, 0x20, 0xca, 0xc2, 0x23, 0x21, 0x3a,
	0x2f, 0x6e, 0x68, 0x0f, 0xb4, 0x06, 0xff, 0xef, 0x99, 0x4a, 0xad, 0x16, 0x03, 0x66, 0x48, 0x0e,
	0x16, 0x0e, 0x69, 0xeb, 0xa0, 0xd5, 0xd1, 0x8a, 0xb3, 0x04, 0x60, 0xbe, 0xa6, 0xe1, 0xef, 0x39,
	0xf5, 0xd7, 0x15, 0xb8, 0x2a, 0xc6, 0x77, 0x78, 0x87, 0x2c, 0x31, 0x39, 0xc6, 0xaf, 0x6b, 0x28,
	0x93, 0xbb, 0xf8, 0x13, 0x20, 0xf1, 0x3b, 0x7d, 0xa8, 0x45, 0x3e, 0x2a, 0x52, 0xb5, 0xb8, 0x2c,
	0xdf, 0xf0, 0x3b, 0x30, 0x86, 0xea, 0x4f, 0x15, 0x20, 0x98, 0x76, 0x61, 0xf6, 0x98, 0x5e, 0x02,
	0x29, 0xde, 0x83, 0xd9, 0x11, 0xcf, 0xe3, 0x4d, 0xfe, 0x1f, 0x55, 0x0c, 0x4f, 0x02, 0x51, 0x24,
	0x28, 0xeb, 0x00, 0x11, 0x8c, 0xcd, 0x1f, 0x11, 0x59, 0x91, 0x2e, 0xe6, 0xc7, 0xe7, 0xcf, 0x08,
	0xe3, 0x29, 0x3c, 0xf3, 0x43, 0x85, 0x02, 0xbf, 0x7c, 0x8a, 0x57, 0x47, 0xc3, 0xd7, 0x94, 0x72,
	0x08, 0xdc, 0x73, 0xd0, 0xb6, 0xfc, 0x0d, 0x05, 0x4a, 0x42, 0x85, 0x94, 0x67, 0x71, 0x49, 0x13,
	0xfc, 0x36, 0xf0, 0x97, 0x8c, 0xc3, 0x77, 0xf1, 0x83, 0xad, 0x01, 0x42, 0x83, 0xb7, 0xf0, 0x31,
	0xe5, 0x92, 0xa3, 0x99, 0xf6, 0xa9, 0xff, 0x38, 0xa8, 0x86, 0x23, 0x21, 0x88, 0xdc, 0x01, 0x9e,
	0x43, 0xc6, 0x07, 0x54, 0x26, 0x39, 0xa0, 0x78, 0x4a, 0x19, 0xa6, 0x1c, 0x6f, 0xc0, 0xbc, 0x73,
	0x72, 0xe2, 0x99, 0xbe, 0xd8, 0x0b, 0x88, 0x2f, 0xf5, 0x6f, 0x66, 0x60, 0x9b, 0x7b, 0x41, 0x2d,
	0xe6, 0xbf, 0x1d, 0x31, 0x46, 0x72, 0x47, 0x6f, 0xc2, 0x82, 0xe5, 0x05, 0xff, 0x77, 0x33, 0x73,
	0x67, 0x91, 0xce, 0x5b, 0x1e, 0xfa, 0xfa, 0x31, 0x0f, 0x77, 0x66, 0xb2, 0x87, 0xfb, 0x01, 0xac,
	0x31, 0x1f, 0x68, 0xcc, 0xf9, 0x19, 0xf3, 0x52, 0x57, 0x18, 0x5a, 0xdc, 0xe3, 0x49, 0x8e, 0xb2,
	0xd9, 0x69, 0x86, 0xe4, 0x55, 0x31, 0x18, 0xb8, 0x4b, 0x59, 0x9a, 0x34, 0x18, 0xf8, 0x08, 0x20,
	0xd5, 0xe0, 0xcd, 0xbe, 0xe0, 0x4f, 0xb6, 0xe6, 0xe5, 0x6b, 0xde, 0x93, 0xba, 0x4e, 0xbc, 0xcd,
	0x27, 0xfe, 0x58, 0x8b, 0x7c, 0x04, 0x39, 0x71, 0x84, 0x89, 0x7f, 0xb0, 0xb6, 0x70, 0x89, 0xbd,
	0x0d, 0x20, 0x01, 0x7f, 0xb8, 0xf0, 0x35, 0x36, 0x90, 0x3c, 0xd3, 0xf5, 0x75, 0xc3, 0x4f, 0x8f,
	0xe0, 0xe4, 0x78, 0x79, 0xc5, 0x67, 0x63, 0xea, 0x77, 0x14, 0x58, 0xa1, 0xe6, 0x29, 0xbe, 0x14,
	0x11, 0x75, 0xd0, 0x65, 0x77, 0x1a, 0xef, 0x43, 0x2e, 0x8a, 0x15, 0x05, 0xd9, 0xc9, 0x93, 0xb5,
	0x24, 0xa7, 0xbb, 0xbf, 0x05, 0x8b, 0x22, 0x66, 0xe4, 0x89, 0x6e, 0x9b, 0x4c, 0x17, 0xe4, 0xb8,
	0xab, 0xbf, 0x3f, 0x03, 0x1b, 0x5c, 0x5a, 0xdc, 0xa2, 0xc9, 0x22, 0xbf, 0xcb, 0xb7, 0x69, 0x2e,
	0x96, 0x0a, 0x99, 0x37, 0x03, 0xc5, 0x27, 0xda, 0x87, 0xfb, 0x37, 0x0e, 0x65, 0x74, 0xb8, 0x0f,
	0xe3, 0x74, 0x33, 0x17, 0xd0, 0xb1, 0x3d, 0x1a, 0xa7, 0xdb, 0x86, 0xac, 0x37, 0x34, 0xec, 0x60,
	0xf7, 0xaa, 0xdc, 0x59, 0xa4, 0x8b, 0x0c, 0x80, 0xe3, 0xf8, 0x06, 0xe4, 0xb1, 0x30, 0xfa, 0xc3,
	0x24, 0x56, 0x9e, 0x63, 0xb0, 0xe0, 0x7f, 0x92, 0xf6, 0x61, 0xd5, 0xc1, 0xcd, 0x26, 0xf3, 0xe1,
	0x23, 0xc1, 0xe7, 0xe4, 0xe7, 0x4e, 0xc6, 0x05, 0x58, 0x09, 0x68, 0xda, 0x61, 0x03, 0x3e, 0x80,
	0xb5, 0x13, 0xe4, 0xd2, 0x33, 0x63, 0xb1, 0xbe, 0xf9, 0x64, 0xbf, 0xaf, 0x20, 0x5a, 0xcd, 0x8c,
	0x02, 0x7e, 0x6a, 0x07, 0x08, 0xba, 0xb7, 0x6d, 0x67, 0xe4, 0x46, 0x49, 0xd5, 0x37, 0x20, 0x1f,
	0x7b, 0x6f, 0x5d, 0xbc, 0x7d, 0xd9, 0x95, 0xde, 0x5a, 0xdf, 0x0e, 0xfe, 0xd4, 0x2d, 0x0a, 0x2f,
	0xf0, 0x7f, 0x6e, 0x63, 0x3b, 0xd8, 0x9f, 0xe7, 0x60, 0x4b, 0x04, 0xf0, 0xc4, 0x98, 0x6f, 0x0f,
	0xcd, 0x6e, 0xc0, 0xbd, 0x09, 0x79, 0x97, 0x43, 0x65, 0x8f, 0xe0, 0x95, 0x58, 0xdc, 0x6f, 0x9c,
	0x2c, 0xf4, 0x8d, 0x30, 0xd5, 0xce, 0x8d, 0x3e, 0x92, 0x36, 0x43, 0x79, 0x7e, 0x9b, 0xa1, 0x7c,
	0x09, 0x9b, 0x31, 0x65, 0x65, 0x7a, 0x04, 0x25, 0x31, 0x29, 0xf8, 0x8e, 0x17, 0x5f, 0x02, 0xf0,
	0x78, 0x06, 0x42, 0xec, 0x41, 0xa7, 0x29, 0x26, 0x92, 0xae, 0x75, 0x53, 0x0a, 0xc9, 0x0f, 0xe0,
	0x8a, 0x31, 0x7a, 0xa6, 0x4f, 0x64, 0x3f, 0x7f, 0x59, 0xf6, 0x9b, 0xc6, 0xe8, 0x59, 0x5a, 0x39,
	0xb9, 0x0f, 0x2b, 0x7c, 0x24, 0xea, 0xdc, 0xb5, 0x40, 0xb6, 0x0b, 0xb1, 0x97, 0x55, 0x53, 0xe7,
	0x1f, 0x5d, 0x76, 0xe3, 0x70, 0xf2, 0x4d, 0xc8, 0x09, 0x4e, 0xc8, 0x63, 0x71, 0xfa, 0xc0, 0x06,
	0x37, 0x04, 0x91, 0x36, 0xac, 0x87, 0x23, 0x44, 0xa4, 0x1d, 0x73, 0x1e, 0xd9, 0x4b, 0xde, 0xfb,
	0x25, 0xae, 0x54, 0x56, 0xef, 0x05, 0x4c, 0x93, 0x71, 0x23, 0xce, 0x14, 0xe4, 0xfb, 0xf9, 0x13,
	0x23, 0x57, 0x74, 0xd5, 0x8f, 0xc7, 0x8c, 0x90, 0x69, 0x07, 0x36, 0xc5, 0x26, 0x12, 0xa7, 0xa5,
	0xac, 0xb3, 0x9c, 0x7c, 0x97, 0x7a, 0x42, 0x6c, 0x89, 0xae, 0x0d, 0x12, 0x05, 0xc8, 0xf5, 0x43,
	0xc8, 0x73, 0xae, 0x1e, 0x4e, 0x4b, 0x71, 0x41, 0xb9, 0x24, 0xb1, 0x8a, 0xcd, 0x57, 0x9a, 0x1b,
	0x44, 0x30, 0xd2, 0x80, 0x65, 0xc9, 0x2f, 0x42, 0x51, 0x0a, 0xf2, 0x29, 0xc2, 0x74, 0x1f, 0x8c,
	0x16, 0x42, 0x2f, 0x09, 0x45, 0x09, 0x2e, 0x3d, 0x1f, 0x9f, 0xeb, 0xdc, 0x17, 0x17, 0xe9, 0x62,
	0xe5, 0xc9, 0x0e, 0xbc, 0x60, 0x71, 0x2c, 0xa0, 0x64, 0x07, 0x00, 0xff, 0x8b, 0xea, 0xa9, 0xe9,
	0x7a, 0x3c, 0x1b, 0x6c, 0x91, 0x66, 0x2d, 0xaf, 0xce, 0x01, 0xea, 0x4f, 0x32, 0x90, 0x93, 0xe6,
	0x36, 0x29, 0x42, 0xbe, 0xa6, 0x35, 0xb4, 0x4e, 0xf0, 0x8a, 0xdd, 0x2c, 0xf3, 0x33, 0x3b, 0xb4,
	0xd2, 0x6c, 0x1f, 0xb6, 0xda, 0x1a, 0x3f, 0x14, 0x2e, 0x2e, 0x90, 0x32, 0x6c, 0x08, 0xa7, 0x94,
	0x9f, 0x4c, 0xb6, 0xf5, 0x16, 0xd5, 0x69, 0xeb, 0x61, 0xbb, 0xb8, 0xc8, 0xca, 0xea, 0xcd, 0xb6,
	0x46, 0x3b, 0x63, 0x65, 0x59, 0x52, 0x82, 0xb5, 0x54, 0x2a, 0xc0, 0x27, 0xf5, 0x58, 0x89, 0x38,
	0x45, 0xcc, 0x91, 0x02, 0x64, 0xf9, 0x93, 0x7a, 0xac, 0x3c, 0x1f, 0x3d, 0xb9, 0x57, 0xd5, 0x1a,
	0x8d, 0x76, 0xb1, 0x40, 0xd6, 0xa0, 0x78, 0xd4, 0xac, 0xb5, 0x74, 0x19, 0xba, 0x44, 0xb6, 0x60,
	0x9d, 0x1f, 0x5c, 0xe3, 0xd9, 0x6c, 0xa5, 0xdd, 0xae, 0xef, 0x37, 0x0f, 0xb4, 0x66, 0xa7, 0xb8,
	0xcc, 0x9a, 0x26, 0xe4, 0xe2, 0x4d, 0x2b, 0x32, 0xd7, 0x5a, 0x3c, 0xe3, 0x47, 0xeb, 0xfb, 0xf5,
	0x26, 0x1e, 0x33, 0xd6, 0xf8, 0xf9, 0x3d, 0xd5, 0x5a, 0xb4, 0xa6, 0x09, 0xe9, 0x08, 0xb9, 0x06,
	0xdb, 0xdc, 0xd1, 0xc6, 0x63, 0xe2, 0xa3, 0x24, 0xf3, 0x55, 0xd6, 0xe8, 0xdd, 0x0a, 0x53, 0x50,
	0x4b, 0xaf, 0xde, 0xa7, 0xad, 0x03, 0xd6, 0x90, 0x87, 0xb4, 0xde, 0xd1, 0x8a, 0x6b, 0xac, 0x4c,
	0xc0, 0x3a, 0x2d, 0x1d, 0xb1, 0x82, 0xb2, 0x75, 0x9e, 0x1f, 0x11, 0x32, 0x16, 0x4e, 0xff, 0x06,
	0x6b, 0xed, 0x61, 0xa5, 0xdd, 0xd1, 0x6a, 0x7a, 0x85, 0x6a, 0x95, 0xe2, 0xa6, 0x6a, 0xc0, 0x7a,
	0xea, 0xc3, 0xab, 0xe4, 0x2a, 0x00, 0xff, 0xdf, 0xc5, 0x9a, 0xe1, 0x1b, 0xe8, 0xb3, 0x2f, 0x50,
	0x09, 0x22, 0xdd, 0xf1, 0xe3, 0xc7, 0x2a, 0x89, 0x3f, 0x40, 0xe3, 0x1b, 0x33, 0xf6, 0x53, 0x7d,
	0x04, 0xdb, 0xf1, 0x2a, 0x1e, 0x98, 0xf2, 0x59, 0xd1, 0x07, 0x00, 0xd1, 0x03, 0xe3, 0xc2, 0x3d,
	0x9f, 0xfa, 0x24, 0x6c, 0x36, 0x7c, 0x5b, 0x5c, 0xfd, 0x15, 0x05, 0xae, 0x07, 0x6f, 0x43, 0x8a,
	0x1c, 0xbd, 0xd6, 0xf1, 0x0f, 0xcd, 0xae, 0x7f, 0x68, 0x58, 0x6e, 0xf4, 0x28, 0x6a, 0xf4, 0xea,
	0x87, 0x72, 0xe1, 0x5f, 0x5b, 0x84, 0xaf, 0x7d, 0xbc, 0x00, 0xf3, 0x0e, 0xf2, 0x12, 0xde, 0x43,
	0xf2, 0x25, 0x01, 0x51, 0xaa, 0x7e, 0x01, 0xd7, 0x52, 0x45, 0x90, 0x9e, 0x47, 0x79, 0x08, 0x6b,
	0x81, 0x04, 0x3a, 0xa7, 0xe2, 0xcf, 0x05, 0x29, 0xf2, 0x9f, 0x5b, 0x5c, 0xd4, 0x0e, 0xba, 0xd2,
	0x4d, 0x96, 0xa8, 0x3f, 0x82, 0xf5, 0xe0, 0x48, 0xcd, 0x47, 0x8d, 0x3c, 0xff, 0xdf, 0xd3, 0x49,
	0x47, 0x75, 0x7c, 0xc9, 0x9c, 0x7e, 0x54, 0xa7, 0xfe, 0xf3, 0x4c, 0xf8, 0x0c, 0x2d, 0xd6, 0xc8,
	0xe4, 0xf0, 0x76, 0x79, 0x38, 0x2b, 0xf2, 0x05, 0xe4, 0x47, 0x61, 0xb9, 0x27, 0x10, 0x7f, 0x14,
	0x76, 0x12, 0x69, 0xfa, 0xa3, 0xb0, 0x2f, 0x40, 0x36, 0x5a, 0xd8, 0xc7, 0x7d, 0x01, 0x27, 0x58,
	0xcf, 0xf7, 0xa3, 0xe7, 0x6f, 0x0d, 0x9f, 0x0f, 0x28, 0x2f, 0xfe, 0x5a, 0x7d, 0xaa, 0xb6, 0xc2,
	0x07, 0x71, 0x05, 0xd8, 0x53, 0xff, 0x4b, 0xec, 0x61, 0xcf, 0x1c, 0x2c, 0x88, 0x74, 0xcb, 0xe2,
	0x37, 0x30, 0xed, 0x85, 0x2d, 0x14, 0x07, 0x4e, 0xcf, 0xec, 0x8b, 0x07, 0x3e, 0x1f, 0x1b, 0xae,
	0xcf, 0x5f, 0x70, 0x48, 0x0d, 0xc8, 0x16, 0x33, 0x6c, 0xe6, 0x4b, 0xd1, 0x64, 0x8f, 0x27, 0x3a,
	0x45, 0x21, 0xc8, 0xe2, 0x1c, 0x59, 0x81, 0x42, 0x10, 0x14, 0xe5, 0xa0, 0x79, 0x66, 0x89, 0x92,
	0xf1, 0xd1, 0xe2, 0x02, 0x93, 0x46, 0xd8, 0x67, 0x6e, 0x13, 0xc7, 0xa2, 0x76, 0x9c, 0x3c, 0xcb,
	0xc4, 0x49, 0x8d, 0x67, 0x15, 0x41, 0x1d, 0xc0, 0x46, 0xf0, 0xb0, 0x1d, 0xdb, 0x84, 0xda, 0xbd,
	0xd0, 0xdf, 0x6e, 0x87, 0x6f, 0x06, 0xf2, 0x37, 0x66, 0xf8, 0x13, 0x8b, 0xb1, 0x2b, 0x8e, 0x17,
	0x74, 0x61, 0xf8, 0x76, 0x20, 0x63, 0xcd, 0x5f, 0x5f, 0xfc, 0x35, 0x05, 0xae, 0xc4, 0x5d, 0xc0,
	0xaa, 0x33, 0x18, 0x18, 0x76, 0x38, 0x5c, 0x77, 0x61, 0x3d, 0xc8, 0xef, 0xe4, 0x0e, 0x42, 0x97,
	0x97, 0x8b, 0x58, 0x41, 0x72, 0xea, 0xad, 0xf2, 0x8d, 0x51, 0x8c, 0x15, 0x79, 0x09, 0xe6, 0xbc,
	0xd1, 0x50, 0xdc, 0x5d, 0xe1, 0xc1, 0x82, 0xcf, 0xee, 0xc6, 0xeb, 0xa1, 0x1c, 0x43, 0xfd, 0xdf,
	0x0a, 0xa8, 0xf8, 0x6a, 0xb8, 0x58, 0xf3, 0x6b, 0xe2, 0x21, 0x91, 0x84, 0x54, 0x21, 0x47, 0x25,
	0x0c, 0x3f, 0x4c, 0xe0, 0x48, 0x76, 0x23, 0xef, 0xd7, 0x1b, 0x9a, 0x5d, 0x61, 0x32, 0xae, 0x5d,
	0xe0, 0xfd, 0x86, 0x1e, 0x2f, 0x83, 0x91, 0xcf, 0xa1, 0x3c, 0xf6, 0x26, 0x8a, 0xee, 0x3a, 0xfd,
	0xfe, 0xb1, 0xd1, 0x7d, 0x22, 0x26, 0xe7, 0xc5, 0x4e, 0xd2, 0x66, 0xe2, 0x71, 0x14, 0x2a, 0x18,
	0xa8, 0xcf, 0xe0, 0x06, 0xbf, 0x1e, 0x92, 0xf6, 0xf2, 0x98, 0x64, 0x37, 0xc4, 0xf5, 0x12, 0x61,
	0x37, 0xf8, 0xd7, 0x57, 0x7a, 0xb8, 0x4d, 0xfd, 0x0d, 0x05, 0x54, 0x51, 0xb5, 0x93, 0xac, 0x5c,
	0xb2, 0x92, 0x3f, 0x84, 0x9d, 0x20, 0x43, 0x26, 0xfd, 0x75, 0x35, 0x3e, 0x0a, 0x45, 0xca, 0xea,
	0x85, 0x6d, 0xa1, 0x65, 0x7b, 0x22, 0x0a, 0xb3, 0x62, 0x2f, 0x24, 0x0b, 0xbc, 0xf4, 0xb1, 0xe9,
	0x89, 0xff, 0x26, 0x41, 0x14, 0xdd, 0xb2, 0xf5, 0xb4, 0x07, 0xd8, 0x94, 0xe8, 0x51, 0x89, 0x8b,
	0x5b, 0x8a, 0xaf, 0xa6, 0x5d, 0x89, 0x98, 0xd6, 0xed, 0xe4, 0x34, 0x27, 0x67, 0x70, 0x23, 0xdc,
	0x46, 0x8e, 0x6b, 0xa3, 0xeb, 0x0c, 0xa3, 0x47, 0x74, 0x9f, 0xaf, 0xda, 0xab, 0x01, 0xdb, 0x24,
	0x5e, 0x15, 0x79, 0x8e, 0x0d, 0xe4, 0xd8, 0x33, 0x57, 0x97, 0x1c, 0xc8, 0xa9, 0x8f, 0xd4, 0xcd,
	0x5e, 0xf2, 0x91, 0xba, 0x70, 0xd2, 0xcd, 0x5d, 0x34, 0xe9, 0x54, 0x13, 0x36, 0x27, 0x3d, 0xeb,
	0xf7, 0x0a, 0x64, 0x0c, 0xcf, 0xbf, 0x38, 0xbd, 0x88, 0x61, 0x31, 0x57, 0x36, 0x58, 0x36, 0xc2,
	0x08, 0x5d, 0x56, 0x40, 0xea, 0x3d, 0xf5, 0xaf, 0x2a, 0xd1, 0x0a, 0xff, 0xc7, 0x52, 0xdf, 0x6d,
	0x08, 0xde, 0x48, 0x8e, 0xff, 0xf5, 0x59, 0xf0, 0xae, 0xad, 0xd8, 0x8c, 0x8b, 0x0c, 0x17, 0x86,
	0xc6, 0x3d, 0xaa, 0x30, 0xc3, 0x85, 0xf5, 0x81, 0x73, 0xa6, 0xfe, 0x87, 0x19, 0xd8, 0x4c, 0x8e,
	0x9c, 0x28, 0xd4, 0x23, 0xbf, 0x23, 0x97, 0x76, 0xaf, 0x93, 0x3f, 0x28, 0xf7, 0x71, 0xfa, 0xc4,
	0x4e, 0x79, 0xcd, 0x14, 0x87, 0xcf, 0xf8, 0xab, 0x8c, 0x9f, 0xe3, 0x31, 0xa8, 0x6f, 0x58, 0x36,
	0xdb, 0x7f, 0x8d, 0xb1, 0xca, 0xc8, 0xaf, 0xcd, 0x4e, 0xd0, 0x5e, 0x98, 0x8a, 0x36, 0xae, 0x5f,
	0xf2, 0x14, 0x6e, 0x45, 0xec, 0xc3, 0xff, 0xa3, 0x1d, 0xaf, 0x67, 0x56, 0x5e, 0xa1, 0x2e, 0xe8,
	0x2d, 0x7a, 0x23, 0x64, 0x39, 0x09, 0x93, 0x75, 0xfa, 0xa6, 0xb8, 0xfb, 0x93, 0x7c, 0x46, 0x34,
	0x7a, 0x91, 0x93, 0x47, 0x39, 0xf9, 0x07, 0x79, 0x03, 0xe6, 0x45, 0xaa, 0xc9, 0x4c, 0xb8, 0xb1,
	0xfb, 0xec, 0x6e, 0x4a, 0xea, 0x12, 0x15, 0x78, 0xe4, 0x2d, 0xbe, 0xd6, 0x1a, 0xbe, 0x6e, 0x79,
	0xac, 0x6d, 0x7d, 0xab, 0x6b, 0xf9, 0xf1, 0x24, 0xbd, 0x22, 0x47, 0xa8, 0x7b, 0x9a, 0x28, 0x56,
	0x7f, 0x4f, 0x81, 0x35, 0x4c, 0x03, 0x9c, 0x2a, 0x95, 0x92, 0x26, 0xd5, 0xcc, 0xa5, 0xa4, 0x7a,
	0x43, 0x96, 0xca, 0x1a, 0xc8, 0x52, 0xf1, 0x21, 0x10, 0x88, 0x54, 0x17, 0x65, 0x13, 0xda, 0x31,
	0x3b, 0xbd, 0x1d, 0x7f, 0x69, 0x06, 0x36, 0xb8, 0xcd, 0xba, 0x64, 0x4b, 0x76, 0x00, 0x30, 0xdb,
	0x26, 0xba, 0x6e, 0x39, 0x47, 0xb3, 0x0c, 0xc2, 0x23, 0xed, 0x63, 0x79, 0x5c, 0x73, 0x29, 0x79,
	0x5c, 0x91, 0x36, 0x32, 0x5f, 0x49, 0x1b, 0xb3, 0xcf, 0xad, 0x8d, 0xf9, 0xe9, 0xda, 0xf8, 0x57,
	0x0a, 0x6c, 0xf0, 0x8b, 0x40, 0xd3, 0xb5, 0x91, 0xfd, 0x13, 0xdf, 0xaf, 0x7f, 0x71, 0x16, 0xd6,
	0xf1, 0xa5, 0xee, 0xb1, 0x86, 0xd4, 0x00, 0xf8, 0xdf, 0x77, 0x8c, 0x9f, 0x18, 0xa6, 0x12, 0x70,
	0x28, 0x46, 0x06, 0xb3, 0x66, 0xf0, 0x93, 0xdc, 0x82, 0xa5, 0xe8, 0xea, 0x8f, 0x6e, 0x89, 0x3f,
	0xcf, 0x9e, 0xa3, 0x79, 0x33, 0xb8, 0xa6, 0x53, 0xb7, 0x7d, 0xf2, 0x32, 0xac, 0x48, 0x58, 0xe2,
	0x1a, 0x16, 0xbf, 0x41, 0xbc, 0x1c, 0x22, 0x8a, 0x9b, 0x57, 0x71, 0xdc, 0x9e, 0x33, 0x0a, 0xfe,
	0xd0, 0x4c, 0x91, 0x70, 0x6b, 0x08, 0x56, 0xff, 0xf6, 0x0c, 0x64, 0x43, 0xb1, 0x98, 0x57, 0x2f,
	0x36, 0x06, 0x08, 0x2b, 0x2a, 0x64, 0x07, 0xb6, 0xea, 0xf6, 0x53, 0xa3, 0x6f, 0xf5, 0x1a, 0x98,
	0x15, 0xe8, 0x74, 0x9f, 0x84, 0x8f, 0xfd, 0x16, 0x1d, 0x72, 0x1d, 0xae, 0x48, 0xc5, 0x55, 0x31,
	0x34, 0x23, 0x8c, 0x21, 0xb9, 0x09, 0xd7, 0x04, 0x06, 0xf7, 0xdf, 0xac, 0x2e, 0xdb, 0x49, 0xc4,
	0xd8, 0xfc, 0x88, 0xbc, 0x00, 0xea, 0x18, 0xd2, 0x38, 0x33, 0x97, 0xed, 0x00, 0xc6, 0xf0, 0x98,
	0xed, 0x28, 0x7a, 0xa4, 0x04, 0x6b, 0x4d, 0xe6, 0x2b, 0xf4, 0x2c, 0xfb, 0x94, 0xb5, 0x8f, 0xf5,
	0xa2, 0xe5, 0xd8, 0x45, 0x9f, 0xed, 0x3a, 0x04, 0x11, 0xd6, 0xcb, 0xe6, 0x4d, 0x71, 0x44, 0x36,
	0x61, 0x55, 0x40, 0x83, 0x8a, 0x98, 0x1f, 0x55, 0x7c, 0xca, 0xea, 0x90, 0xde, 0x21, 0x36, 0xdd,
	0xa7, 0xa6, 0xcb, 0x95, 0x71, 0xa6, 0xfe, 0xca, 0x2c, 0x14, 0xc7, 0x46, 0x41, 0x43, 0xfc, 0x9f,
	0x18, 0x7f, 0xa2, 0x58, 0x1a, 0x0a, 0xb7, 0xd2, 0x1f, 0x6d, 0x8e, 0x00, 0xfc, 0xd5, 0xb5, 0xae,
	0xfc, 0x49, 0x76, 0xa1, 0x10, 0xdc, 0x72, 0x0e, 0x1e, 0x49, 0x96, 0xe2, 0x73, 0x13, 0x0c, 0x38,
	0xcd, 0x0b, 0x1a, 0x04, 0x92, 0xf7, 0x01, 0x30, 0x5b, 0x90, 0x33, 0xc8, 0xc8, 0x81, 0xb0, 0x34,
	0x43, 0x4b, 0xb3, 0x0c, 0x9b, 0x93, 0x7e, 0x0c, 0x79, 0xe1, 0xb2, 0x72, 0xe2, 0xd8, 0xbf, 0xec,
	0xa5, 0x5b, 0x37, 0x9a, 0xe3, 0x14, 0x21, 0x03, 0x71, 0xd9, 0x9a, 0x33, 0x88, 0xfd, 0x8f, 0x5e,
	0xba, 0x41, 0xa0, 0x39, 0x4e, 0xc1, 0x19, 0x7c, 0x0b, 0xf8, 0x5f, 0xdb, 0x08, 0xfa, 0x79, 0xf9,
	0xed, 0xc2, 0xd4, 0x59, 0x45, 0xf9, 0x24, 0x44, 0x90, 0xfa, 0x03, 0x28, 0xc4, 0xd4, 0x4b, 0xf2,
	0xb0, 0xd8, 0xac, 0x37, 0xf4, 0xce, 0xa3, 0x43, 0xad, 0xa8, 0xc8, 0xf7, 0x4d, 0x10, 0x32, 0x13,
	0x5e, 0x2f, 0xc1, 0xcf, 0x8c, 0x74, 0x43, 0x05, 0x01, 0xb3, 0xd2, 0x7d, 0x14, 0x04, 0xcc, 0xbd,
	0xfc, 0x47, 0x0a, 0x2c, 0x27, 0x5e, 0xce, 0x63, 0x4c, 0x2a, 0xfb, 0xfb, 0x54, 0x17, 0x07, 0xd4,
	0x4b, 0x00, 0xf8, 0x59, 0x6d, 0x1d, 0x35, 0x3b, 0x45, 0x25, 0xfc, 0xee, 0xb4, 0x3a, 0x95, 0x46,
	0x71, 0x86, 0xc9, 0x84, 0xdf, 0x95, 0x07, 0xfb, 0xc5, 0x4c, 0xf8, 0x75, 0x50, 0x6f, 0x16, 0x67,
	0xa3, 0xaf, 0xca, 0x2f, 0x15, 0xe7, 0xc8, 0x0d, 0xd8, 0xe1, 0x9c, 0xee, 0x57, 0x68, 0x07, 0xc3,
	0x5f, 0x78, 0xe6, 0x7d, 0xbf, 0xae, 0xd1, 0x0a, 0xad, 0xde, 0x7f, 0x54, 0x5c, 0x20, 0x57, 0xa0,
	0x84, 0x28, 0x69, 0xa5, 0x8b, 0x78, 0xf6, 0x1d, 0x2f, 0x2d, 0x66, 0xf1, 0x9e, 0x13, 0x03, 0xee,
	0xb6, 0x6a, 0x8f, 0x44, 0x50, 0x31, 0x00, 0xd5, 0x9b, 0xb5, 0x3a, 0xd5, 0xaa, 0x9d, 0x62, 0x2e,
	0x94, 0xba, 0x51, 0xd9, 0xd5, 0x1a, 0xc5, 0xfc, 0xee, 0x9d, 0xef, 0xbe, 0x70, 0x6a, 0xf9, 0x8f,
	0x47, 0xc7, 0x77, 0xbb, 0xce, 0xe0, 0xf5, 0x2f, 0xac, 0xc1, 0xb1, 0x71, 0x6c, 0x38, 0xaf, 0xf7,
	0x9c, 0x6e, 0xd7, 0xb1, 0x9f, 0xbe, 0x6e, 0x3d, 0x74, 0xdc, 0x27, 0xaf, 0xb3, 0x6e, 0xfa, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x63, 0x61, 0x36, 0x85, 0xc7, 0x8b, 0x00, 0x00,
}
