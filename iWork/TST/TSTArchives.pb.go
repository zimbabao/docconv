// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSTArchives.proto

package TST

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSCE "github.com/zimbabao/docconv/iWork/TSCE"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSK "github.com/zimbabao/docconv/iWork/TSK"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	TSWP "github.com/zimbabao/docconv/iWork/TSWP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CellType int32

const (
	CellType_genericCellType      CellType = 0
	CellType_spanCellType         CellType = 1
	CellType_numberCellType       CellType = 2
	CellType_textCellType         CellType = 3
	CellType_formulaCellType      CellType = 4
	CellType_dateCellType         CellType = 5
	CellType_boolCellType         CellType = 6
	CellType_durationCellType     CellType = 7
	CellType_formulaErrorCellType CellType = 8
	CellType_automaticCellType    CellType = 9
)

var CellType_name = map[int32]string{
	0: "genericCellType",
	1: "spanCellType",
	2: "numberCellType",
	3: "textCellType",
	4: "formulaCellType",
	5: "dateCellType",
	6: "boolCellType",
	7: "durationCellType",
	8: "formulaErrorCellType",
	9: "automaticCellType",
}

var CellType_value = map[string]int32{
	"genericCellType":      0,
	"spanCellType":         1,
	"numberCellType":       2,
	"textCellType":         3,
	"formulaCellType":      4,
	"dateCellType":         5,
	"boolCellType":         6,
	"durationCellType":     7,
	"formulaErrorCellType": 8,
	"automaticCellType":    9,
}

func (x CellType) Enum() *CellType {
	p := new(CellType)
	*p = x
	return p
}

func (x CellType) String() string {
	return proto.EnumName(CellType_name, int32(x))
}

func (x *CellType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CellType_value, data, "CellType")
	if err != nil {
		return err
	}
	*x = CellType(value)
	return nil
}

func (CellType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{0}
}

type CellValueType int32

const (
	CellValueType_emptyCellValueType    CellValueType = 0
	CellValueType_numberCellValueType   CellValueType = 1
	CellValueType_stringCellValueType   CellValueType = 2
	CellValueType_providedCellValueType CellValueType = 3
	CellValueType_dateCellValueType     CellValueType = 4
	CellValueType_boolCellValueType     CellValueType = 5
	CellValueType_durationCellValueType CellValueType = 6
	CellValueType_errorCellValueType    CellValueType = 7
	CellValueType_richTextCellType      CellValueType = 8
	CellValueType_currencyCellValueType CellValueType = 9
)

var CellValueType_name = map[int32]string{
	0: "emptyCellValueType",
	1: "numberCellValueType",
	2: "stringCellValueType",
	3: "providedCellValueType",
	4: "dateCellValueType",
	5: "boolCellValueType",
	6: "durationCellValueType",
	7: "errorCellValueType",
	8: "richTextCellType",
	9: "currencyCellValueType",
}

var CellValueType_value = map[string]int32{
	"emptyCellValueType":    0,
	"numberCellValueType":   1,
	"stringCellValueType":   2,
	"providedCellValueType": 3,
	"dateCellValueType":     4,
	"boolCellValueType":     5,
	"durationCellValueType": 6,
	"errorCellValueType":    7,
	"richTextCellType":      8,
	"currencyCellValueType": 9,
}

func (x CellValueType) Enum() *CellValueType {
	p := new(CellValueType)
	*p = x
	return p
}

func (x CellValueType) String() string {
	return proto.EnumName(CellValueType_name, int32(x))
}

func (x *CellValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CellValueType_value, data, "CellValueType")
	if err != nil {
		return err
	}
	*x = CellValueType(value)
	return nil
}

func (CellValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{1}
}

type TableDimensionArchive int32

const (
	TableDimensionArchive_dimensionRow    TableDimensionArchive = 0
	TableDimensionArchive_dimensionColumn TableDimensionArchive = 1
)

var TableDimensionArchive_name = map[int32]string{
	0: "dimensionRow",
	1: "dimensionColumn",
}

var TableDimensionArchive_value = map[string]int32{
	"dimensionRow":    0,
	"dimensionColumn": 1,
}

func (x TableDimensionArchive) Enum() *TableDimensionArchive {
	p := new(TableDimensionArchive)
	*p = x
	return p
}

func (x TableDimensionArchive) String() string {
	return proto.EnumName(TableDimensionArchive_name, int32(x))
}

func (x *TableDimensionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableDimensionArchive_value, data, "TableDimensionArchive")
	if err != nil {
		return err
	}
	*x = TableDimensionArchive(value)
	return nil
}

func (TableDimensionArchive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{2}
}

type SelectionTypeArchive int32

const (
	SelectionTypeArchive_deprecatedCellSelectionType        SelectionTypeArchive = 0
	SelectionTypeArchive_rowSelectionType                   SelectionTypeArchive = 1
	SelectionTypeArchive_columnSelectionType                SelectionTypeArchive = 2
	SelectionTypeArchive_deprecatedCellEditingSelectionType SelectionTypeArchive = 3
	SelectionTypeArchive_deprecatedTableNameSelectionType   SelectionTypeArchive = 4
	SelectionTypeArchive_deprecatedTableSelectionType       SelectionTypeArchive = 5
	SelectionTypeArchive_regionSelectionType                SelectionTypeArchive = 6
	SelectionTypeArchive_noSelectionType                    SelectionTypeArchive = 7
)

var SelectionTypeArchive_name = map[int32]string{
	0: "deprecatedCellSelectionType",
	1: "rowSelectionType",
	2: "columnSelectionType",
	3: "deprecatedCellEditingSelectionType",
	4: "deprecatedTableNameSelectionType",
	5: "deprecatedTableSelectionType",
	6: "regionSelectionType",
	7: "noSelectionType",
}

var SelectionTypeArchive_value = map[string]int32{
	"deprecatedCellSelectionType":        0,
	"rowSelectionType":                   1,
	"columnSelectionType":                2,
	"deprecatedCellEditingSelectionType": 3,
	"deprecatedTableNameSelectionType":   4,
	"deprecatedTableSelectionType":       5,
	"regionSelectionType":                6,
	"noSelectionType":                    7,
}

func (x SelectionTypeArchive) Enum() *SelectionTypeArchive {
	p := new(SelectionTypeArchive)
	*p = x
	return p
}

func (x SelectionTypeArchive) String() string {
	return proto.EnumName(SelectionTypeArchive_name, int32(x))
}

func (x *SelectionTypeArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SelectionTypeArchive_value, data, "SelectionTypeArchive")
	if err != nil {
		return err
	}
	*x = SelectionTypeArchive(value)
	return nil
}

func (SelectionTypeArchive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{3}
}

type FillDirectionArchive int32

const (
	FillDirectionArchive_kTSTFillDownArchive  FillDirectionArchive = 1
	FillDirectionArchive_kTSTFillUpArchive    FillDirectionArchive = 2
	FillDirectionArchive_kTSTFillRightArchive FillDirectionArchive = 3
	FillDirectionArchive_kTSTFillLeftArchive  FillDirectionArchive = 4
)

var FillDirectionArchive_name = map[int32]string{
	1: "kTSTFillDownArchive",
	2: "kTSTFillUpArchive",
	3: "kTSTFillRightArchive",
	4: "kTSTFillLeftArchive",
}

var FillDirectionArchive_value = map[string]int32{
	"kTSTFillDownArchive":  1,
	"kTSTFillUpArchive":    2,
	"kTSTFillRightArchive": 3,
	"kTSTFillLeftArchive":  4,
}

func (x FillDirectionArchive) Enum() *FillDirectionArchive {
	p := new(FillDirectionArchive)
	*p = x
	return p
}

func (x FillDirectionArchive) String() string {
	return proto.EnumName(FillDirectionArchive_name, int32(x))
}

func (x *FillDirectionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FillDirectionArchive_value, data, "FillDirectionArchive")
	if err != nil {
		return err
	}
	*x = FillDirectionArchive(value)
	return nil
}

func (FillDirectionArchive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{4}
}

type MergeActionArchive int32

const (
	MergeActionArchive_mergeActionInsert MergeActionArchive = 1
	MergeActionArchive_mergeActionRemove MergeActionArchive = 2
	MergeActionArchive_mergeActionShrink MergeActionArchive = 3
	MergeActionArchive_mergeActionGrow   MergeActionArchive = 4
)

var MergeActionArchive_name = map[int32]string{
	1: "mergeActionInsert",
	2: "mergeActionRemove",
	3: "mergeActionShrink",
	4: "mergeActionGrow",
}

var MergeActionArchive_value = map[string]int32{
	"mergeActionInsert": 1,
	"mergeActionRemove": 2,
	"mergeActionShrink": 3,
	"mergeActionGrow":   4,
}

func (x MergeActionArchive) Enum() *MergeActionArchive {
	p := new(MergeActionArchive)
	*p = x
	return p
}

func (x MergeActionArchive) String() string {
	return proto.EnumName(MergeActionArchive_name, int32(x))
}

func (x *MergeActionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MergeActionArchive_value, data, "MergeActionArchive")
	if err != nil {
		return err
	}
	*x = MergeActionArchive(value)
	return nil
}

func (MergeActionArchive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{5}
}

type HideShowActionArchive int32

const (
	HideShowActionArchive_hideShowActionHide HideShowActionArchive = 0
	HideShowActionArchive_hideShowActionShow HideShowActionArchive = 1
)

var HideShowActionArchive_name = map[int32]string{
	0: "hideShowActionHide",
	1: "hideShowActionShow",
}

var HideShowActionArchive_value = map[string]int32{
	"hideShowActionHide": 0,
	"hideShowActionShow": 1,
}

func (x HideShowActionArchive) Enum() *HideShowActionArchive {
	p := new(HideShowActionArchive)
	*p = x
	return p
}

func (x HideShowActionArchive) String() string {
	return proto.EnumName(HideShowActionArchive_name, int32(x))
}

func (x *HideShowActionArchive) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HideShowActionArchive_value, data, "HideShowActionArchive")
	if err != nil {
		return err
	}
	*x = HideShowActionArchive(value)
	return nil
}

func (HideShowActionArchive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{6}
}

type GroupingType int32

const (
	GroupingType_UNIQUE      GroupingType = 0
	GroupingType_YEAR        GroupingType = 1
	GroupingType_MONTH       GroupingType = 2
	GroupingType_DAYOFWEEK   GroupingType = 3
	GroupingType_DAY         GroupingType = 4
	GroupingType_YEARWEEK    GroupingType = 5
	GroupingType_YEARQUARTER GroupingType = 6
	GroupingType_ROUND_0     GroupingType = 10
)

var GroupingType_name = map[int32]string{
	0:  "UNIQUE",
	1:  "YEAR",
	2:  "MONTH",
	3:  "DAYOFWEEK",
	4:  "DAY",
	5:  "YEARWEEK",
	6:  "YEARQUARTER",
	10: "ROUND_0",
}

var GroupingType_value = map[string]int32{
	"UNIQUE":      0,
	"YEAR":        1,
	"MONTH":       2,
	"DAYOFWEEK":   3,
	"DAY":         4,
	"YEARWEEK":    5,
	"YEARQUARTER": 6,
	"ROUND_0":     10,
}

func (x GroupingType) Enum() *GroupingType {
	p := new(GroupingType)
	*p = x
	return p
}

func (x GroupingType) String() string {
	return proto.EnumName(GroupingType_name, int32(x))
}

func (x *GroupingType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GroupingType_value, data, "GroupingType")
	if err != nil {
		return err
	}
	*x = GroupingType(value)
	return nil
}

func (GroupingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{7}
}

type AggregateType int32

const (
	AggregateType_NONE       AggregateType = 0
	AggregateType_COUNT      AggregateType = 1
	AggregateType_TOTAL      AggregateType = 2
	AggregateType_AVERAGE    AggregateType = 3
	AggregateType_MIN        AggregateType = 4
	AggregateType_MAX        AggregateType = 5
	AggregateType_GROUPVALUE AggregateType = 9
	AggregateType_BODYROWS   AggregateType = 10
	AggregateType_INDIRECT   AggregateType = 11
)

var AggregateType_name = map[int32]string{
	0:  "NONE",
	1:  "COUNT",
	2:  "TOTAL",
	3:  "AVERAGE",
	4:  "MIN",
	5:  "MAX",
	9:  "GROUPVALUE",
	10: "BODYROWS",
	11: "INDIRECT",
}

var AggregateType_value = map[string]int32{
	"NONE":       0,
	"COUNT":      1,
	"TOTAL":      2,
	"AVERAGE":    3,
	"MIN":        4,
	"MAX":        5,
	"GROUPVALUE": 9,
	"BODYROWS":   10,
	"INDIRECT":   11,
}

func (x AggregateType) Enum() *AggregateType {
	p := new(AggregateType)
	*p = x
	return p
}

func (x AggregateType) String() string {
	return proto.EnumName(AggregateType_name, int32(x))
}

func (x *AggregateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AggregateType_value, data, "AggregateType")
	if err != nil {
		return err
	}
	*x = AggregateType(value)
	return nil
}

func (AggregateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{8}
}

type PopUpMenuModel_CellValueType int32

const (
	PopUpMenuModel_NIL_TYPE     PopUpMenuModel_CellValueType = 1
	PopUpMenuModel_BOOLEAN_TYPE PopUpMenuModel_CellValueType = 2
	PopUpMenuModel_DATE_TYPE    PopUpMenuModel_CellValueType = 3
	PopUpMenuModel_NUMBER_TYPE  PopUpMenuModel_CellValueType = 4
	PopUpMenuModel_STRING_TYPE  PopUpMenuModel_CellValueType = 5
)

var PopUpMenuModel_CellValueType_name = map[int32]string{
	1: "NIL_TYPE",
	2: "BOOLEAN_TYPE",
	3: "DATE_TYPE",
	4: "NUMBER_TYPE",
	5: "STRING_TYPE",
}

var PopUpMenuModel_CellValueType_value = map[string]int32{
	"NIL_TYPE":     1,
	"BOOLEAN_TYPE": 2,
	"DATE_TYPE":    3,
	"NUMBER_TYPE":  4,
	"STRING_TYPE":  5,
}

func (x PopUpMenuModel_CellValueType) Enum() *PopUpMenuModel_CellValueType {
	p := new(PopUpMenuModel_CellValueType)
	*p = x
	return p
}

func (x PopUpMenuModel_CellValueType) String() string {
	return proto.EnumName(PopUpMenuModel_CellValueType_name, int32(x))
}

func (x *PopUpMenuModel_CellValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PopUpMenuModel_CellValueType_value, data, "PopUpMenuModel_CellValueType")
	if err != nil {
		return err
	}
	*x = PopUpMenuModel_CellValueType(value)
	return nil
}

func (PopUpMenuModel_CellValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{10, 0}
}

type ImportWarningSetArchive_FormulaWarningType int32

const (
	ImportWarningSetArchive_THREE_D_REFERENCE                ImportWarningSetArchive_FormulaWarningType = 1
	ImportWarningSetArchive_ARRAYED_FORMULA                  ImportWarningSetArchive_FormulaWarningType = 2
	ImportWarningSetArchive_DIFFERENT_BEHAVIOR_FOR_FUNCTION  ImportWarningSetArchive_FormulaWarningType = 3
	ImportWarningSetArchive_ERROR_TOKEN                      ImportWarningSetArchive_FormulaWarningType = 4
	ImportWarningSetArchive_EXTERNAL_REFERENCE               ImportWarningSetArchive_FormulaWarningType = 5
	ImportWarningSetArchive_NATURAL_LANGUAGE_FORMULA         ImportWarningSetArchive_FormulaWarningType = 6
	ImportWarningSetArchive_REFERENCE_OUT_OF_BOUNDS          ImportWarningSetArchive_FormulaWarningType = 7
	ImportWarningSetArchive_SHARED_FORMULA_BASE_NOT_FOUND    ImportWarningSetArchive_FormulaWarningType = 8
	ImportWarningSetArchive_UNKNOWN_NAME                     ImportWarningSetArchive_FormulaWarningType = 9
	ImportWarningSetArchive_UNSUPPORTED_FORMULA              ImportWarningSetArchive_FormulaWarningType = 10
	ImportWarningSetArchive_UNSUPPORTED_FUNCTION             ImportWarningSetArchive_FormulaWarningType = 11
	ImportWarningSetArchive_UNSUPPORTED_NAME                 ImportWarningSetArchive_FormulaWarningType = 12
	ImportWarningSetArchive_TRANSPOSED_NO_ISSUES             ImportWarningSetArchive_FormulaWarningType = 13
	ImportWarningSetArchive_TRANSPOSED_WITH_ISSUES           ImportWarningSetArchive_FormulaWarningType = 14
	ImportWarningSetArchive_TRANSPOSED_WITH_ISSUES_UNCHANGED ImportWarningSetArchive_FormulaWarningType = 15
)

var ImportWarningSetArchive_FormulaWarningType_name = map[int32]string{
	1:  "THREE_D_REFERENCE",
	2:  "ARRAYED_FORMULA",
	3:  "DIFFERENT_BEHAVIOR_FOR_FUNCTION",
	4:  "ERROR_TOKEN",
	5:  "EXTERNAL_REFERENCE",
	6:  "NATURAL_LANGUAGE_FORMULA",
	7:  "REFERENCE_OUT_OF_BOUNDS",
	8:  "SHARED_FORMULA_BASE_NOT_FOUND",
	9:  "UNKNOWN_NAME",
	10: "UNSUPPORTED_FORMULA",
	11: "UNSUPPORTED_FUNCTION",
	12: "UNSUPPORTED_NAME",
	13: "TRANSPOSED_NO_ISSUES",
	14: "TRANSPOSED_WITH_ISSUES",
	15: "TRANSPOSED_WITH_ISSUES_UNCHANGED",
}

var ImportWarningSetArchive_FormulaWarningType_value = map[string]int32{
	"THREE_D_REFERENCE":                1,
	"ARRAYED_FORMULA":                  2,
	"DIFFERENT_BEHAVIOR_FOR_FUNCTION":  3,
	"ERROR_TOKEN":                      4,
	"EXTERNAL_REFERENCE":               5,
	"NATURAL_LANGUAGE_FORMULA":         6,
	"REFERENCE_OUT_OF_BOUNDS":          7,
	"SHARED_FORMULA_BASE_NOT_FOUND":    8,
	"UNKNOWN_NAME":                     9,
	"UNSUPPORTED_FORMULA":              10,
	"UNSUPPORTED_FUNCTION":             11,
	"UNSUPPORTED_NAME":                 12,
	"TRANSPOSED_NO_ISSUES":             13,
	"TRANSPOSED_WITH_ISSUES":           14,
	"TRANSPOSED_WITH_ISSUES_UNCHANGED": 15,
}

func (x ImportWarningSetArchive_FormulaWarningType) Enum() *ImportWarningSetArchive_FormulaWarningType {
	p := new(ImportWarningSetArchive_FormulaWarningType)
	*p = x
	return p
}

func (x ImportWarningSetArchive_FormulaWarningType) String() string {
	return proto.EnumName(ImportWarningSetArchive_FormulaWarningType_name, int32(x))
}

func (x *ImportWarningSetArchive_FormulaWarningType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImportWarningSetArchive_FormulaWarningType_value, data, "ImportWarningSetArchive_FormulaWarningType")
	if err != nil {
		return err
	}
	*x = ImportWarningSetArchive_FormulaWarningType(value)
	return nil
}

func (ImportWarningSetArchive_FormulaWarningType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{11, 0}
}

type TableDataList_ListType int32

const (
	TableDataList_STRING                      TableDataList_ListType = 1
	TableDataList_FORMAT                      TableDataList_ListType = 2
	TableDataList_FORMULA                     TableDataList_ListType = 3
	TableDataList_STYLE                       TableDataList_ListType = 4
	TableDataList_FORMULA_ERROR               TableDataList_ListType = 5
	TableDataList_CUSTOM_FORMAT               TableDataList_ListType = 6
	TableDataList_MULTIPLE_CHOICE_LIST_FORMAT TableDataList_ListType = 7
	TableDataList_RICH_TEXT_PAYLOAD           TableDataList_ListType = 8
	TableDataList_CONDITIONAL_STYLE           TableDataList_ListType = 9
	TableDataList_COMMENT_STORAGE             TableDataList_ListType = 10
	TableDataList_IMPORT_WARNING              TableDataList_ListType = 11
	TableDataList_CONTROL_CELL_SPEC           TableDataList_ListType = 12
)

var TableDataList_ListType_name = map[int32]string{
	1:  "STRING",
	2:  "FORMAT",
	3:  "FORMULA",
	4:  "STYLE",
	5:  "FORMULA_ERROR",
	6:  "CUSTOM_FORMAT",
	7:  "MULTIPLE_CHOICE_LIST_FORMAT",
	8:  "RICH_TEXT_PAYLOAD",
	9:  "CONDITIONAL_STYLE",
	10: "COMMENT_STORAGE",
	11: "IMPORT_WARNING",
	12: "CONTROL_CELL_SPEC",
}

var TableDataList_ListType_value = map[string]int32{
	"STRING":                      1,
	"FORMAT":                      2,
	"FORMULA":                     3,
	"STYLE":                       4,
	"FORMULA_ERROR":               5,
	"CUSTOM_FORMAT":               6,
	"MULTIPLE_CHOICE_LIST_FORMAT": 7,
	"RICH_TEXT_PAYLOAD":           8,
	"CONDITIONAL_STYLE":           9,
	"COMMENT_STORAGE":             10,
	"IMPORT_WARNING":              11,
	"CONTROL_CELL_SPEC":           12,
}

func (x TableDataList_ListType) Enum() *TableDataList_ListType {
	p := new(TableDataList_ListType)
	*p = x
	return p
}

func (x TableDataList_ListType) String() string {
	return proto.EnumName(TableDataList_ListType_name, int32(x))
}

func (x *TableDataList_ListType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableDataList_ListType_value, data, "TableDataList_ListType")
	if err != nil {
		return err
	}
	*x = TableDataList_ListType(value)
	return nil
}

func (TableDataList_ListType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{14, 0}
}

type TableSortOrderArchive_SortType int32

const (
	TableSortOrderArchive_entire_table TableSortOrderArchive_SortType = 0
	TableSortOrderArchive_row_range    TableSortOrderArchive_SortType = 1
)

var TableSortOrderArchive_SortType_name = map[int32]string{
	0: "entire_table",
	1: "row_range",
}

var TableSortOrderArchive_SortType_value = map[string]int32{
	"entire_table": 0,
	"row_range":    1,
}

func (x TableSortOrderArchive_SortType) Enum() *TableSortOrderArchive_SortType {
	p := new(TableSortOrderArchive_SortType)
	*p = x
	return p
}

func (x TableSortOrderArchive_SortType) String() string {
	return proto.EnumName(TableSortOrderArchive_SortType_name, int32(x))
}

func (x *TableSortOrderArchive_SortType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableSortOrderArchive_SortType_value, data, "TableSortOrderArchive_SortType")
	if err != nil {
		return err
	}
	*x = TableSortOrderArchive_SortType(value)
	return nil
}

func (TableSortOrderArchive_SortType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{23, 0}
}

type TableSortOrderArchive_SortRuleArchive_Direction int32

const (
	TableSortOrderArchive_SortRuleArchive_ascending  TableSortOrderArchive_SortRuleArchive_Direction = 0
	TableSortOrderArchive_SortRuleArchive_descending TableSortOrderArchive_SortRuleArchive_Direction = 1
)

var TableSortOrderArchive_SortRuleArchive_Direction_name = map[int32]string{
	0: "ascending",
	1: "descending",
}

var TableSortOrderArchive_SortRuleArchive_Direction_value = map[string]int32{
	"ascending":  0,
	"descending": 1,
}

func (x TableSortOrderArchive_SortRuleArchive_Direction) Enum() *TableSortOrderArchive_SortRuleArchive_Direction {
	p := new(TableSortOrderArchive_SortRuleArchive_Direction)
	*p = x
	return p
}

func (x TableSortOrderArchive_SortRuleArchive_Direction) String() string {
	return proto.EnumName(TableSortOrderArchive_SortRuleArchive_Direction_name, int32(x))
}

func (x *TableSortOrderArchive_SortRuleArchive_Direction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableSortOrderArchive_SortRuleArchive_Direction_value, data, "TableSortOrderArchive_SortRuleArchive_Direction")
	if err != nil {
		return err
	}
	*x = TableSortOrderArchive_SortRuleArchive_Direction(value)
	return nil
}

func (TableSortOrderArchive_SortRuleArchive_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{23, 0, 0}
}

type TableSortOrderUIDArchive_SortType int32

const (
	TableSortOrderUIDArchive_entire_table TableSortOrderUIDArchive_SortType = 0
	TableSortOrderUIDArchive_row_range    TableSortOrderUIDArchive_SortType = 1
)

var TableSortOrderUIDArchive_SortType_name = map[int32]string{
	0: "entire_table",
	1: "row_range",
}

var TableSortOrderUIDArchive_SortType_value = map[string]int32{
	"entire_table": 0,
	"row_range":    1,
}

func (x TableSortOrderUIDArchive_SortType) Enum() *TableSortOrderUIDArchive_SortType {
	p := new(TableSortOrderUIDArchive_SortType)
	*p = x
	return p
}

func (x TableSortOrderUIDArchive_SortType) String() string {
	return proto.EnumName(TableSortOrderUIDArchive_SortType_name, int32(x))
}

func (x *TableSortOrderUIDArchive_SortType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableSortOrderUIDArchive_SortType_value, data, "TableSortOrderUIDArchive_SortType")
	if err != nil {
		return err
	}
	*x = TableSortOrderUIDArchive_SortType(value)
	return nil
}

func (TableSortOrderUIDArchive_SortType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{24, 0}
}

type TableSortOrderUIDArchive_SortRuleArchive_Direction int32

const (
	TableSortOrderUIDArchive_SortRuleArchive_ascending  TableSortOrderUIDArchive_SortRuleArchive_Direction = 0
	TableSortOrderUIDArchive_SortRuleArchive_descending TableSortOrderUIDArchive_SortRuleArchive_Direction = 1
)

var TableSortOrderUIDArchive_SortRuleArchive_Direction_name = map[int32]string{
	0: "ascending",
	1: "descending",
}

var TableSortOrderUIDArchive_SortRuleArchive_Direction_value = map[string]int32{
	"ascending":  0,
	"descending": 1,
}

func (x TableSortOrderUIDArchive_SortRuleArchive_Direction) Enum() *TableSortOrderUIDArchive_SortRuleArchive_Direction {
	p := new(TableSortOrderUIDArchive_SortRuleArchive_Direction)
	*p = x
	return p
}

func (x TableSortOrderUIDArchive_SortRuleArchive_Direction) String() string {
	return proto.EnumName(TableSortOrderUIDArchive_SortRuleArchive_Direction_name, int32(x))
}

func (x *TableSortOrderUIDArchive_SortRuleArchive_Direction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableSortOrderUIDArchive_SortRuleArchive_Direction_value, data, "TableSortOrderUIDArchive_SortRuleArchive_Direction")
	if err != nil {
		return err
	}
	*x = TableSortOrderUIDArchive_SortRuleArchive_Direction(value)
	return nil
}

func (TableSortOrderUIDArchive_SortRuleArchive_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{24, 0, 0}
}

type FormulaPredicateArchive_FormulaPredicateType int32

const (
	FormulaPredicateArchive_PredNone                   FormulaPredicateArchive_FormulaPredicateType = 0
	FormulaPredicateArchive_TextStartsWith             FormulaPredicateArchive_FormulaPredicateType = 1
	FormulaPredicateArchive_TextEndsWith               FormulaPredicateArchive_FormulaPredicateType = 2
	FormulaPredicateArchive_TextContains               FormulaPredicateArchive_FormulaPredicateType = 3
	FormulaPredicateArchive_TextDoesNotContain         FormulaPredicateArchive_FormulaPredicateType = 4
	FormulaPredicateArchive_ValueEqual                 FormulaPredicateArchive_FormulaPredicateType = 5
	FormulaPredicateArchive_ValueNotEqual              FormulaPredicateArchive_FormulaPredicateType = 6
	FormulaPredicateArchive_ValueGreaterThan           FormulaPredicateArchive_FormulaPredicateType = 7
	FormulaPredicateArchive_ValueGreaterThanOrEqual    FormulaPredicateArchive_FormulaPredicateType = 8
	FormulaPredicateArchive_ValueLessThan              FormulaPredicateArchive_FormulaPredicateType = 9
	FormulaPredicateArchive_ValueLessThanOrEqual       FormulaPredicateArchive_FormulaPredicateType = 10
	FormulaPredicateArchive_ValueAboveAverage          FormulaPredicateArchive_FormulaPredicateType = 11
	FormulaPredicateArchive_ValueBelowAverage          FormulaPredicateArchive_FormulaPredicateType = 12
	FormulaPredicateArchive_ValueBetween               FormulaPredicateArchive_FormulaPredicateType = 13
	FormulaPredicateArchive_Formula                    FormulaPredicateArchive_FormulaPredicateType = 14
	FormulaPredicateArchive_Duplicates                 FormulaPredicateArchive_FormulaPredicateType = 15
	FormulaPredicateArchive_Uniques                    FormulaPredicateArchive_FormulaPredicateType = 16
	FormulaPredicateArchive_DateIsToday                FormulaPredicateArchive_FormulaPredicateType = 17
	FormulaPredicateArchive_DateIsYesterday            FormulaPredicateArchive_FormulaPredicateType = 18
	FormulaPredicateArchive_DateIsTomorrow             FormulaPredicateArchive_FormulaPredicateType = 19
	FormulaPredicateArchive_DateIsTheDate              FormulaPredicateArchive_FormulaPredicateType = 20
	FormulaPredicateArchive_DateBeforeTheDate          FormulaPredicateArchive_FormulaPredicateType = 21
	FormulaPredicateArchive_DateAfterTheDate           FormulaPredicateArchive_FormulaPredicateType = 22
	FormulaPredicateArchive_DateIsInTheRange           FormulaPredicateArchive_FormulaPredicateType = 23
	FormulaPredicateArchive_DateInTheNext              FormulaPredicateArchive_FormulaPredicateType = 24
	FormulaPredicateArchive_DateInTheLast              FormulaPredicateArchive_FormulaPredicateType = 25
	FormulaPredicateArchive_DateIsExactly              FormulaPredicateArchive_FormulaPredicateType = 26
	FormulaPredicateArchive_DateBeforeRelative         FormulaPredicateArchive_FormulaPredicateType = 27
	FormulaPredicateArchive_DateAfterRelative          FormulaPredicateArchive_FormulaPredicateType = 28
	FormulaPredicateArchive_DateBetweenRelative        FormulaPredicateArchive_FormulaPredicateType = 29
	FormulaPredicateArchive_ValueTop                   FormulaPredicateArchive_FormulaPredicateType = 30
	FormulaPredicateArchive_ValueBottom                FormulaPredicateArchive_FormulaPredicateType = 31
	FormulaPredicateArchive_ValueNotBetween            FormulaPredicateArchive_FormulaPredicateType = 32
	FormulaPredicateArchive_DateInThis                 FormulaPredicateArchive_FormulaPredicateType = 33
	FormulaPredicateArchive_IsBlank                    FormulaPredicateArchive_FormulaPredicateType = 34
	FormulaPredicateArchive_IsNotBlank                 FormulaPredicateArchive_FormulaPredicateType = 35
	FormulaPredicateArchive_TextIs                     FormulaPredicateArchive_FormulaPredicateType = 36
	FormulaPredicateArchive_TextIsNot                  FormulaPredicateArchive_FormulaPredicateType = 37
	FormulaPredicateArchive_DurationEqual              FormulaPredicateArchive_FormulaPredicateType = 38
	FormulaPredicateArchive_DurationNotEqual           FormulaPredicateArchive_FormulaPredicateType = 39
	FormulaPredicateArchive_DurationGreaterThan        FormulaPredicateArchive_FormulaPredicateType = 40
	FormulaPredicateArchive_DurationGreaterThanOrEqual FormulaPredicateArchive_FormulaPredicateType = 41
	FormulaPredicateArchive_DurationLessThan           FormulaPredicateArchive_FormulaPredicateType = 42
	FormulaPredicateArchive_DurationLessThanOrEqual    FormulaPredicateArchive_FormulaPredicateType = 43
	FormulaPredicateArchive_DurationBetween            FormulaPredicateArchive_FormulaPredicateType = 44
	FormulaPredicateArchive_DurationNotBetween         FormulaPredicateArchive_FormulaPredicateType = 45
	FormulaPredicateArchive_DurationAboveAverage       FormulaPredicateArchive_FormulaPredicateType = 46
	FormulaPredicateArchive_DurationBelowAverage       FormulaPredicateArchive_FormulaPredicateType = 47
	FormulaPredicateArchive_DurationTop                FormulaPredicateArchive_FormulaPredicateType = 48
	FormulaPredicateArchive_DurationBottom             FormulaPredicateArchive_FormulaPredicateType = 49
)

var FormulaPredicateArchive_FormulaPredicateType_name = map[int32]string{
	0:  "PredNone",
	1:  "TextStartsWith",
	2:  "TextEndsWith",
	3:  "TextContains",
	4:  "TextDoesNotContain",
	5:  "ValueEqual",
	6:  "ValueNotEqual",
	7:  "ValueGreaterThan",
	8:  "ValueGreaterThanOrEqual",
	9:  "ValueLessThan",
	10: "ValueLessThanOrEqual",
	11: "ValueAboveAverage",
	12: "ValueBelowAverage",
	13: "ValueBetween",
	14: "Formula",
	15: "Duplicates",
	16: "Uniques",
	17: "DateIsToday",
	18: "DateIsYesterday",
	19: "DateIsTomorrow",
	20: "DateIsTheDate",
	21: "DateBeforeTheDate",
	22: "DateAfterTheDate",
	23: "DateIsInTheRange",
	24: "DateInTheNext",
	25: "DateInTheLast",
	26: "DateIsExactly",
	27: "DateBeforeRelative",
	28: "DateAfterRelative",
	29: "DateBetweenRelative",
	30: "ValueTop",
	31: "ValueBottom",
	32: "ValueNotBetween",
	33: "DateInThis",
	34: "IsBlank",
	35: "IsNotBlank",
	36: "TextIs",
	37: "TextIsNot",
	38: "DurationEqual",
	39: "DurationNotEqual",
	40: "DurationGreaterThan",
	41: "DurationGreaterThanOrEqual",
	42: "DurationLessThan",
	43: "DurationLessThanOrEqual",
	44: "DurationBetween",
	45: "DurationNotBetween",
	46: "DurationAboveAverage",
	47: "DurationBelowAverage",
	48: "DurationTop",
	49: "DurationBottom",
}

var FormulaPredicateArchive_FormulaPredicateType_value = map[string]int32{
	"PredNone":                   0,
	"TextStartsWith":             1,
	"TextEndsWith":               2,
	"TextContains":               3,
	"TextDoesNotContain":         4,
	"ValueEqual":                 5,
	"ValueNotEqual":              6,
	"ValueGreaterThan":           7,
	"ValueGreaterThanOrEqual":    8,
	"ValueLessThan":              9,
	"ValueLessThanOrEqual":       10,
	"ValueAboveAverage":          11,
	"ValueBelowAverage":          12,
	"ValueBetween":               13,
	"Formula":                    14,
	"Duplicates":                 15,
	"Uniques":                    16,
	"DateIsToday":                17,
	"DateIsYesterday":            18,
	"DateIsTomorrow":             19,
	"DateIsTheDate":              20,
	"DateBeforeTheDate":          21,
	"DateAfterTheDate":           22,
	"DateIsInTheRange":           23,
	"DateInTheNext":              24,
	"DateInTheLast":              25,
	"DateIsExactly":              26,
	"DateBeforeRelative":         27,
	"DateAfterRelative":          28,
	"DateBetweenRelative":        29,
	"ValueTop":                   30,
	"ValueBottom":                31,
	"ValueNotBetween":            32,
	"DateInThis":                 33,
	"IsBlank":                    34,
	"IsNotBlank":                 35,
	"TextIs":                     36,
	"TextIsNot":                  37,
	"DurationEqual":              38,
	"DurationNotEqual":           39,
	"DurationGreaterThan":        40,
	"DurationGreaterThanOrEqual": 41,
	"DurationLessThan":           42,
	"DurationLessThanOrEqual":    43,
	"DurationBetween":            44,
	"DurationNotBetween":         45,
	"DurationAboveAverage":       46,
	"DurationBelowAverage":       47,
	"DurationTop":                48,
	"DurationBottom":             49,
}

func (x FormulaPredicateArchive_FormulaPredicateType) Enum() *FormulaPredicateArchive_FormulaPredicateType {
	p := new(FormulaPredicateArchive_FormulaPredicateType)
	*p = x
	return p
}

func (x FormulaPredicateArchive_FormulaPredicateType) String() string {
	return proto.EnumName(FormulaPredicateArchive_FormulaPredicateType_name, int32(x))
}

func (x *FormulaPredicateArchive_FormulaPredicateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaPredicateArchive_FormulaPredicateType_value, data, "FormulaPredicateArchive_FormulaPredicateType")
	if err != nil {
		return err
	}
	*x = FormulaPredicateArchive_FormulaPredicateType(value)
	return nil
}

func (FormulaPredicateArchive_FormulaPredicateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{57, 0}
}

type FormulaPredicateArchive_QualifierType int32

const (
	FormulaPredicateArchive_QualNone FormulaPredicateArchive_QualifierType = 0
	FormulaPredicateArchive_Days     FormulaPredicateArchive_QualifierType = 2
	FormulaPredicateArchive_Weeks    FormulaPredicateArchive_QualifierType = 3
	FormulaPredicateArchive_Months   FormulaPredicateArchive_QualifierType = 4
	FormulaPredicateArchive_Years    FormulaPredicateArchive_QualifierType = 5
	FormulaPredicateArchive_Ago      FormulaPredicateArchive_QualifierType = 6
	FormulaPredicateArchive_FromNow  FormulaPredicateArchive_QualifierType = 7
	FormulaPredicateArchive_Quarters FormulaPredicateArchive_QualifierType = 8
	FormulaPredicateArchive_Percent  FormulaPredicateArchive_QualifierType = 9
	FormulaPredicateArchive_Values   FormulaPredicateArchive_QualifierType = 10
)

var FormulaPredicateArchive_QualifierType_name = map[int32]string{
	0:  "QualNone",
	2:  "Days",
	3:  "Weeks",
	4:  "Months",
	5:  "Years",
	6:  "Ago",
	7:  "FromNow",
	8:  "Quarters",
	9:  "Percent",
	10: "Values",
}

var FormulaPredicateArchive_QualifierType_value = map[string]int32{
	"QualNone": 0,
	"Days":     2,
	"Weeks":    3,
	"Months":   4,
	"Years":    5,
	"Ago":      6,
	"FromNow":  7,
	"Quarters": 8,
	"Percent":  9,
	"Values":   10,
}

func (x FormulaPredicateArchive_QualifierType) Enum() *FormulaPredicateArchive_QualifierType {
	p := new(FormulaPredicateArchive_QualifierType)
	*p = x
	return p
}

func (x FormulaPredicateArchive_QualifierType) String() string {
	return proto.EnumName(FormulaPredicateArchive_QualifierType_name, int32(x))
}

func (x *FormulaPredicateArchive_QualifierType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormulaPredicateArchive_QualifierType_value, data, "FormulaPredicateArchive_QualifierType")
	if err != nil {
		return err
	}
	*x = FormulaPredicateArchive_QualifierType(value)
	return nil
}

func (FormulaPredicateArchive_QualifierType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{57, 1}
}

type FilterSetArchive_FilterSetType int32

const (
	FilterSetArchive_FilterSetArchiveTypeAll FilterSetArchive_FilterSetType = 0
	FilterSetArchive_FilterSetArchiveTypeAny FilterSetArchive_FilterSetType = 1
)

var FilterSetArchive_FilterSetType_name = map[int32]string{
	0: "FilterSetArchiveTypeAll",
	1: "FilterSetArchiveTypeAny",
}

var FilterSetArchive_FilterSetType_value = map[string]int32{
	"FilterSetArchiveTypeAll": 0,
	"FilterSetArchiveTypeAny": 1,
}

func (x FilterSetArchive_FilterSetType) Enum() *FilterSetArchive_FilterSetType {
	p := new(FilterSetArchive_FilterSetType)
	*p = x
	return p
}

func (x FilterSetArchive_FilterSetType) String() string {
	return proto.EnumName(FilterSetArchive_FilterSetType_name, int32(x))
}

func (x *FilterSetArchive_FilterSetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FilterSetArchive_FilterSetType_value, data, "FilterSetArchive_FilterSetType")
	if err != nil {
		return err
	}
	*x = FilterSetArchive_FilterSetType(value)
	return nil
}

func (FilterSetArchive_FilterSetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{59, 0}
}

type HiddenStateExtentArchive_RowOrColumnDirection int32

const (
	HiddenStateExtentArchive_ColumnDirection HiddenStateExtentArchive_RowOrColumnDirection = 0
	HiddenStateExtentArchive_RowDirection    HiddenStateExtentArchive_RowOrColumnDirection = 1
)

var HiddenStateExtentArchive_RowOrColumnDirection_name = map[int32]string{
	0: "ColumnDirection",
	1: "RowDirection",
}

var HiddenStateExtentArchive_RowOrColumnDirection_value = map[string]int32{
	"ColumnDirection": 0,
	"RowDirection":    1,
}

func (x HiddenStateExtentArchive_RowOrColumnDirection) Enum() *HiddenStateExtentArchive_RowOrColumnDirection {
	p := new(HiddenStateExtentArchive_RowOrColumnDirection)
	*p = x
	return p
}

func (x HiddenStateExtentArchive_RowOrColumnDirection) String() string {
	return proto.EnumName(HiddenStateExtentArchive_RowOrColumnDirection_name, int32(x))
}

func (x *HiddenStateExtentArchive_RowOrColumnDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HiddenStateExtentArchive_RowOrColumnDirection_value, data, "HiddenStateExtentArchive_RowOrColumnDirection")
	if err != nil {
		return err
	}
	*x = HiddenStateExtentArchive_RowOrColumnDirection(value)
	return nil
}

func (HiddenStateExtentArchive_RowOrColumnDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{60, 0}
}

type MultiTableRemapperArchive_Purpose int32

const (
	MultiTableRemapperArchive_DEFAULT                             MultiTableRemapperArchive_Purpose = 0
	MultiTableRemapperArchive_GROUPING                            MultiTableRemapperArchive_Purpose = 1
	MultiTableRemapperArchive_PAGES_SECTION_DUPLICATION_NONCOLLAB MultiTableRemapperArchive_Purpose = 2
)

var MultiTableRemapperArchive_Purpose_name = map[int32]string{
	0: "DEFAULT",
	1: "GROUPING",
	2: "PAGES_SECTION_DUPLICATION_NONCOLLAB",
}

var MultiTableRemapperArchive_Purpose_value = map[string]int32{
	"DEFAULT":                             0,
	"GROUPING":                            1,
	"PAGES_SECTION_DUPLICATION_NONCOLLAB": 2,
}

func (x MultiTableRemapperArchive_Purpose) Enum() *MultiTableRemapperArchive_Purpose {
	p := new(MultiTableRemapperArchive_Purpose)
	*p = x
	return p
}

func (x MultiTableRemapperArchive_Purpose) String() string {
	return proto.EnumName(MultiTableRemapperArchive_Purpose_name, int32(x))
}

func (x *MultiTableRemapperArchive_Purpose) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MultiTableRemapperArchive_Purpose_value, data, "MultiTableRemapperArchive_Purpose")
	if err != nil {
		return err
	}
	*x = MultiTableRemapperArchive_Purpose(value)
	return nil
}

func (MultiTableRemapperArchive_Purpose) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{106, 0}
}

type CellID struct {
	PackedData           *uint32                     `protobuf:"fixed32,1,req,name=packedData" json:"packedData,omitempty"`
	ExpandedCoord        *TSCE.CellCoordinateArchive `protobuf:"bytes,2,opt,name=expanded_coord,json=expandedCoord" json:"expanded_coord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CellID) Reset()         { *m = CellID{} }
func (m *CellID) String() string { return proto.CompactTextString(m) }
func (*CellID) ProtoMessage()    {}
func (*CellID) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{0}
}

func (m *CellID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellID.Unmarshal(m, b)
}
func (m *CellID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellID.Marshal(b, m, deterministic)
}
func (m *CellID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellID.Merge(m, src)
}
func (m *CellID) XXX_Size() int {
	return xxx_messageInfo_CellID.Size(m)
}
func (m *CellID) XXX_DiscardUnknown() {
	xxx_messageInfo_CellID.DiscardUnknown(m)
}

var xxx_messageInfo_CellID proto.InternalMessageInfo

func (m *CellID) GetPackedData() uint32 {
	if m != nil && m.PackedData != nil {
		return *m.PackedData
	}
	return 0
}

func (m *CellID) GetExpandedCoord() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.ExpandedCoord
	}
	return nil
}

type CellUIDListArchive struct {
	RowUids                 []*TSP.UUID `protobuf:"bytes,1,rep,name=row_uids,json=rowUids" json:"row_uids,omitempty"`
	ColumnUids              []*TSP.UUID `protobuf:"bytes,2,rep,name=column_uids,json=columnUids" json:"column_uids,omitempty"`
	CompressedRowIndexes    []int32     `protobuf:"varint,3,rep,name=compressed_row_indexes,json=compressedRowIndexes" json:"compressed_row_indexes,omitempty"`
	CompressedColumnIndexes []int32     `protobuf:"varint,4,rep,name=compressed_column_indexes,json=compressedColumnIndexes" json:"compressed_column_indexes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}    `json:"-"`
	XXX_unrecognized        []byte      `json:"-"`
	XXX_sizecache           int32       `json:"-"`
}

func (m *CellUIDListArchive) Reset()         { *m = CellUIDListArchive{} }
func (m *CellUIDListArchive) String() string { return proto.CompactTextString(m) }
func (*CellUIDListArchive) ProtoMessage()    {}
func (*CellUIDListArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{1}
}

func (m *CellUIDListArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellUIDListArchive.Unmarshal(m, b)
}
func (m *CellUIDListArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellUIDListArchive.Marshal(b, m, deterministic)
}
func (m *CellUIDListArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellUIDListArchive.Merge(m, src)
}
func (m *CellUIDListArchive) XXX_Size() int {
	return xxx_messageInfo_CellUIDListArchive.Size(m)
}
func (m *CellUIDListArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellUIDListArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellUIDListArchive proto.InternalMessageInfo

func (m *CellUIDListArchive) GetRowUids() []*TSP.UUID {
	if m != nil {
		return m.RowUids
	}
	return nil
}

func (m *CellUIDListArchive) GetColumnUids() []*TSP.UUID {
	if m != nil {
		return m.ColumnUids
	}
	return nil
}

func (m *CellUIDListArchive) GetCompressedRowIndexes() []int32 {
	if m != nil {
		return m.CompressedRowIndexes
	}
	return nil
}

func (m *CellUIDListArchive) GetCompressedColumnIndexes() []int32 {
	if m != nil {
		return m.CompressedColumnIndexes
	}
	return nil
}

type TableSize struct {
	PackedData           *uint32  `protobuf:"fixed32,1,req,name=packedData" json:"packedData,omitempty"`
	NumColumns           *uint32  `protobuf:"varint,2,opt,name=num_columns,json=numColumns" json:"num_columns,omitempty"`
	NumRows              *uint32  `protobuf:"varint,3,opt,name=num_rows,json=numRows" json:"num_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableSize) Reset()         { *m = TableSize{} }
func (m *TableSize) String() string { return proto.CompactTextString(m) }
func (*TableSize) ProtoMessage()    {}
func (*TableSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{2}
}

func (m *TableSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSize.Unmarshal(m, b)
}
func (m *TableSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSize.Marshal(b, m, deterministic)
}
func (m *TableSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSize.Merge(m, src)
}
func (m *TableSize) XXX_Size() int {
	return xxx_messageInfo_TableSize.Size(m)
}
func (m *TableSize) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSize.DiscardUnknown(m)
}

var xxx_messageInfo_TableSize proto.InternalMessageInfo

func (m *TableSize) GetPackedData() uint32 {
	if m != nil && m.PackedData != nil {
		return *m.PackedData
	}
	return 0
}

func (m *TableSize) GetNumColumns() uint32 {
	if m != nil && m.NumColumns != nil {
		return *m.NumColumns
	}
	return 0
}

func (m *TableSize) GetNumRows() uint32 {
	if m != nil && m.NumRows != nil {
		return *m.NumRows
	}
	return 0
}

type ExpandedTableSize struct {
	NumColumns           *uint32  `protobuf:"varint,1,req,name=num_columns,json=numColumns" json:"num_columns,omitempty"`
	NumRows              *uint32  `protobuf:"varint,2,req,name=num_rows,json=numRows" json:"num_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpandedTableSize) Reset()         { *m = ExpandedTableSize{} }
func (m *ExpandedTableSize) String() string { return proto.CompactTextString(m) }
func (*ExpandedTableSize) ProtoMessage()    {}
func (*ExpandedTableSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{3}
}

func (m *ExpandedTableSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedTableSize.Unmarshal(m, b)
}
func (m *ExpandedTableSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedTableSize.Marshal(b, m, deterministic)
}
func (m *ExpandedTableSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedTableSize.Merge(m, src)
}
func (m *ExpandedTableSize) XXX_Size() int {
	return xxx_messageInfo_ExpandedTableSize.Size(m)
}
func (m *ExpandedTableSize) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedTableSize.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedTableSize proto.InternalMessageInfo

func (m *ExpandedTableSize) GetNumColumns() uint32 {
	if m != nil && m.NumColumns != nil {
		return *m.NumColumns
	}
	return 0
}

func (m *ExpandedTableSize) GetNumRows() uint32 {
	if m != nil && m.NumRows != nil {
		return *m.NumRows
	}
	return 0
}

type CellRange struct {
	Origin               *CellID    `protobuf:"bytes,1,req,name=origin" json:"origin,omitempty"`
	Size                 *TableSize `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CellRange) Reset()         { *m = CellRange{} }
func (m *CellRange) String() string { return proto.CompactTextString(m) }
func (*CellRange) ProtoMessage()    {}
func (*CellRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{4}
}

func (m *CellRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRange.Unmarshal(m, b)
}
func (m *CellRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRange.Marshal(b, m, deterministic)
}
func (m *CellRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRange.Merge(m, src)
}
func (m *CellRange) XXX_Size() int {
	return xxx_messageInfo_CellRange.Size(m)
}
func (m *CellRange) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRange.DiscardUnknown(m)
}

var xxx_messageInfo_CellRange proto.InternalMessageInfo

func (m *CellRange) GetOrigin() *CellID {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CellRange) GetSize() *TableSize {
	if m != nil {
		return m.Size
	}
	return nil
}

type ExpandedCellRange struct {
	Origin               *TSCE.CellCoordinateArchive `protobuf:"bytes,1,req,name=origin" json:"origin,omitempty"`
	Size                 *ExpandedTableSize          `protobuf:"bytes,2,req,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ExpandedCellRange) Reset()         { *m = ExpandedCellRange{} }
func (m *ExpandedCellRange) String() string { return proto.CompactTextString(m) }
func (*ExpandedCellRange) ProtoMessage()    {}
func (*ExpandedCellRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{5}
}

func (m *ExpandedCellRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandedCellRange.Unmarshal(m, b)
}
func (m *ExpandedCellRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandedCellRange.Marshal(b, m, deterministic)
}
func (m *ExpandedCellRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandedCellRange.Merge(m, src)
}
func (m *ExpandedCellRange) XXX_Size() int {
	return xxx_messageInfo_ExpandedCellRange.Size(m)
}
func (m *ExpandedCellRange) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandedCellRange.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandedCellRange proto.InternalMessageInfo

func (m *ExpandedCellRange) GetOrigin() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *ExpandedCellRange) GetSize() *ExpandedTableSize {
	if m != nil {
		return m.Size
	}
	return nil
}

type TableSelection struct {
	CellRange              *CellRange            `protobuf:"bytes,1,req,name=cellRange" json:"cellRange,omitempty"`
	ExtendedCellRange      *CellRange            `protobuf:"bytes,2,req,name=extendedCellRange" json:"extendedCellRange,omitempty"`
	ExtendedCellRangeValid *bool                 `protobuf:"varint,3,req,name=extendedCellRangeValid" json:"extendedCellRangeValid,omitempty"`
	SelectionType          *SelectionTypeArchive `protobuf:"varint,4,req,name=selection_type,json=selectionType,enum=TST.SelectionTypeArchive" json:"selection_type,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *TableSelection) Reset()         { *m = TableSelection{} }
func (m *TableSelection) String() string { return proto.CompactTextString(m) }
func (*TableSelection) ProtoMessage()    {}
func (*TableSelection) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{6}
}

func (m *TableSelection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSelection.Unmarshal(m, b)
}
func (m *TableSelection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSelection.Marshal(b, m, deterministic)
}
func (m *TableSelection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSelection.Merge(m, src)
}
func (m *TableSelection) XXX_Size() int {
	return xxx_messageInfo_TableSelection.Size(m)
}
func (m *TableSelection) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSelection.DiscardUnknown(m)
}

var xxx_messageInfo_TableSelection proto.InternalMessageInfo

func (m *TableSelection) GetCellRange() *CellRange {
	if m != nil {
		return m.CellRange
	}
	return nil
}

func (m *TableSelection) GetExtendedCellRange() *CellRange {
	if m != nil {
		return m.ExtendedCellRange
	}
	return nil
}

func (m *TableSelection) GetExtendedCellRangeValid() bool {
	if m != nil && m.ExtendedCellRangeValid != nil {
		return *m.ExtendedCellRangeValid
	}
	return false
}

func (m *TableSelection) GetSelectionType() SelectionTypeArchive {
	if m != nil && m.SelectionType != nil {
		return *m.SelectionType
	}
	return SelectionTypeArchive_deprecatedCellSelectionType
}

type TileRowInfo struct {
	TileRowIndex            *uint32  `protobuf:"varint,1,req,name=tile_row_index,json=tileRowIndex" json:"tile_row_index,omitempty"`
	CellCount               *uint32  `protobuf:"varint,2,req,name=cell_count,json=cellCount" json:"cell_count,omitempty"`
	CellStorageBufferPreBnc []byte   `protobuf:"bytes,3,req,name=cell_storage_buffer_pre_bnc,json=cellStorageBufferPreBnc" json:"cell_storage_buffer_pre_bnc,omitempty"`
	CellOffsetsPreBnc       []byte   `protobuf:"bytes,4,req,name=cell_offsets_pre_bnc,json=cellOffsetsPreBnc" json:"cell_offsets_pre_bnc,omitempty"`
	StorageVersion          *uint32  `protobuf:"varint,5,opt,name=storage_version,json=storageVersion" json:"storage_version,omitempty"`
	CellStorageBuffer       []byte   `protobuf:"bytes,6,opt,name=cell_storage_buffer,json=cellStorageBuffer" json:"cell_storage_buffer,omitempty"`
	CellOffsets             []byte   `protobuf:"bytes,7,opt,name=cell_offsets,json=cellOffsets" json:"cell_offsets,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *TileRowInfo) Reset()         { *m = TileRowInfo{} }
func (m *TileRowInfo) String() string { return proto.CompactTextString(m) }
func (*TileRowInfo) ProtoMessage()    {}
func (*TileRowInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{7}
}

func (m *TileRowInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileRowInfo.Unmarshal(m, b)
}
func (m *TileRowInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileRowInfo.Marshal(b, m, deterministic)
}
func (m *TileRowInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileRowInfo.Merge(m, src)
}
func (m *TileRowInfo) XXX_Size() int {
	return xxx_messageInfo_TileRowInfo.Size(m)
}
func (m *TileRowInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TileRowInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TileRowInfo proto.InternalMessageInfo

func (m *TileRowInfo) GetTileRowIndex() uint32 {
	if m != nil && m.TileRowIndex != nil {
		return *m.TileRowIndex
	}
	return 0
}

func (m *TileRowInfo) GetCellCount() uint32 {
	if m != nil && m.CellCount != nil {
		return *m.CellCount
	}
	return 0
}

func (m *TileRowInfo) GetCellStorageBufferPreBnc() []byte {
	if m != nil {
		return m.CellStorageBufferPreBnc
	}
	return nil
}

func (m *TileRowInfo) GetCellOffsetsPreBnc() []byte {
	if m != nil {
		return m.CellOffsetsPreBnc
	}
	return nil
}

func (m *TileRowInfo) GetStorageVersion() uint32 {
	if m != nil && m.StorageVersion != nil {
		return *m.StorageVersion
	}
	return 0
}

func (m *TileRowInfo) GetCellStorageBuffer() []byte {
	if m != nil {
		return m.CellStorageBuffer
	}
	return nil
}

func (m *TileRowInfo) GetCellOffsets() []byte {
	if m != nil {
		return m.CellOffsets
	}
	return nil
}

type Tile struct {
	MaxColumn            *uint32        `protobuf:"varint,1,req,name=maxColumn" json:"maxColumn,omitempty"`
	MaxRow               *uint32        `protobuf:"varint,2,req,name=maxRow" json:"maxRow,omitempty"`
	NumCells             *uint32        `protobuf:"varint,3,req,name=numCells" json:"numCells,omitempty"`
	Numrows              *uint32        `protobuf:"varint,4,req,name=numrows" json:"numrows,omitempty"`
	RowInfos             []*TileRowInfo `protobuf:"bytes,5,rep,name=rowInfos" json:"rowInfos,omitempty"`
	StorageVersion       *uint32        `protobuf:"varint,6,opt,name=storage_version,json=storageVersion" json:"storage_version,omitempty"`
	LastSavedIn_BNC      *bool          `protobuf:"varint,7,opt,name=last_saved_in_BNC,json=lastSavedInBNC" json:"last_saved_in_BNC,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Tile) Reset()         { *m = Tile{} }
func (m *Tile) String() string { return proto.CompactTextString(m) }
func (*Tile) ProtoMessage()    {}
func (*Tile) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{8}
}

func (m *Tile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tile.Unmarshal(m, b)
}
func (m *Tile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tile.Marshal(b, m, deterministic)
}
func (m *Tile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tile.Merge(m, src)
}
func (m *Tile) XXX_Size() int {
	return xxx_messageInfo_Tile.Size(m)
}
func (m *Tile) XXX_DiscardUnknown() {
	xxx_messageInfo_Tile.DiscardUnknown(m)
}

var xxx_messageInfo_Tile proto.InternalMessageInfo

func (m *Tile) GetMaxColumn() uint32 {
	if m != nil && m.MaxColumn != nil {
		return *m.MaxColumn
	}
	return 0
}

func (m *Tile) GetMaxRow() uint32 {
	if m != nil && m.MaxRow != nil {
		return *m.MaxRow
	}
	return 0
}

func (m *Tile) GetNumCells() uint32 {
	if m != nil && m.NumCells != nil {
		return *m.NumCells
	}
	return 0
}

func (m *Tile) GetNumrows() uint32 {
	if m != nil && m.Numrows != nil {
		return *m.Numrows
	}
	return 0
}

func (m *Tile) GetRowInfos() []*TileRowInfo {
	if m != nil {
		return m.RowInfos
	}
	return nil
}

func (m *Tile) GetStorageVersion() uint32 {
	if m != nil && m.StorageVersion != nil {
		return *m.StorageVersion
	}
	return 0
}

func (m *Tile) GetLastSavedIn_BNC() bool {
	if m != nil && m.LastSavedIn_BNC != nil {
		return *m.LastSavedIn_BNC
	}
	return false
}

type TileStorage struct {
	Tiles                []*TileStorage_Tile `protobuf:"bytes,1,rep,name=tiles" json:"tiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TileStorage) Reset()         { *m = TileStorage{} }
func (m *TileStorage) String() string { return proto.CompactTextString(m) }
func (*TileStorage) ProtoMessage()    {}
func (*TileStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{9}
}

func (m *TileStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileStorage.Unmarshal(m, b)
}
func (m *TileStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileStorage.Marshal(b, m, deterministic)
}
func (m *TileStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileStorage.Merge(m, src)
}
func (m *TileStorage) XXX_Size() int {
	return xxx_messageInfo_TileStorage.Size(m)
}
func (m *TileStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_TileStorage.DiscardUnknown(m)
}

var xxx_messageInfo_TileStorage proto.InternalMessageInfo

func (m *TileStorage) GetTiles() []*TileStorage_Tile {
	if m != nil {
		return m.Tiles
	}
	return nil
}

type TileStorage_Tile struct {
	Tileid               *uint32        `protobuf:"varint,1,req,name=tileid" json:"tileid,omitempty"`
	Tile                 *TSP.Reference `protobuf:"bytes,2,req,name=tile" json:"tile,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TileStorage_Tile) Reset()         { *m = TileStorage_Tile{} }
func (m *TileStorage_Tile) String() string { return proto.CompactTextString(m) }
func (*TileStorage_Tile) ProtoMessage()    {}
func (*TileStorage_Tile) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{9, 0}
}

func (m *TileStorage_Tile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TileStorage_Tile.Unmarshal(m, b)
}
func (m *TileStorage_Tile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TileStorage_Tile.Marshal(b, m, deterministic)
}
func (m *TileStorage_Tile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TileStorage_Tile.Merge(m, src)
}
func (m *TileStorage_Tile) XXX_Size() int {
	return xxx_messageInfo_TileStorage_Tile.Size(m)
}
func (m *TileStorage_Tile) XXX_DiscardUnknown() {
	xxx_messageInfo_TileStorage_Tile.DiscardUnknown(m)
}

var xxx_messageInfo_TileStorage_Tile proto.InternalMessageInfo

func (m *TileStorage_Tile) GetTileid() uint32 {
	if m != nil && m.Tileid != nil {
		return *m.Tileid
	}
	return 0
}

func (m *TileStorage_Tile) GetTile() *TSP.Reference {
	if m != nil {
		return m.Tile
	}
	return nil
}

type PopUpMenuModel struct {
	Item                 []*PopUpMenuModel_CellValue `protobuf:"bytes,1,rep,name=item" json:"item,omitempty"` // Deprecated: Do not use.
	TsceItem             []*TSCE.CellValueArchive    `protobuf:"bytes,2,rep,name=tsce_item,json=tsceItem" json:"tsce_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PopUpMenuModel) Reset()         { *m = PopUpMenuModel{} }
func (m *PopUpMenuModel) String() string { return proto.CompactTextString(m) }
func (*PopUpMenuModel) ProtoMessage()    {}
func (*PopUpMenuModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{10}
}

func (m *PopUpMenuModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopUpMenuModel.Unmarshal(m, b)
}
func (m *PopUpMenuModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopUpMenuModel.Marshal(b, m, deterministic)
}
func (m *PopUpMenuModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopUpMenuModel.Merge(m, src)
}
func (m *PopUpMenuModel) XXX_Size() int {
	return xxx_messageInfo_PopUpMenuModel.Size(m)
}
func (m *PopUpMenuModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PopUpMenuModel.DiscardUnknown(m)
}

var xxx_messageInfo_PopUpMenuModel proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *PopUpMenuModel) GetItem() []*PopUpMenuModel_CellValue {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *PopUpMenuModel) GetTsceItem() []*TSCE.CellValueArchive {
	if m != nil {
		return m.TsceItem
	}
	return nil
}

type PopUpMenuModel_CellValue struct {
	CellValueType        *PopUpMenuModel_CellValueType `protobuf:"varint,1,req,name=cell_value_type,json=cellValueType,enum=TST.PopUpMenuModel_CellValueType" json:"cell_value_type,omitempty"`
	BooleanValue         *TSCE.BooleanCellValueArchive `protobuf:"bytes,2,opt,name=boolean_value,json=booleanValue" json:"boolean_value,omitempty"`
	DateValue            *TSCE.DateCellValueArchive    `protobuf:"bytes,3,opt,name=date_value,json=dateValue" json:"date_value,omitempty"`
	NumberValue          *TSCE.NumberCellValueArchive  `protobuf:"bytes,4,opt,name=number_value,json=numberValue" json:"number_value,omitempty"`
	StringValue          *TSCE.StringCellValueArchive  `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PopUpMenuModel_CellValue) Reset()         { *m = PopUpMenuModel_CellValue{} }
func (m *PopUpMenuModel_CellValue) String() string { return proto.CompactTextString(m) }
func (*PopUpMenuModel_CellValue) ProtoMessage()    {}
func (*PopUpMenuModel_CellValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{10, 0}
}

func (m *PopUpMenuModel_CellValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopUpMenuModel_CellValue.Unmarshal(m, b)
}
func (m *PopUpMenuModel_CellValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopUpMenuModel_CellValue.Marshal(b, m, deterministic)
}
func (m *PopUpMenuModel_CellValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopUpMenuModel_CellValue.Merge(m, src)
}
func (m *PopUpMenuModel_CellValue) XXX_Size() int {
	return xxx_messageInfo_PopUpMenuModel_CellValue.Size(m)
}
func (m *PopUpMenuModel_CellValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PopUpMenuModel_CellValue.DiscardUnknown(m)
}

var xxx_messageInfo_PopUpMenuModel_CellValue proto.InternalMessageInfo

func (m *PopUpMenuModel_CellValue) GetCellValueType() PopUpMenuModel_CellValueType {
	if m != nil && m.CellValueType != nil {
		return *m.CellValueType
	}
	return PopUpMenuModel_NIL_TYPE
}

func (m *PopUpMenuModel_CellValue) GetBooleanValue() *TSCE.BooleanCellValueArchive {
	if m != nil {
		return m.BooleanValue
	}
	return nil
}

func (m *PopUpMenuModel_CellValue) GetDateValue() *TSCE.DateCellValueArchive {
	if m != nil {
		return m.DateValue
	}
	return nil
}

func (m *PopUpMenuModel_CellValue) GetNumberValue() *TSCE.NumberCellValueArchive {
	if m != nil {
		return m.NumberValue
	}
	return nil
}

func (m *PopUpMenuModel_CellValue) GetStringValue() *TSCE.StringCellValueArchive {
	if m != nil {
		return m.StringValue
	}
	return nil
}

type ImportWarningSetArchive struct {
	FormulaImportWarning               *ImportWarningSetArchive_FormulaImportWarning `protobuf:"bytes,1,opt,name=formula_import_warning,json=formulaImportWarning" json:"formula_import_warning,omitempty"`
	CondFormatAboveAvgEqualAvg         *bool                                         `protobuf:"varint,2,opt,name=cond_format_above_avg_equal_avg,json=condFormatAboveAvgEqualAvg,def=0" json:"cond_format_above_avg_equal_avg,omitempty"`
	CondFormatAboveAvgStdDev           *bool                                         `protobuf:"varint,3,opt,name=cond_format_above_avg_std_dev,json=condFormatAboveAvgStdDev,def=0" json:"cond_format_above_avg_std_dev,omitempty"`
	CondFormatComplexFormula           *bool                                         `protobuf:"varint,4,opt,name=cond_format_complex_formula,json=condFormatComplexFormula,def=0" json:"cond_format_complex_formula,omitempty"`
	CondFormatContainsErrors           *bool                                         `protobuf:"varint,5,opt,name=cond_format_contains_errors,json=condFormatContainsErrors,def=0" json:"cond_format_contains_errors,omitempty"`
	CondFormatExpr                     *bool                                         `protobuf:"varint,6,opt,name=cond_format_expr,json=condFormatExpr,def=0" json:"cond_format_expr,omitempty"`
	CondFormatNotContainsErrors        *bool                                         `protobuf:"varint,7,opt,name=cond_format_not_contains_errors,json=condFormatNotContainsErrors,def=0" json:"cond_format_not_contains_errors,omitempty"`
	CondFormatParametersNotAllSameType *bool                                         `protobuf:"varint,8,opt,name=cond_format_parameters_not_all_same_type,json=condFormatParametersNotAllSameType,def=0" json:"cond_format_parameters_not_all_same_type,omitempty"`
	CondFormatStopIfTrue               *bool                                         `protobuf:"varint,9,opt,name=cond_format_stop_if_true,json=condFormatStopIfTrue,def=0" json:"cond_format_stop_if_true,omitempty"`
	CondFormatUnsupportedOperator      *bool                                         `protobuf:"varint,10,opt,name=cond_format_unsupported_operator,json=condFormatUnsupportedOperator,def=0" json:"cond_format_unsupported_operator,omitempty"`
	CondFormatUnsupportedStyling       *bool                                         `protobuf:"varint,11,opt,name=cond_format_unsupported_styling,json=condFormatUnsupportedStyling,def=0" json:"cond_format_unsupported_styling,omitempty"`
	CondFormatUnsupportedTimePeriod    *bool                                         `protobuf:"varint,12,opt,name=cond_format_unsupported_time_period,json=condFormatUnsupportedTimePeriod,def=0" json:"cond_format_unsupported_time_period,omitempty"`
	ErrorCellWithNoFormula             *bool                                         `protobuf:"varint,13,opt,name=error_cell_with_no_formula,json=errorCellWithNoFormula,def=0" json:"error_cell_with_no_formula,omitempty"`
	UnsupportedCondFormat              *bool                                         `protobuf:"varint,14,opt,name=unsupported_cond_format,json=unsupportedCondFormat,def=0" json:"unsupported_cond_format,omitempty"`
	OriginalDataFormat                 *string                                       `protobuf:"bytes,15,opt,name=original_data_format,json=originalDataFormat" json:"original_data_format,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                                      `json:"-"`
	XXX_unrecognized                   []byte                                        `json:"-"`
	XXX_sizecache                      int32                                         `json:"-"`
}

func (m *ImportWarningSetArchive) Reset()         { *m = ImportWarningSetArchive{} }
func (m *ImportWarningSetArchive) String() string { return proto.CompactTextString(m) }
func (*ImportWarningSetArchive) ProtoMessage()    {}
func (*ImportWarningSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{11}
}

func (m *ImportWarningSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportWarningSetArchive.Unmarshal(m, b)
}
func (m *ImportWarningSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportWarningSetArchive.Marshal(b, m, deterministic)
}
func (m *ImportWarningSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportWarningSetArchive.Merge(m, src)
}
func (m *ImportWarningSetArchive) XXX_Size() int {
	return xxx_messageInfo_ImportWarningSetArchive.Size(m)
}
func (m *ImportWarningSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportWarningSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ImportWarningSetArchive proto.InternalMessageInfo

const Default_ImportWarningSetArchive_CondFormatAboveAvgEqualAvg bool = false
const Default_ImportWarningSetArchive_CondFormatAboveAvgStdDev bool = false
const Default_ImportWarningSetArchive_CondFormatComplexFormula bool = false
const Default_ImportWarningSetArchive_CondFormatContainsErrors bool = false
const Default_ImportWarningSetArchive_CondFormatExpr bool = false
const Default_ImportWarningSetArchive_CondFormatNotContainsErrors bool = false
const Default_ImportWarningSetArchive_CondFormatParametersNotAllSameType bool = false
const Default_ImportWarningSetArchive_CondFormatStopIfTrue bool = false
const Default_ImportWarningSetArchive_CondFormatUnsupportedOperator bool = false
const Default_ImportWarningSetArchive_CondFormatUnsupportedStyling bool = false
const Default_ImportWarningSetArchive_CondFormatUnsupportedTimePeriod bool = false
const Default_ImportWarningSetArchive_ErrorCellWithNoFormula bool = false
const Default_ImportWarningSetArchive_UnsupportedCondFormat bool = false

func (m *ImportWarningSetArchive) GetFormulaImportWarning() *ImportWarningSetArchive_FormulaImportWarning {
	if m != nil {
		return m.FormulaImportWarning
	}
	return nil
}

func (m *ImportWarningSetArchive) GetCondFormatAboveAvgEqualAvg() bool {
	if m != nil && m.CondFormatAboveAvgEqualAvg != nil {
		return *m.CondFormatAboveAvgEqualAvg
	}
	return Default_ImportWarningSetArchive_CondFormatAboveAvgEqualAvg
}

func (m *ImportWarningSetArchive) GetCondFormatAboveAvgStdDev() bool {
	if m != nil && m.CondFormatAboveAvgStdDev != nil {
		return *m.CondFormatAboveAvgStdDev
	}
	return Default_ImportWarningSetArchive_CondFormatAboveAvgStdDev
}

func (m *ImportWarningSetArchive) GetCondFormatComplexFormula() bool {
	if m != nil && m.CondFormatComplexFormula != nil {
		return *m.CondFormatComplexFormula
	}
	return Default_ImportWarningSetArchive_CondFormatComplexFormula
}

func (m *ImportWarningSetArchive) GetCondFormatContainsErrors() bool {
	if m != nil && m.CondFormatContainsErrors != nil {
		return *m.CondFormatContainsErrors
	}
	return Default_ImportWarningSetArchive_CondFormatContainsErrors
}

func (m *ImportWarningSetArchive) GetCondFormatExpr() bool {
	if m != nil && m.CondFormatExpr != nil {
		return *m.CondFormatExpr
	}
	return Default_ImportWarningSetArchive_CondFormatExpr
}

func (m *ImportWarningSetArchive) GetCondFormatNotContainsErrors() bool {
	if m != nil && m.CondFormatNotContainsErrors != nil {
		return *m.CondFormatNotContainsErrors
	}
	return Default_ImportWarningSetArchive_CondFormatNotContainsErrors
}

func (m *ImportWarningSetArchive) GetCondFormatParametersNotAllSameType() bool {
	if m != nil && m.CondFormatParametersNotAllSameType != nil {
		return *m.CondFormatParametersNotAllSameType
	}
	return Default_ImportWarningSetArchive_CondFormatParametersNotAllSameType
}

func (m *ImportWarningSetArchive) GetCondFormatStopIfTrue() bool {
	if m != nil && m.CondFormatStopIfTrue != nil {
		return *m.CondFormatStopIfTrue
	}
	return Default_ImportWarningSetArchive_CondFormatStopIfTrue
}

func (m *ImportWarningSetArchive) GetCondFormatUnsupportedOperator() bool {
	if m != nil && m.CondFormatUnsupportedOperator != nil {
		return *m.CondFormatUnsupportedOperator
	}
	return Default_ImportWarningSetArchive_CondFormatUnsupportedOperator
}

func (m *ImportWarningSetArchive) GetCondFormatUnsupportedStyling() bool {
	if m != nil && m.CondFormatUnsupportedStyling != nil {
		return *m.CondFormatUnsupportedStyling
	}
	return Default_ImportWarningSetArchive_CondFormatUnsupportedStyling
}

func (m *ImportWarningSetArchive) GetCondFormatUnsupportedTimePeriod() bool {
	if m != nil && m.CondFormatUnsupportedTimePeriod != nil {
		return *m.CondFormatUnsupportedTimePeriod
	}
	return Default_ImportWarningSetArchive_CondFormatUnsupportedTimePeriod
}

func (m *ImportWarningSetArchive) GetErrorCellWithNoFormula() bool {
	if m != nil && m.ErrorCellWithNoFormula != nil {
		return *m.ErrorCellWithNoFormula
	}
	return Default_ImportWarningSetArchive_ErrorCellWithNoFormula
}

func (m *ImportWarningSetArchive) GetUnsupportedCondFormat() bool {
	if m != nil && m.UnsupportedCondFormat != nil {
		return *m.UnsupportedCondFormat
	}
	return Default_ImportWarningSetArchive_UnsupportedCondFormat
}

func (m *ImportWarningSetArchive) GetOriginalDataFormat() string {
	if m != nil && m.OriginalDataFormat != nil {
		return *m.OriginalDataFormat
	}
	return ""
}

type ImportWarningSetArchive_FormulaImportWarning struct {
	FormulaWarningType   *ImportWarningSetArchive_FormulaWarningType `protobuf:"varint,1,req,name=formula_warning_type,json=formulaWarningType,enum=TST.ImportWarningSetArchive_FormulaWarningType" json:"formula_warning_type,omitempty"`
	OriginalFormula      *string                                     `protobuf:"bytes,2,opt,name=original_formula,json=originalFormula" json:"original_formula,omitempty"`
	SupplementaryText    *string                                     `protobuf:"bytes,3,opt,name=supplementary_text,json=supplementaryText" json:"supplementary_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *ImportWarningSetArchive_FormulaImportWarning) Reset() {
	*m = ImportWarningSetArchive_FormulaImportWarning{}
}
func (m *ImportWarningSetArchive_FormulaImportWarning) String() string {
	return proto.CompactTextString(m)
}
func (*ImportWarningSetArchive_FormulaImportWarning) ProtoMessage() {}
func (*ImportWarningSetArchive_FormulaImportWarning) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{11, 0}
}

func (m *ImportWarningSetArchive_FormulaImportWarning) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning.Unmarshal(m, b)
}
func (m *ImportWarningSetArchive_FormulaImportWarning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning.Marshal(b, m, deterministic)
}
func (m *ImportWarningSetArchive_FormulaImportWarning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning.Merge(m, src)
}
func (m *ImportWarningSetArchive_FormulaImportWarning) XXX_Size() int {
	return xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning.Size(m)
}
func (m *ImportWarningSetArchive_FormulaImportWarning) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning.DiscardUnknown(m)
}

var xxx_messageInfo_ImportWarningSetArchive_FormulaImportWarning proto.InternalMessageInfo

func (m *ImportWarningSetArchive_FormulaImportWarning) GetFormulaWarningType() ImportWarningSetArchive_FormulaWarningType {
	if m != nil && m.FormulaWarningType != nil {
		return *m.FormulaWarningType
	}
	return ImportWarningSetArchive_THREE_D_REFERENCE
}

func (m *ImportWarningSetArchive_FormulaImportWarning) GetOriginalFormula() string {
	if m != nil && m.OriginalFormula != nil {
		return *m.OriginalFormula
	}
	return ""
}

func (m *ImportWarningSetArchive_FormulaImportWarning) GetSupplementaryText() string {
	if m != nil && m.SupplementaryText != nil {
		return *m.SupplementaryText
	}
	return ""
}

type CellRefImportWarningSetPairArchive struct {
	CellRef              *TSCE.CellReferenceArchive `protobuf:"bytes,1,req,name=cell_ref,json=cellRef" json:"cell_ref,omitempty"`
	WarningSet           *ImportWarningSetArchive   `protobuf:"bytes,3,opt,name=warning_set,json=warningSet" json:"warning_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CellRefImportWarningSetPairArchive) Reset()         { *m = CellRefImportWarningSetPairArchive{} }
func (m *CellRefImportWarningSetPairArchive) String() string { return proto.CompactTextString(m) }
func (*CellRefImportWarningSetPairArchive) ProtoMessage()    {}
func (*CellRefImportWarningSetPairArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{12}
}

func (m *CellRefImportWarningSetPairArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRefImportWarningSetPairArchive.Unmarshal(m, b)
}
func (m *CellRefImportWarningSetPairArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRefImportWarningSetPairArchive.Marshal(b, m, deterministic)
}
func (m *CellRefImportWarningSetPairArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRefImportWarningSetPairArchive.Merge(m, src)
}
func (m *CellRefImportWarningSetPairArchive) XXX_Size() int {
	return xxx_messageInfo_CellRefImportWarningSetPairArchive.Size(m)
}
func (m *CellRefImportWarningSetPairArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRefImportWarningSetPairArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellRefImportWarningSetPairArchive proto.InternalMessageInfo

func (m *CellRefImportWarningSetPairArchive) GetCellRef() *TSCE.CellReferenceArchive {
	if m != nil {
		return m.CellRef
	}
	return nil
}

func (m *CellRefImportWarningSetPairArchive) GetWarningSet() *ImportWarningSetArchive {
	if m != nil {
		return m.WarningSet
	}
	return nil
}

type ImportWarningSetByCellRefArchive struct {
	CellrefWarningSetPair []*CellRefImportWarningSetPairArchive `protobuf:"bytes,1,rep,name=cellref_warning_set_pair,json=cellrefWarningSetPair" json:"cellref_warning_set_pair,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                              `json:"-"`
	XXX_unrecognized      []byte                                `json:"-"`
	XXX_sizecache         int32                                 `json:"-"`
}

func (m *ImportWarningSetByCellRefArchive) Reset()         { *m = ImportWarningSetByCellRefArchive{} }
func (m *ImportWarningSetByCellRefArchive) String() string { return proto.CompactTextString(m) }
func (*ImportWarningSetByCellRefArchive) ProtoMessage()    {}
func (*ImportWarningSetByCellRefArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{13}
}

func (m *ImportWarningSetByCellRefArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportWarningSetByCellRefArchive.Unmarshal(m, b)
}
func (m *ImportWarningSetByCellRefArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportWarningSetByCellRefArchive.Marshal(b, m, deterministic)
}
func (m *ImportWarningSetByCellRefArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportWarningSetByCellRefArchive.Merge(m, src)
}
func (m *ImportWarningSetByCellRefArchive) XXX_Size() int {
	return xxx_messageInfo_ImportWarningSetByCellRefArchive.Size(m)
}
func (m *ImportWarningSetByCellRefArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportWarningSetByCellRefArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ImportWarningSetByCellRefArchive proto.InternalMessageInfo

func (m *ImportWarningSetByCellRefArchive) GetCellrefWarningSetPair() []*CellRefImportWarningSetPairArchive {
	if m != nil {
		return m.CellrefWarningSetPair
	}
	return nil
}

type TableDataList struct {
	ListType             *TableDataList_ListType    `protobuf:"varint,1,req,name=listType,enum=TST.TableDataList_ListType" json:"listType,omitempty"`
	NextListID           *uint32                    `protobuf:"varint,2,req,name=nextListID" json:"nextListID,omitempty"`
	Entries              []*TableDataList_ListEntry `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TableDataList) Reset()         { *m = TableDataList{} }
func (m *TableDataList) String() string { return proto.CompactTextString(m) }
func (*TableDataList) ProtoMessage()    {}
func (*TableDataList) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{14}
}

func (m *TableDataList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableDataList.Unmarshal(m, b)
}
func (m *TableDataList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableDataList.Marshal(b, m, deterministic)
}
func (m *TableDataList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableDataList.Merge(m, src)
}
func (m *TableDataList) XXX_Size() int {
	return xxx_messageInfo_TableDataList.Size(m)
}
func (m *TableDataList) XXX_DiscardUnknown() {
	xxx_messageInfo_TableDataList.DiscardUnknown(m)
}

var xxx_messageInfo_TableDataList proto.InternalMessageInfo

func (m *TableDataList) GetListType() TableDataList_ListType {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return TableDataList_STRING
}

func (m *TableDataList) GetNextListID() uint32 {
	if m != nil && m.NextListID != nil {
		return *m.NextListID
	}
	return 0
}

func (m *TableDataList) GetEntries() []*TableDataList_ListEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type TableDataList_ListEntry struct {
	Key                  *uint32                  `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Refcount             *uint32                  `protobuf:"varint,2,req,name=refcount" json:"refcount,omitempty"`
	String_              *string                  `protobuf:"bytes,3,opt,name=string" json:"string,omitempty"`
	Reference            *TSP.Reference           `protobuf:"bytes,4,opt,name=reference" json:"reference,omitempty"`
	Formula              *TSCE.FormulaArchive     `protobuf:"bytes,5,opt,name=formula" json:"formula,omitempty"`
	Format               *TSK.FormatStructArchive `protobuf:"bytes,6,opt,name=format" json:"format,omitempty"`
	CustomFormat         *TSK.CustomFormatArchive `protobuf:"bytes,8,opt,name=custom_format,json=customFormat" json:"custom_format,omitempty"`
	RichTextPayload      *TSP.Reference           `protobuf:"bytes,9,opt,name=rich_text_payload,json=richTextPayload" json:"rich_text_payload,omitempty"`
	CommentStorage       *TSP.Reference           `protobuf:"bytes,10,opt,name=comment_storage,json=commentStorage" json:"comment_storage,omitempty"`
	ImportWarningSet     *ImportWarningSetArchive `protobuf:"bytes,11,opt,name=import_warning_set,json=importWarningSet" json:"import_warning_set,omitempty"`
	CellSpec             *CellSpecArchive         `protobuf:"bytes,12,opt,name=cell_spec,json=cellSpec" json:"cell_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TableDataList_ListEntry) Reset()         { *m = TableDataList_ListEntry{} }
func (m *TableDataList_ListEntry) String() string { return proto.CompactTextString(m) }
func (*TableDataList_ListEntry) ProtoMessage()    {}
func (*TableDataList_ListEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{14, 0}
}

func (m *TableDataList_ListEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableDataList_ListEntry.Unmarshal(m, b)
}
func (m *TableDataList_ListEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableDataList_ListEntry.Marshal(b, m, deterministic)
}
func (m *TableDataList_ListEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableDataList_ListEntry.Merge(m, src)
}
func (m *TableDataList_ListEntry) XXX_Size() int {
	return xxx_messageInfo_TableDataList_ListEntry.Size(m)
}
func (m *TableDataList_ListEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TableDataList_ListEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TableDataList_ListEntry proto.InternalMessageInfo

func (m *TableDataList_ListEntry) GetKey() uint32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *TableDataList_ListEntry) GetRefcount() uint32 {
	if m != nil && m.Refcount != nil {
		return *m.Refcount
	}
	return 0
}

func (m *TableDataList_ListEntry) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

func (m *TableDataList_ListEntry) GetReference() *TSP.Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *TableDataList_ListEntry) GetFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

func (m *TableDataList_ListEntry) GetFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *TableDataList_ListEntry) GetCustomFormat() *TSK.CustomFormatArchive {
	if m != nil {
		return m.CustomFormat
	}
	return nil
}

func (m *TableDataList_ListEntry) GetRichTextPayload() *TSP.Reference {
	if m != nil {
		return m.RichTextPayload
	}
	return nil
}

func (m *TableDataList_ListEntry) GetCommentStorage() *TSP.Reference {
	if m != nil {
		return m.CommentStorage
	}
	return nil
}

func (m *TableDataList_ListEntry) GetImportWarningSet() *ImportWarningSetArchive {
	if m != nil {
		return m.ImportWarningSet
	}
	return nil
}

func (m *TableDataList_ListEntry) GetCellSpec() *CellSpecArchive {
	if m != nil {
		return m.CellSpec
	}
	return nil
}

type TableRBTree struct {
	Nodes                []*TableRBTree_Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TableRBTree) Reset()         { *m = TableRBTree{} }
func (m *TableRBTree) String() string { return proto.CompactTextString(m) }
func (*TableRBTree) ProtoMessage()    {}
func (*TableRBTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{15}
}

func (m *TableRBTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableRBTree.Unmarshal(m, b)
}
func (m *TableRBTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableRBTree.Marshal(b, m, deterministic)
}
func (m *TableRBTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableRBTree.Merge(m, src)
}
func (m *TableRBTree) XXX_Size() int {
	return xxx_messageInfo_TableRBTree.Size(m)
}
func (m *TableRBTree) XXX_DiscardUnknown() {
	xxx_messageInfo_TableRBTree.DiscardUnknown(m)
}

var xxx_messageInfo_TableRBTree proto.InternalMessageInfo

func (m *TableRBTree) GetNodes() []*TableRBTree_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type TableRBTree_Node struct {
	Key                  *uint32  `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value                *uint32  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableRBTree_Node) Reset()         { *m = TableRBTree_Node{} }
func (m *TableRBTree_Node) String() string { return proto.CompactTextString(m) }
func (*TableRBTree_Node) ProtoMessage()    {}
func (*TableRBTree_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{15, 0}
}

func (m *TableRBTree_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableRBTree_Node.Unmarshal(m, b)
}
func (m *TableRBTree_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableRBTree_Node.Marshal(b, m, deterministic)
}
func (m *TableRBTree_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableRBTree_Node.Merge(m, src)
}
func (m *TableRBTree_Node) XXX_Size() int {
	return xxx_messageInfo_TableRBTree_Node.Size(m)
}
func (m *TableRBTree_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_TableRBTree_Node.DiscardUnknown(m)
}

var xxx_messageInfo_TableRBTree_Node proto.InternalMessageInfo

func (m *TableRBTree_Node) GetKey() uint32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *TableRBTree_Node) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type HeaderStorageBucket struct {
	BucketHashFunction   *uint32                       `protobuf:"varint,1,req,name=bucketHashFunction" json:"bucketHashFunction,omitempty"`
	Headers              []*HeaderStorageBucket_Header `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *HeaderStorageBucket) Reset()         { *m = HeaderStorageBucket{} }
func (m *HeaderStorageBucket) String() string { return proto.CompactTextString(m) }
func (*HeaderStorageBucket) ProtoMessage()    {}
func (*HeaderStorageBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{16}
}

func (m *HeaderStorageBucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderStorageBucket.Unmarshal(m, b)
}
func (m *HeaderStorageBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderStorageBucket.Marshal(b, m, deterministic)
}
func (m *HeaderStorageBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderStorageBucket.Merge(m, src)
}
func (m *HeaderStorageBucket) XXX_Size() int {
	return xxx_messageInfo_HeaderStorageBucket.Size(m)
}
func (m *HeaderStorageBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderStorageBucket.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderStorageBucket proto.InternalMessageInfo

func (m *HeaderStorageBucket) GetBucketHashFunction() uint32 {
	if m != nil && m.BucketHashFunction != nil {
		return *m.BucketHashFunction
	}
	return 0
}

func (m *HeaderStorageBucket) GetHeaders() []*HeaderStorageBucket_Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

type HeaderStorageBucket_Header struct {
	Index                *uint32        `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Size                 *float32       `protobuf:"fixed32,2,req,name=size" json:"size,omitempty"`
	HidingState          *uint32        `protobuf:"varint,3,req,name=hidingState" json:"hidingState,omitempty"`
	NumberOfCells        *uint32        `protobuf:"varint,4,req,name=numberOfCells" json:"numberOfCells,omitempty"`
	CellStyle            *TSP.Reference `protobuf:"bytes,5,opt,name=cell_style,json=cellStyle" json:"cell_style,omitempty"`
	TextStyle            *TSP.Reference `protobuf:"bytes,6,opt,name=text_style,json=textStyle" json:"text_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *HeaderStorageBucket_Header) Reset()         { *m = HeaderStorageBucket_Header{} }
func (m *HeaderStorageBucket_Header) String() string { return proto.CompactTextString(m) }
func (*HeaderStorageBucket_Header) ProtoMessage()    {}
func (*HeaderStorageBucket_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{16, 0}
}

func (m *HeaderStorageBucket_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderStorageBucket_Header.Unmarshal(m, b)
}
func (m *HeaderStorageBucket_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderStorageBucket_Header.Marshal(b, m, deterministic)
}
func (m *HeaderStorageBucket_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderStorageBucket_Header.Merge(m, src)
}
func (m *HeaderStorageBucket_Header) XXX_Size() int {
	return xxx_messageInfo_HeaderStorageBucket_Header.Size(m)
}
func (m *HeaderStorageBucket_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderStorageBucket_Header.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderStorageBucket_Header proto.InternalMessageInfo

func (m *HeaderStorageBucket_Header) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *HeaderStorageBucket_Header) GetSize() float32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *HeaderStorageBucket_Header) GetHidingState() uint32 {
	if m != nil && m.HidingState != nil {
		return *m.HidingState
	}
	return 0
}

func (m *HeaderStorageBucket_Header) GetNumberOfCells() uint32 {
	if m != nil && m.NumberOfCells != nil {
		return *m.NumberOfCells
	}
	return 0
}

func (m *HeaderStorageBucket_Header) GetCellStyle() *TSP.Reference {
	if m != nil {
		return m.CellStyle
	}
	return nil
}

func (m *HeaderStorageBucket_Header) GetTextStyle() *TSP.Reference {
	if m != nil {
		return m.TextStyle
	}
	return nil
}

type HeaderStorage struct {
	BucketHashFunction   *uint32          `protobuf:"varint,1,req,name=bucketHashFunction" json:"bucketHashFunction,omitempty"`
	Buckets              []*TSP.Reference `protobuf:"bytes,2,rep,name=buckets" json:"buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HeaderStorage) Reset()         { *m = HeaderStorage{} }
func (m *HeaderStorage) String() string { return proto.CompactTextString(m) }
func (*HeaderStorage) ProtoMessage()    {}
func (*HeaderStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{17}
}

func (m *HeaderStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderStorage.Unmarshal(m, b)
}
func (m *HeaderStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderStorage.Marshal(b, m, deterministic)
}
func (m *HeaderStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderStorage.Merge(m, src)
}
func (m *HeaderStorage) XXX_Size() int {
	return xxx_messageInfo_HeaderStorage.Size(m)
}
func (m *HeaderStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderStorage.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderStorage proto.InternalMessageInfo

func (m *HeaderStorage) GetBucketHashFunction() uint32 {
	if m != nil && m.BucketHashFunction != nil {
		return *m.BucketHashFunction
	}
	return 0
}

func (m *HeaderStorage) GetBuckets() []*TSP.Reference {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type DataStore struct {
	RowHeaders                    *HeaderStorage `protobuf:"bytes,1,req,name=rowHeaders" json:"rowHeaders,omitempty"`
	ColumnHeaders                 *TSP.Reference `protobuf:"bytes,2,req,name=columnHeaders" json:"columnHeaders,omitempty"`
	Tiles                         *TileStorage   `protobuf:"bytes,3,req,name=tiles" json:"tiles,omitempty"`
	StringTable                   *TSP.Reference `protobuf:"bytes,4,req,name=stringTable" json:"stringTable,omitempty"`
	StyleTable                    *TSP.Reference `protobuf:"bytes,5,req,name=styleTable" json:"styleTable,omitempty"`
	FormulaTable                  *TSP.Reference `protobuf:"bytes,6,req,name=formula_table,json=formulaTable" json:"formula_table,omitempty"`
	FormulaErrorTable             *TSP.Reference `protobuf:"bytes,12,opt,name=formulaErrorTable" json:"formulaErrorTable,omitempty"`
	FormatTablePreBnc             *TSP.Reference `protobuf:"bytes,11,req,name=format_table_pre_bnc,json=formatTablePreBnc" json:"format_table_pre_bnc,omitempty"`
	MultipleChoiceListFormatTable *TSP.Reference `protobuf:"bytes,16,opt,name=multipleChoiceListFormatTable" json:"multipleChoiceListFormatTable,omitempty"`
	MergeRegionMap                *TSP.Reference `protobuf:"bytes,13,opt,name=merge_region_map,json=mergeRegionMap" json:"merge_region_map,omitempty"`
	CustomFormatTable             *TSP.Reference `protobuf:"bytes,15,opt,name=customFormatTable" json:"customFormatTable,omitempty"`
	NextRowStripID                *uint32        `protobuf:"varint,7,req,name=nextRowStripID" json:"nextRowStripID,omitempty"`
	NextColumnStripID             *uint32        `protobuf:"varint,8,req,name=nextColumnStripID" json:"nextColumnStripID,omitempty"`
	RowTileTree                   *TableRBTree   `protobuf:"bytes,9,req,name=rowTileTree" json:"rowTileTree,omitempty"`
	ColumnTileTree                *TableRBTree   `protobuf:"bytes,10,req,name=columnTileTree" json:"columnTileTree,omitempty"`
	StorageVersionPreBnc          *uint32        `protobuf:"varint,14,opt,name=storage_version_pre_bnc,json=storageVersionPreBnc" json:"storage_version_pre_bnc,omitempty"`
	RichTextTable                 *TSP.Reference `protobuf:"bytes,17,opt,name=rich_text_table,json=richTextTable" json:"rich_text_table,omitempty"`
	Conditionalstyletable         *TSP.Reference `protobuf:"bytes,18,opt,name=conditionalstyletable" json:"conditionalstyletable,omitempty"`
	CommentStorageTable           *TSP.Reference `protobuf:"bytes,19,opt,name=commentStorageTable" json:"commentStorageTable,omitempty"`
	ImportWarningSetTable         *TSP.Reference `protobuf:"bytes,20,opt,name=importWarningSetTable" json:"importWarningSetTable,omitempty"`
	ControlCellSpecTable          *TSP.Reference `protobuf:"bytes,21,opt,name=control_cell_spec_table,json=controlCellSpecTable" json:"control_cell_spec_table,omitempty"`
	FormatTable                   *TSP.Reference `protobuf:"bytes,22,opt,name=format_table,json=formatTable" json:"format_table,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}       `json:"-"`
	XXX_unrecognized              []byte         `json:"-"`
	XXX_sizecache                 int32          `json:"-"`
}

func (m *DataStore) Reset()         { *m = DataStore{} }
func (m *DataStore) String() string { return proto.CompactTextString(m) }
func (*DataStore) ProtoMessage()    {}
func (*DataStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{18}
}

func (m *DataStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataStore.Unmarshal(m, b)
}
func (m *DataStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataStore.Marshal(b, m, deterministic)
}
func (m *DataStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataStore.Merge(m, src)
}
func (m *DataStore) XXX_Size() int {
	return xxx_messageInfo_DataStore.Size(m)
}
func (m *DataStore) XXX_DiscardUnknown() {
	xxx_messageInfo_DataStore.DiscardUnknown(m)
}

var xxx_messageInfo_DataStore proto.InternalMessageInfo

func (m *DataStore) GetRowHeaders() *HeaderStorage {
	if m != nil {
		return m.RowHeaders
	}
	return nil
}

func (m *DataStore) GetColumnHeaders() *TSP.Reference {
	if m != nil {
		return m.ColumnHeaders
	}
	return nil
}

func (m *DataStore) GetTiles() *TileStorage {
	if m != nil {
		return m.Tiles
	}
	return nil
}

func (m *DataStore) GetStringTable() *TSP.Reference {
	if m != nil {
		return m.StringTable
	}
	return nil
}

func (m *DataStore) GetStyleTable() *TSP.Reference {
	if m != nil {
		return m.StyleTable
	}
	return nil
}

func (m *DataStore) GetFormulaTable() *TSP.Reference {
	if m != nil {
		return m.FormulaTable
	}
	return nil
}

func (m *DataStore) GetFormulaErrorTable() *TSP.Reference {
	if m != nil {
		return m.FormulaErrorTable
	}
	return nil
}

func (m *DataStore) GetFormatTablePreBnc() *TSP.Reference {
	if m != nil {
		return m.FormatTablePreBnc
	}
	return nil
}

func (m *DataStore) GetMultipleChoiceListFormatTable() *TSP.Reference {
	if m != nil {
		return m.MultipleChoiceListFormatTable
	}
	return nil
}

func (m *DataStore) GetMergeRegionMap() *TSP.Reference {
	if m != nil {
		return m.MergeRegionMap
	}
	return nil
}

func (m *DataStore) GetCustomFormatTable() *TSP.Reference {
	if m != nil {
		return m.CustomFormatTable
	}
	return nil
}

func (m *DataStore) GetNextRowStripID() uint32 {
	if m != nil && m.NextRowStripID != nil {
		return *m.NextRowStripID
	}
	return 0
}

func (m *DataStore) GetNextColumnStripID() uint32 {
	if m != nil && m.NextColumnStripID != nil {
		return *m.NextColumnStripID
	}
	return 0
}

func (m *DataStore) GetRowTileTree() *TableRBTree {
	if m != nil {
		return m.RowTileTree
	}
	return nil
}

func (m *DataStore) GetColumnTileTree() *TableRBTree {
	if m != nil {
		return m.ColumnTileTree
	}
	return nil
}

func (m *DataStore) GetStorageVersionPreBnc() uint32 {
	if m != nil && m.StorageVersionPreBnc != nil {
		return *m.StorageVersionPreBnc
	}
	return 0
}

func (m *DataStore) GetRichTextTable() *TSP.Reference {
	if m != nil {
		return m.RichTextTable
	}
	return nil
}

func (m *DataStore) GetConditionalstyletable() *TSP.Reference {
	if m != nil {
		return m.Conditionalstyletable
	}
	return nil
}

func (m *DataStore) GetCommentStorageTable() *TSP.Reference {
	if m != nil {
		return m.CommentStorageTable
	}
	return nil
}

func (m *DataStore) GetImportWarningSetTable() *TSP.Reference {
	if m != nil {
		return m.ImportWarningSetTable
	}
	return nil
}

func (m *DataStore) GetControlCellSpecTable() *TSP.Reference {
	if m != nil {
		return m.ControlCellSpecTable
	}
	return nil
}

func (m *DataStore) GetFormatTable() *TSP.Reference {
	if m != nil {
		return m.FormatTable
	}
	return nil
}

type TableInfoArchive struct {
	Super                *TSD.DrawableArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	TableModel           *TSP.Reference       `protobuf:"bytes,2,req,name=tableModel" json:"tableModel,omitempty"`
	EditingState         *TSP.Reference       `protobuf:"bytes,3,opt,name=editing_state,json=editingState" json:"editing_state,omitempty"` // Deprecated: Do not use.
	SummaryModel         *TSP.Reference       `protobuf:"bytes,4,opt,name=summary_model,json=summaryModel" json:"summary_model,omitempty"`
	CategoryOrder        *TSP.Reference       `protobuf:"bytes,5,opt,name=category_order,json=categoryOrder" json:"category_order,omitempty"`
	ViewColumnRowUids    *TSP.Reference       `protobuf:"bytes,6,opt,name=view_column_row_uids,json=viewColumnRowUids" json:"view_column_row_uids,omitempty"`
	GroupByUuid          *TSP.UUID            `protobuf:"bytes,7,opt,name=group_by_uuid,json=groupByUuid" json:"group_by_uuid,omitempty"`
	HiddenStatesUuid     *TSP.UUID            `protobuf:"bytes,8,opt,name=hidden_states_uuid,json=hiddenStatesUuid" json:"hidden_states_uuid,omitempty"`
	FormulaCoordSpace    *uint32              `protobuf:"varint,9,opt,name=formula_coord_space,json=formulaCoordSpace" json:"formula_coord_space,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TableInfoArchive) Reset()         { *m = TableInfoArchive{} }
func (m *TableInfoArchive) String() string { return proto.CompactTextString(m) }
func (*TableInfoArchive) ProtoMessage()    {}
func (*TableInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{19}
}

func (m *TableInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableInfoArchive.Unmarshal(m, b)
}
func (m *TableInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableInfoArchive.Marshal(b, m, deterministic)
}
func (m *TableInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableInfoArchive.Merge(m, src)
}
func (m *TableInfoArchive) XXX_Size() int {
	return xxx_messageInfo_TableInfoArchive.Size(m)
}
func (m *TableInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableInfoArchive proto.InternalMessageInfo

func (m *TableInfoArchive) GetSuper() *TSD.DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *TableInfoArchive) GetTableModel() *TSP.Reference {
	if m != nil {
		return m.TableModel
	}
	return nil
}

// Deprecated: Do not use.
func (m *TableInfoArchive) GetEditingState() *TSP.Reference {
	if m != nil {
		return m.EditingState
	}
	return nil
}

func (m *TableInfoArchive) GetSummaryModel() *TSP.Reference {
	if m != nil {
		return m.SummaryModel
	}
	return nil
}

func (m *TableInfoArchive) GetCategoryOrder() *TSP.Reference {
	if m != nil {
		return m.CategoryOrder
	}
	return nil
}

func (m *TableInfoArchive) GetViewColumnRowUids() *TSP.Reference {
	if m != nil {
		return m.ViewColumnRowUids
	}
	return nil
}

func (m *TableInfoArchive) GetGroupByUuid() *TSP.UUID {
	if m != nil {
		return m.GroupByUuid
	}
	return nil
}

func (m *TableInfoArchive) GetHiddenStatesUuid() *TSP.UUID {
	if m != nil {
		return m.HiddenStatesUuid
	}
	return nil
}

func (m *TableInfoArchive) GetFormulaCoordSpace() uint32 {
	if m != nil && m.FormulaCoordSpace != nil {
		return *m.FormulaCoordSpace
	}
	return 0
}

type CategoryInfoArchive struct {
	Super                *TSD.DrawableArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	TableModel           *TSP.Reference       `protobuf:"bytes,2,req,name=tableModel" json:"tableModel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CategoryInfoArchive) Reset()         { *m = CategoryInfoArchive{} }
func (m *CategoryInfoArchive) String() string { return proto.CompactTextString(m) }
func (*CategoryInfoArchive) ProtoMessage()    {}
func (*CategoryInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{20}
}

func (m *CategoryInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryInfoArchive.Unmarshal(m, b)
}
func (m *CategoryInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryInfoArchive.Marshal(b, m, deterministic)
}
func (m *CategoryInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryInfoArchive.Merge(m, src)
}
func (m *CategoryInfoArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryInfoArchive.Size(m)
}
func (m *CategoryInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryInfoArchive proto.InternalMessageInfo

func (m *CategoryInfoArchive) GetSuper() *TSD.DrawableArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CategoryInfoArchive) GetTableModel() *TSP.Reference {
	if m != nil {
		return m.TableModel
	}
	return nil
}

type WPTableInfoArchive struct {
	Super                *TableInfoArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Storage              *TSP.Reference    `protobuf:"bytes,2,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WPTableInfoArchive) Reset()         { *m = WPTableInfoArchive{} }
func (m *WPTableInfoArchive) String() string { return proto.CompactTextString(m) }
func (*WPTableInfoArchive) ProtoMessage()    {}
func (*WPTableInfoArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{21}
}

func (m *WPTableInfoArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WPTableInfoArchive.Unmarshal(m, b)
}
func (m *WPTableInfoArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WPTableInfoArchive.Marshal(b, m, deterministic)
}
func (m *WPTableInfoArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WPTableInfoArchive.Merge(m, src)
}
func (m *WPTableInfoArchive) XXX_Size() int {
	return xxx_messageInfo_WPTableInfoArchive.Size(m)
}
func (m *WPTableInfoArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_WPTableInfoArchive.DiscardUnknown(m)
}

var xxx_messageInfo_WPTableInfoArchive proto.InternalMessageInfo

func (m *WPTableInfoArchive) GetSuper() *TableInfoArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *WPTableInfoArchive) GetStorage() *TSP.Reference {
	if m != nil {
		return m.Storage
	}
	return nil
}

type TableStyleNetworkArchive struct {
	TableStyle               *TSP.Reference `protobuf:"bytes,9,req,name=table_style,json=tableStyle" json:"table_style,omitempty"`
	BodyTextStyle            *TSP.Reference `protobuf:"bytes,1,req,name=body_text_style,json=bodyTextStyle" json:"body_text_style,omitempty"`
	HeaderRowTextStyle       *TSP.Reference `protobuf:"bytes,2,req,name=header_row_text_style,json=headerRowTextStyle" json:"header_row_text_style,omitempty"`
	HeaderColumnTextStyle    *TSP.Reference `protobuf:"bytes,3,req,name=header_column_text_style,json=headerColumnTextStyle" json:"header_column_text_style,omitempty"`
	FooterRowTextStyle       *TSP.Reference `protobuf:"bytes,4,req,name=footer_row_text_style,json=footerRowTextStyle" json:"footer_row_text_style,omitempty"`
	CategoryLevel_1TextStyle *TSP.Reference `protobuf:"bytes,13,opt,name=category_level_1_text_style,json=categoryLevel1TextStyle" json:"category_level_1_text_style,omitempty"`
	CategoryLevel_2TextStyle *TSP.Reference `protobuf:"bytes,14,opt,name=category_level_2_text_style,json=categoryLevel2TextStyle" json:"category_level_2_text_style,omitempty"`
	CategoryLevel_3TextStyle *TSP.Reference `protobuf:"bytes,15,opt,name=category_level_3_text_style,json=categoryLevel3TextStyle" json:"category_level_3_text_style,omitempty"`
	CategoryLevel_4TextStyle *TSP.Reference `protobuf:"bytes,16,opt,name=category_level_4_text_style,json=categoryLevel4TextStyle" json:"category_level_4_text_style,omitempty"`
	CategoryLevel_5TextStyle *TSP.Reference `protobuf:"bytes,17,opt,name=category_level_5_text_style,json=categoryLevel5TextStyle" json:"category_level_5_text_style,omitempty"`
	LabelLevel_1TextStyle    *TSP.Reference `protobuf:"bytes,23,opt,name=label_level_1_text_style,json=labelLevel1TextStyle" json:"label_level_1_text_style,omitempty"`
	LabelLevel_2TextStyle    *TSP.Reference `protobuf:"bytes,24,opt,name=label_level_2_text_style,json=labelLevel2TextStyle" json:"label_level_2_text_style,omitempty"`
	LabelLevel_3TextStyle    *TSP.Reference `protobuf:"bytes,25,opt,name=label_level_3_text_style,json=labelLevel3TextStyle" json:"label_level_3_text_style,omitempty"`
	LabelLevel_4TextStyle    *TSP.Reference `protobuf:"bytes,26,opt,name=label_level_4_text_style,json=labelLevel4TextStyle" json:"label_level_4_text_style,omitempty"`
	LabelLevel_5TextStyle    *TSP.Reference `protobuf:"bytes,27,opt,name=label_level_5_text_style,json=labelLevel5TextStyle" json:"label_level_5_text_style,omitempty"`
	BodyCellStyle            *TSP.Reference `protobuf:"bytes,5,req,name=body_cell_style,json=bodyCellStyle" json:"body_cell_style,omitempty"`
	HeaderRowStyle           *TSP.Reference `protobuf:"bytes,6,req,name=header_row_style,json=headerRowStyle" json:"header_row_style,omitempty"`
	HeaderColumnStyle        *TSP.Reference `protobuf:"bytes,7,req,name=header_column_style,json=headerColumnStyle" json:"header_column_style,omitempty"`
	FooterRowStyle           *TSP.Reference `protobuf:"bytes,8,req,name=footer_row_style,json=footerRowStyle" json:"footer_row_style,omitempty"`
	CategoryLevel_1Style     *TSP.Reference `protobuf:"bytes,18,opt,name=category_level_1_style,json=categoryLevel1Style" json:"category_level_1_style,omitempty"`
	CategoryLevel_2Style     *TSP.Reference `protobuf:"bytes,19,opt,name=category_level_2_style,json=categoryLevel2Style" json:"category_level_2_style,omitempty"`
	CategoryLevel_3Style     *TSP.Reference `protobuf:"bytes,20,opt,name=category_level_3_style,json=categoryLevel3Style" json:"category_level_3_style,omitempty"`
	CategoryLevel_4Style     *TSP.Reference `protobuf:"bytes,21,opt,name=category_level_4_style,json=categoryLevel4Style" json:"category_level_4_style,omitempty"`
	CategoryLevel_5Style     *TSP.Reference `protobuf:"bytes,22,opt,name=category_level_5_style,json=categoryLevel5Style" json:"category_level_5_style,omitempty"`
	LabelLevel_1Style        *TSP.Reference `protobuf:"bytes,28,opt,name=label_level_1_style,json=labelLevel1Style" json:"label_level_1_style,omitempty"`
	LabelLevel_2Style        *TSP.Reference `protobuf:"bytes,29,opt,name=label_level_2_style,json=labelLevel2Style" json:"label_level_2_style,omitempty"`
	LabelLevel_3Style        *TSP.Reference `protobuf:"bytes,30,opt,name=label_level_3_style,json=labelLevel3Style" json:"label_level_3_style,omitempty"`
	LabelLevel_4Style        *TSP.Reference `protobuf:"bytes,31,opt,name=label_level_4_style,json=labelLevel4Style" json:"label_level_4_style,omitempty"`
	LabelLevel_5Style        *TSP.Reference `protobuf:"bytes,32,opt,name=label_level_5_style,json=labelLevel5Style" json:"label_level_5_style,omitempty"`
	TableNameStyle           *TSP.Reference `protobuf:"bytes,10,opt,name=table_name_style,json=tableNameStyle" json:"table_name_style,omitempty"`
	TableNameShapeStyle      *TSP.Reference `protobuf:"bytes,11,opt,name=table_name_shape_style,json=tableNameShapeStyle" json:"table_name_shape_style,omitempty"`
	PresetId                 *uint32        `protobuf:"varint,12,opt,name=preset_id,json=presetId" json:"preset_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}       `json:"-"`
	XXX_unrecognized         []byte         `json:"-"`
	XXX_sizecache            int32          `json:"-"`
}

func (m *TableStyleNetworkArchive) Reset()         { *m = TableStyleNetworkArchive{} }
func (m *TableStyleNetworkArchive) String() string { return proto.CompactTextString(m) }
func (*TableStyleNetworkArchive) ProtoMessage()    {}
func (*TableStyleNetworkArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{22}
}

func (m *TableStyleNetworkArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableStyleNetworkArchive.Unmarshal(m, b)
}
func (m *TableStyleNetworkArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableStyleNetworkArchive.Marshal(b, m, deterministic)
}
func (m *TableStyleNetworkArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableStyleNetworkArchive.Merge(m, src)
}
func (m *TableStyleNetworkArchive) XXX_Size() int {
	return xxx_messageInfo_TableStyleNetworkArchive.Size(m)
}
func (m *TableStyleNetworkArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableStyleNetworkArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableStyleNetworkArchive proto.InternalMessageInfo

func (m *TableStyleNetworkArchive) GetTableStyle() *TSP.Reference {
	if m != nil {
		return m.TableStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetBodyTextStyle() *TSP.Reference {
	if m != nil {
		return m.BodyTextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetHeaderRowTextStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderRowTextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetHeaderColumnTextStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderColumnTextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetFooterRowTextStyle() *TSP.Reference {
	if m != nil {
		return m.FooterRowTextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_1TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_1TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_2TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_2TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_3TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_3TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_4TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_4TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_5TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_5TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_1TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_1TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_2TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_2TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_3TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_3TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_4TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_4TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_5TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_5TextStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetBodyCellStyle() *TSP.Reference {
	if m != nil {
		return m.BodyCellStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetHeaderRowStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderRowStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetHeaderColumnStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderColumnStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetFooterRowStyle() *TSP.Reference {
	if m != nil {
		return m.FooterRowStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_1Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_1Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_2Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_2Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_3Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_3Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_4Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_4Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetCategoryLevel_5Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_5Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_1Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_1Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_2Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_2Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_3Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_3Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_4Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_4Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetLabelLevel_5Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_5Style
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetTableNameStyle() *TSP.Reference {
	if m != nil {
		return m.TableNameStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetTableNameShapeStyle() *TSP.Reference {
	if m != nil {
		return m.TableNameShapeStyle
	}
	return nil
}

func (m *TableStyleNetworkArchive) GetPresetId() uint32 {
	if m != nil && m.PresetId != nil {
		return *m.PresetId
	}
	return 0
}

type TableSortOrderArchive struct {
	Type                 *TableSortOrderArchive_SortType          `protobuf:"varint,1,req,name=type,enum=TST.TableSortOrderArchive_SortType" json:"type,omitempty"`
	Rules                []*TableSortOrderArchive_SortRuleArchive `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *TableSortOrderArchive) Reset()         { *m = TableSortOrderArchive{} }
func (m *TableSortOrderArchive) String() string { return proto.CompactTextString(m) }
func (*TableSortOrderArchive) ProtoMessage()    {}
func (*TableSortOrderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{23}
}

func (m *TableSortOrderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSortOrderArchive.Unmarshal(m, b)
}
func (m *TableSortOrderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSortOrderArchive.Marshal(b, m, deterministic)
}
func (m *TableSortOrderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSortOrderArchive.Merge(m, src)
}
func (m *TableSortOrderArchive) XXX_Size() int {
	return xxx_messageInfo_TableSortOrderArchive.Size(m)
}
func (m *TableSortOrderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSortOrderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableSortOrderArchive proto.InternalMessageInfo

func (m *TableSortOrderArchive) GetType() TableSortOrderArchive_SortType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TableSortOrderArchive_entire_table
}

func (m *TableSortOrderArchive) GetRules() []*TableSortOrderArchive_SortRuleArchive {
	if m != nil {
		return m.Rules
	}
	return nil
}

type TableSortOrderArchive_SortRuleArchive struct {
	Column               *uint32                                          `protobuf:"varint,1,req,name=column" json:"column,omitempty"`
	Direction            *TableSortOrderArchive_SortRuleArchive_Direction `protobuf:"varint,2,req,name=direction,enum=TST.TableSortOrderArchive_SortRuleArchive_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *TableSortOrderArchive_SortRuleArchive) Reset()         { *m = TableSortOrderArchive_SortRuleArchive{} }
func (m *TableSortOrderArchive_SortRuleArchive) String() string { return proto.CompactTextString(m) }
func (*TableSortOrderArchive_SortRuleArchive) ProtoMessage()    {}
func (*TableSortOrderArchive_SortRuleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{23, 0}
}

func (m *TableSortOrderArchive_SortRuleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSortOrderArchive_SortRuleArchive.Unmarshal(m, b)
}
func (m *TableSortOrderArchive_SortRuleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSortOrderArchive_SortRuleArchive.Marshal(b, m, deterministic)
}
func (m *TableSortOrderArchive_SortRuleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSortOrderArchive_SortRuleArchive.Merge(m, src)
}
func (m *TableSortOrderArchive_SortRuleArchive) XXX_Size() int {
	return xxx_messageInfo_TableSortOrderArchive_SortRuleArchive.Size(m)
}
func (m *TableSortOrderArchive_SortRuleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSortOrderArchive_SortRuleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableSortOrderArchive_SortRuleArchive proto.InternalMessageInfo

func (m *TableSortOrderArchive_SortRuleArchive) GetColumn() uint32 {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return 0
}

func (m *TableSortOrderArchive_SortRuleArchive) GetDirection() TableSortOrderArchive_SortRuleArchive_Direction {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return TableSortOrderArchive_SortRuleArchive_ascending
}

type TableSortOrderUIDArchive struct {
	Type                 *TableSortOrderUIDArchive_SortType          `protobuf:"varint,1,req,name=type,enum=TST.TableSortOrderUIDArchive_SortType" json:"type,omitempty"`
	Rules                []*TableSortOrderUIDArchive_SortRuleArchive `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *TableSortOrderUIDArchive) Reset()         { *m = TableSortOrderUIDArchive{} }
func (m *TableSortOrderUIDArchive) String() string { return proto.CompactTextString(m) }
func (*TableSortOrderUIDArchive) ProtoMessage()    {}
func (*TableSortOrderUIDArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{24}
}

func (m *TableSortOrderUIDArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSortOrderUIDArchive.Unmarshal(m, b)
}
func (m *TableSortOrderUIDArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSortOrderUIDArchive.Marshal(b, m, deterministic)
}
func (m *TableSortOrderUIDArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSortOrderUIDArchive.Merge(m, src)
}
func (m *TableSortOrderUIDArchive) XXX_Size() int {
	return xxx_messageInfo_TableSortOrderUIDArchive.Size(m)
}
func (m *TableSortOrderUIDArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSortOrderUIDArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableSortOrderUIDArchive proto.InternalMessageInfo

func (m *TableSortOrderUIDArchive) GetType() TableSortOrderUIDArchive_SortType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TableSortOrderUIDArchive_entire_table
}

func (m *TableSortOrderUIDArchive) GetRules() []*TableSortOrderUIDArchive_SortRuleArchive {
	if m != nil {
		return m.Rules
	}
	return nil
}

type TableSortOrderUIDArchive_SortRuleArchive struct {
	ColumnUid            *TSP.UUID                                           `protobuf:"bytes,1,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	Direction            *TableSortOrderUIDArchive_SortRuleArchive_Direction `protobuf:"varint,2,req,name=direction,enum=TST.TableSortOrderUIDArchive_SortRuleArchive_Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *TableSortOrderUIDArchive_SortRuleArchive) Reset() {
	*m = TableSortOrderUIDArchive_SortRuleArchive{}
}
func (m *TableSortOrderUIDArchive_SortRuleArchive) String() string { return proto.CompactTextString(m) }
func (*TableSortOrderUIDArchive_SortRuleArchive) ProtoMessage()    {}
func (*TableSortOrderUIDArchive_SortRuleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{24, 0}
}

func (m *TableSortOrderUIDArchive_SortRuleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive.Unmarshal(m, b)
}
func (m *TableSortOrderUIDArchive_SortRuleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive.Marshal(b, m, deterministic)
}
func (m *TableSortOrderUIDArchive_SortRuleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive.Merge(m, src)
}
func (m *TableSortOrderUIDArchive_SortRuleArchive) XXX_Size() int {
	return xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive.Size(m)
}
func (m *TableSortOrderUIDArchive_SortRuleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableSortOrderUIDArchive_SortRuleArchive proto.InternalMessageInfo

func (m *TableSortOrderUIDArchive_SortRuleArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *TableSortOrderUIDArchive_SortRuleArchive) GetDirection() TableSortOrderUIDArchive_SortRuleArchive_Direction {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return TableSortOrderUIDArchive_SortRuleArchive_ascending
}

type SortRuleReferenceTrackerArchive struct {
	ReferenceTracker     *TSP.Reference `protobuf:"bytes,1,req,name=reference_tracker,json=referenceTracker" json:"reference_tracker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SortRuleReferenceTrackerArchive) Reset()         { *m = SortRuleReferenceTrackerArchive{} }
func (m *SortRuleReferenceTrackerArchive) String() string { return proto.CompactTextString(m) }
func (*SortRuleReferenceTrackerArchive) ProtoMessage()    {}
func (*SortRuleReferenceTrackerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{25}
}

func (m *SortRuleReferenceTrackerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortRuleReferenceTrackerArchive.Unmarshal(m, b)
}
func (m *SortRuleReferenceTrackerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortRuleReferenceTrackerArchive.Marshal(b, m, deterministic)
}
func (m *SortRuleReferenceTrackerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortRuleReferenceTrackerArchive.Merge(m, src)
}
func (m *SortRuleReferenceTrackerArchive) XXX_Size() int {
	return xxx_messageInfo_SortRuleReferenceTrackerArchive.Size(m)
}
func (m *SortRuleReferenceTrackerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SortRuleReferenceTrackerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SortRuleReferenceTrackerArchive proto.InternalMessageInfo

func (m *SortRuleReferenceTrackerArchive) GetReferenceTracker() *TSP.Reference {
	if m != nil {
		return m.ReferenceTracker
	}
	return nil
}

type CellRegion struct {
	CellRanges           []*CellRange `protobuf:"bytes,1,rep,name=cell_ranges,json=cellRanges" json:"cell_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CellRegion) Reset()         { *m = CellRegion{} }
func (m *CellRegion) String() string { return proto.CompactTextString(m) }
func (*CellRegion) ProtoMessage()    {}
func (*CellRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{26}
}

func (m *CellRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellRegion.Unmarshal(m, b)
}
func (m *CellRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellRegion.Marshal(b, m, deterministic)
}
func (m *CellRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellRegion.Merge(m, src)
}
func (m *CellRegion) XXX_Size() int {
	return xxx_messageInfo_CellRegion.Size(m)
}
func (m *CellRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_CellRegion.DiscardUnknown(m)
}

var xxx_messageInfo_CellRegion proto.InternalMessageInfo

func (m *CellRegion) GetCellRanges() []*CellRange {
	if m != nil {
		return m.CellRanges
	}
	return nil
}

type CellUIDRegionArchive struct {
	CellUidRanges        []*TSP.UUIDRectArchive `protobuf:"bytes,1,rep,name=cell_uid_ranges,json=cellUidRanges" json:"cell_uid_ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CellUIDRegionArchive) Reset()         { *m = CellUIDRegionArchive{} }
func (m *CellUIDRegionArchive) String() string { return proto.CompactTextString(m) }
func (*CellUIDRegionArchive) ProtoMessage()    {}
func (*CellUIDRegionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{27}
}

func (m *CellUIDRegionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellUIDRegionArchive.Unmarshal(m, b)
}
func (m *CellUIDRegionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellUIDRegionArchive.Marshal(b, m, deterministic)
}
func (m *CellUIDRegionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellUIDRegionArchive.Merge(m, src)
}
func (m *CellUIDRegionArchive) XXX_Size() int {
	return xxx_messageInfo_CellUIDRegionArchive.Size(m)
}
func (m *CellUIDRegionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellUIDRegionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellUIDRegionArchive proto.InternalMessageInfo

func (m *CellUIDRegionArchive) GetCellUidRanges() []*TSP.UUIDRectArchive {
	if m != nil {
		return m.CellUidRanges
	}
	return nil
}

type StructuredTextImportRecord struct {
	ImportSettings       *TSK.StructuredTextImportSettings `protobuf:"bytes,1,req,name=import_settings,json=importSettings" json:"import_settings,omitempty"`
	ImportSource         *string                           `protobuf:"bytes,2,opt,name=import_source,json=importSource" json:"import_source,omitempty"`
	ImportDate           *float64                          `protobuf:"fixed64,3,opt,name=import_date,json=importDate" json:"import_date,omitempty"`
	SourceData           []byte                            `protobuf:"bytes,4,opt,name=source_data,json=sourceData" json:"source_data,omitempty"`
	SourceEncoding       *uint64                           `protobuf:"varint,5,opt,name=source_encoding,json=sourceEncoding" json:"source_encoding,omitempty"`
	Confidence           *float32                          `protobuf:"fixed32,6,opt,name=confidence" json:"confidence,omitempty"`
	ImportedRegion       *CellRegion                       `protobuf:"bytes,7,opt,name=imported_region,json=importedRegion" json:"imported_region,omitempty"`
	SourceRowCount       *uint64                           `protobuf:"varint,8,opt,name=source_row_count,json=sourceRowCount" json:"source_row_count,omitempty"`
	SourceColumnCount    *uint64                           `protobuf:"varint,9,opt,name=source_column_count,json=sourceColumnCount" json:"source_column_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *StructuredTextImportRecord) Reset()         { *m = StructuredTextImportRecord{} }
func (m *StructuredTextImportRecord) String() string { return proto.CompactTextString(m) }
func (*StructuredTextImportRecord) ProtoMessage()    {}
func (*StructuredTextImportRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{28}
}

func (m *StructuredTextImportRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredTextImportRecord.Unmarshal(m, b)
}
func (m *StructuredTextImportRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredTextImportRecord.Marshal(b, m, deterministic)
}
func (m *StructuredTextImportRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredTextImportRecord.Merge(m, src)
}
func (m *StructuredTextImportRecord) XXX_Size() int {
	return xxx_messageInfo_StructuredTextImportRecord.Size(m)
}
func (m *StructuredTextImportRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredTextImportRecord.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredTextImportRecord proto.InternalMessageInfo

func (m *StructuredTextImportRecord) GetImportSettings() *TSK.StructuredTextImportSettings {
	if m != nil {
		return m.ImportSettings
	}
	return nil
}

func (m *StructuredTextImportRecord) GetImportSource() string {
	if m != nil && m.ImportSource != nil {
		return *m.ImportSource
	}
	return ""
}

func (m *StructuredTextImportRecord) GetImportDate() float64 {
	if m != nil && m.ImportDate != nil {
		return *m.ImportDate
	}
	return 0
}

func (m *StructuredTextImportRecord) GetSourceData() []byte {
	if m != nil {
		return m.SourceData
	}
	return nil
}

func (m *StructuredTextImportRecord) GetSourceEncoding() uint64 {
	if m != nil && m.SourceEncoding != nil {
		return *m.SourceEncoding
	}
	return 0
}

func (m *StructuredTextImportRecord) GetConfidence() float32 {
	if m != nil && m.Confidence != nil {
		return *m.Confidence
	}
	return 0
}

func (m *StructuredTextImportRecord) GetImportedRegion() *CellRegion {
	if m != nil {
		return m.ImportedRegion
	}
	return nil
}

func (m *StructuredTextImportRecord) GetSourceRowCount() uint64 {
	if m != nil && m.SourceRowCount != nil {
		return *m.SourceRowCount
	}
	return 0
}

func (m *StructuredTextImportRecord) GetSourceColumnCount() uint64 {
	if m != nil && m.SourceColumnCount != nil {
		return *m.SourceColumnCount
	}
	return 0
}

type TableModelArchive struct {
	TableId                           *string                          `protobuf:"bytes,1,req,name=table_id,json=tableId" json:"table_id,omitempty"`
	FromTableId                       *string                          `protobuf:"bytes,43,opt,name=from_table_id,json=fromTableId" json:"from_table_id,omitempty"`
	WasCut                            *bool                            `protobuf:"varint,50,opt,name=was_cut,json=wasCut" json:"was_cut,omitempty"`
	TableStyle                        *TSP.Reference                   `protobuf:"bytes,3,req,name=table_style,json=tableStyle" json:"table_style,omitempty"`
	BodyTextStyle                     *TSP.Reference                   `protobuf:"bytes,24,req,name=body_text_style,json=bodyTextStyle" json:"body_text_style,omitempty"`
	HeaderRowTextStyle                *TSP.Reference                   `protobuf:"bytes,25,req,name=header_row_text_style,json=headerRowTextStyle" json:"header_row_text_style,omitempty"`
	HeaderColumnTextStyle             *TSP.Reference                   `protobuf:"bytes,26,req,name=header_column_text_style,json=headerColumnTextStyle" json:"header_column_text_style,omitempty"`
	FooterRowTextStyle                *TSP.Reference                   `protobuf:"bytes,27,req,name=footer_row_text_style,json=footerRowTextStyle" json:"footer_row_text_style,omitempty"`
	BodyCellStyle                     *TSP.Reference                   `protobuf:"bytes,18,req,name=body_cell_style,json=bodyCellStyle" json:"body_cell_style,omitempty"`
	HeaderRowStyle                    *TSP.Reference                   `protobuf:"bytes,19,req,name=header_row_style,json=headerRowStyle" json:"header_row_style,omitempty"`
	HeaderColumnStyle                 *TSP.Reference                   `protobuf:"bytes,20,req,name=header_column_style,json=headerColumnStyle" json:"header_column_style,omitempty"`
	FooterRowStyle                    *TSP.Reference                   `protobuf:"bytes,21,req,name=footer_row_style,json=footerRowStyle" json:"footer_row_style,omitempty"`
	TableNameStyle                    *TSP.Reference                   `protobuf:"bytes,30,opt,name=table_name_style,json=tableNameStyle" json:"table_name_style,omitempty"`
	TableNameShapeStyle               *TSP.Reference                   `protobuf:"bytes,36,opt,name=table_name_shape_style,json=tableNameShapeStyle" json:"table_name_shape_style,omitempty"`
	TableStylePreset                  *TSP.Reference                   `protobuf:"bytes,48,opt,name=table_style_preset,json=tableStylePreset" json:"table_style_preset,omitempty"`
	PresetIndex                       *uint32                          `protobuf:"varint,28,opt,name=preset_index,json=presetIndex" json:"preset_index,omitempty"`
	BaseDataStore                     *DataStore                       `protobuf:"bytes,4,req,name=base_data_store,json=baseDataStore" json:"base_data_store,omitempty"`
	Provider                          *TSP.Reference                   `protobuf:"bytes,5,opt,name=provider" json:"provider,omitempty"`
	NumberOfRows                      *uint32                          `protobuf:"varint,6,req,name=number_of_rows,json=numberOfRows" json:"number_of_rows,omitempty"`
	NumberOfColumns                   *uint32                          `protobuf:"varint,7,req,name=number_of_columns,json=numberOfColumns" json:"number_of_columns,omitempty"`
	TableName                         *string                          `protobuf:"bytes,8,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	TableNameEnabled                  *bool                            `protobuf:"varint,22,opt,name=table_name_enabled,json=tableNameEnabled" json:"table_name_enabled,omitempty"`
	TableNameHeight                   *float64                         `protobuf:"fixed64,33,opt,name=table_name_height,json=tableNameHeight" json:"table_name_height,omitempty"`
	TableNameBorderEnabled            *bool                            `protobuf:"varint,37,opt,name=table_name_border_enabled,json=tableNameBorderEnabled" json:"table_name_border_enabled,omitempty"`
	NumberOfHeaderRows                *uint32                          `protobuf:"varint,9,opt,name=number_of_header_rows,json=numberOfHeaderRows" json:"number_of_header_rows,omitempty"`
	NumberOfHeaderColumns             *uint32                          `protobuf:"varint,10,opt,name=number_of_header_columns,json=numberOfHeaderColumns" json:"number_of_header_columns,omitempty"`
	NumberOfFooterRows                *uint32                          `protobuf:"varint,11,opt,name=number_of_footer_rows,json=numberOfFooterRows" json:"number_of_footer_rows,omitempty"`
	HeaderRowsFrozen                  *bool                            `protobuf:"varint,12,opt,name=header_rows_frozen,json=headerRowsFrozen" json:"header_rows_frozen,omitempty"`
	HeaderColumnsFrozen               *bool                            `protobuf:"varint,13,opt,name=header_columns_frozen,json=headerColumnsFrozen" json:"header_columns_frozen,omitempty"`
	NumberOfHiddenRows                *uint32                          `protobuf:"varint,14,opt,name=number_of_hidden_rows,json=numberOfHiddenRows" json:"number_of_hidden_rows,omitempty"`
	NumberOfHiddenColumns             *uint32                          `protobuf:"varint,15,opt,name=number_of_hidden_columns,json=numberOfHiddenColumns" json:"number_of_hidden_columns,omitempty"`
	NumberOfUserHiddenRows            *uint32                          `protobuf:"varint,41,opt,name=number_of_user_hidden_rows,json=numberOfUserHiddenRows" json:"number_of_user_hidden_rows,omitempty"`
	NumberOfUserHiddenColumns         *uint32                          `protobuf:"varint,42,opt,name=number_of_user_hidden_columns,json=numberOfUserHiddenColumns" json:"number_of_user_hidden_columns,omitempty"`
	NumberOfFilteredRows              *uint32                          `protobuf:"varint,40,opt,name=number_of_filtered_rows,json=numberOfFilteredRows" json:"number_of_filtered_rows,omitempty"`
	DefaultRowHeight                  *float64                         `protobuf:"fixed64,16,req,name=default_row_height,json=defaultRowHeight" json:"default_row_height,omitempty"`
	DefaultColumnWidth                *float64                         `protobuf:"fixed64,17,req,name=default_column_width,json=defaultColumnWidth" json:"default_column_width,omitempty"`
	OriginOffset                      *CellID                          `protobuf:"bytes,23,opt,name=origin_offset,json=originOffset" json:"origin_offset,omitempty"` // Deprecated: Do not use.
	RepeatingHeaderRowsEnabled        *bool                            `protobuf:"varint,29,opt,name=repeating_header_rows_enabled,json=repeatingHeaderRowsEnabled" json:"repeating_header_rows_enabled,omitempty"`
	RepeatingHeaderColumnsEnabled     *bool                            `protobuf:"varint,32,opt,name=repeating_header_columns_enabled,json=repeatingHeaderColumnsEnabled" json:"repeating_header_columns_enabled,omitempty"`
	StyleApplyClearsAll               *bool                            `protobuf:"varint,31,opt,name=style_apply_clears_all,json=styleApplyClearsAll" json:"style_apply_clears_all,omitempty"`
	HiddenStateFormulaOwnerForColumns *TSP.Reference                   `protobuf:"bytes,34,opt,name=hidden_state_formula_owner_for_columns,json=hiddenStateFormulaOwnerForColumns" json:"hidden_state_formula_owner_for_columns,omitempty"`
	HiddenStateFormulaOwnerForRows    *TSP.Reference                   `protobuf:"bytes,35,opt,name=hidden_state_formula_owner_for_rows,json=hiddenStateFormulaOwnerForRows" json:"hidden_state_formula_owner_for_rows,omitempty"`
	FilterSet                         *TSP.Reference                   `protobuf:"bytes,38,opt,name=filter_set,json=filterSet" json:"filter_set,omitempty"`
	ConditionalStyleFormulaOwnerId    *TSP.CFUUIDArchive               `protobuf:"bytes,39,opt,name=conditional_style_formula_owner_id,json=conditionalStyleFormulaOwnerId" json:"conditional_style_formula_owner_id,omitempty"`
	SortOrder                         *TableSortOrderArchive           `protobuf:"bytes,44,opt,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
	SortRuleReferenceTracker          *SortRuleReferenceTrackerArchive `protobuf:"bytes,45,opt,name=sort_rule_reference_tracker,json=sortRuleReferenceTracker" json:"sort_rule_reference_tracker,omitempty"`
	BaseColumnRowUids                 *TSP.Reference                   `protobuf:"bytes,46,opt,name=base_column_row_uids,json=baseColumnRowUids" json:"base_column_row_uids,omitempty"`
	MergeOwner                        *MergeOwnerArchive               `protobuf:"bytes,47,opt,name=merge_owner,json=mergeOwner" json:"merge_owner,omitempty"`
	StrokeSidecar                     *TSP.Reference                   `protobuf:"bytes,49,opt,name=stroke_sidecar,json=strokeSidecar" json:"stroke_sidecar,omitempty"`
	PresetNeedsStrongOwnership        *bool                            `protobuf:"varint,51,opt,name=preset_needs_strong_ownership,json=presetNeedsStrongOwnership" json:"preset_needs_strong_ownership,omitempty"`
	TextImportRecord                  *StructuredTextImportRecord      `protobuf:"bytes,52,opt,name=text_import_record,json=textImportRecord" json:"text_import_record,omitempty"`
	CategoryLevel_1Style              *TSP.Reference                   `protobuf:"bytes,60,opt,name=category_level_1_style,json=categoryLevel1Style" json:"category_level_1_style,omitempty"`
	CategoryLevel_2Style              *TSP.Reference                   `protobuf:"bytes,61,opt,name=category_level_2_style,json=categoryLevel2Style" json:"category_level_2_style,omitempty"`
	CategoryLevel_3Style              *TSP.Reference                   `protobuf:"bytes,62,opt,name=category_level_3_style,json=categoryLevel3Style" json:"category_level_3_style,omitempty"`
	CategoryLevel_4Style              *TSP.Reference                   `protobuf:"bytes,63,opt,name=category_level_4_style,json=categoryLevel4Style" json:"category_level_4_style,omitempty"`
	CategoryLevel_5Style              *TSP.Reference                   `protobuf:"bytes,64,opt,name=category_level_5_style,json=categoryLevel5Style" json:"category_level_5_style,omitempty"`
	LabelLevel_1Style                 *TSP.Reference                   `protobuf:"bytes,71,opt,name=label_level_1_style,json=labelLevel1Style" json:"label_level_1_style,omitempty"`
	LabelLevel_2Style                 *TSP.Reference                   `protobuf:"bytes,72,opt,name=label_level_2_style,json=labelLevel2Style" json:"label_level_2_style,omitempty"`
	LabelLevel_3Style                 *TSP.Reference                   `protobuf:"bytes,73,opt,name=label_level_3_style,json=labelLevel3Style" json:"label_level_3_style,omitempty"`
	LabelLevel_4Style                 *TSP.Reference                   `protobuf:"bytes,74,opt,name=label_level_4_style,json=labelLevel4Style" json:"label_level_4_style,omitempty"`
	LabelLevel_5Style                 *TSP.Reference                   `protobuf:"bytes,75,opt,name=label_level_5_style,json=labelLevel5Style" json:"label_level_5_style,omitempty"`
	CategoryLevel_1TextStyle          *TSP.Reference                   `protobuf:"bytes,65,opt,name=category_level_1_text_style,json=categoryLevel1TextStyle" json:"category_level_1_text_style,omitempty"`
	CategoryLevel_2TextStyle          *TSP.Reference                   `protobuf:"bytes,66,opt,name=category_level_2_text_style,json=categoryLevel2TextStyle" json:"category_level_2_text_style,omitempty"`
	CategoryLevel_3TextStyle          *TSP.Reference                   `protobuf:"bytes,67,opt,name=category_level_3_text_style,json=categoryLevel3TextStyle" json:"category_level_3_text_style,omitempty"`
	CategoryLevel_4TextStyle          *TSP.Reference                   `protobuf:"bytes,68,opt,name=category_level_4_text_style,json=categoryLevel4TextStyle" json:"category_level_4_text_style,omitempty"`
	CategoryLevel_5TextStyle          *TSP.Reference                   `protobuf:"bytes,69,opt,name=category_level_5_text_style,json=categoryLevel5TextStyle" json:"category_level_5_text_style,omitempty"`
	LabelLevel_1TextStyle             *TSP.Reference                   `protobuf:"bytes,76,opt,name=label_level_1_text_style,json=labelLevel1TextStyle" json:"label_level_1_text_style,omitempty"`
	LabelLevel_2TextStyle             *TSP.Reference                   `protobuf:"bytes,77,opt,name=label_level_2_text_style,json=labelLevel2TextStyle" json:"label_level_2_text_style,omitempty"`
	LabelLevel_3TextStyle             *TSP.Reference                   `protobuf:"bytes,78,opt,name=label_level_3_text_style,json=labelLevel3TextStyle" json:"label_level_3_text_style,omitempty"`
	LabelLevel_4TextStyle             *TSP.Reference                   `protobuf:"bytes,79,opt,name=label_level_4_text_style,json=labelLevel4TextStyle" json:"label_level_4_text_style,omitempty"`
	LabelLevel_5TextStyle             *TSP.Reference                   `protobuf:"bytes,80,opt,name=label_level_5_text_style,json=labelLevel5TextStyle" json:"label_level_5_text_style,omitempty"`
	HiddenStatesOwner                 *HiddenStatesOwnerArchive        `protobuf:"bytes,70,opt,name=hidden_states_owner,json=hiddenStatesOwner" json:"hidden_states_owner,omitempty"`
	CategoryOwner                     *CategoryOwnerArchive            `protobuf:"bytes,81,opt,name=category_owner,json=categoryOwner" json:"category_owner,omitempty"`
	PencilAnnotationOwner             *PencilAnnotationOwnerArchive    `protobuf:"bytes,82,opt,name=pencil_annotation_owner,json=pencilAnnotationOwner" json:"pencil_annotation_owner,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                         `json:"-"`
	XXX_unrecognized                  []byte                           `json:"-"`
	XXX_sizecache                     int32                            `json:"-"`
}

func (m *TableModelArchive) Reset()         { *m = TableModelArchive{} }
func (m *TableModelArchive) String() string { return proto.CompactTextString(m) }
func (*TableModelArchive) ProtoMessage()    {}
func (*TableModelArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{29}
}

func (m *TableModelArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableModelArchive.Unmarshal(m, b)
}
func (m *TableModelArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableModelArchive.Marshal(b, m, deterministic)
}
func (m *TableModelArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableModelArchive.Merge(m, src)
}
func (m *TableModelArchive) XXX_Size() int {
	return xxx_messageInfo_TableModelArchive.Size(m)
}
func (m *TableModelArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableModelArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableModelArchive proto.InternalMessageInfo

func (m *TableModelArchive) GetTableId() string {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return ""
}

func (m *TableModelArchive) GetFromTableId() string {
	if m != nil && m.FromTableId != nil {
		return *m.FromTableId
	}
	return ""
}

func (m *TableModelArchive) GetWasCut() bool {
	if m != nil && m.WasCut != nil {
		return *m.WasCut
	}
	return false
}

func (m *TableModelArchive) GetTableStyle() *TSP.Reference {
	if m != nil {
		return m.TableStyle
	}
	return nil
}

func (m *TableModelArchive) GetBodyTextStyle() *TSP.Reference {
	if m != nil {
		return m.BodyTextStyle
	}
	return nil
}

func (m *TableModelArchive) GetHeaderRowTextStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderRowTextStyle
	}
	return nil
}

func (m *TableModelArchive) GetHeaderColumnTextStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderColumnTextStyle
	}
	return nil
}

func (m *TableModelArchive) GetFooterRowTextStyle() *TSP.Reference {
	if m != nil {
		return m.FooterRowTextStyle
	}
	return nil
}

func (m *TableModelArchive) GetBodyCellStyle() *TSP.Reference {
	if m != nil {
		return m.BodyCellStyle
	}
	return nil
}

func (m *TableModelArchive) GetHeaderRowStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderRowStyle
	}
	return nil
}

func (m *TableModelArchive) GetHeaderColumnStyle() *TSP.Reference {
	if m != nil {
		return m.HeaderColumnStyle
	}
	return nil
}

func (m *TableModelArchive) GetFooterRowStyle() *TSP.Reference {
	if m != nil {
		return m.FooterRowStyle
	}
	return nil
}

func (m *TableModelArchive) GetTableNameStyle() *TSP.Reference {
	if m != nil {
		return m.TableNameStyle
	}
	return nil
}

func (m *TableModelArchive) GetTableNameShapeStyle() *TSP.Reference {
	if m != nil {
		return m.TableNameShapeStyle
	}
	return nil
}

func (m *TableModelArchive) GetTableStylePreset() *TSP.Reference {
	if m != nil {
		return m.TableStylePreset
	}
	return nil
}

func (m *TableModelArchive) GetPresetIndex() uint32 {
	if m != nil && m.PresetIndex != nil {
		return *m.PresetIndex
	}
	return 0
}

func (m *TableModelArchive) GetBaseDataStore() *DataStore {
	if m != nil {
		return m.BaseDataStore
	}
	return nil
}

func (m *TableModelArchive) GetProvider() *TSP.Reference {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *TableModelArchive) GetNumberOfRows() uint32 {
	if m != nil && m.NumberOfRows != nil {
		return *m.NumberOfRows
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfColumns() uint32 {
	if m != nil && m.NumberOfColumns != nil {
		return *m.NumberOfColumns
	}
	return 0
}

func (m *TableModelArchive) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableModelArchive) GetTableNameEnabled() bool {
	if m != nil && m.TableNameEnabled != nil {
		return *m.TableNameEnabled
	}
	return false
}

func (m *TableModelArchive) GetTableNameHeight() float64 {
	if m != nil && m.TableNameHeight != nil {
		return *m.TableNameHeight
	}
	return 0
}

func (m *TableModelArchive) GetTableNameBorderEnabled() bool {
	if m != nil && m.TableNameBorderEnabled != nil {
		return *m.TableNameBorderEnabled
	}
	return false
}

func (m *TableModelArchive) GetNumberOfHeaderRows() uint32 {
	if m != nil && m.NumberOfHeaderRows != nil {
		return *m.NumberOfHeaderRows
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfHeaderColumns() uint32 {
	if m != nil && m.NumberOfHeaderColumns != nil {
		return *m.NumberOfHeaderColumns
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfFooterRows() uint32 {
	if m != nil && m.NumberOfFooterRows != nil {
		return *m.NumberOfFooterRows
	}
	return 0
}

func (m *TableModelArchive) GetHeaderRowsFrozen() bool {
	if m != nil && m.HeaderRowsFrozen != nil {
		return *m.HeaderRowsFrozen
	}
	return false
}

func (m *TableModelArchive) GetHeaderColumnsFrozen() bool {
	if m != nil && m.HeaderColumnsFrozen != nil {
		return *m.HeaderColumnsFrozen
	}
	return false
}

func (m *TableModelArchive) GetNumberOfHiddenRows() uint32 {
	if m != nil && m.NumberOfHiddenRows != nil {
		return *m.NumberOfHiddenRows
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfHiddenColumns() uint32 {
	if m != nil && m.NumberOfHiddenColumns != nil {
		return *m.NumberOfHiddenColumns
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfUserHiddenRows() uint32 {
	if m != nil && m.NumberOfUserHiddenRows != nil {
		return *m.NumberOfUserHiddenRows
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfUserHiddenColumns() uint32 {
	if m != nil && m.NumberOfUserHiddenColumns != nil {
		return *m.NumberOfUserHiddenColumns
	}
	return 0
}

func (m *TableModelArchive) GetNumberOfFilteredRows() uint32 {
	if m != nil && m.NumberOfFilteredRows != nil {
		return *m.NumberOfFilteredRows
	}
	return 0
}

func (m *TableModelArchive) GetDefaultRowHeight() float64 {
	if m != nil && m.DefaultRowHeight != nil {
		return *m.DefaultRowHeight
	}
	return 0
}

func (m *TableModelArchive) GetDefaultColumnWidth() float64 {
	if m != nil && m.DefaultColumnWidth != nil {
		return *m.DefaultColumnWidth
	}
	return 0
}

// Deprecated: Do not use.
func (m *TableModelArchive) GetOriginOffset() *CellID {
	if m != nil {
		return m.OriginOffset
	}
	return nil
}

func (m *TableModelArchive) GetRepeatingHeaderRowsEnabled() bool {
	if m != nil && m.RepeatingHeaderRowsEnabled != nil {
		return *m.RepeatingHeaderRowsEnabled
	}
	return false
}

func (m *TableModelArchive) GetRepeatingHeaderColumnsEnabled() bool {
	if m != nil && m.RepeatingHeaderColumnsEnabled != nil {
		return *m.RepeatingHeaderColumnsEnabled
	}
	return false
}

func (m *TableModelArchive) GetStyleApplyClearsAll() bool {
	if m != nil && m.StyleApplyClearsAll != nil {
		return *m.StyleApplyClearsAll
	}
	return false
}

func (m *TableModelArchive) GetHiddenStateFormulaOwnerForColumns() *TSP.Reference {
	if m != nil {
		return m.HiddenStateFormulaOwnerForColumns
	}
	return nil
}

func (m *TableModelArchive) GetHiddenStateFormulaOwnerForRows() *TSP.Reference {
	if m != nil {
		return m.HiddenStateFormulaOwnerForRows
	}
	return nil
}

func (m *TableModelArchive) GetFilterSet() *TSP.Reference {
	if m != nil {
		return m.FilterSet
	}
	return nil
}

func (m *TableModelArchive) GetConditionalStyleFormulaOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.ConditionalStyleFormulaOwnerId
	}
	return nil
}

func (m *TableModelArchive) GetSortOrder() *TableSortOrderArchive {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *TableModelArchive) GetSortRuleReferenceTracker() *SortRuleReferenceTrackerArchive {
	if m != nil {
		return m.SortRuleReferenceTracker
	}
	return nil
}

func (m *TableModelArchive) GetBaseColumnRowUids() *TSP.Reference {
	if m != nil {
		return m.BaseColumnRowUids
	}
	return nil
}

func (m *TableModelArchive) GetMergeOwner() *MergeOwnerArchive {
	if m != nil {
		return m.MergeOwner
	}
	return nil
}

func (m *TableModelArchive) GetStrokeSidecar() *TSP.Reference {
	if m != nil {
		return m.StrokeSidecar
	}
	return nil
}

func (m *TableModelArchive) GetPresetNeedsStrongOwnership() bool {
	if m != nil && m.PresetNeedsStrongOwnership != nil {
		return *m.PresetNeedsStrongOwnership
	}
	return false
}

func (m *TableModelArchive) GetTextImportRecord() *StructuredTextImportRecord {
	if m != nil {
		return m.TextImportRecord
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_1Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_1Style
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_2Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_2Style
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_3Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_3Style
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_4Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_4Style
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_5Style() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_5Style
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_1Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_1Style
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_2Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_2Style
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_3Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_3Style
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_4Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_4Style
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_5Style() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_5Style
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_1TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_1TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_2TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_2TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_3TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_3TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_4TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_4TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetCategoryLevel_5TextStyle() *TSP.Reference {
	if m != nil {
		return m.CategoryLevel_5TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_1TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_1TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_2TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_2TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_3TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_3TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_4TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_4TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetLabelLevel_5TextStyle() *TSP.Reference {
	if m != nil {
		return m.LabelLevel_5TextStyle
	}
	return nil
}

func (m *TableModelArchive) GetHiddenStatesOwner() *HiddenStatesOwnerArchive {
	if m != nil {
		return m.HiddenStatesOwner
	}
	return nil
}

func (m *TableModelArchive) GetCategoryOwner() *CategoryOwnerArchive {
	if m != nil {
		return m.CategoryOwner
	}
	return nil
}

func (m *TableModelArchive) GetPencilAnnotationOwner() *PencilAnnotationOwnerArchive {
	if m != nil {
		return m.PencilAnnotationOwner
	}
	return nil
}

type SummaryModelArchive struct {
	TableInfo                    *TSP.Reference `protobuf:"bytes,1,req,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	DataStore                    *DataStore     `protobuf:"bytes,2,opt,name=data_store,json=dataStore" json:"data_store,omitempty"`
	ColumnRowUids                *TSP.Reference `protobuf:"bytes,3,opt,name=column_row_uids,json=columnRowUids" json:"column_row_uids,omitempty"`
	AggregateFormulaOwnerUuid    *TSP.UUID      `protobuf:"bytes,4,opt,name=aggregate_formula_owner_uuid,json=aggregateFormulaOwnerUuid" json:"aggregate_formula_owner_uuid,omitempty"`
	SummaryCellVendor            *TSP.Reference `protobuf:"bytes,5,opt,name=summary_cell_vendor,json=summaryCellVendor" json:"summary_cell_vendor,omitempty"`
	CategoryColumnWidth          *float64       `protobuf:"fixed64,10,opt,name=category_column_width,json=categoryColumnWidth" json:"category_column_width,omitempty"`
	SummaryRowLevel_1Height      *float64       `protobuf:"fixed64,11,opt,name=summary_row_level_1_height,json=summaryRowLevel1Height" json:"summary_row_level_1_height,omitempty"`                  // Deprecated: Do not use.
	SummaryRowLevel_2Height      *float64       `protobuf:"fixed64,12,opt,name=summary_row_level_2_height,json=summaryRowLevel2Height" json:"summary_row_level_2_height,omitempty"`                  // Deprecated: Do not use.
	SummaryRowLevel_3Height      *float64       `protobuf:"fixed64,13,opt,name=summary_row_level_3_height,json=summaryRowLevel3Height" json:"summary_row_level_3_height,omitempty"`                  // Deprecated: Do not use.
	SummaryRowLevel_4Height      *float64       `protobuf:"fixed64,14,opt,name=summary_row_level_4_height,json=summaryRowLevel4Height" json:"summary_row_level_4_height,omitempty"`                  // Deprecated: Do not use.
	SummaryRowLevel_5Height      *float64       `protobuf:"fixed64,15,opt,name=summary_row_level_5_height,json=summaryRowLevel5Height" json:"summary_row_level_5_height,omitempty"`                  // Deprecated: Do not use.
	SummaryLabelRowLevel_1Height *float64       `protobuf:"fixed64,16,opt,name=summary_label_row_level_1_height,json=summaryLabelRowLevel1Height" json:"summary_label_row_level_1_height,omitempty"` // Deprecated: Do not use.
	SummaryLabelRowLevel_2Height *float64       `protobuf:"fixed64,17,opt,name=summary_label_row_level_2_height,json=summaryLabelRowLevel2Height" json:"summary_label_row_level_2_height,omitempty"` // Deprecated: Do not use.
	SummaryLabelRowLevel_3Height *float64       `protobuf:"fixed64,18,opt,name=summary_label_row_level_3_height,json=summaryLabelRowLevel3Height" json:"summary_label_row_level_3_height,omitempty"` // Deprecated: Do not use.
	SummaryLabelRowLevel_4Height *float64       `protobuf:"fixed64,19,opt,name=summary_label_row_level_4_height,json=summaryLabelRowLevel4Height" json:"summary_label_row_level_4_height,omitempty"` // Deprecated: Do not use.
	SummaryLabelRowLevel_5Height *float64       `protobuf:"fixed64,20,opt,name=summary_label_row_level_5_height,json=summaryLabelRowLevel5Height" json:"summary_label_row_level_5_height,omitempty"` // Deprecated: Do not use.
	LabelRowVisibility_1         *uint32        `protobuf:"varint,21,opt,name=label_row_visibility_1,json=labelRowVisibility1" json:"label_row_visibility_1,omitempty"`                              // Deprecated: Do not use.
	LabelRowVisibility_2         *uint32        `protobuf:"varint,22,opt,name=label_row_visibility_2,json=labelRowVisibility2" json:"label_row_visibility_2,omitempty"`                              // Deprecated: Do not use.
	LabelRowVisibility_3         *uint32        `protobuf:"varint,23,opt,name=label_row_visibility_3,json=labelRowVisibility3" json:"label_row_visibility_3,omitempty"`                              // Deprecated: Do not use.
	LabelRowVisibility_4         *uint32        `protobuf:"varint,24,opt,name=label_row_visibility_4,json=labelRowVisibility4" json:"label_row_visibility_4,omitempty"`                              // Deprecated: Do not use.
	LabelRowVisibility_5         *uint32        `protobuf:"varint,25,opt,name=label_row_visibility_5,json=labelRowVisibility5" json:"label_row_visibility_5,omitempty"`                              // Deprecated: Do not use.
	SummaryRowHeightList         []float64      `protobuf:"fixed64,26,rep,name=summary_row_height_list,json=summaryRowHeightList" json:"summary_row_height_list,omitempty"`
	LabelRowHeightList           []float64      `protobuf:"fixed64,27,rep,name=label_row_height_list,json=labelRowHeightList" json:"label_row_height_list,omitempty"`
	LabelRowVisibilityList       []uint32       `protobuf:"varint,28,rep,name=label_row_visibility_list,json=labelRowVisibilityList" json:"label_row_visibility_list,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}       `json:"-"`
	XXX_unrecognized             []byte         `json:"-"`
	XXX_sizecache                int32          `json:"-"`
}

func (m *SummaryModelArchive) Reset()         { *m = SummaryModelArchive{} }
func (m *SummaryModelArchive) String() string { return proto.CompactTextString(m) }
func (*SummaryModelArchive) ProtoMessage()    {}
func (*SummaryModelArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{30}
}

func (m *SummaryModelArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryModelArchive.Unmarshal(m, b)
}
func (m *SummaryModelArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryModelArchive.Marshal(b, m, deterministic)
}
func (m *SummaryModelArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryModelArchive.Merge(m, src)
}
func (m *SummaryModelArchive) XXX_Size() int {
	return xxx_messageInfo_SummaryModelArchive.Size(m)
}
func (m *SummaryModelArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryModelArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryModelArchive proto.InternalMessageInfo

func (m *SummaryModelArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *SummaryModelArchive) GetDataStore() *DataStore {
	if m != nil {
		return m.DataStore
	}
	return nil
}

func (m *SummaryModelArchive) GetColumnRowUids() *TSP.Reference {
	if m != nil {
		return m.ColumnRowUids
	}
	return nil
}

func (m *SummaryModelArchive) GetAggregateFormulaOwnerUuid() *TSP.UUID {
	if m != nil {
		return m.AggregateFormulaOwnerUuid
	}
	return nil
}

func (m *SummaryModelArchive) GetSummaryCellVendor() *TSP.Reference {
	if m != nil {
		return m.SummaryCellVendor
	}
	return nil
}

func (m *SummaryModelArchive) GetCategoryColumnWidth() float64 {
	if m != nil && m.CategoryColumnWidth != nil {
		return *m.CategoryColumnWidth
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryRowLevel_1Height() float64 {
	if m != nil && m.SummaryRowLevel_1Height != nil {
		return *m.SummaryRowLevel_1Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryRowLevel_2Height() float64 {
	if m != nil && m.SummaryRowLevel_2Height != nil {
		return *m.SummaryRowLevel_2Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryRowLevel_3Height() float64 {
	if m != nil && m.SummaryRowLevel_3Height != nil {
		return *m.SummaryRowLevel_3Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryRowLevel_4Height() float64 {
	if m != nil && m.SummaryRowLevel_4Height != nil {
		return *m.SummaryRowLevel_4Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryRowLevel_5Height() float64 {
	if m != nil && m.SummaryRowLevel_5Height != nil {
		return *m.SummaryRowLevel_5Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryLabelRowLevel_1Height() float64 {
	if m != nil && m.SummaryLabelRowLevel_1Height != nil {
		return *m.SummaryLabelRowLevel_1Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryLabelRowLevel_2Height() float64 {
	if m != nil && m.SummaryLabelRowLevel_2Height != nil {
		return *m.SummaryLabelRowLevel_2Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryLabelRowLevel_3Height() float64 {
	if m != nil && m.SummaryLabelRowLevel_3Height != nil {
		return *m.SummaryLabelRowLevel_3Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryLabelRowLevel_4Height() float64 {
	if m != nil && m.SummaryLabelRowLevel_4Height != nil {
		return *m.SummaryLabelRowLevel_4Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetSummaryLabelRowLevel_5Height() float64 {
	if m != nil && m.SummaryLabelRowLevel_5Height != nil {
		return *m.SummaryLabelRowLevel_5Height
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetLabelRowVisibility_1() uint32 {
	if m != nil && m.LabelRowVisibility_1 != nil {
		return *m.LabelRowVisibility_1
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetLabelRowVisibility_2() uint32 {
	if m != nil && m.LabelRowVisibility_2 != nil {
		return *m.LabelRowVisibility_2
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetLabelRowVisibility_3() uint32 {
	if m != nil && m.LabelRowVisibility_3 != nil {
		return *m.LabelRowVisibility_3
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetLabelRowVisibility_4() uint32 {
	if m != nil && m.LabelRowVisibility_4 != nil {
		return *m.LabelRowVisibility_4
	}
	return 0
}

// Deprecated: Do not use.
func (m *SummaryModelArchive) GetLabelRowVisibility_5() uint32 {
	if m != nil && m.LabelRowVisibility_5 != nil {
		return *m.LabelRowVisibility_5
	}
	return 0
}

func (m *SummaryModelArchive) GetSummaryRowHeightList() []float64 {
	if m != nil {
		return m.SummaryRowHeightList
	}
	return nil
}

func (m *SummaryModelArchive) GetLabelRowHeightList() []float64 {
	if m != nil {
		return m.LabelRowHeightList
	}
	return nil
}

func (m *SummaryModelArchive) GetLabelRowVisibilityList() []uint32 {
	if m != nil {
		return m.LabelRowVisibilityList
	}
	return nil
}

type SummaryModelGroupByChangeStateArchive struct {
	CellMap                *TSP.Reference `protobuf:"bytes,1,opt,name=cell_map,json=cellMap" json:"cell_map,omitempty"`
	SummaryRowHeightList   []float64      `protobuf:"fixed64,2,rep,name=summary_row_height_list,json=summaryRowHeightList" json:"summary_row_height_list,omitempty"`
	LabelRowHeightList     []float64      `protobuf:"fixed64,3,rep,name=label_row_height_list,json=labelRowHeightList" json:"label_row_height_list,omitempty"`
	LabelRowVisibilityList []uint32       `protobuf:"varint,4,rep,name=label_row_visibility_list,json=labelRowVisibilityList" json:"label_row_visibility_list,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *SummaryModelGroupByChangeStateArchive) Reset()         { *m = SummaryModelGroupByChangeStateArchive{} }
func (m *SummaryModelGroupByChangeStateArchive) String() string { return proto.CompactTextString(m) }
func (*SummaryModelGroupByChangeStateArchive) ProtoMessage()    {}
func (*SummaryModelGroupByChangeStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{31}
}

func (m *SummaryModelGroupByChangeStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryModelGroupByChangeStateArchive.Unmarshal(m, b)
}
func (m *SummaryModelGroupByChangeStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryModelGroupByChangeStateArchive.Marshal(b, m, deterministic)
}
func (m *SummaryModelGroupByChangeStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryModelGroupByChangeStateArchive.Merge(m, src)
}
func (m *SummaryModelGroupByChangeStateArchive) XXX_Size() int {
	return xxx_messageInfo_SummaryModelGroupByChangeStateArchive.Size(m)
}
func (m *SummaryModelGroupByChangeStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryModelGroupByChangeStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryModelGroupByChangeStateArchive proto.InternalMessageInfo

func (m *SummaryModelGroupByChangeStateArchive) GetCellMap() *TSP.Reference {
	if m != nil {
		return m.CellMap
	}
	return nil
}

func (m *SummaryModelGroupByChangeStateArchive) GetSummaryRowHeightList() []float64 {
	if m != nil {
		return m.SummaryRowHeightList
	}
	return nil
}

func (m *SummaryModelGroupByChangeStateArchive) GetLabelRowHeightList() []float64 {
	if m != nil {
		return m.LabelRowHeightList
	}
	return nil
}

func (m *SummaryModelGroupByChangeStateArchive) GetLabelRowVisibilityList() []uint32 {
	if m != nil {
		return m.LabelRowVisibilityList
	}
	return nil
}

type ColumnRowUIDMapArchive struct {
	SortedColumnUids     []*TSP.UUID `protobuf:"bytes,1,rep,name=sorted_column_uids,json=sortedColumnUids" json:"sorted_column_uids,omitempty"`
	ColumnIndexForUid    []uint32    `protobuf:"varint,2,rep,name=column_index_for_uid,json=columnIndexForUid" json:"column_index_for_uid,omitempty"`
	ColumnUidForIndex    []uint32    `protobuf:"varint,3,rep,name=column_uid_for_index,json=columnUidForIndex" json:"column_uid_for_index,omitempty"`
	SortedRowUids        []*TSP.UUID `protobuf:"bytes,4,rep,name=sorted_row_uids,json=sortedRowUids" json:"sorted_row_uids,omitempty"`
	RowIndexForUid       []uint32    `protobuf:"varint,5,rep,name=row_index_for_uid,json=rowIndexForUid" json:"row_index_for_uid,omitempty"`
	RowUidForIndex       []uint32    `protobuf:"varint,6,rep,name=row_uid_for_index,json=rowUidForIndex" json:"row_uid_for_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ColumnRowUIDMapArchive) Reset()         { *m = ColumnRowUIDMapArchive{} }
func (m *ColumnRowUIDMapArchive) String() string { return proto.CompactTextString(m) }
func (*ColumnRowUIDMapArchive) ProtoMessage()    {}
func (*ColumnRowUIDMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{32}
}

func (m *ColumnRowUIDMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnRowUIDMapArchive.Unmarshal(m, b)
}
func (m *ColumnRowUIDMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnRowUIDMapArchive.Marshal(b, m, deterministic)
}
func (m *ColumnRowUIDMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnRowUIDMapArchive.Merge(m, src)
}
func (m *ColumnRowUIDMapArchive) XXX_Size() int {
	return xxx_messageInfo_ColumnRowUIDMapArchive.Size(m)
}
func (m *ColumnRowUIDMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnRowUIDMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnRowUIDMapArchive proto.InternalMessageInfo

func (m *ColumnRowUIDMapArchive) GetSortedColumnUids() []*TSP.UUID {
	if m != nil {
		return m.SortedColumnUids
	}
	return nil
}

func (m *ColumnRowUIDMapArchive) GetColumnIndexForUid() []uint32 {
	if m != nil {
		return m.ColumnIndexForUid
	}
	return nil
}

func (m *ColumnRowUIDMapArchive) GetColumnUidForIndex() []uint32 {
	if m != nil {
		return m.ColumnUidForIndex
	}
	return nil
}

func (m *ColumnRowUIDMapArchive) GetSortedRowUids() []*TSP.UUID {
	if m != nil {
		return m.SortedRowUids
	}
	return nil
}

func (m *ColumnRowUIDMapArchive) GetRowIndexForUid() []uint32 {
	if m != nil {
		return m.RowIndexForUid
	}
	return nil
}

func (m *ColumnRowUIDMapArchive) GetRowUidForIndex() []uint32 {
	if m != nil {
		return m.RowUidForIndex
	}
	return nil
}

type StrokeLayerArchive struct {
	RowColumnIndex       *uint32                                `protobuf:"varint,1,opt,name=row_column_index,json=rowColumnIndex" json:"row_column_index,omitempty"`
	StrokeRuns           []*StrokeLayerArchive_StrokeRunArchive `protobuf:"bytes,2,rep,name=stroke_runs,json=strokeRuns" json:"stroke_runs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *StrokeLayerArchive) Reset()         { *m = StrokeLayerArchive{} }
func (m *StrokeLayerArchive) String() string { return proto.CompactTextString(m) }
func (*StrokeLayerArchive) ProtoMessage()    {}
func (*StrokeLayerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{33}
}

func (m *StrokeLayerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrokeLayerArchive.Unmarshal(m, b)
}
func (m *StrokeLayerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrokeLayerArchive.Marshal(b, m, deterministic)
}
func (m *StrokeLayerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrokeLayerArchive.Merge(m, src)
}
func (m *StrokeLayerArchive) XXX_Size() int {
	return xxx_messageInfo_StrokeLayerArchive.Size(m)
}
func (m *StrokeLayerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StrokeLayerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StrokeLayerArchive proto.InternalMessageInfo

func (m *StrokeLayerArchive) GetRowColumnIndex() uint32 {
	if m != nil && m.RowColumnIndex != nil {
		return *m.RowColumnIndex
	}
	return 0
}

func (m *StrokeLayerArchive) GetStrokeRuns() []*StrokeLayerArchive_StrokeRunArchive {
	if m != nil {
		return m.StrokeRuns
	}
	return nil
}

type StrokeLayerArchive_StrokeRunArchive struct {
	Origin               *int32             `protobuf:"varint,1,opt,name=origin" json:"origin,omitempty"`
	Length               *uint32            `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Stroke               *TSD.StrokeArchive `protobuf:"bytes,3,opt,name=stroke" json:"stroke,omitempty"`
	Order                *uint32            `protobuf:"varint,4,opt,name=order" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StrokeLayerArchive_StrokeRunArchive) Reset()         { *m = StrokeLayerArchive_StrokeRunArchive{} }
func (m *StrokeLayerArchive_StrokeRunArchive) String() string { return proto.CompactTextString(m) }
func (*StrokeLayerArchive_StrokeRunArchive) ProtoMessage()    {}
func (*StrokeLayerArchive_StrokeRunArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{33, 0}
}

func (m *StrokeLayerArchive_StrokeRunArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive.Unmarshal(m, b)
}
func (m *StrokeLayerArchive_StrokeRunArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive.Marshal(b, m, deterministic)
}
func (m *StrokeLayerArchive_StrokeRunArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive.Merge(m, src)
}
func (m *StrokeLayerArchive_StrokeRunArchive) XXX_Size() int {
	return xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive.Size(m)
}
func (m *StrokeLayerArchive_StrokeRunArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StrokeLayerArchive_StrokeRunArchive proto.InternalMessageInfo

func (m *StrokeLayerArchive_StrokeRunArchive) GetOrigin() int32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *StrokeLayerArchive_StrokeRunArchive) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *StrokeLayerArchive_StrokeRunArchive) GetStroke() *TSD.StrokeArchive {
	if m != nil {
		return m.Stroke
	}
	return nil
}

func (m *StrokeLayerArchive_StrokeRunArchive) GetOrder() uint32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

type StrokeSidecarArchive struct {
	MaxOrder                *uint32          `protobuf:"varint,1,opt,name=max_order,json=maxOrder" json:"max_order,omitempty"`
	ColumnCount             *uint32          `protobuf:"varint,2,opt,name=column_count,json=columnCount" json:"column_count,omitempty"`
	RowCount                *uint32          `protobuf:"varint,3,opt,name=row_count,json=rowCount" json:"row_count,omitempty"`
	LeftColumnStrokeLayers  []*TSP.Reference `protobuf:"bytes,4,rep,name=left_column_stroke_layers,json=leftColumnStrokeLayers" json:"left_column_stroke_layers,omitempty"`
	RightColumnStrokeLayers []*TSP.Reference `protobuf:"bytes,5,rep,name=right_column_stroke_layers,json=rightColumnStrokeLayers" json:"right_column_stroke_layers,omitempty"`
	TopRowStrokeLayers      []*TSP.Reference `protobuf:"bytes,6,rep,name=top_row_stroke_layers,json=topRowStrokeLayers" json:"top_row_stroke_layers,omitempty"`
	BottomRowStrokeLayers   []*TSP.Reference `protobuf:"bytes,7,rep,name=bottom_row_stroke_layers,json=bottomRowStrokeLayers" json:"bottom_row_stroke_layers,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}         `json:"-"`
	XXX_unrecognized        []byte           `json:"-"`
	XXX_sizecache           int32            `json:"-"`
}

func (m *StrokeSidecarArchive) Reset()         { *m = StrokeSidecarArchive{} }
func (m *StrokeSidecarArchive) String() string { return proto.CompactTextString(m) }
func (*StrokeSidecarArchive) ProtoMessage()    {}
func (*StrokeSidecarArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{34}
}

func (m *StrokeSidecarArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrokeSidecarArchive.Unmarshal(m, b)
}
func (m *StrokeSidecarArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrokeSidecarArchive.Marshal(b, m, deterministic)
}
func (m *StrokeSidecarArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrokeSidecarArchive.Merge(m, src)
}
func (m *StrokeSidecarArchive) XXX_Size() int {
	return xxx_messageInfo_StrokeSidecarArchive.Size(m)
}
func (m *StrokeSidecarArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StrokeSidecarArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StrokeSidecarArchive proto.InternalMessageInfo

func (m *StrokeSidecarArchive) GetMaxOrder() uint32 {
	if m != nil && m.MaxOrder != nil {
		return *m.MaxOrder
	}
	return 0
}

func (m *StrokeSidecarArchive) GetColumnCount() uint32 {
	if m != nil && m.ColumnCount != nil {
		return *m.ColumnCount
	}
	return 0
}

func (m *StrokeSidecarArchive) GetRowCount() uint32 {
	if m != nil && m.RowCount != nil {
		return *m.RowCount
	}
	return 0
}

func (m *StrokeSidecarArchive) GetLeftColumnStrokeLayers() []*TSP.Reference {
	if m != nil {
		return m.LeftColumnStrokeLayers
	}
	return nil
}

func (m *StrokeSidecarArchive) GetRightColumnStrokeLayers() []*TSP.Reference {
	if m != nil {
		return m.RightColumnStrokeLayers
	}
	return nil
}

func (m *StrokeSidecarArchive) GetTopRowStrokeLayers() []*TSP.Reference {
	if m != nil {
		return m.TopRowStrokeLayers
	}
	return nil
}

func (m *StrokeSidecarArchive) GetBottomRowStrokeLayers() []*TSP.Reference {
	if m != nil {
		return m.BottomRowStrokeLayers
	}
	return nil
}

type DurationWrapperArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DurationWrapperArchive) Reset()         { *m = DurationWrapperArchive{} }
func (m *DurationWrapperArchive) String() string { return proto.CompactTextString(m) }
func (*DurationWrapperArchive) ProtoMessage()    {}
func (*DurationWrapperArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{35}
}

func (m *DurationWrapperArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DurationWrapperArchive.Unmarshal(m, b)
}
func (m *DurationWrapperArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DurationWrapperArchive.Marshal(b, m, deterministic)
}
func (m *DurationWrapperArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DurationWrapperArchive.Merge(m, src)
}
func (m *DurationWrapperArchive) XXX_Size() int {
	return xxx_messageInfo_DurationWrapperArchive.Size(m)
}
func (m *DurationWrapperArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DurationWrapperArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DurationWrapperArchive proto.InternalMessageInfo

type Cell struct {
	ValueType                   *CellValueType           `protobuf:"varint,2,req,name=valueType,enum=TST.CellValueType" json:"valueType,omitempty"`
	CellStyle                   *TSP.Reference           `protobuf:"bytes,3,opt,name=cell_style,json=cellStyle" json:"cell_style,omitempty"`
	TextStyle                   *TSP.Reference           `protobuf:"bytes,4,opt,name=text_style,json=textStyle" json:"text_style,omitempty"`
	NumberValue                 *float64                 `protobuf:"fixed64,5,opt,name=numberValue" json:"numberValue,omitempty"`
	StringValue                 *string                  `protobuf:"bytes,6,opt,name=stringValue" json:"stringValue,omitempty"`
	BoolValue                   *bool                    `protobuf:"varint,7,opt,name=boolValue" json:"boolValue,omitempty"`
	CurrentFormat               *TSK.FormatStructArchive `protobuf:"bytes,9,opt,name=current_format,json=currentFormat" json:"current_format,omitempty"`
	FormulaError                *TSP.Reference           `protobuf:"bytes,10,opt,name=formulaError" json:"formulaError,omitempty"`
	NumberFormat                *TSK.FormatStructArchive `protobuf:"bytes,11,opt,name=number_format,json=numberFormat" json:"number_format,omitempty"`
	CurrencyFormat              *TSK.FormatStructArchive `protobuf:"bytes,12,opt,name=currency_format,json=currencyFormat" json:"currency_format,omitempty"`
	DurationFormat              *TSK.FormatStructArchive `protobuf:"bytes,13,opt,name=duration_format,json=durationFormat" json:"duration_format,omitempty"`
	DateFormat                  *TSK.FormatStructArchive `protobuf:"bytes,14,opt,name=date_format,json=dateFormat" json:"date_format,omitempty"`
	CustomFormat                *TSK.FormatStructArchive `protobuf:"bytes,16,opt,name=custom_format,json=customFormat" json:"custom_format,omitempty"`
	BaseFormat                  *TSK.FormatStructArchive `protobuf:"bytes,17,opt,name=base_format,json=baseFormat" json:"base_format,omitempty"`
	ExplicitFormatFlags         *uint32                  `protobuf:"varint,19,opt,name=explicit_format_flags,json=explicitFormatFlags" json:"explicit_format_flags,omitempty"`
	RichText                    *TSP.Reference           `protobuf:"bytes,20,opt,name=richText" json:"richText,omitempty"`
	ConditionalStyle            *TSP.Reference           `protobuf:"bytes,21,opt,name=conditional_style,json=conditionalStyle" json:"conditional_style,omitempty"`
	CommentStorage              *TSP.Reference           `protobuf:"bytes,23,opt,name=comment_storage,json=commentStorage" json:"comment_storage,omitempty"`
	ConditionalStyleAppliedRule *uint32                  `protobuf:"varint,24,opt,name=conditional_style_applied_rule,json=conditionalStyleAppliedRule" json:"conditional_style_applied_rule,omitempty"`
	ImportWarningSet            *ImportWarningSetArchive `protobuf:"bytes,25,opt,name=import_warning_set,json=importWarningSet" json:"import_warning_set,omitempty"`
	CustomFormatObject          *TSK.CustomFormatArchive `protobuf:"bytes,26,opt,name=custom_format_object,json=customFormatObject" json:"custom_format_object,omitempty"`
	CellBorder                  *CellBorderArchive       `protobuf:"bytes,27,opt,name=cell_border,json=cellBorder" json:"cell_border,omitempty"`
	CellSpec                    *CellSpecArchive         `protobuf:"bytes,28,opt,name=cell_spec,json=cellSpec" json:"cell_spec,omitempty"`
	CellFormatKind              *uint32                  `protobuf:"varint,29,opt,name=cell_format_kind,json=cellFormatKind" json:"cell_format_kind,omitempty"`
	TextFormat                  *TSK.FormatStructArchive `protobuf:"bytes,30,opt,name=text_format,json=textFormat" json:"text_format,omitempty"`
	BooleanFormat               *TSK.FormatStructArchive `protobuf:"bytes,31,opt,name=boolean_format,json=booleanFormat" json:"boolean_format,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                 `json:"-"`
	XXX_unrecognized            []byte                   `json:"-"`
	XXX_sizecache               int32                    `json:"-"`
}

func (m *Cell) Reset()         { *m = Cell{} }
func (m *Cell) String() string { return proto.CompactTextString(m) }
func (*Cell) ProtoMessage()    {}
func (*Cell) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{36}
}

func (m *Cell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cell.Unmarshal(m, b)
}
func (m *Cell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cell.Marshal(b, m, deterministic)
}
func (m *Cell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cell.Merge(m, src)
}
func (m *Cell) XXX_Size() int {
	return xxx_messageInfo_Cell.Size(m)
}
func (m *Cell) XXX_DiscardUnknown() {
	xxx_messageInfo_Cell.DiscardUnknown(m)
}

var xxx_messageInfo_Cell proto.InternalMessageInfo

func (m *Cell) GetValueType() CellValueType {
	if m != nil && m.ValueType != nil {
		return *m.ValueType
	}
	return CellValueType_emptyCellValueType
}

func (m *Cell) GetCellStyle() *TSP.Reference {
	if m != nil {
		return m.CellStyle
	}
	return nil
}

func (m *Cell) GetTextStyle() *TSP.Reference {
	if m != nil {
		return m.TextStyle
	}
	return nil
}

func (m *Cell) GetNumberValue() float64 {
	if m != nil && m.NumberValue != nil {
		return *m.NumberValue
	}
	return 0
}

func (m *Cell) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Cell) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *Cell) GetCurrentFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CurrentFormat
	}
	return nil
}

func (m *Cell) GetFormulaError() *TSP.Reference {
	if m != nil {
		return m.FormulaError
	}
	return nil
}

func (m *Cell) GetNumberFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.NumberFormat
	}
	return nil
}

func (m *Cell) GetCurrencyFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CurrencyFormat
	}
	return nil
}

func (m *Cell) GetDurationFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.DurationFormat
	}
	return nil
}

func (m *Cell) GetDateFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.DateFormat
	}
	return nil
}

func (m *Cell) GetCustomFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CustomFormat
	}
	return nil
}

func (m *Cell) GetBaseFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.BaseFormat
	}
	return nil
}

func (m *Cell) GetExplicitFormatFlags() uint32 {
	if m != nil && m.ExplicitFormatFlags != nil {
		return *m.ExplicitFormatFlags
	}
	return 0
}

func (m *Cell) GetRichText() *TSP.Reference {
	if m != nil {
		return m.RichText
	}
	return nil
}

func (m *Cell) GetConditionalStyle() *TSP.Reference {
	if m != nil {
		return m.ConditionalStyle
	}
	return nil
}

func (m *Cell) GetCommentStorage() *TSP.Reference {
	if m != nil {
		return m.CommentStorage
	}
	return nil
}

func (m *Cell) GetConditionalStyleAppliedRule() uint32 {
	if m != nil && m.ConditionalStyleAppliedRule != nil {
		return *m.ConditionalStyleAppliedRule
	}
	return 0
}

func (m *Cell) GetImportWarningSet() *ImportWarningSetArchive {
	if m != nil {
		return m.ImportWarningSet
	}
	return nil
}

func (m *Cell) GetCustomFormatObject() *TSK.CustomFormatArchive {
	if m != nil {
		return m.CustomFormatObject
	}
	return nil
}

func (m *Cell) GetCellBorder() *CellBorderArchive {
	if m != nil {
		return m.CellBorder
	}
	return nil
}

func (m *Cell) GetCellSpec() *CellSpecArchive {
	if m != nil {
		return m.CellSpec
	}
	return nil
}

func (m *Cell) GetCellFormatKind() uint32 {
	if m != nil && m.CellFormatKind != nil {
		return *m.CellFormatKind
	}
	return 0
}

func (m *Cell) GetTextFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.TextFormat
	}
	return nil
}

func (m *Cell) GetBooleanFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.BooleanFormat
	}
	return nil
}

type MergeRegionMapArchive struct {
	CellRange            []*CellRange `protobuf:"bytes,1,rep,name=cell_range,json=cellRange" json:"cell_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MergeRegionMapArchive) Reset()         { *m = MergeRegionMapArchive{} }
func (m *MergeRegionMapArchive) String() string { return proto.CompactTextString(m) }
func (*MergeRegionMapArchive) ProtoMessage()    {}
func (*MergeRegionMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{37}
}

func (m *MergeRegionMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeRegionMapArchive.Unmarshal(m, b)
}
func (m *MergeRegionMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeRegionMapArchive.Marshal(b, m, deterministic)
}
func (m *MergeRegionMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeRegionMapArchive.Merge(m, src)
}
func (m *MergeRegionMapArchive) XXX_Size() int {
	return xxx_messageInfo_MergeRegionMapArchive.Size(m)
}
func (m *MergeRegionMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeRegionMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MergeRegionMapArchive proto.InternalMessageInfo

func (m *MergeRegionMapArchive) GetCellRange() []*CellRange {
	if m != nil {
		return m.CellRange
	}
	return nil
}

type CellMapArchive struct {
	CellTiles                           []*TSP.Reference              `protobuf:"bytes,2,rep,name=cell_tiles,json=cellTiles" json:"cell_tiles,omitempty"`
	UidBased                            *bool                         `protobuf:"varint,3,req,name=uid_based,json=uidBased" json:"uid_based,omitempty"`
	ExpandedCellIds                     []*TSCE.CellCoordinateArchive `protobuf:"bytes,14,rep,name=expanded_cell_ids,json=expandedCellIds" json:"expanded_cell_ids,omitempty"`
	CellUidList                         *CellUIDListArchive           `protobuf:"bytes,5,opt,name=cell_uid_list,json=cellUidList" json:"cell_uid_list,omitempty"`
	MergeUidRanges                      []*TSP.UUIDRectArchive        `protobuf:"bytes,7,rep,name=merge_uid_ranges,json=mergeUidRanges" json:"merge_uid_ranges,omitempty"`
	UnmergeUidRanges                    []*TSP.UUIDRectArchive        `protobuf:"bytes,9,rep,name=unmerge_uid_ranges,json=unmergeUidRanges" json:"unmerge_uid_ranges,omitempty"`
	MergeActions                        []*MergeOperationArchive      `protobuf:"bytes,13,rep,name=merge_actions,json=mergeActions" json:"merge_actions,omitempty"`
	MayModifyFormulasInCells            *bool                         `protobuf:"varint,10,opt,name=may_modify_formulas_in_cells,json=mayModifyFormulasInCells,def=1" json:"may_modify_formulas_in_cells,omitempty"`
	MayModifyValuesReferencedByFormulas *bool                         `protobuf:"varint,11,opt,name=may_modify_values_referenced_by_formulas,json=mayModifyValuesReferencedByFormulas,def=1" json:"may_modify_values_referenced_by_formulas,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                      `json:"-"`
	XXX_unrecognized                    []byte                        `json:"-"`
	XXX_sizecache                       int32                         `json:"-"`
}

func (m *CellMapArchive) Reset()         { *m = CellMapArchive{} }
func (m *CellMapArchive) String() string { return proto.CompactTextString(m) }
func (*CellMapArchive) ProtoMessage()    {}
func (*CellMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{38}
}

func (m *CellMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellMapArchive.Unmarshal(m, b)
}
func (m *CellMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellMapArchive.Marshal(b, m, deterministic)
}
func (m *CellMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellMapArchive.Merge(m, src)
}
func (m *CellMapArchive) XXX_Size() int {
	return xxx_messageInfo_CellMapArchive.Size(m)
}
func (m *CellMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellMapArchive proto.InternalMessageInfo

const Default_CellMapArchive_MayModifyFormulasInCells bool = true
const Default_CellMapArchive_MayModifyValuesReferencedByFormulas bool = true

func (m *CellMapArchive) GetCellTiles() []*TSP.Reference {
	if m != nil {
		return m.CellTiles
	}
	return nil
}

func (m *CellMapArchive) GetUidBased() bool {
	if m != nil && m.UidBased != nil {
		return *m.UidBased
	}
	return false
}

func (m *CellMapArchive) GetExpandedCellIds() []*TSCE.CellCoordinateArchive {
	if m != nil {
		return m.ExpandedCellIds
	}
	return nil
}

func (m *CellMapArchive) GetCellUidList() *CellUIDListArchive {
	if m != nil {
		return m.CellUidList
	}
	return nil
}

func (m *CellMapArchive) GetMergeUidRanges() []*TSP.UUIDRectArchive {
	if m != nil {
		return m.MergeUidRanges
	}
	return nil
}

func (m *CellMapArchive) GetUnmergeUidRanges() []*TSP.UUIDRectArchive {
	if m != nil {
		return m.UnmergeUidRanges
	}
	return nil
}

func (m *CellMapArchive) GetMergeActions() []*MergeOperationArchive {
	if m != nil {
		return m.MergeActions
	}
	return nil
}

func (m *CellMapArchive) GetMayModifyFormulasInCells() bool {
	if m != nil && m.MayModifyFormulasInCells != nil {
		return *m.MayModifyFormulasInCells
	}
	return Default_CellMapArchive_MayModifyFormulasInCells
}

func (m *CellMapArchive) GetMayModifyValuesReferencedByFormulas() bool {
	if m != nil && m.MayModifyValuesReferencedByFormulas != nil {
		return *m.MayModifyValuesReferencedByFormulas
	}
	return Default_CellMapArchive_MayModifyValuesReferencedByFormulas
}

type CellListArchive struct {
	Cells                []*CellListArchive_OptionalCell `protobuf:"bytes,1,rep,name=cells" json:"cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CellListArchive) Reset()         { *m = CellListArchive{} }
func (m *CellListArchive) String() string { return proto.CompactTextString(m) }
func (*CellListArchive) ProtoMessage()    {}
func (*CellListArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{39}
}

func (m *CellListArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellListArchive.Unmarshal(m, b)
}
func (m *CellListArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellListArchive.Marshal(b, m, deterministic)
}
func (m *CellListArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellListArchive.Merge(m, src)
}
func (m *CellListArchive) XXX_Size() int {
	return xxx_messageInfo_CellListArchive.Size(m)
}
func (m *CellListArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellListArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellListArchive proto.InternalMessageInfo

func (m *CellListArchive) GetCells() []*CellListArchive_OptionalCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

type CellListArchive_OptionalCell struct {
	Cell                 *Cell    `protobuf:"bytes,1,opt,name=cell" json:"cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellListArchive_OptionalCell) Reset()         { *m = CellListArchive_OptionalCell{} }
func (m *CellListArchive_OptionalCell) String() string { return proto.CompactTextString(m) }
func (*CellListArchive_OptionalCell) ProtoMessage()    {}
func (*CellListArchive_OptionalCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{39, 0}
}

func (m *CellListArchive_OptionalCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellListArchive_OptionalCell.Unmarshal(m, b)
}
func (m *CellListArchive_OptionalCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellListArchive_OptionalCell.Marshal(b, m, deterministic)
}
func (m *CellListArchive_OptionalCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellListArchive_OptionalCell.Merge(m, src)
}
func (m *CellListArchive_OptionalCell) XXX_Size() int {
	return xxx_messageInfo_CellListArchive_OptionalCell.Size(m)
}
func (m *CellListArchive_OptionalCell) XXX_DiscardUnknown() {
	xxx_messageInfo_CellListArchive_OptionalCell.DiscardUnknown(m)
}

var xxx_messageInfo_CellListArchive_OptionalCell proto.InternalMessageInfo

func (m *CellListArchive_OptionalCell) GetCell() *Cell {
	if m != nil {
		return m.Cell
	}
	return nil
}

type CellFormatAndValueArchive struct {
	ValueType              *CellValueType           `protobuf:"varint,1,req,name=valueType,enum=TST.CellValueType" json:"valueType,omitempty"`
	NumberValue            *float64                 `protobuf:"fixed64,2,opt,name=numberValue" json:"numberValue,omitempty"`
	StringValue            *string                  `protobuf:"bytes,3,opt,name=stringValue" json:"stringValue,omitempty"`
	BoolValue              *bool                    `protobuf:"varint,4,opt,name=boolValue" json:"boolValue,omitempty"`
	RichTextStorage        *TSP.Reference           `protobuf:"bytes,5,opt,name=richTextStorage" json:"richTextStorage,omitempty"`
	UseAllSpareFormats     *bool                    `protobuf:"varint,6,req,name=use_all_spare_formats,json=useAllSpareFormats" json:"use_all_spare_formats,omitempty"`
	ExplicitFlags          *uint32                  `protobuf:"varint,7,req,name=explicit_flags,json=explicitFlags" json:"explicit_flags,omitempty"`
	CellFormatKind         *uint32                  `protobuf:"varint,8,req,name=cell_format_kind,json=cellFormatKind" json:"cell_format_kind,omitempty"`
	NumberFormat           *TSK.FormatStructArchive `protobuf:"bytes,10,opt,name=number_format,json=numberFormat" json:"number_format,omitempty"`
	CurrencyFormat         *TSK.FormatStructArchive `protobuf:"bytes,11,opt,name=currency_format,json=currencyFormat" json:"currency_format,omitempty"`
	DateFormat             *TSK.FormatStructArchive `protobuf:"bytes,12,opt,name=date_format,json=dateFormat" json:"date_format,omitempty"`
	DurationFormat         *TSK.FormatStructArchive `protobuf:"bytes,13,opt,name=duration_format,json=durationFormat" json:"duration_format,omitempty"`
	TextFormat             *TSK.FormatStructArchive `protobuf:"bytes,14,opt,name=text_format,json=textFormat" json:"text_format,omitempty"`
	BooleanFormat          *TSK.FormatStructArchive `protobuf:"bytes,15,opt,name=boolean_format,json=booleanFormat" json:"boolean_format,omitempty"`
	FormattedValue         *string                  `protobuf:"bytes,16,opt,name=formatted_value,json=formattedValue" json:"formatted_value,omitempty"`
	FormattedRichTextValue *TSP.Reference           `protobuf:"bytes,17,opt,name=formatted_rich_text_value,json=formattedRichTextValue" json:"formatted_rich_text_value,omitempty"`
	ApplySpareFormatOnly   *bool                    `protobuf:"varint,18,req,name=apply_spare_format_only,json=applySpareFormatOnly" json:"apply_spare_format_only,omitempty"`
	SpareFormatType        *bool                    `protobuf:"varint,19,req,name=spare_format_type,json=spareFormatType" json:"spare_format_type,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *CellFormatAndValueArchive) Reset()         { *m = CellFormatAndValueArchive{} }
func (m *CellFormatAndValueArchive) String() string { return proto.CompactTextString(m) }
func (*CellFormatAndValueArchive) ProtoMessage()    {}
func (*CellFormatAndValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{40}
}

func (m *CellFormatAndValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellFormatAndValueArchive.Unmarshal(m, b)
}
func (m *CellFormatAndValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellFormatAndValueArchive.Marshal(b, m, deterministic)
}
func (m *CellFormatAndValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellFormatAndValueArchive.Merge(m, src)
}
func (m *CellFormatAndValueArchive) XXX_Size() int {
	return xxx_messageInfo_CellFormatAndValueArchive.Size(m)
}
func (m *CellFormatAndValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellFormatAndValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellFormatAndValueArchive proto.InternalMessageInfo

func (m *CellFormatAndValueArchive) GetValueType() CellValueType {
	if m != nil && m.ValueType != nil {
		return *m.ValueType
	}
	return CellValueType_emptyCellValueType
}

func (m *CellFormatAndValueArchive) GetNumberValue() float64 {
	if m != nil && m.NumberValue != nil {
		return *m.NumberValue
	}
	return 0
}

func (m *CellFormatAndValueArchive) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *CellFormatAndValueArchive) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CellFormatAndValueArchive) GetRichTextStorage() *TSP.Reference {
	if m != nil {
		return m.RichTextStorage
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetUseAllSpareFormats() bool {
	if m != nil && m.UseAllSpareFormats != nil {
		return *m.UseAllSpareFormats
	}
	return false
}

func (m *CellFormatAndValueArchive) GetExplicitFlags() uint32 {
	if m != nil && m.ExplicitFlags != nil {
		return *m.ExplicitFlags
	}
	return 0
}

func (m *CellFormatAndValueArchive) GetCellFormatKind() uint32 {
	if m != nil && m.CellFormatKind != nil {
		return *m.CellFormatKind
	}
	return 0
}

func (m *CellFormatAndValueArchive) GetNumberFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.NumberFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetCurrencyFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.CurrencyFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetDateFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.DateFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetDurationFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.DurationFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetTextFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.TextFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetBooleanFormat() *TSK.FormatStructArchive {
	if m != nil {
		return m.BooleanFormat
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetFormattedValue() string {
	if m != nil && m.FormattedValue != nil {
		return *m.FormattedValue
	}
	return ""
}

func (m *CellFormatAndValueArchive) GetFormattedRichTextValue() *TSP.Reference {
	if m != nil {
		return m.FormattedRichTextValue
	}
	return nil
}

func (m *CellFormatAndValueArchive) GetApplySpareFormatOnly() bool {
	if m != nil && m.ApplySpareFormatOnly != nil {
		return *m.ApplySpareFormatOnly
	}
	return false
}

func (m *CellFormatAndValueArchive) GetSpareFormatType() bool {
	if m != nil && m.SpareFormatType != nil {
		return *m.SpareFormatType
	}
	return false
}

type CellSpecArchive struct {
	InteractionType                   *uint32              `protobuf:"varint,1,req,name=interaction_type,json=interactionType" json:"interaction_type,omitempty"`
	Formula                           *TSCE.FormulaArchive `protobuf:"bytes,2,opt,name=formula" json:"formula,omitempty"`
	RangeControlMin                   *float64             `protobuf:"fixed64,3,opt,name=range_control_min,json=rangeControlMin" json:"range_control_min,omitempty"`
	RangeControlMax                   *float64             `protobuf:"fixed64,4,opt,name=range_control_max,json=rangeControlMax" json:"range_control_max,omitempty"`
	RangeControlInc                   *float64             `protobuf:"fixed64,5,opt,name=range_control_inc,json=rangeControlInc" json:"range_control_inc,omitempty"`
	ChooserControlPopupModel          *TSP.Reference       `protobuf:"bytes,6,opt,name=chooser_control_popup_model,json=chooserControlPopupModel" json:"chooser_control_popup_model,omitempty"`
	ChooserControlStartWFirst         *bool                `protobuf:"varint,7,opt,name=chooser_control_start_w_first,json=chooserControlStartWFirst" json:"chooser_control_start_w_first,omitempty"`
	CategorySummaryShouldDisplayLabel *bool                `protobuf:"varint,8,opt,name=category_summary_should_display_label,json=categorySummaryShouldDisplayLabel" json:"category_summary_should_display_label,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral              struct{}             `json:"-"`
	XXX_unrecognized                  []byte               `json:"-"`
	XXX_sizecache                     int32                `json:"-"`
}

func (m *CellSpecArchive) Reset()         { *m = CellSpecArchive{} }
func (m *CellSpecArchive) String() string { return proto.CompactTextString(m) }
func (*CellSpecArchive) ProtoMessage()    {}
func (*CellSpecArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{41}
}

func (m *CellSpecArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellSpecArchive.Unmarshal(m, b)
}
func (m *CellSpecArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellSpecArchive.Marshal(b, m, deterministic)
}
func (m *CellSpecArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellSpecArchive.Merge(m, src)
}
func (m *CellSpecArchive) XXX_Size() int {
	return xxx_messageInfo_CellSpecArchive.Size(m)
}
func (m *CellSpecArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellSpecArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellSpecArchive proto.InternalMessageInfo

func (m *CellSpecArchive) GetInteractionType() uint32 {
	if m != nil && m.InteractionType != nil {
		return *m.InteractionType
	}
	return 0
}

func (m *CellSpecArchive) GetFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

func (m *CellSpecArchive) GetRangeControlMin() float64 {
	if m != nil && m.RangeControlMin != nil {
		return *m.RangeControlMin
	}
	return 0
}

func (m *CellSpecArchive) GetRangeControlMax() float64 {
	if m != nil && m.RangeControlMax != nil {
		return *m.RangeControlMax
	}
	return 0
}

func (m *CellSpecArchive) GetRangeControlInc() float64 {
	if m != nil && m.RangeControlInc != nil {
		return *m.RangeControlInc
	}
	return 0
}

func (m *CellSpecArchive) GetChooserControlPopupModel() *TSP.Reference {
	if m != nil {
		return m.ChooserControlPopupModel
	}
	return nil
}

func (m *CellSpecArchive) GetChooserControlStartWFirst() bool {
	if m != nil && m.ChooserControlStartWFirst != nil {
		return *m.ChooserControlStartWFirst
	}
	return false
}

// Deprecated: Do not use.
func (m *CellSpecArchive) GetCategorySummaryShouldDisplayLabel() bool {
	if m != nil && m.CategorySummaryShouldDisplayLabel != nil {
		return *m.CategorySummaryShouldDisplayLabel
	}
	return false
}

type CommentStorageWrapperArchive struct {
	CommentStorage       *TSP.Reference `protobuf:"bytes,1,opt,name=comment_storage,json=commentStorage" json:"comment_storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommentStorageWrapperArchive) Reset()         { *m = CommentStorageWrapperArchive{} }
func (m *CommentStorageWrapperArchive) String() string { return proto.CompactTextString(m) }
func (*CommentStorageWrapperArchive) ProtoMessage()    {}
func (*CommentStorageWrapperArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{42}
}

func (m *CommentStorageWrapperArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommentStorageWrapperArchive.Unmarshal(m, b)
}
func (m *CommentStorageWrapperArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommentStorageWrapperArchive.Marshal(b, m, deterministic)
}
func (m *CommentStorageWrapperArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentStorageWrapperArchive.Merge(m, src)
}
func (m *CommentStorageWrapperArchive) XXX_Size() int {
	return xxx_messageInfo_CommentStorageWrapperArchive.Size(m)
}
func (m *CommentStorageWrapperArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentStorageWrapperArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommentStorageWrapperArchive proto.InternalMessageInfo

func (m *CommentStorageWrapperArchive) GetCommentStorage() *TSP.Reference {
	if m != nil {
		return m.CommentStorage
	}
	return nil
}

type CellDiffArchive struct {
	PropertyMapToSet     *TSS.CommandPropertyMapArchive `protobuf:"bytes,1,req,name=property_map_to_set,json=propertyMapToSet" json:"property_map_to_set,omitempty"`
	PropertyMapToReset   *TSS.CommandPropertyMapArchive `protobuf:"bytes,2,req,name=property_map_to_reset,json=propertyMapToReset" json:"property_map_to_reset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CellDiffArchive) Reset()         { *m = CellDiffArchive{} }
func (m *CellDiffArchive) String() string { return proto.CompactTextString(m) }
func (*CellDiffArchive) ProtoMessage()    {}
func (*CellDiffArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{43}
}

func (m *CellDiffArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellDiffArchive.Unmarshal(m, b)
}
func (m *CellDiffArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellDiffArchive.Marshal(b, m, deterministic)
}
func (m *CellDiffArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellDiffArchive.Merge(m, src)
}
func (m *CellDiffArchive) XXX_Size() int {
	return xxx_messageInfo_CellDiffArchive.Size(m)
}
func (m *CellDiffArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellDiffArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellDiffArchive proto.InternalMessageInfo

func (m *CellDiffArchive) GetPropertyMapToSet() *TSS.CommandPropertyMapArchive {
	if m != nil {
		return m.PropertyMapToSet
	}
	return nil
}

func (m *CellDiffArchive) GetPropertyMapToReset() *TSS.CommandPropertyMapArchive {
	if m != nil {
		return m.PropertyMapToReset
	}
	return nil
}

type CellDiffMapArchive struct {
	UidBased             *bool                         `protobuf:"varint,1,req,name=uid_based,json=uidBased" json:"uid_based,omitempty"`
	ExpandedCellIds      []*TSCE.CellCoordinateArchive `protobuf:"bytes,5,rep,name=expanded_cell_ids,json=expandedCellIds" json:"expanded_cell_ids,omitempty"`
	CellUids             *CellUIDListArchive           `protobuf:"bytes,2,req,name=cell_uids,json=cellUids" json:"cell_uids,omitempty"`
	CellDiffs            []*TSP.Reference              `protobuf:"bytes,4,rep,name=cell_diffs,json=cellDiffs" json:"cell_diffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CellDiffMapArchive) Reset()         { *m = CellDiffMapArchive{} }
func (m *CellDiffMapArchive) String() string { return proto.CompactTextString(m) }
func (*CellDiffMapArchive) ProtoMessage()    {}
func (*CellDiffMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{44}
}

func (m *CellDiffMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellDiffMapArchive.Unmarshal(m, b)
}
func (m *CellDiffMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellDiffMapArchive.Marshal(b, m, deterministic)
}
func (m *CellDiffMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellDiffMapArchive.Merge(m, src)
}
func (m *CellDiffMapArchive) XXX_Size() int {
	return xxx_messageInfo_CellDiffMapArchive.Size(m)
}
func (m *CellDiffMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellDiffMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellDiffMapArchive proto.InternalMessageInfo

func (m *CellDiffMapArchive) GetUidBased() bool {
	if m != nil && m.UidBased != nil {
		return *m.UidBased
	}
	return false
}

func (m *CellDiffMapArchive) GetExpandedCellIds() []*TSCE.CellCoordinateArchive {
	if m != nil {
		return m.ExpandedCellIds
	}
	return nil
}

func (m *CellDiffMapArchive) GetCellUids() *CellUIDListArchive {
	if m != nil {
		return m.CellUids
	}
	return nil
}

func (m *CellDiffMapArchive) GetCellDiffs() []*TSP.Reference {
	if m != nil {
		return m.CellDiffs
	}
	return nil
}

type DoubleStyleMapArchive struct {
	Capacity             *uint32                                             `protobuf:"varint,1,req,name=capacity" json:"capacity,omitempty"`
	Count                *uint32                                             `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	CellMapEntry         []*DoubleStyleMapArchive_DoubleStyleMapEntryArchive `protobuf:"bytes,3,rep,name=cell_map_entry,json=cellMapEntry" json:"cell_map_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *DoubleStyleMapArchive) Reset()         { *m = DoubleStyleMapArchive{} }
func (m *DoubleStyleMapArchive) String() string { return proto.CompactTextString(m) }
func (*DoubleStyleMapArchive) ProtoMessage()    {}
func (*DoubleStyleMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{45}
}

func (m *DoubleStyleMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleStyleMapArchive.Unmarshal(m, b)
}
func (m *DoubleStyleMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleStyleMapArchive.Marshal(b, m, deterministic)
}
func (m *DoubleStyleMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleStyleMapArchive.Merge(m, src)
}
func (m *DoubleStyleMapArchive) XXX_Size() int {
	return xxx_messageInfo_DoubleStyleMapArchive.Size(m)
}
func (m *DoubleStyleMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleStyleMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleStyleMapArchive proto.InternalMessageInfo

func (m *DoubleStyleMapArchive) GetCapacity() uint32 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return 0
}

func (m *DoubleStyleMapArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *DoubleStyleMapArchive) GetCellMapEntry() []*DoubleStyleMapArchive_DoubleStyleMapEntryArchive {
	if m != nil {
		return m.CellMapEntry
	}
	return nil
}

type DoubleStyleMapArchive_DoubleStyleMapEntryArchive struct {
	CellId               *CellID        `protobuf:"bytes,1,req,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	OldStyle             *TSP.Reference `protobuf:"bytes,2,req,name=old_style,json=oldStyle" json:"old_style,omitempty"`
	NewStyle             *TSP.Reference `protobuf:"bytes,3,req,name=new_style,json=newStyle" json:"new_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) Reset() {
	*m = DoubleStyleMapArchive_DoubleStyleMapEntryArchive{}
}
func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) String() string {
	return proto.CompactTextString(m)
}
func (*DoubleStyleMapArchive_DoubleStyleMapEntryArchive) ProtoMessage() {}
func (*DoubleStyleMapArchive_DoubleStyleMapEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{45, 0}
}

func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive.Unmarshal(m, b)
}
func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive.Marshal(b, m, deterministic)
}
func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive.Merge(m, src)
}
func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) XXX_Size() int {
	return xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive.Size(m)
}
func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleStyleMapArchive_DoubleStyleMapEntryArchive proto.InternalMessageInfo

func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) GetCellId() *CellID {
	if m != nil {
		return m.CellId
	}
	return nil
}

func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) GetOldStyle() *TSP.Reference {
	if m != nil {
		return m.OldStyle
	}
	return nil
}

func (m *DoubleStyleMapArchive_DoubleStyleMapEntryArchive) GetNewStyle() *TSP.Reference {
	if m != nil {
		return m.NewStyle
	}
	return nil
}

type StyleTableMapArchive struct {
	Capacity             *uint32                                           `protobuf:"varint,1,req,name=capacity" json:"capacity,omitempty"`
	Count                *uint32                                           `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	MapEntry             []*StyleTableMapArchive_StyleTableMapEntryArchive `protobuf:"bytes,3,rep,name=map_entry,json=mapEntry" json:"map_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *StyleTableMapArchive) Reset()         { *m = StyleTableMapArchive{} }
func (m *StyleTableMapArchive) String() string { return proto.CompactTextString(m) }
func (*StyleTableMapArchive) ProtoMessage()    {}
func (*StyleTableMapArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{46}
}

func (m *StyleTableMapArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StyleTableMapArchive.Unmarshal(m, b)
}
func (m *StyleTableMapArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StyleTableMapArchive.Marshal(b, m, deterministic)
}
func (m *StyleTableMapArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StyleTableMapArchive.Merge(m, src)
}
func (m *StyleTableMapArchive) XXX_Size() int {
	return xxx_messageInfo_StyleTableMapArchive.Size(m)
}
func (m *StyleTableMapArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StyleTableMapArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StyleTableMapArchive proto.InternalMessageInfo

func (m *StyleTableMapArchive) GetCapacity() uint32 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return 0
}

func (m *StyleTableMapArchive) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *StyleTableMapArchive) GetMapEntry() []*StyleTableMapArchive_StyleTableMapEntryArchive {
	if m != nil {
		return m.MapEntry
	}
	return nil
}

type StyleTableMapArchive_StyleTableMapEntryArchive struct {
	Key                  *uint32        `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	OldStyle             *TSP.Reference `protobuf:"bytes,2,req,name=old_style,json=oldStyle" json:"old_style,omitempty"`
	NewStyle             *TSP.Reference `protobuf:"bytes,3,req,name=new_style,json=newStyle" json:"new_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StyleTableMapArchive_StyleTableMapEntryArchive) Reset() {
	*m = StyleTableMapArchive_StyleTableMapEntryArchive{}
}
func (m *StyleTableMapArchive_StyleTableMapEntryArchive) String() string {
	return proto.CompactTextString(m)
}
func (*StyleTableMapArchive_StyleTableMapEntryArchive) ProtoMessage() {}
func (*StyleTableMapArchive_StyleTableMapEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{46, 0}
}

func (m *StyleTableMapArchive_StyleTableMapEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive.Unmarshal(m, b)
}
func (m *StyleTableMapArchive_StyleTableMapEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive.Marshal(b, m, deterministic)
}
func (m *StyleTableMapArchive_StyleTableMapEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive.Merge(m, src)
}
func (m *StyleTableMapArchive_StyleTableMapEntryArchive) XXX_Size() int {
	return xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive.Size(m)
}
func (m *StyleTableMapArchive_StyleTableMapEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StyleTableMapArchive_StyleTableMapEntryArchive proto.InternalMessageInfo

func (m *StyleTableMapArchive_StyleTableMapEntryArchive) GetKey() uint32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *StyleTableMapArchive_StyleTableMapEntryArchive) GetOldStyle() *TSP.Reference {
	if m != nil {
		return m.OldStyle
	}
	return nil
}

func (m *StyleTableMapArchive_StyleTableMapEntryArchive) GetNewStyle() *TSP.Reference {
	if m != nil {
		return m.NewStyle
	}
	return nil
}

type SelectionArchive struct {
	TableModel           *TSP.Reference        `protobuf:"bytes,1,opt,name=tableModel" json:"tableModel,omitempty"` // Deprecated: Do not use.
	SelectionType        *SelectionTypeArchive `protobuf:"varint,4,req,name=selection_type,json=selectionType,enum=TST.SelectionTypeArchive" json:"selection_type,omitempty"`
	AnchorCell           *CellID               `protobuf:"bytes,5,opt,name=anchor_cell,json=anchorCell" json:"anchor_cell,omitempty"`
	CellRanges           []*CellRange          `protobuf:"bytes,6,rep,name=cell_ranges,json=cellRanges" json:"cell_ranges,omitempty"`
	BaseRanges           []*CellRange          `protobuf:"bytes,7,rep,name=base_ranges,json=baseRanges" json:"base_ranges,omitempty"`
	CursorCell           *CellID               `protobuf:"bytes,8,opt,name=cursor_cell,json=cursorCell" json:"cursor_cell,omitempty"`
	TableInfo            *TSP.Reference        `protobuf:"bytes,9,opt,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	CellUidRegion        *CellUIDRegionArchive `protobuf:"bytes,10,opt,name=cell_uid_region,json=cellUidRegion" json:"cell_uid_region,omitempty"`
	BaseUidRegion        *CellUIDRegionArchive `protobuf:"bytes,11,opt,name=base_uid_region,json=baseUidRegion" json:"base_uid_region,omitempty"`
	AnchorCellUid        *TSP.UUIDCoordArchive `protobuf:"bytes,12,opt,name=anchor_cell_uid,json=anchorCellUid" json:"anchor_cell_uid,omitempty"`
	CursorCellUid        *TSP.UUIDCoordArchive `protobuf:"bytes,13,opt,name=cursor_cell_uid,json=cursorCellUid" json:"cursor_cell_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SelectionArchive) Reset()         { *m = SelectionArchive{} }
func (m *SelectionArchive) String() string { return proto.CompactTextString(m) }
func (*SelectionArchive) ProtoMessage()    {}
func (*SelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{47}
}

func (m *SelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectionArchive.Unmarshal(m, b)
}
func (m *SelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectionArchive.Marshal(b, m, deterministic)
}
func (m *SelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectionArchive.Merge(m, src)
}
func (m *SelectionArchive) XXX_Size() int {
	return xxx_messageInfo_SelectionArchive.Size(m)
}
func (m *SelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SelectionArchive proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *SelectionArchive) GetTableModel() *TSP.Reference {
	if m != nil {
		return m.TableModel
	}
	return nil
}

func (m *SelectionArchive) GetSelectionType() SelectionTypeArchive {
	if m != nil && m.SelectionType != nil {
		return *m.SelectionType
	}
	return SelectionTypeArchive_deprecatedCellSelectionType
}

func (m *SelectionArchive) GetAnchorCell() *CellID {
	if m != nil {
		return m.AnchorCell
	}
	return nil
}

func (m *SelectionArchive) GetCellRanges() []*CellRange {
	if m != nil {
		return m.CellRanges
	}
	return nil
}

func (m *SelectionArchive) GetBaseRanges() []*CellRange {
	if m != nil {
		return m.BaseRanges
	}
	return nil
}

func (m *SelectionArchive) GetCursorCell() *CellID {
	if m != nil {
		return m.CursorCell
	}
	return nil
}

func (m *SelectionArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *SelectionArchive) GetCellUidRegion() *CellUIDRegionArchive {
	if m != nil {
		return m.CellUidRegion
	}
	return nil
}

func (m *SelectionArchive) GetBaseUidRegion() *CellUIDRegionArchive {
	if m != nil {
		return m.BaseUidRegion
	}
	return nil
}

func (m *SelectionArchive) GetAnchorCellUid() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.AnchorCellUid
	}
	return nil
}

func (m *SelectionArchive) GetCursorCellUid() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.CursorCellUid
	}
	return nil
}

type DeathhawkRdar39989167CellSelectionArchive struct {
	TableInfo            *TSP.Reference        `protobuf:"bytes,1,opt,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	SelectionType        *SelectionTypeArchive `protobuf:"varint,2,opt,name=selection_type,json=selectionType,enum=TST.SelectionTypeArchive" json:"selection_type,omitempty"`
	CellUidRegion        *CellUIDRegionArchive `protobuf:"bytes,3,opt,name=cell_uid_region,json=cellUidRegion" json:"cell_uid_region,omitempty"`
	BaseUidRegion        *CellUIDRegionArchive `protobuf:"bytes,4,opt,name=base_uid_region,json=baseUidRegion" json:"base_uid_region,omitempty"`
	AnchorCellUid        *TSP.UUIDCoordArchive `protobuf:"bytes,5,opt,name=anchor_cell_uid,json=anchorCellUid" json:"anchor_cell_uid,omitempty"`
	CursorCellUid        *TSP.UUIDCoordArchive `protobuf:"bytes,6,opt,name=cursor_cell_uid,json=cursorCellUid" json:"cursor_cell_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeathhawkRdar39989167CellSelectionArchive) Reset() {
	*m = DeathhawkRdar39989167CellSelectionArchive{}
}
func (m *DeathhawkRdar39989167CellSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*DeathhawkRdar39989167CellSelectionArchive) ProtoMessage()    {}
func (*DeathhawkRdar39989167CellSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{48}
}

func (m *DeathhawkRdar39989167CellSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive.Unmarshal(m, b)
}
func (m *DeathhawkRdar39989167CellSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive.Marshal(b, m, deterministic)
}
func (m *DeathhawkRdar39989167CellSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive.Merge(m, src)
}
func (m *DeathhawkRdar39989167CellSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive.Size(m)
}
func (m *DeathhawkRdar39989167CellSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DeathhawkRdar39989167CellSelectionArchive proto.InternalMessageInfo

func (m *DeathhawkRdar39989167CellSelectionArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *DeathhawkRdar39989167CellSelectionArchive) GetSelectionType() SelectionTypeArchive {
	if m != nil && m.SelectionType != nil {
		return *m.SelectionType
	}
	return SelectionTypeArchive_deprecatedCellSelectionType
}

func (m *DeathhawkRdar39989167CellSelectionArchive) GetCellUidRegion() *CellUIDRegionArchive {
	if m != nil {
		return m.CellUidRegion
	}
	return nil
}

func (m *DeathhawkRdar39989167CellSelectionArchive) GetBaseUidRegion() *CellUIDRegionArchive {
	if m != nil {
		return m.BaseUidRegion
	}
	return nil
}

func (m *DeathhawkRdar39989167CellSelectionArchive) GetAnchorCellUid() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.AnchorCellUid
	}
	return nil
}

func (m *DeathhawkRdar39989167CellSelectionArchive) GetCursorCellUid() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.CursorCellUid
	}
	return nil
}

type StrokeSelectionArchive struct {
	Mask                 *int32   `protobuf:"varint,1,opt,name=mask" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrokeSelectionArchive) Reset()         { *m = StrokeSelectionArchive{} }
func (m *StrokeSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*StrokeSelectionArchive) ProtoMessage()    {}
func (*StrokeSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{49}
}

func (m *StrokeSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrokeSelectionArchive.Unmarshal(m, b)
}
func (m *StrokeSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrokeSelectionArchive.Marshal(b, m, deterministic)
}
func (m *StrokeSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrokeSelectionArchive.Merge(m, src)
}
func (m *StrokeSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_StrokeSelectionArchive.Size(m)
}
func (m *StrokeSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StrokeSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StrokeSelectionArchive proto.InternalMessageInfo

func (m *StrokeSelectionArchive) GetMask() int32 {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return 0
}

type ControlCellSelectionArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlCellSelectionArchive) Reset()         { *m = ControlCellSelectionArchive{} }
func (m *ControlCellSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*ControlCellSelectionArchive) ProtoMessage()    {}
func (*ControlCellSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{50}
}

func (m *ControlCellSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlCellSelectionArchive.Unmarshal(m, b)
}
func (m *ControlCellSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlCellSelectionArchive.Marshal(b, m, deterministic)
}
func (m *ControlCellSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlCellSelectionArchive.Merge(m, src)
}
func (m *ControlCellSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_ControlCellSelectionArchive.Size(m)
}
func (m *ControlCellSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlCellSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ControlCellSelectionArchive proto.InternalMessageInfo

type StockCellSelectionArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockCellSelectionArchive) Reset()         { *m = StockCellSelectionArchive{} }
func (m *StockCellSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*StockCellSelectionArchive) ProtoMessage()    {}
func (*StockCellSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{51}
}

func (m *StockCellSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockCellSelectionArchive.Unmarshal(m, b)
}
func (m *StockCellSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockCellSelectionArchive.Marshal(b, m, deterministic)
}
func (m *StockCellSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockCellSelectionArchive.Merge(m, src)
}
func (m *StockCellSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_StockCellSelectionArchive.Size(m)
}
func (m *StockCellSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StockCellSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StockCellSelectionArchive proto.InternalMessageInfo

type TableNameSelectionArchive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableNameSelectionArchive) Reset()         { *m = TableNameSelectionArchive{} }
func (m *TableNameSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*TableNameSelectionArchive) ProtoMessage()    {}
func (*TableNameSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{52}
}

func (m *TableNameSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableNameSelectionArchive.Unmarshal(m, b)
}
func (m *TableNameSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableNameSelectionArchive.Marshal(b, m, deterministic)
}
func (m *TableNameSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableNameSelectionArchive.Merge(m, src)
}
func (m *TableNameSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_TableNameSelectionArchive.Size(m)
}
func (m *TableNameSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableNameSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableNameSelectionArchive proto.InternalMessageInfo

type AutofillSelectionArchive struct {
	SourceCellRange      *CellRange `protobuf:"bytes,1,opt,name=source_cell_range,json=sourceCellRange" json:"source_cell_range,omitempty"`
	TargetCellRange      *CellRange `protobuf:"bytes,2,opt,name=target_cell_range,json=targetCellRange" json:"target_cell_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AutofillSelectionArchive) Reset()         { *m = AutofillSelectionArchive{} }
func (m *AutofillSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*AutofillSelectionArchive) ProtoMessage()    {}
func (*AutofillSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{53}
}

func (m *AutofillSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutofillSelectionArchive.Unmarshal(m, b)
}
func (m *AutofillSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutofillSelectionArchive.Marshal(b, m, deterministic)
}
func (m *AutofillSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutofillSelectionArchive.Merge(m, src)
}
func (m *AutofillSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_AutofillSelectionArchive.Size(m)
}
func (m *AutofillSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_AutofillSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_AutofillSelectionArchive proto.InternalMessageInfo

func (m *AutofillSelectionArchive) GetSourceCellRange() *CellRange {
	if m != nil {
		return m.SourceCellRange
	}
	return nil
}

func (m *AutofillSelectionArchive) GetTargetCellRange() *CellRange {
	if m != nil {
		return m.TargetCellRange
	}
	return nil
}

type FilterRuleArchive struct {
	Predicate            *FormulaPredicateArchive `protobuf:"bytes,1,req,name=predicate" json:"predicate,omitempty"`
	Disabled             *bool                    `protobuf:"varint,2,opt,name=disabled" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FilterRuleArchive) Reset()         { *m = FilterRuleArchive{} }
func (m *FilterRuleArchive) String() string { return proto.CompactTextString(m) }
func (*FilterRuleArchive) ProtoMessage()    {}
func (*FilterRuleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{54}
}

func (m *FilterRuleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterRuleArchive.Unmarshal(m, b)
}
func (m *FilterRuleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterRuleArchive.Marshal(b, m, deterministic)
}
func (m *FilterRuleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterRuleArchive.Merge(m, src)
}
func (m *FilterRuleArchive) XXX_Size() int {
	return xxx_messageInfo_FilterRuleArchive.Size(m)
}
func (m *FilterRuleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterRuleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FilterRuleArchive proto.InternalMessageInfo

func (m *FilterRuleArchive) GetPredicate() *FormulaPredicateArchive {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *FilterRuleArchive) GetDisabled() bool {
	if m != nil && m.Disabled != nil {
		return *m.Disabled
	}
	return false
}

type TableStyleArchive struct {
	Super                *TSS.StyleArchive            `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OverrideCount        *uint32                      `protobuf:"varint,10,opt,name=override_count,json=overrideCount,def=0" json:"override_count,omitempty"`
	TableProperties      *TableStylePropertiesArchive `protobuf:"bytes,11,opt,name=table_properties,json=tableProperties" json:"table_properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TableStyleArchive) Reset()         { *m = TableStyleArchive{} }
func (m *TableStyleArchive) String() string { return proto.CompactTextString(m) }
func (*TableStyleArchive) ProtoMessage()    {}
func (*TableStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{55}
}

func (m *TableStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableStyleArchive.Unmarshal(m, b)
}
func (m *TableStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableStyleArchive.Marshal(b, m, deterministic)
}
func (m *TableStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableStyleArchive.Merge(m, src)
}
func (m *TableStyleArchive) XXX_Size() int {
	return xxx_messageInfo_TableStyleArchive.Size(m)
}
func (m *TableStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TableStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TableStyleArchive proto.InternalMessageInfo

const Default_TableStyleArchive_OverrideCount uint32 = 0

func (m *TableStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *TableStyleArchive) GetOverrideCount() uint32 {
	if m != nil && m.OverrideCount != nil {
		return *m.OverrideCount
	}
	return Default_TableStyleArchive_OverrideCount
}

func (m *TableStyleArchive) GetTableProperties() *TableStylePropertiesArchive {
	if m != nil {
		return m.TableProperties
	}
	return nil
}

type CellStyleArchive struct {
	Super                *TSS.StyleArchive           `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OverrideCount        *uint32                     `protobuf:"varint,10,opt,name=override_count,json=overrideCount,def=0" json:"override_count,omitempty"`
	CellProperties       *CellStylePropertiesArchive `protobuf:"bytes,11,opt,name=cell_properties,json=cellProperties" json:"cell_properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CellStyleArchive) Reset()         { *m = CellStyleArchive{} }
func (m *CellStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CellStyleArchive) ProtoMessage()    {}
func (*CellStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{56}
}

func (m *CellStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellStyleArchive.Unmarshal(m, b)
}
func (m *CellStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellStyleArchive.Marshal(b, m, deterministic)
}
func (m *CellStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellStyleArchive.Merge(m, src)
}
func (m *CellStyleArchive) XXX_Size() int {
	return xxx_messageInfo_CellStyleArchive.Size(m)
}
func (m *CellStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellStyleArchive proto.InternalMessageInfo

const Default_CellStyleArchive_OverrideCount uint32 = 0

func (m *CellStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CellStyleArchive) GetOverrideCount() uint32 {
	if m != nil && m.OverrideCount != nil {
		return *m.OverrideCount
	}
	return Default_CellStyleArchive_OverrideCount
}

func (m *CellStyleArchive) GetCellProperties() *CellStylePropertiesArchive {
	if m != nil {
		return m.CellProperties
	}
	return nil
}

type FormulaPredicateArchive struct {
	Formula              *TSCE.FormulaArchive                          `protobuf:"bytes,1,req,name=formula" json:"formula,omitempty"`
	PredicateType        *FormulaPredicateArchive_FormulaPredicateType `protobuf:"varint,2,req,name=predicate_type,json=predicateType,enum=TST.FormulaPredicateArchive_FormulaPredicateType" json:"predicate_type,omitempty"`
	Qualifier1           *FormulaPredicateArchive_QualifierType        `protobuf:"varint,3,req,name=qualifier1,enum=TST.FormulaPredicateArchive_QualifierType" json:"qualifier1,omitempty"`
	Qualifier2           *FormulaPredicateArchive_QualifierType        `protobuf:"varint,4,req,name=qualifier2,enum=TST.FormulaPredicateArchive_QualifierType" json:"qualifier2,omitempty"`
	ParamIndex1          *int32                                        `protobuf:"varint,5,req,name=param_index1,json=paramIndex1" json:"param_index1,omitempty"`
	ParamIndex2          *int32                                        `protobuf:"varint,6,req,name=param_index2,json=paramIndex2" json:"param_index2,omitempty"`
	ParamIndex0          *int32                                        `protobuf:"varint,7,req,name=param_index0,json=paramIndex0" json:"param_index0,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *FormulaPredicateArchive) Reset()         { *m = FormulaPredicateArchive{} }
func (m *FormulaPredicateArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaPredicateArchive) ProtoMessage()    {}
func (*FormulaPredicateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{57}
}

func (m *FormulaPredicateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaPredicateArchive.Unmarshal(m, b)
}
func (m *FormulaPredicateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaPredicateArchive.Marshal(b, m, deterministic)
}
func (m *FormulaPredicateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaPredicateArchive.Merge(m, src)
}
func (m *FormulaPredicateArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaPredicateArchive.Size(m)
}
func (m *FormulaPredicateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaPredicateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaPredicateArchive proto.InternalMessageInfo

func (m *FormulaPredicateArchive) GetFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

func (m *FormulaPredicateArchive) GetPredicateType() FormulaPredicateArchive_FormulaPredicateType {
	if m != nil && m.PredicateType != nil {
		return *m.PredicateType
	}
	return FormulaPredicateArchive_PredNone
}

func (m *FormulaPredicateArchive) GetQualifier1() FormulaPredicateArchive_QualifierType {
	if m != nil && m.Qualifier1 != nil {
		return *m.Qualifier1
	}
	return FormulaPredicateArchive_QualNone
}

func (m *FormulaPredicateArchive) GetQualifier2() FormulaPredicateArchive_QualifierType {
	if m != nil && m.Qualifier2 != nil {
		return *m.Qualifier2
	}
	return FormulaPredicateArchive_QualNone
}

func (m *FormulaPredicateArchive) GetParamIndex1() int32 {
	if m != nil && m.ParamIndex1 != nil {
		return *m.ParamIndex1
	}
	return 0
}

func (m *FormulaPredicateArchive) GetParamIndex2() int32 {
	if m != nil && m.ParamIndex2 != nil {
		return *m.ParamIndex2
	}
	return 0
}

func (m *FormulaPredicateArchive) GetParamIndex0() int32 {
	if m != nil && m.ParamIndex0 != nil {
		return *m.ParamIndex0
	}
	return 0
}

type ConditionalStyleSetArchive struct {
	RuleCount            *uint32                                            `protobuf:"varint,1,req,name=ruleCount" json:"ruleCount,omitempty"`
	Rules                []*ConditionalStyleSetArchive_ConditionalStyleRule `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *ConditionalStyleSetArchive) Reset()         { *m = ConditionalStyleSetArchive{} }
func (m *ConditionalStyleSetArchive) String() string { return proto.CompactTextString(m) }
func (*ConditionalStyleSetArchive) ProtoMessage()    {}
func (*ConditionalStyleSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{58}
}

func (m *ConditionalStyleSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConditionalStyleSetArchive.Unmarshal(m, b)
}
func (m *ConditionalStyleSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConditionalStyleSetArchive.Marshal(b, m, deterministic)
}
func (m *ConditionalStyleSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConditionalStyleSetArchive.Merge(m, src)
}
func (m *ConditionalStyleSetArchive) XXX_Size() int {
	return xxx_messageInfo_ConditionalStyleSetArchive.Size(m)
}
func (m *ConditionalStyleSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ConditionalStyleSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ConditionalStyleSetArchive proto.InternalMessageInfo

func (m *ConditionalStyleSetArchive) GetRuleCount() uint32 {
	if m != nil && m.RuleCount != nil {
		return *m.RuleCount
	}
	return 0
}

func (m *ConditionalStyleSetArchive) GetRules() []*ConditionalStyleSetArchive_ConditionalStyleRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type ConditionalStyleSetArchive_ConditionalStyleRule struct {
	Predicate            *FormulaPredicateArchive `protobuf:"bytes,1,req,name=predicate" json:"predicate,omitempty"`
	CellStyle            *TSP.Reference           `protobuf:"bytes,2,req,name=cell_style,json=cellStyle" json:"cell_style,omitempty"`
	TextStyle            *TSP.Reference           `protobuf:"bytes,3,req,name=text_style,json=textStyle" json:"text_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ConditionalStyleSetArchive_ConditionalStyleRule) Reset() {
	*m = ConditionalStyleSetArchive_ConditionalStyleRule{}
}
func (m *ConditionalStyleSetArchive_ConditionalStyleRule) String() string {
	return proto.CompactTextString(m)
}
func (*ConditionalStyleSetArchive_ConditionalStyleRule) ProtoMessage() {}
func (*ConditionalStyleSetArchive_ConditionalStyleRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{58, 0}
}

func (m *ConditionalStyleSetArchive_ConditionalStyleRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule.Unmarshal(m, b)
}
func (m *ConditionalStyleSetArchive_ConditionalStyleRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule.Marshal(b, m, deterministic)
}
func (m *ConditionalStyleSetArchive_ConditionalStyleRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule.Merge(m, src)
}
func (m *ConditionalStyleSetArchive_ConditionalStyleRule) XXX_Size() int {
	return xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule.Size(m)
}
func (m *ConditionalStyleSetArchive_ConditionalStyleRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule.DiscardUnknown(m)
}

var xxx_messageInfo_ConditionalStyleSetArchive_ConditionalStyleRule proto.InternalMessageInfo

func (m *ConditionalStyleSetArchive_ConditionalStyleRule) GetPredicate() *FormulaPredicateArchive {
	if m != nil {
		return m.Predicate
	}
	return nil
}

func (m *ConditionalStyleSetArchive_ConditionalStyleRule) GetCellStyle() *TSP.Reference {
	if m != nil {
		return m.CellStyle
	}
	return nil
}

func (m *ConditionalStyleSetArchive_ConditionalStyleRule) GetTextStyle() *TSP.Reference {
	if m != nil {
		return m.TextStyle
	}
	return nil
}

type FilterSetArchive struct {
	Type                         *FilterSetArchive_FilterSetType `protobuf:"varint,1,opt,name=type,enum=TST.FilterSetArchive_FilterSetType,def=0" json:"type,omitempty"`
	IsEnabled                    *bool                           `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled,def=1" json:"is_enabled,omitempty"`
	FilterRules                  []*FilterRuleArchive            `protobuf:"bytes,3,rep,name=filter_rules,json=filterRules" json:"filter_rules,omitempty"`
	NeedsFormulaRewriteForImport *bool                           `protobuf:"varint,4,opt,name=needs_formula_rewrite_for_import,json=needsFormulaRewriteForImport,def=0" json:"needs_formula_rewrite_for_import,omitempty"`
	FilterOffsets                []uint32                        `protobuf:"varint,5,rep,name=filter_offsets,json=filterOffsets" json:"filter_offsets,omitempty"`
	FilterEnabled                []bool                          `protobuf:"varint,6,rep,name=filter_enabled,json=filterEnabled" json:"filter_enabled,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                        `json:"-"`
	XXX_unrecognized             []byte                          `json:"-"`
	XXX_sizecache                int32                           `json:"-"`
}

func (m *FilterSetArchive) Reset()         { *m = FilterSetArchive{} }
func (m *FilterSetArchive) String() string { return proto.CompactTextString(m) }
func (*FilterSetArchive) ProtoMessage()    {}
func (*FilterSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{59}
}

func (m *FilterSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterSetArchive.Unmarshal(m, b)
}
func (m *FilterSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterSetArchive.Marshal(b, m, deterministic)
}
func (m *FilterSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterSetArchive.Merge(m, src)
}
func (m *FilterSetArchive) XXX_Size() int {
	return xxx_messageInfo_FilterSetArchive.Size(m)
}
func (m *FilterSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FilterSetArchive proto.InternalMessageInfo

const Default_FilterSetArchive_Type FilterSetArchive_FilterSetType = FilterSetArchive_FilterSetArchiveTypeAll
const Default_FilterSetArchive_IsEnabled bool = true
const Default_FilterSetArchive_NeedsFormulaRewriteForImport bool = false

func (m *FilterSetArchive) GetType() FilterSetArchive_FilterSetType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_FilterSetArchive_Type
}

func (m *FilterSetArchive) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return Default_FilterSetArchive_IsEnabled
}

func (m *FilterSetArchive) GetFilterRules() []*FilterRuleArchive {
	if m != nil {
		return m.FilterRules
	}
	return nil
}

func (m *FilterSetArchive) GetNeedsFormulaRewriteForImport() bool {
	if m != nil && m.NeedsFormulaRewriteForImport != nil {
		return *m.NeedsFormulaRewriteForImport
	}
	return Default_FilterSetArchive_NeedsFormulaRewriteForImport
}

func (m *FilterSetArchive) GetFilterOffsets() []uint32 {
	if m != nil {
		return m.FilterOffsets
	}
	return nil
}

func (m *FilterSetArchive) GetFilterEnabled() []bool {
	if m != nil {
		return m.FilterEnabled
	}
	return nil
}

type HiddenStateExtentArchive struct {
	HiddenStateExtentUid            *TSP.UUID                                      `protobuf:"bytes,1,req,name=hidden_state_extent_uid,json=hiddenStateExtentUid" json:"hidden_state_extent_uid,omitempty"`
	HiddenStates                    []*HiddenStateExtentArchive_RowOrColumnState   `protobuf:"bytes,2,rep,name=hidden_states,json=hiddenStates" json:"hidden_states,omitempty"`
	RowOrColumnDirection            *HiddenStateExtentArchive_RowOrColumnDirection `protobuf:"varint,3,req,name=row_or_column_direction,json=rowOrColumnDirection,enum=TST.HiddenStateExtentArchive_RowOrColumnDirection" json:"row_or_column_direction,omitempty"`
	ThresholdValue                  []*TSCE.CellValueArchive                       `protobuf:"bytes,5,rep,name=threshold_value,json=thresholdValue" json:"threshold_value,omitempty"`
	NeedsToUpdateFilterSetForImport *bool                                          `protobuf:"varint,6,opt,name=needs_to_update_filter_set_for_import,json=needsToUpdateFilterSetForImport,def=0" json:"needs_to_update_filter_set_for_import,omitempty"`
	CollapsedGroupUids              []*TSP.UUID                                    `protobuf:"bytes,7,rep,name=collapsed_group_uids,json=collapsedGroupUids" json:"collapsed_group_uids,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                       `json:"-"`
	XXX_unrecognized                []byte                                         `json:"-"`
	XXX_sizecache                   int32                                          `json:"-"`
}

func (m *HiddenStateExtentArchive) Reset()         { *m = HiddenStateExtentArchive{} }
func (m *HiddenStateExtentArchive) String() string { return proto.CompactTextString(m) }
func (*HiddenStateExtentArchive) ProtoMessage()    {}
func (*HiddenStateExtentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{60}
}

func (m *HiddenStateExtentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenStateExtentArchive.Unmarshal(m, b)
}
func (m *HiddenStateExtentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenStateExtentArchive.Marshal(b, m, deterministic)
}
func (m *HiddenStateExtentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenStateExtentArchive.Merge(m, src)
}
func (m *HiddenStateExtentArchive) XXX_Size() int {
	return xxx_messageInfo_HiddenStateExtentArchive.Size(m)
}
func (m *HiddenStateExtentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenStateExtentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenStateExtentArchive proto.InternalMessageInfo

const Default_HiddenStateExtentArchive_NeedsToUpdateFilterSetForImport bool = false

func (m *HiddenStateExtentArchive) GetHiddenStateExtentUid() *TSP.UUID {
	if m != nil {
		return m.HiddenStateExtentUid
	}
	return nil
}

func (m *HiddenStateExtentArchive) GetHiddenStates() []*HiddenStateExtentArchive_RowOrColumnState {
	if m != nil {
		return m.HiddenStates
	}
	return nil
}

func (m *HiddenStateExtentArchive) GetRowOrColumnDirection() HiddenStateExtentArchive_RowOrColumnDirection {
	if m != nil && m.RowOrColumnDirection != nil {
		return *m.RowOrColumnDirection
	}
	return HiddenStateExtentArchive_ColumnDirection
}

func (m *HiddenStateExtentArchive) GetThresholdValue() []*TSCE.CellValueArchive {
	if m != nil {
		return m.ThresholdValue
	}
	return nil
}

func (m *HiddenStateExtentArchive) GetNeedsToUpdateFilterSetForImport() bool {
	if m != nil && m.NeedsToUpdateFilterSetForImport != nil {
		return *m.NeedsToUpdateFilterSetForImport
	}
	return Default_HiddenStateExtentArchive_NeedsToUpdateFilterSetForImport
}

func (m *HiddenStateExtentArchive) GetCollapsedGroupUids() []*TSP.UUID {
	if m != nil {
		return m.CollapsedGroupUids
	}
	return nil
}

type HiddenStateExtentArchive_RowOrColumnState struct {
	RowOrColumnUid       *TSP.UUID `protobuf:"bytes,1,req,name=row_or_column_uid,json=rowOrColumnUid" json:"row_or_column_uid,omitempty"`
	UserHidden           *bool     `protobuf:"varint,2,opt,name=user_hidden,json=userHidden" json:"user_hidden,omitempty"`
	Filtered             *bool     `protobuf:"varint,3,opt,name=filtered" json:"filtered,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HiddenStateExtentArchive_RowOrColumnState) Reset() {
	*m = HiddenStateExtentArchive_RowOrColumnState{}
}
func (m *HiddenStateExtentArchive_RowOrColumnState) String() string { return proto.CompactTextString(m) }
func (*HiddenStateExtentArchive_RowOrColumnState) ProtoMessage()    {}
func (*HiddenStateExtentArchive_RowOrColumnState) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{60, 0}
}

func (m *HiddenStateExtentArchive_RowOrColumnState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState.Unmarshal(m, b)
}
func (m *HiddenStateExtentArchive_RowOrColumnState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState.Marshal(b, m, deterministic)
}
func (m *HiddenStateExtentArchive_RowOrColumnState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState.Merge(m, src)
}
func (m *HiddenStateExtentArchive_RowOrColumnState) XXX_Size() int {
	return xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState.Size(m)
}
func (m *HiddenStateExtentArchive_RowOrColumnState) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenStateExtentArchive_RowOrColumnState proto.InternalMessageInfo

func (m *HiddenStateExtentArchive_RowOrColumnState) GetRowOrColumnUid() *TSP.UUID {
	if m != nil {
		return m.RowOrColumnUid
	}
	return nil
}

func (m *HiddenStateExtentArchive_RowOrColumnState) GetUserHidden() bool {
	if m != nil && m.UserHidden != nil {
		return *m.UserHidden
	}
	return false
}

func (m *HiddenStateExtentArchive_RowOrColumnState) GetFiltered() bool {
	if m != nil && m.Filtered != nil {
		return *m.Filtered
	}
	return false
}

type HiddenStatesArchive struct {
	HiddenStatesUid         *TSP.UUID                 `protobuf:"bytes,1,req,name=hidden_states_uid,json=hiddenStatesUid" json:"hidden_states_uid,omitempty"`
	ColumnHiddenStateExtent *HiddenStateExtentArchive `protobuf:"bytes,2,req,name=column_hidden_state_extent,json=columnHiddenStateExtent" json:"column_hidden_state_extent,omitempty"`
	RowHiddenStateExtent    *HiddenStateExtentArchive `protobuf:"bytes,3,req,name=row_hidden_state_extent,json=rowHiddenStateExtent" json:"row_hidden_state_extent,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *HiddenStatesArchive) Reset()         { *m = HiddenStatesArchive{} }
func (m *HiddenStatesArchive) String() string { return proto.CompactTextString(m) }
func (*HiddenStatesArchive) ProtoMessage()    {}
func (*HiddenStatesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{61}
}

func (m *HiddenStatesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenStatesArchive.Unmarshal(m, b)
}
func (m *HiddenStatesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenStatesArchive.Marshal(b, m, deterministic)
}
func (m *HiddenStatesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenStatesArchive.Merge(m, src)
}
func (m *HiddenStatesArchive) XXX_Size() int {
	return xxx_messageInfo_HiddenStatesArchive.Size(m)
}
func (m *HiddenStatesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenStatesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenStatesArchive proto.InternalMessageInfo

func (m *HiddenStatesArchive) GetHiddenStatesUid() *TSP.UUID {
	if m != nil {
		return m.HiddenStatesUid
	}
	return nil
}

func (m *HiddenStatesArchive) GetColumnHiddenStateExtent() *HiddenStateExtentArchive {
	if m != nil {
		return m.ColumnHiddenStateExtent
	}
	return nil
}

func (m *HiddenStatesArchive) GetRowHiddenStateExtent() *HiddenStateExtentArchive {
	if m != nil {
		return m.RowHiddenStateExtent
	}
	return nil
}

type HiddenStatesOwnerArchive struct {
	OwnerUid             *TSP.UUID              `protobuf:"bytes,1,req,name=owner_uid,json=ownerUid" json:"owner_uid,omitempty"`
	HiddenStates         []*HiddenStatesArchive `protobuf:"bytes,2,rep,name=hidden_states,json=hiddenStates" json:"hidden_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HiddenStatesOwnerArchive) Reset()         { *m = HiddenStatesOwnerArchive{} }
func (m *HiddenStatesOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*HiddenStatesOwnerArchive) ProtoMessage()    {}
func (*HiddenStatesOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{62}
}

func (m *HiddenStatesOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenStatesOwnerArchive.Unmarshal(m, b)
}
func (m *HiddenStatesOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenStatesOwnerArchive.Marshal(b, m, deterministic)
}
func (m *HiddenStatesOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenStatesOwnerArchive.Merge(m, src)
}
func (m *HiddenStatesOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_HiddenStatesOwnerArchive.Size(m)
}
func (m *HiddenStatesOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenStatesOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenStatesOwnerArchive proto.InternalMessageInfo

func (m *HiddenStatesOwnerArchive) GetOwnerUid() *TSP.UUID {
	if m != nil {
		return m.OwnerUid
	}
	return nil
}

func (m *HiddenStatesOwnerArchive) GetHiddenStates() []*HiddenStatesArchive {
	if m != nil {
		return m.HiddenStates
	}
	return nil
}

type ExpandCollapseStateArchive struct {
	UidsCollapsed        []*TSP.UUID `protobuf:"bytes,1,rep,name=uids_collapsed,json=uidsCollapsed" json:"uids_collapsed,omitempty"`
	UidsExpanded         []*TSP.UUID `protobuf:"bytes,2,rep,name=uids_expanded,json=uidsExpanded" json:"uids_expanded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ExpandCollapseStateArchive) Reset()         { *m = ExpandCollapseStateArchive{} }
func (m *ExpandCollapseStateArchive) String() string { return proto.CompactTextString(m) }
func (*ExpandCollapseStateArchive) ProtoMessage()    {}
func (*ExpandCollapseStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{63}
}

func (m *ExpandCollapseStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpandCollapseStateArchive.Unmarshal(m, b)
}
func (m *ExpandCollapseStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpandCollapseStateArchive.Marshal(b, m, deterministic)
}
func (m *ExpandCollapseStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpandCollapseStateArchive.Merge(m, src)
}
func (m *ExpandCollapseStateArchive) XXX_Size() int {
	return xxx_messageInfo_ExpandCollapseStateArchive.Size(m)
}
func (m *ExpandCollapseStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpandCollapseStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpandCollapseStateArchive proto.InternalMessageInfo

func (m *ExpandCollapseStateArchive) GetUidsCollapsed() []*TSP.UUID {
	if m != nil {
		return m.UidsCollapsed
	}
	return nil
}

func (m *ExpandCollapseStateArchive) GetUidsExpanded() []*TSP.UUID {
	if m != nil {
		return m.UidsExpanded
	}
	return nil
}

type TokenAttachmentArchive struct {
	Super                *TSWP.UIGraphicalAttachment `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ExpressionNode       *TSP.Reference              `protobuf:"bytes,2,opt,name=expressionNode" json:"expressionNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TokenAttachmentArchive) Reset()         { *m = TokenAttachmentArchive{} }
func (m *TokenAttachmentArchive) String() string { return proto.CompactTextString(m) }
func (*TokenAttachmentArchive) ProtoMessage()    {}
func (*TokenAttachmentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{64}
}

func (m *TokenAttachmentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenAttachmentArchive.Unmarshal(m, b)
}
func (m *TokenAttachmentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenAttachmentArchive.Marshal(b, m, deterministic)
}
func (m *TokenAttachmentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenAttachmentArchive.Merge(m, src)
}
func (m *TokenAttachmentArchive) XXX_Size() int {
	return xxx_messageInfo_TokenAttachmentArchive.Size(m)
}
func (m *TokenAttachmentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenAttachmentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_TokenAttachmentArchive proto.InternalMessageInfo

func (m *TokenAttachmentArchive) GetSuper() *TSWP.UIGraphicalAttachment {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *TokenAttachmentArchive) GetExpressionNode() *TSP.Reference {
	if m != nil {
		return m.ExpressionNode
	}
	return nil
}

type FormulaArchive struct {
	ExpressionTree       *TSP.Reference `protobuf:"bytes,1,opt,name=expressionTree" json:"expressionTree,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FormulaArchive) Reset()         { *m = FormulaArchive{} }
func (m *FormulaArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaArchive) ProtoMessage()    {}
func (*FormulaArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{65}
}

func (m *FormulaArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaArchive.Unmarshal(m, b)
}
func (m *FormulaArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaArchive.Marshal(b, m, deterministic)
}
func (m *FormulaArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaArchive.Merge(m, src)
}
func (m *FormulaArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaArchive.Size(m)
}
func (m *FormulaArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaArchive proto.InternalMessageInfo

func (m *FormulaArchive) GetExpressionTree() *TSP.Reference {
	if m != nil {
		return m.ExpressionTree
	}
	return nil
}

type ExpressionNodeArchive struct {
	Children             []*TSP.Reference `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
	FirstIndex           *uint64          `protobuf:"varint,2,opt,name=first_index,json=firstIndex,def=0" json:"first_index,omitempty"`
	LastIndex            *uint64          `protobuf:"varint,3,opt,name=last_index,json=lastIndex,def=0" json:"last_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ExpressionNodeArchive) Reset()         { *m = ExpressionNodeArchive{} }
func (m *ExpressionNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ExpressionNodeArchive) ProtoMessage()    {}
func (*ExpressionNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{66}
}

func (m *ExpressionNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpressionNodeArchive.Unmarshal(m, b)
}
func (m *ExpressionNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpressionNodeArchive.Marshal(b, m, deterministic)
}
func (m *ExpressionNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressionNodeArchive.Merge(m, src)
}
func (m *ExpressionNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ExpressionNodeArchive.Size(m)
}
func (m *ExpressionNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressionNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressionNodeArchive proto.InternalMessageInfo

const Default_ExpressionNodeArchive_FirstIndex uint64 = 0
const Default_ExpressionNodeArchive_LastIndex uint64 = 0

func (m *ExpressionNodeArchive) GetChildren() []*TSP.Reference {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *ExpressionNodeArchive) GetFirstIndex() uint64 {
	if m != nil && m.FirstIndex != nil {
		return *m.FirstIndex
	}
	return Default_ExpressionNodeArchive_FirstIndex
}

func (m *ExpressionNodeArchive) GetLastIndex() uint64 {
	if m != nil && m.LastIndex != nil {
		return *m.LastIndex
	}
	return Default_ExpressionNodeArchive_LastIndex
}

type BooleanNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Value                *bool                  `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BooleanNodeArchive) Reset()         { *m = BooleanNodeArchive{} }
func (m *BooleanNodeArchive) String() string { return proto.CompactTextString(m) }
func (*BooleanNodeArchive) ProtoMessage()    {}
func (*BooleanNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{67}
}

func (m *BooleanNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanNodeArchive.Unmarshal(m, b)
}
func (m *BooleanNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanNodeArchive.Marshal(b, m, deterministic)
}
func (m *BooleanNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanNodeArchive.Merge(m, src)
}
func (m *BooleanNodeArchive) XXX_Size() int {
	return xxx_messageInfo_BooleanNodeArchive.Size(m)
}
func (m *BooleanNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanNodeArchive proto.InternalMessageInfo

func (m *BooleanNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *BooleanNodeArchive) GetValue() bool {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return false
}

type NumberNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Number               *float64               `protobuf:"fixed64,2,req,name=number" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NumberNodeArchive) Reset()         { *m = NumberNodeArchive{} }
func (m *NumberNodeArchive) String() string { return proto.CompactTextString(m) }
func (*NumberNodeArchive) ProtoMessage()    {}
func (*NumberNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{68}
}

func (m *NumberNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberNodeArchive.Unmarshal(m, b)
}
func (m *NumberNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberNodeArchive.Marshal(b, m, deterministic)
}
func (m *NumberNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberNodeArchive.Merge(m, src)
}
func (m *NumberNodeArchive) XXX_Size() int {
	return xxx_messageInfo_NumberNodeArchive.Size(m)
}
func (m *NumberNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_NumberNodeArchive proto.InternalMessageInfo

func (m *NumberNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *NumberNodeArchive) GetNumber() float64 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

type StringNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Value                *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StringNodeArchive) Reset()         { *m = StringNodeArchive{} }
func (m *StringNodeArchive) String() string { return proto.CompactTextString(m) }
func (*StringNodeArchive) ProtoMessage()    {}
func (*StringNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{69}
}

func (m *StringNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringNodeArchive.Unmarshal(m, b)
}
func (m *StringNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringNodeArchive.Marshal(b, m, deterministic)
}
func (m *StringNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringNodeArchive.Merge(m, src)
}
func (m *StringNodeArchive) XXX_Size() int {
	return xxx_messageInfo_StringNodeArchive.Size(m)
}
func (m *StringNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StringNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StringNodeArchive proto.InternalMessageInfo

func (m *StringNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *StringNodeArchive) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type IdentifierNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Identifier           *string                `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	Symbol               *uint32                `protobuf:"varint,3,opt,name=symbol" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *IdentifierNodeArchive) Reset()         { *m = IdentifierNodeArchive{} }
func (m *IdentifierNodeArchive) String() string { return proto.CompactTextString(m) }
func (*IdentifierNodeArchive) ProtoMessage()    {}
func (*IdentifierNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{70}
}

func (m *IdentifierNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifierNodeArchive.Unmarshal(m, b)
}
func (m *IdentifierNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifierNodeArchive.Marshal(b, m, deterministic)
}
func (m *IdentifierNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifierNodeArchive.Merge(m, src)
}
func (m *IdentifierNodeArchive) XXX_Size() int {
	return xxx_messageInfo_IdentifierNodeArchive.Size(m)
}
func (m *IdentifierNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifierNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifierNodeArchive proto.InternalMessageInfo

func (m *IdentifierNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *IdentifierNodeArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *IdentifierNodeArchive) GetSymbol() uint32 {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return 0
}

type ArrayNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Columns              *uint32                `protobuf:"varint,2,opt,name=columns" json:"columns,omitempty"`
	Rows                 *uint32                `protobuf:"varint,3,opt,name=rows" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ArrayNodeArchive) Reset()         { *m = ArrayNodeArchive{} }
func (m *ArrayNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ArrayNodeArchive) ProtoMessage()    {}
func (*ArrayNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{71}
}

func (m *ArrayNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayNodeArchive.Unmarshal(m, b)
}
func (m *ArrayNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayNodeArchive.Marshal(b, m, deterministic)
}
func (m *ArrayNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayNodeArchive.Merge(m, src)
}
func (m *ArrayNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ArrayNodeArchive.Size(m)
}
func (m *ArrayNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayNodeArchive proto.InternalMessageInfo

func (m *ArrayNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ArrayNodeArchive) GetColumns() uint32 {
	if m != nil && m.Columns != nil {
		return *m.Columns
	}
	return 0
}

func (m *ArrayNodeArchive) GetRows() uint32 {
	if m != nil && m.Rows != nil {
		return *m.Rows
	}
	return 0
}

type ListNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListNodeArchive) Reset()         { *m = ListNodeArchive{} }
func (m *ListNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ListNodeArchive) ProtoMessage()    {}
func (*ListNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{72}
}

func (m *ListNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeArchive.Unmarshal(m, b)
}
func (m *ListNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeArchive.Marshal(b, m, deterministic)
}
func (m *ListNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeArchive.Merge(m, src)
}
func (m *ListNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ListNodeArchive.Size(m)
}
func (m *ListNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeArchive proto.InternalMessageInfo

func (m *ListNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type OperatorNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OperatorChar         *uint32                `protobuf:"varint,2,req,name=operatorChar" json:"operatorChar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *OperatorNodeArchive) Reset()         { *m = OperatorNodeArchive{} }
func (m *OperatorNodeArchive) String() string { return proto.CompactTextString(m) }
func (*OperatorNodeArchive) ProtoMessage()    {}
func (*OperatorNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{73}
}

func (m *OperatorNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatorNodeArchive.Unmarshal(m, b)
}
func (m *OperatorNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatorNodeArchive.Marshal(b, m, deterministic)
}
func (m *OperatorNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorNodeArchive.Merge(m, src)
}
func (m *OperatorNodeArchive) XXX_Size() int {
	return xxx_messageInfo_OperatorNodeArchive.Size(m)
}
func (m *OperatorNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorNodeArchive proto.InternalMessageInfo

func (m *OperatorNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *OperatorNodeArchive) GetOperatorChar() uint32 {
	if m != nil && m.OperatorChar != nil {
		return *m.OperatorChar
	}
	return 0
}

type PostfixOperatorNodeArchive struct {
	Super                *OperatorNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PostfixOperatorNodeArchive) Reset()         { *m = PostfixOperatorNodeArchive{} }
func (m *PostfixOperatorNodeArchive) String() string { return proto.CompactTextString(m) }
func (*PostfixOperatorNodeArchive) ProtoMessage()    {}
func (*PostfixOperatorNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{74}
}

func (m *PostfixOperatorNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostfixOperatorNodeArchive.Unmarshal(m, b)
}
func (m *PostfixOperatorNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostfixOperatorNodeArchive.Marshal(b, m, deterministic)
}
func (m *PostfixOperatorNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostfixOperatorNodeArchive.Merge(m, src)
}
func (m *PostfixOperatorNodeArchive) XXX_Size() int {
	return xxx_messageInfo_PostfixOperatorNodeArchive.Size(m)
}
func (m *PostfixOperatorNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PostfixOperatorNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PostfixOperatorNodeArchive proto.InternalMessageInfo

func (m *PostfixOperatorNodeArchive) GetSuper() *OperatorNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type PrefixOperatorNodeArchive struct {
	Super                *OperatorNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PrefixOperatorNodeArchive) Reset()         { *m = PrefixOperatorNodeArchive{} }
func (m *PrefixOperatorNodeArchive) String() string { return proto.CompactTextString(m) }
func (*PrefixOperatorNodeArchive) ProtoMessage()    {}
func (*PrefixOperatorNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{75}
}

func (m *PrefixOperatorNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrefixOperatorNodeArchive.Unmarshal(m, b)
}
func (m *PrefixOperatorNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrefixOperatorNodeArchive.Marshal(b, m, deterministic)
}
func (m *PrefixOperatorNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrefixOperatorNodeArchive.Merge(m, src)
}
func (m *PrefixOperatorNodeArchive) XXX_Size() int {
	return xxx_messageInfo_PrefixOperatorNodeArchive.Size(m)
}
func (m *PrefixOperatorNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PrefixOperatorNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PrefixOperatorNodeArchive proto.InternalMessageInfo

func (m *PrefixOperatorNodeArchive) GetSuper() *OperatorNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type FunctionNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FunctionIndex        *uint32                `protobuf:"varint,2,req,name=functionIndex" json:"functionIndex,omitempty"`
	InvalidFunctionName  *string                `protobuf:"bytes,3,opt,name=invalidFunctionName" json:"invalidFunctionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FunctionNodeArchive) Reset()         { *m = FunctionNodeArchive{} }
func (m *FunctionNodeArchive) String() string { return proto.CompactTextString(m) }
func (*FunctionNodeArchive) ProtoMessage()    {}
func (*FunctionNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{76}
}

func (m *FunctionNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionNodeArchive.Unmarshal(m, b)
}
func (m *FunctionNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionNodeArchive.Marshal(b, m, deterministic)
}
func (m *FunctionNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionNodeArchive.Merge(m, src)
}
func (m *FunctionNodeArchive) XXX_Size() int {
	return xxx_messageInfo_FunctionNodeArchive.Size(m)
}
func (m *FunctionNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionNodeArchive proto.InternalMessageInfo

func (m *FunctionNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *FunctionNodeArchive) GetFunctionIndex() uint32 {
	if m != nil && m.FunctionIndex != nil {
		return *m.FunctionIndex
	}
	return 0
}

func (m *FunctionNodeArchive) GetInvalidFunctionName() string {
	if m != nil && m.InvalidFunctionName != nil {
		return *m.InvalidFunctionName
	}
	return ""
}

type FunctionEndNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FunctionEndNodeArchive) Reset()         { *m = FunctionEndNodeArchive{} }
func (m *FunctionEndNodeArchive) String() string { return proto.CompactTextString(m) }
func (*FunctionEndNodeArchive) ProtoMessage()    {}
func (*FunctionEndNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{77}
}

func (m *FunctionEndNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionEndNodeArchive.Unmarshal(m, b)
}
func (m *FunctionEndNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionEndNodeArchive.Marshal(b, m, deterministic)
}
func (m *FunctionEndNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionEndNodeArchive.Merge(m, src)
}
func (m *FunctionEndNodeArchive) XXX_Size() int {
	return xxx_messageInfo_FunctionEndNodeArchive.Size(m)
}
func (m *FunctionEndNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionEndNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionEndNodeArchive proto.InternalMessageInfo

func (m *FunctionEndNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type DateNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Value                *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Format               *string                `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DateNodeArchive) Reset()         { *m = DateNodeArchive{} }
func (m *DateNodeArchive) String() string { return proto.CompactTextString(m) }
func (*DateNodeArchive) ProtoMessage()    {}
func (*DateNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{78}
}

func (m *DateNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateNodeArchive.Unmarshal(m, b)
}
func (m *DateNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateNodeArchive.Marshal(b, m, deterministic)
}
func (m *DateNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateNodeArchive.Merge(m, src)
}
func (m *DateNodeArchive) XXX_Size() int {
	return xxx_messageInfo_DateNodeArchive.Size(m)
}
func (m *DateNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DateNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DateNodeArchive proto.InternalMessageInfo

func (m *DateNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DateNodeArchive) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *DateNodeArchive) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

type ReferenceNodeArchive struct {
	Super                *ExpressionNodeArchive         `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	RangeReference       *TSCE.RangeReferenceArchive    `protobuf:"bytes,2,opt,name=rangeReference" json:"rangeReference,omitempty"`
	PreserveFlags        *uint32                        `protobuf:"varint,3,req,name=preserve_flags,json=preserveFlags" json:"preserve_flags,omitempty"`
	HostTableID          *string                        `protobuf:"bytes,4,opt,name=hostTableID" json:"hostTableID,omitempty"`
	HostCellRef          *TSCE.CellReferenceArchive     `protobuf:"bytes,10,opt,name=host_cell_ref,json=hostCellRef" json:"host_cell_ref,omitempty"`
	TableUid             *TSP.UUID                      `protobuf:"bytes,5,opt,name=table_uid,json=tableUid" json:"table_uid,omitempty"`
	RangeTopLeft         *TSP.UUIDCoordArchive          `protobuf:"bytes,6,opt,name=range_top_left,json=rangeTopLeft" json:"range_top_left,omitempty"`
	RangeBottomRight     *TSP.UUIDCoordArchive          `protobuf:"bytes,7,opt,name=range_bottom_right,json=rangeBottomRight" json:"range_bottom_right,omitempty"`
	CategoryRef          *TSCE.CategoryReferenceArchive `protobuf:"bytes,8,opt,name=category_ref,json=categoryRef" json:"category_ref,omitempty"`
	UidRangeRect         *TSP.UUIDRectArchive           `protobuf:"bytes,9,opt,name=uid_range_rect,json=uidRangeRect" json:"uid_range_rect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ReferenceNodeArchive) Reset()         { *m = ReferenceNodeArchive{} }
func (m *ReferenceNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ReferenceNodeArchive) ProtoMessage()    {}
func (*ReferenceNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{79}
}

func (m *ReferenceNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceNodeArchive.Unmarshal(m, b)
}
func (m *ReferenceNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceNodeArchive.Marshal(b, m, deterministic)
}
func (m *ReferenceNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceNodeArchive.Merge(m, src)
}
func (m *ReferenceNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ReferenceNodeArchive.Size(m)
}
func (m *ReferenceNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceNodeArchive proto.InternalMessageInfo

func (m *ReferenceNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ReferenceNodeArchive) GetRangeReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.RangeReference
	}
	return nil
}

func (m *ReferenceNodeArchive) GetPreserveFlags() uint32 {
	if m != nil && m.PreserveFlags != nil {
		return *m.PreserveFlags
	}
	return 0
}

func (m *ReferenceNodeArchive) GetHostTableID() string {
	if m != nil && m.HostTableID != nil {
		return *m.HostTableID
	}
	return ""
}

func (m *ReferenceNodeArchive) GetHostCellRef() *TSCE.CellReferenceArchive {
	if m != nil {
		return m.HostCellRef
	}
	return nil
}

func (m *ReferenceNodeArchive) GetTableUid() *TSP.UUID {
	if m != nil {
		return m.TableUid
	}
	return nil
}

func (m *ReferenceNodeArchive) GetRangeTopLeft() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.RangeTopLeft
	}
	return nil
}

func (m *ReferenceNodeArchive) GetRangeBottomRight() *TSP.UUIDCoordArchive {
	if m != nil {
		return m.RangeBottomRight
	}
	return nil
}

func (m *ReferenceNodeArchive) GetCategoryRef() *TSCE.CategoryReferenceArchive {
	if m != nil {
		return m.CategoryRef
	}
	return nil
}

func (m *ReferenceNodeArchive) GetUidRangeRect() *TSP.UUIDRectArchive {
	if m != nil {
		return m.UidRangeRect
	}
	return nil
}

type DurationNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Timeinterval         *float64               `protobuf:"fixed64,2,req,name=timeinterval" json:"timeinterval,omitempty"`
	Smallest             *uint32                `protobuf:"varint,3,req,name=smallest" json:"smallest,omitempty"`
	Largest              *uint32                `protobuf:"varint,4,req,name=largest" json:"largest,omitempty"`
	Style                *uint32                `protobuf:"varint,5,req,name=style" json:"style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DurationNodeArchive) Reset()         { *m = DurationNodeArchive{} }
func (m *DurationNodeArchive) String() string { return proto.CompactTextString(m) }
func (*DurationNodeArchive) ProtoMessage()    {}
func (*DurationNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{80}
}

func (m *DurationNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DurationNodeArchive.Unmarshal(m, b)
}
func (m *DurationNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DurationNodeArchive.Marshal(b, m, deterministic)
}
func (m *DurationNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DurationNodeArchive.Merge(m, src)
}
func (m *DurationNodeArchive) XXX_Size() int {
	return xxx_messageInfo_DurationNodeArchive.Size(m)
}
func (m *DurationNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DurationNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DurationNodeArchive proto.InternalMessageInfo

func (m *DurationNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DurationNodeArchive) GetTimeinterval() float64 {
	if m != nil && m.Timeinterval != nil {
		return *m.Timeinterval
	}
	return 0
}

func (m *DurationNodeArchive) GetSmallest() uint32 {
	if m != nil && m.Smallest != nil {
		return *m.Smallest
	}
	return 0
}

func (m *DurationNodeArchive) GetLargest() uint32 {
	if m != nil && m.Largest != nil {
		return *m.Largest
	}
	return 0
}

func (m *DurationNodeArchive) GetStyle() uint32 {
	if m != nil && m.Style != nil {
		return *m.Style
	}
	return 0
}

type ArgumentPlaceholderNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	FunctionIndex        *uint32                `protobuf:"varint,2,opt,name=functionIndex" json:"functionIndex,omitempty"`
	ArgumentIndex        *uint32                `protobuf:"varint,3,opt,name=argumentIndex" json:"argumentIndex,omitempty"`
	Mode                 *uint32                `protobuf:"varint,4,opt,name=mode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ArgumentPlaceholderNodeArchive) Reset()         { *m = ArgumentPlaceholderNodeArchive{} }
func (m *ArgumentPlaceholderNodeArchive) String() string { return proto.CompactTextString(m) }
func (*ArgumentPlaceholderNodeArchive) ProtoMessage()    {}
func (*ArgumentPlaceholderNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{81}
}

func (m *ArgumentPlaceholderNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArgumentPlaceholderNodeArchive.Unmarshal(m, b)
}
func (m *ArgumentPlaceholderNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArgumentPlaceholderNodeArchive.Marshal(b, m, deterministic)
}
func (m *ArgumentPlaceholderNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArgumentPlaceholderNodeArchive.Merge(m, src)
}
func (m *ArgumentPlaceholderNodeArchive) XXX_Size() int {
	return xxx_messageInfo_ArgumentPlaceholderNodeArchive.Size(m)
}
func (m *ArgumentPlaceholderNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ArgumentPlaceholderNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ArgumentPlaceholderNodeArchive proto.InternalMessageInfo

func (m *ArgumentPlaceholderNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ArgumentPlaceholderNodeArchive) GetFunctionIndex() uint32 {
	if m != nil && m.FunctionIndex != nil {
		return *m.FunctionIndex
	}
	return 0
}

func (m *ArgumentPlaceholderNodeArchive) GetArgumentIndex() uint32 {
	if m != nil && m.ArgumentIndex != nil {
		return *m.ArgumentIndex
	}
	return 0
}

func (m *ArgumentPlaceholderNodeArchive) GetMode() uint32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

type EmptyExpressionNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EmptyExpressionNodeArchive) Reset()         { *m = EmptyExpressionNodeArchive{} }
func (m *EmptyExpressionNodeArchive) String() string { return proto.CompactTextString(m) }
func (*EmptyExpressionNodeArchive) ProtoMessage()    {}
func (*EmptyExpressionNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{82}
}

func (m *EmptyExpressionNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyExpressionNodeArchive.Unmarshal(m, b)
}
func (m *EmptyExpressionNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyExpressionNodeArchive.Marshal(b, m, deterministic)
}
func (m *EmptyExpressionNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyExpressionNodeArchive.Merge(m, src)
}
func (m *EmptyExpressionNodeArchive) XXX_Size() int {
	return xxx_messageInfo_EmptyExpressionNodeArchive.Size(m)
}
func (m *EmptyExpressionNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyExpressionNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyExpressionNodeArchive proto.InternalMessageInfo

func (m *EmptyExpressionNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type LetNodeArchive struct {
	Super                     *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	WhitespaceAfterLet        *string                `protobuf:"bytes,2,opt,name=whitespace_after_let,json=whitespaceAfterLet" json:"whitespace_after_let,omitempty"`
	WhitespaceAfterIdentifier *string                `protobuf:"bytes,3,opt,name=whitespace_after_identifier,json=whitespaceAfterIdentifier" json:"whitespace_after_identifier,omitempty"`
	WhitespaceAfterEquals     *string                `protobuf:"bytes,4,opt,name=whitespace_after_equals,json=whitespaceAfterEquals" json:"whitespace_after_equals,omitempty"`
	WhitespaceAfterDelimiter  *string                `protobuf:"bytes,5,opt,name=whitespace_after_delimiter,json=whitespaceAfterDelimiter" json:"whitespace_after_delimiter,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}               `json:"-"`
	XXX_unrecognized          []byte                 `json:"-"`
	XXX_sizecache             int32                  `json:"-"`
}

func (m *LetNodeArchive) Reset()         { *m = LetNodeArchive{} }
func (m *LetNodeArchive) String() string { return proto.CompactTextString(m) }
func (*LetNodeArchive) ProtoMessage()    {}
func (*LetNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{83}
}

func (m *LetNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LetNodeArchive.Unmarshal(m, b)
}
func (m *LetNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LetNodeArchive.Marshal(b, m, deterministic)
}
func (m *LetNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LetNodeArchive.Merge(m, src)
}
func (m *LetNodeArchive) XXX_Size() int {
	return xxx_messageInfo_LetNodeArchive.Size(m)
}
func (m *LetNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LetNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LetNodeArchive proto.InternalMessageInfo

func (m *LetNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *LetNodeArchive) GetWhitespaceAfterLet() string {
	if m != nil && m.WhitespaceAfterLet != nil {
		return *m.WhitespaceAfterLet
	}
	return ""
}

func (m *LetNodeArchive) GetWhitespaceAfterIdentifier() string {
	if m != nil && m.WhitespaceAfterIdentifier != nil {
		return *m.WhitespaceAfterIdentifier
	}
	return ""
}

func (m *LetNodeArchive) GetWhitespaceAfterEquals() string {
	if m != nil && m.WhitespaceAfterEquals != nil {
		return *m.WhitespaceAfterEquals
	}
	return ""
}

func (m *LetNodeArchive) GetWhitespaceAfterDelimiter() string {
	if m != nil && m.WhitespaceAfterDelimiter != nil {
		return *m.WhitespaceAfterDelimiter
	}
	return ""
}

type InNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *InNodeArchive) Reset()         { *m = InNodeArchive{} }
func (m *InNodeArchive) String() string { return proto.CompactTextString(m) }
func (*InNodeArchive) ProtoMessage()    {}
func (*InNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{84}
}

func (m *InNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InNodeArchive.Unmarshal(m, b)
}
func (m *InNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InNodeArchive.Marshal(b, m, deterministic)
}
func (m *InNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InNodeArchive.Merge(m, src)
}
func (m *InNodeArchive) XXX_Size() int {
	return xxx_messageInfo_InNodeArchive.Size(m)
}
func (m *InNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_InNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_InNodeArchive proto.InternalMessageInfo

func (m *InNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type VariableNodeArchive struct {
	Super                *ExpressionNodeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Identifier           *string                `protobuf:"bytes,2,req,name=identifier" json:"identifier,omitempty"`
	Symbol               *uint32                `protobuf:"varint,3,req,name=symbol" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VariableNodeArchive) Reset()         { *m = VariableNodeArchive{} }
func (m *VariableNodeArchive) String() string { return proto.CompactTextString(m) }
func (*VariableNodeArchive) ProtoMessage()    {}
func (*VariableNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{85}
}

func (m *VariableNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableNodeArchive.Unmarshal(m, b)
}
func (m *VariableNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableNodeArchive.Marshal(b, m, deterministic)
}
func (m *VariableNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableNodeArchive.Merge(m, src)
}
func (m *VariableNodeArchive) XXX_Size() int {
	return xxx_messageInfo_VariableNodeArchive.Size(m)
}
func (m *VariableNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_VariableNodeArchive proto.InternalMessageInfo

func (m *VariableNodeArchive) GetSuper() *ExpressionNodeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *VariableNodeArchive) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *VariableNodeArchive) GetSymbol() uint32 {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return 0
}

type LayoutHintArchive struct {
	IsValid              *bool      `protobuf:"varint,1,req,name=isValid" json:"isValid,omitempty"`
	CellRange            *CellRange `protobuf:"bytes,2,opt,name=cellRange" json:"cellRange,omitempty"`
	HintID               *CellID    `protobuf:"bytes,3,opt,name=hintID" json:"hintID,omitempty"`
	MaximumSize          *TSP.Size  `protobuf:"bytes,4,req,name=maximumSize" json:"maximumSize,omitempty"`
	PartitionPosition    *uint32    `protobuf:"varint,5,req,name=partitionPosition" json:"partitionPosition,omitempty"`
	Horizontal           *bool      `protobuf:"varint,6,req,name=horizontal" json:"horizontal,omitempty"`
	EffectiveSize        *TSP.Size  `protobuf:"bytes,7,opt,name=effectiveSize" json:"effectiveSize,omitempty"`
	PartitioningPass     *uint32    `protobuf:"varint,8,opt,name=partitioningPass" json:"partitioningPass,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LayoutHintArchive) Reset()         { *m = LayoutHintArchive{} }
func (m *LayoutHintArchive) String() string { return proto.CompactTextString(m) }
func (*LayoutHintArchive) ProtoMessage()    {}
func (*LayoutHintArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{86}
}

func (m *LayoutHintArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LayoutHintArchive.Unmarshal(m, b)
}
func (m *LayoutHintArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LayoutHintArchive.Marshal(b, m, deterministic)
}
func (m *LayoutHintArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LayoutHintArchive.Merge(m, src)
}
func (m *LayoutHintArchive) XXX_Size() int {
	return xxx_messageInfo_LayoutHintArchive.Size(m)
}
func (m *LayoutHintArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_LayoutHintArchive.DiscardUnknown(m)
}

var xxx_messageInfo_LayoutHintArchive proto.InternalMessageInfo

func (m *LayoutHintArchive) GetIsValid() bool {
	if m != nil && m.IsValid != nil {
		return *m.IsValid
	}
	return false
}

func (m *LayoutHintArchive) GetCellRange() *CellRange {
	if m != nil {
		return m.CellRange
	}
	return nil
}

func (m *LayoutHintArchive) GetHintID() *CellID {
	if m != nil {
		return m.HintID
	}
	return nil
}

func (m *LayoutHintArchive) GetMaximumSize() *TSP.Size {
	if m != nil {
		return m.MaximumSize
	}
	return nil
}

func (m *LayoutHintArchive) GetPartitionPosition() uint32 {
	if m != nil && m.PartitionPosition != nil {
		return *m.PartitionPosition
	}
	return 0
}

func (m *LayoutHintArchive) GetHorizontal() bool {
	if m != nil && m.Horizontal != nil {
		return *m.Horizontal
	}
	return false
}

func (m *LayoutHintArchive) GetEffectiveSize() *TSP.Size {
	if m != nil {
		return m.EffectiveSize
	}
	return nil
}

func (m *LayoutHintArchive) GetPartitioningPass() uint32 {
	if m != nil && m.PartitioningPass != nil {
		return *m.PartitioningPass
	}
	return 0
}

type CompletionTokenAttachmentArchive struct {
	Super                *TokenAttachmentArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	CompletionText       *string                 `protobuf:"bytes,2,opt,name=completionText" json:"completionText,omitempty"`
	CaretPosition        *uint32                 `protobuf:"varint,3,opt,name=caretPosition" json:"caretPosition,omitempty"`
	PrefixStart          *uint32                 `protobuf:"varint,4,opt,name=prefixStart" json:"prefixStart,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CompletionTokenAttachmentArchive) Reset()         { *m = CompletionTokenAttachmentArchive{} }
func (m *CompletionTokenAttachmentArchive) String() string { return proto.CompactTextString(m) }
func (*CompletionTokenAttachmentArchive) ProtoMessage()    {}
func (*CompletionTokenAttachmentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{87}
}

func (m *CompletionTokenAttachmentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompletionTokenAttachmentArchive.Unmarshal(m, b)
}
func (m *CompletionTokenAttachmentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompletionTokenAttachmentArchive.Marshal(b, m, deterministic)
}
func (m *CompletionTokenAttachmentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompletionTokenAttachmentArchive.Merge(m, src)
}
func (m *CompletionTokenAttachmentArchive) XXX_Size() int {
	return xxx_messageInfo_CompletionTokenAttachmentArchive.Size(m)
}
func (m *CompletionTokenAttachmentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CompletionTokenAttachmentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CompletionTokenAttachmentArchive proto.InternalMessageInfo

func (m *CompletionTokenAttachmentArchive) GetSuper() *TokenAttachmentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CompletionTokenAttachmentArchive) GetCompletionText() string {
	if m != nil && m.CompletionText != nil {
		return *m.CompletionText
	}
	return ""
}

func (m *CompletionTokenAttachmentArchive) GetCaretPosition() uint32 {
	if m != nil && m.CaretPosition != nil {
		return *m.CaretPosition
	}
	return 0
}

func (m *CompletionTokenAttachmentArchive) GetPrefixStart() uint32 {
	if m != nil && m.PrefixStart != nil {
		return *m.PrefixStart
	}
	return 0
}

type HiddenStateFormulaOwnerArchive struct {
	OwnerId                         *TSP.CFUUIDArchive       `protobuf:"bytes,1,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	ThresholdValue                  []*TSCE.CellValueArchive `protobuf:"bytes,2,rep,name=threshold_value,json=thresholdValue" json:"threshold_value,omitempty"`
	NeedsToUpdateFilterSetForImport *bool                    `protobuf:"varint,3,opt,name=needs_to_update_filter_set_for_import,json=needsToUpdateFilterSetForImport,def=0" json:"needs_to_update_filter_set_for_import,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                 `json:"-"`
	XXX_unrecognized                []byte                   `json:"-"`
	XXX_sizecache                   int32                    `json:"-"`
}

func (m *HiddenStateFormulaOwnerArchive) Reset()         { *m = HiddenStateFormulaOwnerArchive{} }
func (m *HiddenStateFormulaOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*HiddenStateFormulaOwnerArchive) ProtoMessage()    {}
func (*HiddenStateFormulaOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{88}
}

func (m *HiddenStateFormulaOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiddenStateFormulaOwnerArchive.Unmarshal(m, b)
}
func (m *HiddenStateFormulaOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiddenStateFormulaOwnerArchive.Marshal(b, m, deterministic)
}
func (m *HiddenStateFormulaOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiddenStateFormulaOwnerArchive.Merge(m, src)
}
func (m *HiddenStateFormulaOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_HiddenStateFormulaOwnerArchive.Size(m)
}
func (m *HiddenStateFormulaOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_HiddenStateFormulaOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_HiddenStateFormulaOwnerArchive proto.InternalMessageInfo

const Default_HiddenStateFormulaOwnerArchive_NeedsToUpdateFilterSetForImport bool = false

func (m *HiddenStateFormulaOwnerArchive) GetOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

func (m *HiddenStateFormulaOwnerArchive) GetThresholdValue() []*TSCE.CellValueArchive {
	if m != nil {
		return m.ThresholdValue
	}
	return nil
}

func (m *HiddenStateFormulaOwnerArchive) GetNeedsToUpdateFilterSetForImport() bool {
	if m != nil && m.NeedsToUpdateFilterSetForImport != nil {
		return *m.NeedsToUpdateFilterSetForImport
	}
	return Default_HiddenStateFormulaOwnerArchive_NeedsToUpdateFilterSetForImport
}

type FormulaStoreArchive struct {
	NextFormulaIndex     *uint32                                 `protobuf:"varint,2,req,name=next_formula_index,json=nextFormulaIndex" json:"next_formula_index,omitempty"`
	Formulas             []*FormulaStoreArchive_FormulaStorePair `protobuf:"bytes,3,rep,name=formulas" json:"formulas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *FormulaStoreArchive) Reset()         { *m = FormulaStoreArchive{} }
func (m *FormulaStoreArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaStoreArchive) ProtoMessage()    {}
func (*FormulaStoreArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{89}
}

func (m *FormulaStoreArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaStoreArchive.Unmarshal(m, b)
}
func (m *FormulaStoreArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaStoreArchive.Marshal(b, m, deterministic)
}
func (m *FormulaStoreArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaStoreArchive.Merge(m, src)
}
func (m *FormulaStoreArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaStoreArchive.Size(m)
}
func (m *FormulaStoreArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaStoreArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaStoreArchive proto.InternalMessageInfo

func (m *FormulaStoreArchive) GetNextFormulaIndex() uint32 {
	if m != nil && m.NextFormulaIndex != nil {
		return *m.NextFormulaIndex
	}
	return 0
}

func (m *FormulaStoreArchive) GetFormulas() []*FormulaStoreArchive_FormulaStorePair {
	if m != nil {
		return m.Formulas
	}
	return nil
}

type FormulaStoreArchive_FormulaStorePair struct {
	FormulaIndex         *uint32              `protobuf:"varint,1,req,name=formula_index,json=formulaIndex" json:"formula_index,omitempty"`
	Formula              *TSCE.FormulaArchive `protobuf:"bytes,2,req,name=formula" json:"formula,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FormulaStoreArchive_FormulaStorePair) Reset()         { *m = FormulaStoreArchive_FormulaStorePair{} }
func (m *FormulaStoreArchive_FormulaStorePair) String() string { return proto.CompactTextString(m) }
func (*FormulaStoreArchive_FormulaStorePair) ProtoMessage()    {}
func (*FormulaStoreArchive_FormulaStorePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{89, 0}
}

func (m *FormulaStoreArchive_FormulaStorePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaStoreArchive_FormulaStorePair.Unmarshal(m, b)
}
func (m *FormulaStoreArchive_FormulaStorePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaStoreArchive_FormulaStorePair.Marshal(b, m, deterministic)
}
func (m *FormulaStoreArchive_FormulaStorePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaStoreArchive_FormulaStorePair.Merge(m, src)
}
func (m *FormulaStoreArchive_FormulaStorePair) XXX_Size() int {
	return xxx_messageInfo_FormulaStoreArchive_FormulaStorePair.Size(m)
}
func (m *FormulaStoreArchive_FormulaStorePair) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaStoreArchive_FormulaStorePair.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaStoreArchive_FormulaStorePair proto.InternalMessageInfo

func (m *FormulaStoreArchive_FormulaStorePair) GetFormulaIndex() uint32 {
	if m != nil && m.FormulaIndex != nil {
		return *m.FormulaIndex
	}
	return 0
}

func (m *FormulaStoreArchive_FormulaStorePair) GetFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.Formula
	}
	return nil
}

type MergeOperationArchive struct {
	MergeType            *MergeActionArchive    `protobuf:"varint,1,req,name=merge_type,json=mergeType,enum=TST.MergeActionArchive" json:"merge_type,omitempty"`
	MergeRanges          []*TSP.UUIDRectArchive `protobuf:"bytes,2,rep,name=merge_ranges,json=mergeRanges" json:"merge_ranges,omitempty"`
	MergeFormulas        []*TSCE.FormulaArchive `protobuf:"bytes,3,rep,name=merge_formulas,json=mergeFormulas" json:"merge_formulas,omitempty"`
	MergeFormulaIndexes  []uint32               `protobuf:"varint,4,rep,name=merge_formula_indexes,json=mergeFormulaIndexes" json:"merge_formula_indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MergeOperationArchive) Reset()         { *m = MergeOperationArchive{} }
func (m *MergeOperationArchive) String() string { return proto.CompactTextString(m) }
func (*MergeOperationArchive) ProtoMessage()    {}
func (*MergeOperationArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{90}
}

func (m *MergeOperationArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeOperationArchive.Unmarshal(m, b)
}
func (m *MergeOperationArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeOperationArchive.Marshal(b, m, deterministic)
}
func (m *MergeOperationArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeOperationArchive.Merge(m, src)
}
func (m *MergeOperationArchive) XXX_Size() int {
	return xxx_messageInfo_MergeOperationArchive.Size(m)
}
func (m *MergeOperationArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeOperationArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MergeOperationArchive proto.InternalMessageInfo

func (m *MergeOperationArchive) GetMergeType() MergeActionArchive {
	if m != nil && m.MergeType != nil {
		return *m.MergeType
	}
	return MergeActionArchive_mergeActionInsert
}

func (m *MergeOperationArchive) GetMergeRanges() []*TSP.UUIDRectArchive {
	if m != nil {
		return m.MergeRanges
	}
	return nil
}

func (m *MergeOperationArchive) GetMergeFormulas() []*TSCE.FormulaArchive {
	if m != nil {
		return m.MergeFormulas
	}
	return nil
}

func (m *MergeOperationArchive) GetMergeFormulaIndexes() []uint32 {
	if m != nil {
		return m.MergeFormulaIndexes
	}
	return nil
}

type MergeOwnerArchive struct {
	OwnerId              *TSP.CFUUIDArchive   `protobuf:"bytes,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	FormulaStore         *FormulaStoreArchive `protobuf:"bytes,2,opt,name=formula_store,json=formulaStore" json:"formula_store,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MergeOwnerArchive) Reset()         { *m = MergeOwnerArchive{} }
func (m *MergeOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*MergeOwnerArchive) ProtoMessage()    {}
func (*MergeOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{91}
}

func (m *MergeOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeOwnerArchive.Unmarshal(m, b)
}
func (m *MergeOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeOwnerArchive.Marshal(b, m, deterministic)
}
func (m *MergeOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeOwnerArchive.Merge(m, src)
}
func (m *MergeOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_MergeOwnerArchive.Size(m)
}
func (m *MergeOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MergeOwnerArchive proto.InternalMessageInfo

func (m *MergeOwnerArchive) GetOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

func (m *MergeOwnerArchive) GetFormulaStore() *FormulaStoreArchive {
	if m != nil {
		return m.FormulaStore
	}
	return nil
}

type PencilAnnotationArchive struct {
	TableInfo               *TSP.Reference `protobuf:"bytes,1,opt,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	PencilAnnotationStorage *TSP.Reference `protobuf:"bytes,2,opt,name=pencil_annotation_storage,json=pencilAnnotationStorage" json:"pencil_annotation_storage,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}       `json:"-"`
	XXX_unrecognized        []byte         `json:"-"`
	XXX_sizecache           int32          `json:"-"`
}

func (m *PencilAnnotationArchive) Reset()         { *m = PencilAnnotationArchive{} }
func (m *PencilAnnotationArchive) String() string { return proto.CompactTextString(m) }
func (*PencilAnnotationArchive) ProtoMessage()    {}
func (*PencilAnnotationArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{92}
}

func (m *PencilAnnotationArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PencilAnnotationArchive.Unmarshal(m, b)
}
func (m *PencilAnnotationArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PencilAnnotationArchive.Marshal(b, m, deterministic)
}
func (m *PencilAnnotationArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PencilAnnotationArchive.Merge(m, src)
}
func (m *PencilAnnotationArchive) XXX_Size() int {
	return xxx_messageInfo_PencilAnnotationArchive.Size(m)
}
func (m *PencilAnnotationArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PencilAnnotationArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PencilAnnotationArchive proto.InternalMessageInfo

func (m *PencilAnnotationArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *PencilAnnotationArchive) GetPencilAnnotationStorage() *TSP.Reference {
	if m != nil {
		return m.PencilAnnotationStorage
	}
	return nil
}

type PencilAnnotationOwnerArchive struct {
	OwnerId              *TSP.CFUUIDArchive   `protobuf:"bytes,1,req,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	FormulaStore         *FormulaStoreArchive `protobuf:"bytes,2,opt,name=formula_store,json=formulaStore" json:"formula_store,omitempty"`
	Annotations          []*TSP.Reference     `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PencilAnnotationOwnerArchive) Reset()         { *m = PencilAnnotationOwnerArchive{} }
func (m *PencilAnnotationOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*PencilAnnotationOwnerArchive) ProtoMessage()    {}
func (*PencilAnnotationOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{93}
}

func (m *PencilAnnotationOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PencilAnnotationOwnerArchive.Unmarshal(m, b)
}
func (m *PencilAnnotationOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PencilAnnotationOwnerArchive.Marshal(b, m, deterministic)
}
func (m *PencilAnnotationOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PencilAnnotationOwnerArchive.Merge(m, src)
}
func (m *PencilAnnotationOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_PencilAnnotationOwnerArchive.Size(m)
}
func (m *PencilAnnotationOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PencilAnnotationOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PencilAnnotationOwnerArchive proto.InternalMessageInfo

func (m *PencilAnnotationOwnerArchive) GetOwnerId() *TSP.CFUUIDArchive {
	if m != nil {
		return m.OwnerId
	}
	return nil
}

func (m *PencilAnnotationOwnerArchive) GetFormulaStore() *FormulaStoreArchive {
	if m != nil {
		return m.FormulaStore
	}
	return nil
}

func (m *PencilAnnotationOwnerArchive) GetAnnotations() []*TSP.Reference {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type AccumulatorArchive struct {
	BoolCount             *uint32                `protobuf:"varint,1,opt,name=bool_count,json=boolCount" json:"bool_count,omitempty"`
	BoolTrueCount         *uint32                `protobuf:"varint,12,opt,name=bool_true_count,json=boolTrueCount" json:"bool_true_count,omitempty"`
	NumberCount           *uint32                `protobuf:"varint,2,opt,name=number_count,json=numberCount" json:"number_count,omitempty"`
	DateCount             *uint32                `protobuf:"varint,3,opt,name=date_count,json=dateCount" json:"date_count,omitempty"`
	DurationCount         *uint32                `protobuf:"varint,4,opt,name=duration_count,json=durationCount" json:"duration_count,omitempty"`
	StringCount           *uint32                `protobuf:"varint,5,opt,name=string_count,json=stringCount" json:"string_count,omitempty"`
	ErrorCount            *uint32                `protobuf:"varint,13,opt,name=error_count,json=errorCount" json:"error_count,omitempty"`
	IsCircularRef         *bool                  `protobuf:"varint,14,opt,name=is_circular_ref,json=isCircularRef" json:"is_circular_ref,omitempty"`
	MinValue              *TSCE.CellValueArchive `protobuf:"bytes,6,req,name=min_value,json=minValue" json:"min_value,omitempty"`
	MaxValue              *TSCE.CellValueArchive `protobuf:"bytes,7,req,name=max_value,json=maxValue" json:"max_value,omitempty"`
	NumberTotalValue      *TSCE.CellValueArchive `protobuf:"bytes,8,req,name=number_total_value,json=numberTotalValue" json:"number_total_value,omitempty"`
	FirstDateSeen         *TSCE.CellValueArchive `protobuf:"bytes,9,opt,name=first_date_seen,json=firstDateSeen" json:"first_date_seen,omitempty"`
	TotalSecsSinceRefDate *float64               `protobuf:"fixed64,10,opt,name=total_secs_since_ref_date,json=totalSecsSinceRefDate" json:"total_secs_since_ref_date,omitempty"`
	SecsToAdd             *float64               `protobuf:"fixed64,11,opt,name=secs_to_add,json=secsToAdd" json:"secs_to_add,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *AccumulatorArchive) Reset()         { *m = AccumulatorArchive{} }
func (m *AccumulatorArchive) String() string { return proto.CompactTextString(m) }
func (*AccumulatorArchive) ProtoMessage()    {}
func (*AccumulatorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{94}
}

func (m *AccumulatorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulatorArchive.Unmarshal(m, b)
}
func (m *AccumulatorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulatorArchive.Marshal(b, m, deterministic)
}
func (m *AccumulatorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulatorArchive.Merge(m, src)
}
func (m *AccumulatorArchive) XXX_Size() int {
	return xxx_messageInfo_AccumulatorArchive.Size(m)
}
func (m *AccumulatorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulatorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulatorArchive proto.InternalMessageInfo

func (m *AccumulatorArchive) GetBoolCount() uint32 {
	if m != nil && m.BoolCount != nil {
		return *m.BoolCount
	}
	return 0
}

func (m *AccumulatorArchive) GetBoolTrueCount() uint32 {
	if m != nil && m.BoolTrueCount != nil {
		return *m.BoolTrueCount
	}
	return 0
}

func (m *AccumulatorArchive) GetNumberCount() uint32 {
	if m != nil && m.NumberCount != nil {
		return *m.NumberCount
	}
	return 0
}

func (m *AccumulatorArchive) GetDateCount() uint32 {
	if m != nil && m.DateCount != nil {
		return *m.DateCount
	}
	return 0
}

func (m *AccumulatorArchive) GetDurationCount() uint32 {
	if m != nil && m.DurationCount != nil {
		return *m.DurationCount
	}
	return 0
}

func (m *AccumulatorArchive) GetStringCount() uint32 {
	if m != nil && m.StringCount != nil {
		return *m.StringCount
	}
	return 0
}

func (m *AccumulatorArchive) GetErrorCount() uint32 {
	if m != nil && m.ErrorCount != nil {
		return *m.ErrorCount
	}
	return 0
}

func (m *AccumulatorArchive) GetIsCircularRef() bool {
	if m != nil && m.IsCircularRef != nil {
		return *m.IsCircularRef
	}
	return false
}

func (m *AccumulatorArchive) GetMinValue() *TSCE.CellValueArchive {
	if m != nil {
		return m.MinValue
	}
	return nil
}

func (m *AccumulatorArchive) GetMaxValue() *TSCE.CellValueArchive {
	if m != nil {
		return m.MaxValue
	}
	return nil
}

func (m *AccumulatorArchive) GetNumberTotalValue() *TSCE.CellValueArchive {
	if m != nil {
		return m.NumberTotalValue
	}
	return nil
}

func (m *AccumulatorArchive) GetFirstDateSeen() *TSCE.CellValueArchive {
	if m != nil {
		return m.FirstDateSeen
	}
	return nil
}

func (m *AccumulatorArchive) GetTotalSecsSinceRefDate() float64 {
	if m != nil && m.TotalSecsSinceRefDate != nil {
		return *m.TotalSecsSinceRefDate
	}
	return 0
}

func (m *AccumulatorArchive) GetSecsToAdd() float64 {
	if m != nil && m.SecsToAdd != nil {
		return *m.SecsToAdd
	}
	return 0
}

type GroupColumnArchive struct {
	ColumnUid            *TSP.UUID            `protobuf:"bytes,1,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	GroupingType         *GroupingType        `protobuf:"varint,2,req,name=grouping_type,json=groupingType,enum=TST.GroupingType" json:"grouping_type,omitempty"`
	GroupingFunctor      *TSCE.FunctorArchive `protobuf:"bytes,3,opt,name=grouping_functor,json=groupingFunctor" json:"grouping_functor,omitempty"`
	GroupingColumnUid    *TSP.UUID            `protobuf:"bytes,4,opt,name=grouping_column_uid,json=groupingColumnUid" json:"grouping_column_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GroupColumnArchive) Reset()         { *m = GroupColumnArchive{} }
func (m *GroupColumnArchive) String() string { return proto.CompactTextString(m) }
func (*GroupColumnArchive) ProtoMessage()    {}
func (*GroupColumnArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{95}
}

func (m *GroupColumnArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupColumnArchive.Unmarshal(m, b)
}
func (m *GroupColumnArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupColumnArchive.Marshal(b, m, deterministic)
}
func (m *GroupColumnArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupColumnArchive.Merge(m, src)
}
func (m *GroupColumnArchive) XXX_Size() int {
	return xxx_messageInfo_GroupColumnArchive.Size(m)
}
func (m *GroupColumnArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupColumnArchive.DiscardUnknown(m)
}

var xxx_messageInfo_GroupColumnArchive proto.InternalMessageInfo

func (m *GroupColumnArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *GroupColumnArchive) GetGroupingType() GroupingType {
	if m != nil && m.GroupingType != nil {
		return *m.GroupingType
	}
	return GroupingType_UNIQUE
}

func (m *GroupColumnArchive) GetGroupingFunctor() *TSCE.FunctorArchive {
	if m != nil {
		return m.GroupingFunctor
	}
	return nil
}

func (m *GroupColumnArchive) GetGroupingColumnUid() *TSP.UUID {
	if m != nil {
		return m.GroupingColumnUid
	}
	return nil
}

type GroupColumnListArchive struct {
	GroupColumn          []*GroupColumnArchive `protobuf:"bytes,1,rep,name=group_column,json=groupColumn" json:"group_column,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupColumnListArchive) Reset()         { *m = GroupColumnListArchive{} }
func (m *GroupColumnListArchive) String() string { return proto.CompactTextString(m) }
func (*GroupColumnListArchive) ProtoMessage()    {}
func (*GroupColumnListArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{96}
}

func (m *GroupColumnListArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupColumnListArchive.Unmarshal(m, b)
}
func (m *GroupColumnListArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupColumnListArchive.Marshal(b, m, deterministic)
}
func (m *GroupColumnListArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupColumnListArchive.Merge(m, src)
}
func (m *GroupColumnListArchive) XXX_Size() int {
	return xxx_messageInfo_GroupColumnListArchive.Size(m)
}
func (m *GroupColumnListArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupColumnListArchive.DiscardUnknown(m)
}

var xxx_messageInfo_GroupColumnListArchive proto.InternalMessageInfo

func (m *GroupColumnListArchive) GetGroupColumn() []*GroupColumnArchive {
	if m != nil {
		return m.GroupColumn
	}
	return nil
}

type ColumnAggregateArchive struct {
	ColumnUid            *TSP.UUID      `protobuf:"bytes,1,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	Level                *uint32        `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	AggType              *AggregateType `protobuf:"varint,3,req,name=agg_type,json=aggType,enum=TST.AggregateType" json:"agg_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ColumnAggregateArchive) Reset()         { *m = ColumnAggregateArchive{} }
func (m *ColumnAggregateArchive) String() string { return proto.CompactTextString(m) }
func (*ColumnAggregateArchive) ProtoMessage()    {}
func (*ColumnAggregateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{97}
}

func (m *ColumnAggregateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnAggregateArchive.Unmarshal(m, b)
}
func (m *ColumnAggregateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnAggregateArchive.Marshal(b, m, deterministic)
}
func (m *ColumnAggregateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnAggregateArchive.Merge(m, src)
}
func (m *ColumnAggregateArchive) XXX_Size() int {
	return xxx_messageInfo_ColumnAggregateArchive.Size(m)
}
func (m *ColumnAggregateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnAggregateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnAggregateArchive proto.InternalMessageInfo

func (m *ColumnAggregateArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *ColumnAggregateArchive) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ColumnAggregateArchive) GetAggType() AggregateType {
	if m != nil && m.AggType != nil {
		return *m.AggType
	}
	return AggregateType_NONE
}

type ColumnAggregateListArchive struct {
	Aggregates           []*ColumnAggregateArchive `protobuf:"bytes,1,rep,name=aggregates" json:"aggregates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ColumnAggregateListArchive) Reset()         { *m = ColumnAggregateListArchive{} }
func (m *ColumnAggregateListArchive) String() string { return proto.CompactTextString(m) }
func (*ColumnAggregateListArchive) ProtoMessage()    {}
func (*ColumnAggregateListArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{98}
}

func (m *ColumnAggregateListArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnAggregateListArchive.Unmarshal(m, b)
}
func (m *ColumnAggregateListArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnAggregateListArchive.Marshal(b, m, deterministic)
}
func (m *ColumnAggregateListArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnAggregateListArchive.Merge(m, src)
}
func (m *ColumnAggregateListArchive) XXX_Size() int {
	return xxx_messageInfo_ColumnAggregateListArchive.Size(m)
}
func (m *ColumnAggregateListArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnAggregateListArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnAggregateListArchive proto.InternalMessageInfo

func (m *ColumnAggregateListArchive) GetAggregates() []*ColumnAggregateArchive {
	if m != nil {
		return m.Aggregates
	}
	return nil
}

type CategoryOwnerArchive struct {
	OwnerUid             *TSP.UUID                              `protobuf:"bytes,1,req,name=owner_uid,json=ownerUid" json:"owner_uid,omitempty"`
	GroupBy              []*CategoryOwnerArchive_GroupByArchive `protobuf:"bytes,2,rep,name=group_by,json=groupBy" json:"group_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CategoryOwnerArchive) Reset()         { *m = CategoryOwnerArchive{} }
func (m *CategoryOwnerArchive) String() string { return proto.CompactTextString(m) }
func (*CategoryOwnerArchive) ProtoMessage()    {}
func (*CategoryOwnerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99}
}

func (m *CategoryOwnerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive.Size(m)
}
func (m *CategoryOwnerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive) GetOwnerUid() *TSP.UUID {
	if m != nil {
		return m.OwnerUid
	}
	return nil
}

func (m *CategoryOwnerArchive) GetGroupBy() []*CategoryOwnerArchive_GroupByArchive {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive struct {
	GroupByUid                   *TSP.UUID                                                `protobuf:"bytes,1,req,name=group_by_uid,json=groupByUid" json:"group_by_uid,omitempty"`
	GroupColumn                  []*GroupColumnArchive                                    `protobuf:"bytes,2,rep,name=group_column,json=groupColumn" json:"group_column,omitempty"`
	GroupNodeRoot                *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive    `protobuf:"bytes,3,req,name=group_node_root,json=groupNodeRoot" json:"group_node_root,omitempty"`
	Aggregator                   []*CategoryOwnerArchive_GroupByArchive_AggregatorArchive `protobuf:"bytes,4,rep,name=aggregator" json:"aggregator,omitempty"`
	ColumnAggType                []*ColumnAggregateArchive                                `protobuf:"bytes,5,rep,name=column_agg_type,json=columnAggType" json:"column_agg_type,omitempty"`
	IsEnabled                    *bool                                                    `protobuf:"varint,6,req,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	IndirectAggTypeChangeFormula *TSCE.CellCoordinateArchive                              `protobuf:"bytes,7,opt,name=indirect_agg_type_change_formula,json=indirectAggTypeChangeFormula" json:"indirect_agg_type_change_formula,omitempty"`
	GroupingColumnsFormula       *TSCE.CellCoordinateArchive                              `protobuf:"bytes,8,opt,name=grouping_columns_formula,json=groupingColumnsFormula" json:"grouping_columns_formula,omitempty"`
	GroupingColumnHeadersFormula *TSCE.CellCoordinateArchive                              `protobuf:"bytes,10,opt,name=grouping_column_headers_formula,json=groupingColumnHeadersFormula" json:"grouping_column_headers_formula,omitempty"`
	AggsInGroupRootFormula       *TSCE.CellCoordinateArchive                              `protobuf:"bytes,9,opt,name=aggs_in_group_root_formula,json=aggsInGroupRootFormula" json:"aggs_in_group_root_formula,omitempty"`
	ColumnOrderChangedFormula    *TSCE.CellCoordinateArchive                              `protobuf:"bytes,11,opt,name=column_order_changed_formula,json=columnOrderChangedFormula" json:"column_order_changed_formula,omitempty"`
	RowOrderChangedFormula       *TSCE.CellCoordinateArchive                              `protobuf:"bytes,12,opt,name=row_order_changed_formula,json=rowOrderChangedFormula" json:"row_order_changed_formula,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                                                 `json:"-"`
	XXX_unrecognized             []byte                                                   `json:"-"`
	XXX_sizecache                int32                                                    `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive) Reset()         { *m = CategoryOwnerArchive_GroupByArchive{} }
func (m *CategoryOwnerArchive_GroupByArchive) String() string { return proto.CompactTextString(m) }
func (*CategoryOwnerArchive_GroupByArchive) ProtoMessage()    {}
func (*CategoryOwnerArchive_GroupByArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0}
}

func (m *CategoryOwnerArchive_GroupByArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive) GetGroupByUid() *TSP.UUID {
	if m != nil {
		return m.GroupByUid
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetGroupColumn() []*GroupColumnArchive {
	if m != nil {
		return m.GroupColumn
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetGroupNodeRoot() *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive {
	if m != nil {
		return m.GroupNodeRoot
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetAggregator() []*CategoryOwnerArchive_GroupByArchive_AggregatorArchive {
	if m != nil {
		return m.Aggregator
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetColumnAggType() []*ColumnAggregateArchive {
	if m != nil {
		return m.ColumnAggType
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetIsEnabled() bool {
	if m != nil && m.IsEnabled != nil {
		return *m.IsEnabled
	}
	return false
}

func (m *CategoryOwnerArchive_GroupByArchive) GetIndirectAggTypeChangeFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.IndirectAggTypeChangeFormula
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetGroupingColumnsFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.GroupingColumnsFormula
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetGroupingColumnHeadersFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.GroupingColumnHeadersFormula
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetAggsInGroupRootFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.AggsInGroupRootFormula
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetColumnOrderChangedFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.ColumnOrderChangedFormula
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive) GetRowOrderChangedFormula() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.RowOrderChangedFormula
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_AggNodeArchive struct {
	FormulaCoord         *TSCE.CellCoordinateArchive                           `protobuf:"bytes,1,req,name=formula_coord,json=formulaCoord" json:"formula_coord,omitempty"`
	Accum                *AccumulatorArchive                                   `protobuf:"bytes,2,opt,name=accum" json:"accum,omitempty"`
	Child                []*CategoryOwnerArchive_GroupByArchive_AggNodeArchive `protobuf:"bytes,3,rep,name=child" json:"child,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_AggNodeArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_AggNodeArchive) ProtoMessage() {}
func (*CategoryOwnerArchive_GroupByArchive_AggNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 0}
}

func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggNodeArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) GetFormulaCoord() *TSCE.CellCoordinateArchive {
	if m != nil {
		return m.FormulaCoord
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) GetAccum() *AccumulatorArchive {
	if m != nil {
		return m.Accum
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_AggNodeArchive) GetChild() []*CategoryOwnerArchive_GroupByArchive_AggNodeArchive {
	if m != nil {
		return m.Child
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_GroupNodeArchive struct {
	GroupUid             *TSP.UUID                                                                    `protobuf:"bytes,1,req,name=group_uid,json=groupUid" json:"group_uid,omitempty"`
	GroupValueTuple      *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive `protobuf:"bytes,2,opt,name=group_value_tuple,json=groupValueTuple" json:"group_value_tuple,omitempty"`
	GroupCellValue       *TSCE.CellValueArchive                                                       `protobuf:"bytes,7,opt,name=group_cell_value,json=groupCellValue" json:"group_cell_value,omitempty"`
	Child                []*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive                      `protobuf:"bytes,3,rep,name=child" json:"child,omitempty"`
	RowUid               []*TSP.UUID                                                                  `protobuf:"bytes,4,rep,name=row_uid,json=rowUid" json:"row_uid,omitempty"`
	AggFormulaCoords     []*TSCE.CellCoordinateArchive                                                `protobuf:"bytes,5,rep,name=agg_formula_coords,json=aggFormulaCoords" json:"agg_formula_coords,omitempty"`
	FormatManager        *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive   `protobuf:"bytes,6,opt,name=format_manager,json=formatManager" json:"format_manager,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                       `json:"-"`
	XXX_sizecache        int32                                                                        `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_GroupNodeArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) ProtoMessage() {}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 1}
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetGroupUid() *TSP.UUID {
	if m != nil {
		return m.GroupUid
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetGroupValueTuple() *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive {
	if m != nil {
		return m.GroupValueTuple
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetGroupCellValue() *TSCE.CellValueArchive {
	if m != nil {
		return m.GroupCellValue
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetChild() []*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetRowUid() []*TSP.UUID {
	if m != nil {
		return m.RowUid
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetAggFormulaCoords() []*TSCE.CellCoordinateArchive {
	if m != nil {
		return m.AggFormulaCoords
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive) GetFormatManager() *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive {
	if m != nil {
		return m.FormatManager
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive struct {
	Value                []*TSCE.CellValueArchive `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) ProtoMessage() {}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 1, 0}
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive) GetValue() []*TSCE.CellValueArchive {
	if m != nil {
		return m.Value
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive struct {
	CellValue            *TSCE.CellValueArchive                                                                     `protobuf:"bytes,1,opt,name=cell_value,json=cellValue" json:"cell_value,omitempty"`
	Formats              []*TSK.FormatStructArchive                                                                 `protobuf:"bytes,2,rep,name=formats" json:"formats,omitempty"`
	RowSets              []*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive `protobuf:"bytes,3,rep,name=row_sets,json=rowSets" json:"row_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                      `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) ProtoMessage() {}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 1, 1}
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) GetCellValue() *TSCE.CellValueArchive {
	if m != nil {
		return m.CellValue
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) GetFormats() []*TSK.FormatStructArchive {
	if m != nil {
		return m.Formats
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive) GetRowSets() []*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive {
	if m != nil {
		return m.RowSets
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive struct {
	RowUids              []*TSP.UUID `protobuf:"bytes,1,rep,name=row_uids,json=rowUids" json:"row_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) ProtoMessage() {
}
func (*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 1, 1, 0}
}

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive) GetRowUids() []*TSP.UUID {
	if m != nil {
		return m.RowUids
	}
	return nil
}

type CategoryOwnerArchive_GroupByArchive_AggregatorArchive struct {
	ColumnUid            *TSP.UUID                                           `protobuf:"bytes,1,req,name=column_uid,json=columnUid" json:"column_uid,omitempty"`
	AggNode              *CategoryOwnerArchive_GroupByArchive_AggNodeArchive `protobuf:"bytes,2,opt,name=agg_node,json=aggNode" json:"agg_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) Reset() {
	*m = CategoryOwnerArchive_GroupByArchive_AggregatorArchive{}
}
func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CategoryOwnerArchive_GroupByArchive_AggregatorArchive) ProtoMessage() {}
func (*CategoryOwnerArchive_GroupByArchive_AggregatorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{99, 0, 2}
}

func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive.Unmarshal(m, b)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive.Merge(m, src)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive.Size(m)
}
func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOwnerArchive_GroupByArchive_AggregatorArchive proto.InternalMessageInfo

func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) GetColumnUid() *TSP.UUID {
	if m != nil {
		return m.ColumnUid
	}
	return nil
}

func (m *CategoryOwnerArchive_GroupByArchive_AggregatorArchive) GetAggNode() *CategoryOwnerArchive_GroupByArchive_AggNodeArchive {
	if m != nil {
		return m.AggNode
	}
	return nil
}

type RichTextPayloadArchive struct {
	Storage              *TSP.Reference `protobuf:"bytes,1,req,name=storage" json:"storage,omitempty"`
	Range                *TSP.Range     `protobuf:"bytes,2,opt,name=range" json:"range,omitempty"`
	Cellid               *CellID        `protobuf:"bytes,3,req,name=cellid" json:"cellid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RichTextPayloadArchive) Reset()         { *m = RichTextPayloadArchive{} }
func (m *RichTextPayloadArchive) String() string { return proto.CompactTextString(m) }
func (*RichTextPayloadArchive) ProtoMessage()    {}
func (*RichTextPayloadArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{100}
}

func (m *RichTextPayloadArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RichTextPayloadArchive.Unmarshal(m, b)
}
func (m *RichTextPayloadArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RichTextPayloadArchive.Marshal(b, m, deterministic)
}
func (m *RichTextPayloadArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RichTextPayloadArchive.Merge(m, src)
}
func (m *RichTextPayloadArchive) XXX_Size() int {
	return xxx_messageInfo_RichTextPayloadArchive.Size(m)
}
func (m *RichTextPayloadArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RichTextPayloadArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RichTextPayloadArchive proto.InternalMessageInfo

func (m *RichTextPayloadArchive) GetStorage() *TSP.Reference {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *RichTextPayloadArchive) GetRange() *TSP.Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *RichTextPayloadArchive) GetCellid() *CellID {
	if m != nil {
		return m.Cellid
	}
	return nil
}

type FormulaEqualsTokenAttachmentArchive struct {
	Super                *TSWP.UIGraphicalAttachment `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *FormulaEqualsTokenAttachmentArchive) Reset()         { *m = FormulaEqualsTokenAttachmentArchive{} }
func (m *FormulaEqualsTokenAttachmentArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaEqualsTokenAttachmentArchive) ProtoMessage()    {}
func (*FormulaEqualsTokenAttachmentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{101}
}

func (m *FormulaEqualsTokenAttachmentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaEqualsTokenAttachmentArchive.Unmarshal(m, b)
}
func (m *FormulaEqualsTokenAttachmentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaEqualsTokenAttachmentArchive.Marshal(b, m, deterministic)
}
func (m *FormulaEqualsTokenAttachmentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaEqualsTokenAttachmentArchive.Merge(m, src)
}
func (m *FormulaEqualsTokenAttachmentArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaEqualsTokenAttachmentArchive.Size(m)
}
func (m *FormulaEqualsTokenAttachmentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaEqualsTokenAttachmentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaEqualsTokenAttachmentArchive proto.InternalMessageInfo

func (m *FormulaEqualsTokenAttachmentArchive) GetSuper() *TSWP.UIGraphicalAttachment {
	if m != nil {
		return m.Super
	}
	return nil
}

type CellFillStandIn struct {
	Fill                         *TSD.FillArchive `protobuf:"bytes,1,req,name=fill" json:"fill,omitempty"`
	TypeIsMixed                  *bool            `protobuf:"varint,2,opt,name=type_is_mixed,json=typeIsMixed" json:"type_is_mixed,omitempty"`
	ColorHasBeenModified         *bool            `protobuf:"varint,3,opt,name=color_has_been_modified,json=colorHasBeenModified" json:"color_has_been_modified,omitempty"`
	ColorIsMixed                 *bool            `protobuf:"varint,4,opt,name=color_is_mixed,json=colorIsMixed" json:"color_is_mixed,omitempty"`
	FirstColorHasBeenModified    *bool            `protobuf:"varint,5,opt,name=first_color_has_been_modified,json=firstColorHasBeenModified" json:"first_color_has_been_modified,omitempty"`
	FirstColorIsMixed            *bool            `protobuf:"varint,6,opt,name=first_color_is_mixed,json=firstColorIsMixed" json:"first_color_is_mixed,omitempty"`
	LastColorHasBeenModified     *bool            `protobuf:"varint,7,opt,name=last_color_has_been_modified,json=lastColorHasBeenModified" json:"last_color_has_been_modified,omitempty"`
	LastColorIsMixed             *bool            `protobuf:"varint,8,opt,name=last_color_is_mixed,json=lastColorIsMixed" json:"last_color_is_mixed,omitempty"`
	GradientTypeHasBeenModified  *bool            `protobuf:"varint,9,opt,name=gradient_type_has_been_modified,json=gradientTypeHasBeenModified" json:"gradient_type_has_been_modified,omitempty"`
	GradientTypeIsMixed          *bool            `protobuf:"varint,10,opt,name=gradient_type_is_mixed,json=gradientTypeIsMixed" json:"gradient_type_is_mixed,omitempty"`
	GradientAngleHasBeenModified *bool            `protobuf:"varint,11,opt,name=gradient_angle_has_been_modified,json=gradientAngleHasBeenModified" json:"gradient_angle_has_been_modified,omitempty"`
	GradientAngleIsMixed         *bool            `protobuf:"varint,12,opt,name=gradient_angle_is_mixed,json=gradientAngleIsMixed" json:"gradient_angle_is_mixed,omitempty"`
	ImageDataHasBeenModified     *bool            `protobuf:"varint,13,opt,name=image_data_has_been_modified,json=imageDataHasBeenModified" json:"image_data_has_been_modified,omitempty"`
	ImageDataIsMixed             *bool            `protobuf:"varint,14,opt,name=image_data_is_mixed,json=imageDataIsMixed" json:"image_data_is_mixed,omitempty"`
	TintColorHasBeenModified     *bool            `protobuf:"varint,15,opt,name=tint_color_has_been_modified,json=tintColorHasBeenModified" json:"tint_color_has_been_modified,omitempty"`
	TintColorIsMixed             *bool            `protobuf:"varint,16,opt,name=tint_color_is_mixed,json=tintColorIsMixed" json:"tint_color_is_mixed,omitempty"`
	ScaleHasBeenModified         *bool            `protobuf:"varint,17,opt,name=scale_has_been_modified,json=scaleHasBeenModified" json:"scale_has_been_modified,omitempty"`
	ScaleIsMixed                 *bool            `protobuf:"varint,18,opt,name=scale_is_mixed,json=scaleIsMixed" json:"scale_is_mixed,omitempty"`
	TechniqueHasBeenModified     *bool            `protobuf:"varint,19,opt,name=technique_has_been_modified,json=techniqueHasBeenModified" json:"technique_has_been_modified,omitempty"`
	TechniqueIsMixed             *bool            `protobuf:"varint,20,opt,name=technique_is_mixed,json=techniqueIsMixed" json:"technique_is_mixed,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}         `json:"-"`
	XXX_unrecognized             []byte           `json:"-"`
	XXX_sizecache                int32            `json:"-"`
}

func (m *CellFillStandIn) Reset()         { *m = CellFillStandIn{} }
func (m *CellFillStandIn) String() string { return proto.CompactTextString(m) }
func (*CellFillStandIn) ProtoMessage()    {}
func (*CellFillStandIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{102}
}

func (m *CellFillStandIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellFillStandIn.Unmarshal(m, b)
}
func (m *CellFillStandIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellFillStandIn.Marshal(b, m, deterministic)
}
func (m *CellFillStandIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellFillStandIn.Merge(m, src)
}
func (m *CellFillStandIn) XXX_Size() int {
	return xxx_messageInfo_CellFillStandIn.Size(m)
}
func (m *CellFillStandIn) XXX_DiscardUnknown() {
	xxx_messageInfo_CellFillStandIn.DiscardUnknown(m)
}

var xxx_messageInfo_CellFillStandIn proto.InternalMessageInfo

func (m *CellFillStandIn) GetFill() *TSD.FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *CellFillStandIn) GetTypeIsMixed() bool {
	if m != nil && m.TypeIsMixed != nil {
		return *m.TypeIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetColorHasBeenModified() bool {
	if m != nil && m.ColorHasBeenModified != nil {
		return *m.ColorHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetColorIsMixed() bool {
	if m != nil && m.ColorIsMixed != nil {
		return *m.ColorIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetFirstColorHasBeenModified() bool {
	if m != nil && m.FirstColorHasBeenModified != nil {
		return *m.FirstColorHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetFirstColorIsMixed() bool {
	if m != nil && m.FirstColorIsMixed != nil {
		return *m.FirstColorIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetLastColorHasBeenModified() bool {
	if m != nil && m.LastColorHasBeenModified != nil {
		return *m.LastColorHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetLastColorIsMixed() bool {
	if m != nil && m.LastColorIsMixed != nil {
		return *m.LastColorIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetGradientTypeHasBeenModified() bool {
	if m != nil && m.GradientTypeHasBeenModified != nil {
		return *m.GradientTypeHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetGradientTypeIsMixed() bool {
	if m != nil && m.GradientTypeIsMixed != nil {
		return *m.GradientTypeIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetGradientAngleHasBeenModified() bool {
	if m != nil && m.GradientAngleHasBeenModified != nil {
		return *m.GradientAngleHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetGradientAngleIsMixed() bool {
	if m != nil && m.GradientAngleIsMixed != nil {
		return *m.GradientAngleIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetImageDataHasBeenModified() bool {
	if m != nil && m.ImageDataHasBeenModified != nil {
		return *m.ImageDataHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetImageDataIsMixed() bool {
	if m != nil && m.ImageDataIsMixed != nil {
		return *m.ImageDataIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetTintColorHasBeenModified() bool {
	if m != nil && m.TintColorHasBeenModified != nil {
		return *m.TintColorHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetTintColorIsMixed() bool {
	if m != nil && m.TintColorIsMixed != nil {
		return *m.TintColorIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetScaleHasBeenModified() bool {
	if m != nil && m.ScaleHasBeenModified != nil {
		return *m.ScaleHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetScaleIsMixed() bool {
	if m != nil && m.ScaleIsMixed != nil {
		return *m.ScaleIsMixed
	}
	return false
}

func (m *CellFillStandIn) GetTechniqueHasBeenModified() bool {
	if m != nil && m.TechniqueHasBeenModified != nil {
		return *m.TechniqueHasBeenModified
	}
	return false
}

func (m *CellFillStandIn) GetTechniqueIsMixed() bool {
	if m != nil && m.TechniqueIsMixed != nil {
		return *m.TechniqueIsMixed
	}
	return false
}

type FormulaSelectionArchive struct {
	Super                *TSWP.SelectionArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ActiveTokenCharIndex *uint32                `protobuf:"varint,2,opt,name=activeTokenCharIndex" json:"activeTokenCharIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FormulaSelectionArchive) Reset()         { *m = FormulaSelectionArchive{} }
func (m *FormulaSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*FormulaSelectionArchive) ProtoMessage()    {}
func (*FormulaSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{103}
}

func (m *FormulaSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormulaSelectionArchive.Unmarshal(m, b)
}
func (m *FormulaSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormulaSelectionArchive.Marshal(b, m, deterministic)
}
func (m *FormulaSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormulaSelectionArchive.Merge(m, src)
}
func (m *FormulaSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_FormulaSelectionArchive.Size(m)
}
func (m *FormulaSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormulaSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormulaSelectionArchive proto.InternalMessageInfo

func (m *FormulaSelectionArchive) GetSuper() *TSWP.SelectionArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *FormulaSelectionArchive) GetActiveTokenCharIndex() uint32 {
	if m != nil && m.ActiveTokenCharIndex != nil {
		return *m.ActiveTokenCharIndex
	}
	return 0
}

type CellBorderArchive struct {
	TopStroke            *TSD.StrokeArchive `protobuf:"bytes,1,opt,name=top_stroke,json=topStroke" json:"top_stroke,omitempty"`
	TopStrokeOrder       *int32             `protobuf:"varint,2,opt,name=top_stroke_order,json=topStrokeOrder" json:"top_stroke_order,omitempty"`
	RightStroke          *TSD.StrokeArchive `protobuf:"bytes,3,opt,name=right_stroke,json=rightStroke" json:"right_stroke,omitempty"`
	RightStrokeOrder     *int32             `protobuf:"varint,4,opt,name=right_stroke_order,json=rightStrokeOrder" json:"right_stroke_order,omitempty"`
	BottomStroke         *TSD.StrokeArchive `protobuf:"bytes,5,opt,name=bottom_stroke,json=bottomStroke" json:"bottom_stroke,omitempty"`
	BottomStrokeOrder    *int32             `protobuf:"varint,6,opt,name=bottom_stroke_order,json=bottomStrokeOrder" json:"bottom_stroke_order,omitempty"`
	LeftStroke           *TSD.StrokeArchive `protobuf:"bytes,7,opt,name=left_stroke,json=leftStroke" json:"left_stroke,omitempty"`
	LeftStrokeOrder      *int32             `protobuf:"varint,8,opt,name=left_stroke_order,json=leftStrokeOrder" json:"left_stroke_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CellBorderArchive) Reset()         { *m = CellBorderArchive{} }
func (m *CellBorderArchive) String() string { return proto.CompactTextString(m) }
func (*CellBorderArchive) ProtoMessage()    {}
func (*CellBorderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{104}
}

func (m *CellBorderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellBorderArchive.Unmarshal(m, b)
}
func (m *CellBorderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellBorderArchive.Marshal(b, m, deterministic)
}
func (m *CellBorderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellBorderArchive.Merge(m, src)
}
func (m *CellBorderArchive) XXX_Size() int {
	return xxx_messageInfo_CellBorderArchive.Size(m)
}
func (m *CellBorderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CellBorderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CellBorderArchive proto.InternalMessageInfo

func (m *CellBorderArchive) GetTopStroke() *TSD.StrokeArchive {
	if m != nil {
		return m.TopStroke
	}
	return nil
}

func (m *CellBorderArchive) GetTopStrokeOrder() int32 {
	if m != nil && m.TopStrokeOrder != nil {
		return *m.TopStrokeOrder
	}
	return 0
}

func (m *CellBorderArchive) GetRightStroke() *TSD.StrokeArchive {
	if m != nil {
		return m.RightStroke
	}
	return nil
}

func (m *CellBorderArchive) GetRightStrokeOrder() int32 {
	if m != nil && m.RightStrokeOrder != nil {
		return *m.RightStrokeOrder
	}
	return 0
}

func (m *CellBorderArchive) GetBottomStroke() *TSD.StrokeArchive {
	if m != nil {
		return m.BottomStroke
	}
	return nil
}

func (m *CellBorderArchive) GetBottomStrokeOrder() int32 {
	if m != nil && m.BottomStrokeOrder != nil {
		return *m.BottomStrokeOrder
	}
	return 0
}

func (m *CellBorderArchive) GetLeftStroke() *TSD.StrokeArchive {
	if m != nil {
		return m.LeftStroke
	}
	return nil
}

func (m *CellBorderArchive) GetLeftStrokeOrder() int32 {
	if m != nil && m.LeftStrokeOrder != nil {
		return *m.LeftStrokeOrder
	}
	return 0
}

type DefaultCellStylesContainerArchive struct {
	TableStyleNetwork    *TSP.Reference `protobuf:"bytes,1,req,name=table_style_network,json=tableStyleNetwork" json:"table_style_network,omitempty"`
	HeaderRowUids        []*TSP.UUID    `protobuf:"bytes,2,rep,name=header_row_uids,json=headerRowUids" json:"header_row_uids,omitempty"`
	FooterRowUids        []*TSP.UUID    `protobuf:"bytes,3,rep,name=footer_row_uids,json=footerRowUids" json:"footer_row_uids,omitempty"`
	HeaderColumnUids     []*TSP.UUID    `protobuf:"bytes,4,rep,name=header_column_uids,json=headerColumnUids" json:"header_column_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DefaultCellStylesContainerArchive) Reset()         { *m = DefaultCellStylesContainerArchive{} }
func (m *DefaultCellStylesContainerArchive) String() string { return proto.CompactTextString(m) }
func (*DefaultCellStylesContainerArchive) ProtoMessage()    {}
func (*DefaultCellStylesContainerArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{105}
}

func (m *DefaultCellStylesContainerArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultCellStylesContainerArchive.Unmarshal(m, b)
}
func (m *DefaultCellStylesContainerArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultCellStylesContainerArchive.Marshal(b, m, deterministic)
}
func (m *DefaultCellStylesContainerArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultCellStylesContainerArchive.Merge(m, src)
}
func (m *DefaultCellStylesContainerArchive) XXX_Size() int {
	return xxx_messageInfo_DefaultCellStylesContainerArchive.Size(m)
}
func (m *DefaultCellStylesContainerArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultCellStylesContainerArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultCellStylesContainerArchive proto.InternalMessageInfo

func (m *DefaultCellStylesContainerArchive) GetTableStyleNetwork() *TSP.Reference {
	if m != nil {
		return m.TableStyleNetwork
	}
	return nil
}

func (m *DefaultCellStylesContainerArchive) GetHeaderRowUids() []*TSP.UUID {
	if m != nil {
		return m.HeaderRowUids
	}
	return nil
}

func (m *DefaultCellStylesContainerArchive) GetFooterRowUids() []*TSP.UUID {
	if m != nil {
		return m.FooterRowUids
	}
	return nil
}

func (m *DefaultCellStylesContainerArchive) GetHeaderColumnUids() []*TSP.UUID {
	if m != nil {
		return m.HeaderColumnUids
	}
	return nil
}

type MultiTableRemapperArchive struct {
	MappingPurpose         *MultiTableRemapperArchive_Purpose `protobuf:"varint,1,req,name=mapping_purpose,json=mappingPurpose,enum=TST.MultiTableRemapperArchive_Purpose" json:"mapping_purpose,omitempty"`
	ShouldStealReferences  *bool                              `protobuf:"varint,2,req,name=should_steal_references,json=shouldStealReferences" json:"should_steal_references,omitempty"`
	CanReuseTableNames     *bool                              `protobuf:"varint,3,req,name=can_reuse_table_names,json=canReuseTableNames" json:"can_reuse_table_names,omitempty"`
	OwnerUidMapper         []*TSCE.OwnerUIDMapperArchive      `protobuf:"bytes,4,rep,name=owner_uid_mapper,json=ownerUidMapper" json:"owner_uid_mapper,omitempty"`
	BackingTablesForCharts *TSP.UUIDMapArchive                `protobuf:"bytes,5,req,name=backing_tables_for_charts,json=backingTablesForCharts" json:"backing_tables_for_charts,omitempty"`
	CrossDocumentPaste     *bool                              `protobuf:"varint,6,req,name=cross_document_paste,json=crossDocumentPaste" json:"cross_document_paste,omitempty"`
	NestedInnerMapper      *bool                              `protobuf:"varint,7,req,name=nested_inner_mapper,json=nestedInnerMapper" json:"nested_inner_mapper,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                           `json:"-"`
	XXX_unrecognized       []byte                             `json:"-"`
	XXX_sizecache          int32                              `json:"-"`
}

func (m *MultiTableRemapperArchive) Reset()         { *m = MultiTableRemapperArchive{} }
func (m *MultiTableRemapperArchive) String() string { return proto.CompactTextString(m) }
func (*MultiTableRemapperArchive) ProtoMessage()    {}
func (*MultiTableRemapperArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{106}
}

func (m *MultiTableRemapperArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiTableRemapperArchive.Unmarshal(m, b)
}
func (m *MultiTableRemapperArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiTableRemapperArchive.Marshal(b, m, deterministic)
}
func (m *MultiTableRemapperArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiTableRemapperArchive.Merge(m, src)
}
func (m *MultiTableRemapperArchive) XXX_Size() int {
	return xxx_messageInfo_MultiTableRemapperArchive.Size(m)
}
func (m *MultiTableRemapperArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiTableRemapperArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MultiTableRemapperArchive proto.InternalMessageInfo

func (m *MultiTableRemapperArchive) GetMappingPurpose() MultiTableRemapperArchive_Purpose {
	if m != nil && m.MappingPurpose != nil {
		return *m.MappingPurpose
	}
	return MultiTableRemapperArchive_DEFAULT
}

func (m *MultiTableRemapperArchive) GetShouldStealReferences() bool {
	if m != nil && m.ShouldStealReferences != nil {
		return *m.ShouldStealReferences
	}
	return false
}

func (m *MultiTableRemapperArchive) GetCanReuseTableNames() bool {
	if m != nil && m.CanReuseTableNames != nil {
		return *m.CanReuseTableNames
	}
	return false
}

func (m *MultiTableRemapperArchive) GetOwnerUidMapper() []*TSCE.OwnerUIDMapperArchive {
	if m != nil {
		return m.OwnerUidMapper
	}
	return nil
}

func (m *MultiTableRemapperArchive) GetBackingTablesForCharts() *TSP.UUIDMapArchive {
	if m != nil {
		return m.BackingTablesForCharts
	}
	return nil
}

func (m *MultiTableRemapperArchive) GetCrossDocumentPaste() bool {
	if m != nil && m.CrossDocumentPaste != nil {
		return *m.CrossDocumentPaste
	}
	return false
}

func (m *MultiTableRemapperArchive) GetNestedInnerMapper() bool {
	if m != nil && m.NestedInnerMapper != nil {
		return *m.NestedInnerMapper
	}
	return false
}

type ChangePropagationMapWrapper struct {
	ReplacementBehavior           *int32           `protobuf:"varint,1,req,name=replacement_behavior,json=replacementBehavior" json:"replacement_behavior,omitempty"`
	StyleReplacePrototypes        []*TSP.Reference `protobuf:"bytes,2,rep,name=style_replace_prototypes,json=styleReplacePrototypes" json:"style_replace_prototypes,omitempty"`
	StyleReplaceReplacements      []*TSP.Reference `protobuf:"bytes,3,rep,name=style_replace_replacements,json=styleReplaceReplacements" json:"style_replace_replacements,omitempty"`
	StyleModifyStyles             []*TSP.Reference `protobuf:"bytes,4,rep,name=style_modify_styles,json=styleModifyStyles" json:"style_modify_styles,omitempty"`
	StyleModifyOldPropMaps        []*TSP.Reference `protobuf:"bytes,5,rep,name=style_modify_old_prop_maps,json=styleModifyOldPropMaps" json:"style_modify_old_prop_maps,omitempty"`
	StyleModifyNewPropMaps        []*TSP.Reference `protobuf:"bytes,6,rep,name=style_modify_new_prop_maps,json=styleModifyNewPropMaps" json:"style_modify_new_prop_maps,omitempty"`
	StyleDeletePrototypes         []*TSP.Reference `protobuf:"bytes,7,rep,name=style_delete_prototypes,json=styleDeletePrototypes" json:"style_delete_prototypes,omitempty"`
	StyleDeleteReplacements       []*TSP.Reference `protobuf:"bytes,8,rep,name=style_delete_replacements,json=styleDeleteReplacements" json:"style_delete_replacements,omitempty"`
	TablePresetReplacePrototype   *TSP.Reference   `protobuf:"bytes,9,opt,name=table_preset_replace_prototype,json=tablePresetReplacePrototype" json:"table_preset_replace_prototype,omitempty"`
	TablePresetReplaceReplacement *TSP.Reference   `protobuf:"bytes,10,opt,name=table_preset_replace_replacement,json=tablePresetReplaceReplacement" json:"table_preset_replace_replacement,omitempty"`
	TablePresetDeletePrototype    *TSP.Reference   `protobuf:"bytes,11,opt,name=table_preset_delete_prototype,json=tablePresetDeletePrototype" json:"table_preset_delete_prototype,omitempty"`
	TablePresetDeleteReplacement  *TSP.Reference   `protobuf:"bytes,12,opt,name=table_preset_delete_replacement,json=tablePresetDeleteReplacement" json:"table_preset_delete_replacement,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}         `json:"-"`
	XXX_unrecognized              []byte           `json:"-"`
	XXX_sizecache                 int32            `json:"-"`
}

func (m *ChangePropagationMapWrapper) Reset()         { *m = ChangePropagationMapWrapper{} }
func (m *ChangePropagationMapWrapper) String() string { return proto.CompactTextString(m) }
func (*ChangePropagationMapWrapper) ProtoMessage()    {}
func (*ChangePropagationMapWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{107}
}

func (m *ChangePropagationMapWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePropagationMapWrapper.Unmarshal(m, b)
}
func (m *ChangePropagationMapWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePropagationMapWrapper.Marshal(b, m, deterministic)
}
func (m *ChangePropagationMapWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePropagationMapWrapper.Merge(m, src)
}
func (m *ChangePropagationMapWrapper) XXX_Size() int {
	return xxx_messageInfo_ChangePropagationMapWrapper.Size(m)
}
func (m *ChangePropagationMapWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePropagationMapWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePropagationMapWrapper proto.InternalMessageInfo

func (m *ChangePropagationMapWrapper) GetReplacementBehavior() int32 {
	if m != nil && m.ReplacementBehavior != nil {
		return *m.ReplacementBehavior
	}
	return 0
}

func (m *ChangePropagationMapWrapper) GetStyleReplacePrototypes() []*TSP.Reference {
	if m != nil {
		return m.StyleReplacePrototypes
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleReplaceReplacements() []*TSP.Reference {
	if m != nil {
		return m.StyleReplaceReplacements
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleModifyStyles() []*TSP.Reference {
	if m != nil {
		return m.StyleModifyStyles
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleModifyOldPropMaps() []*TSP.Reference {
	if m != nil {
		return m.StyleModifyOldPropMaps
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleModifyNewPropMaps() []*TSP.Reference {
	if m != nil {
		return m.StyleModifyNewPropMaps
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleDeletePrototypes() []*TSP.Reference {
	if m != nil {
		return m.StyleDeletePrototypes
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetStyleDeleteReplacements() []*TSP.Reference {
	if m != nil {
		return m.StyleDeleteReplacements
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetTablePresetReplacePrototype() *TSP.Reference {
	if m != nil {
		return m.TablePresetReplacePrototype
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetTablePresetReplaceReplacement() *TSP.Reference {
	if m != nil {
		return m.TablePresetReplaceReplacement
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetTablePresetDeletePrototype() *TSP.Reference {
	if m != nil {
		return m.TablePresetDeletePrototype
	}
	return nil
}

func (m *ChangePropagationMapWrapper) GetTablePresetDeleteReplacement() *TSP.Reference {
	if m != nil {
		return m.TablePresetDeleteReplacement
	}
	return nil
}

type SummaryCellVendorArchive struct {
	TableInfo            *TSP.Reference                               `protobuf:"bytes,1,req,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	Entries              []*SummaryCellVendorArchive_SummaryCellEntry `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *SummaryCellVendorArchive) Reset()         { *m = SummaryCellVendorArchive{} }
func (m *SummaryCellVendorArchive) String() string { return proto.CompactTextString(m) }
func (*SummaryCellVendorArchive) ProtoMessage()    {}
func (*SummaryCellVendorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{108}
}

func (m *SummaryCellVendorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryCellVendorArchive.Unmarshal(m, b)
}
func (m *SummaryCellVendorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryCellVendorArchive.Marshal(b, m, deterministic)
}
func (m *SummaryCellVendorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryCellVendorArchive.Merge(m, src)
}
func (m *SummaryCellVendorArchive) XXX_Size() int {
	return xxx_messageInfo_SummaryCellVendorArchive.Size(m)
}
func (m *SummaryCellVendorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryCellVendorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryCellVendorArchive proto.InternalMessageInfo

func (m *SummaryCellVendorArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *SummaryCellVendorArchive) GetEntries() []*SummaryCellVendorArchive_SummaryCellEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type SummaryCellVendorArchive_SummaryCellEntry struct {
	WildcardUID          *TSP.UUID `protobuf:"bytes,1,req,name=wildcardUID" json:"wildcardUID,omitempty"`
	ColumnUID            *TSP.UUID `protobuf:"bytes,2,req,name=columnUID" json:"columnUID,omitempty"`
	Cell                 *Cell     `protobuf:"bytes,3,req,name=cell" json:"cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SummaryCellVendorArchive_SummaryCellEntry) Reset() {
	*m = SummaryCellVendorArchive_SummaryCellEntry{}
}
func (m *SummaryCellVendorArchive_SummaryCellEntry) String() string { return proto.CompactTextString(m) }
func (*SummaryCellVendorArchive_SummaryCellEntry) ProtoMessage()    {}
func (*SummaryCellVendorArchive_SummaryCellEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{108, 0}
}

func (m *SummaryCellVendorArchive_SummaryCellEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry.Unmarshal(m, b)
}
func (m *SummaryCellVendorArchive_SummaryCellEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry.Marshal(b, m, deterministic)
}
func (m *SummaryCellVendorArchive_SummaryCellEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry.Merge(m, src)
}
func (m *SummaryCellVendorArchive_SummaryCellEntry) XXX_Size() int {
	return xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry.Size(m)
}
func (m *SummaryCellVendorArchive_SummaryCellEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryCellVendorArchive_SummaryCellEntry proto.InternalMessageInfo

func (m *SummaryCellVendorArchive_SummaryCellEntry) GetWildcardUID() *TSP.UUID {
	if m != nil {
		return m.WildcardUID
	}
	return nil
}

func (m *SummaryCellVendorArchive_SummaryCellEntry) GetColumnUID() *TSP.UUID {
	if m != nil {
		return m.ColumnUID
	}
	return nil
}

func (m *SummaryCellVendorArchive_SummaryCellEntry) GetCell() *Cell {
	if m != nil {
		return m.Cell
	}
	return nil
}

type CategoryOrderArchive struct {
	TableInfo            *TSP.Reference `protobuf:"bytes,1,req,name=table_info,json=tableInfo" json:"table_info,omitempty"`
	UidMap               *TSP.Reference `protobuf:"bytes,2,req,name=uid_map,json=uidMap" json:"uid_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CategoryOrderArchive) Reset()         { *m = CategoryOrderArchive{} }
func (m *CategoryOrderArchive) String() string { return proto.CompactTextString(m) }
func (*CategoryOrderArchive) ProtoMessage()    {}
func (*CategoryOrderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccd47301a17c227, []int{109}
}

func (m *CategoryOrderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryOrderArchive.Unmarshal(m, b)
}
func (m *CategoryOrderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryOrderArchive.Marshal(b, m, deterministic)
}
func (m *CategoryOrderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryOrderArchive.Merge(m, src)
}
func (m *CategoryOrderArchive) XXX_Size() int {
	return xxx_messageInfo_CategoryOrderArchive.Size(m)
}
func (m *CategoryOrderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryOrderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryOrderArchive proto.InternalMessageInfo

func (m *CategoryOrderArchive) GetTableInfo() *TSP.Reference {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

func (m *CategoryOrderArchive) GetUidMap() *TSP.Reference {
	if m != nil {
		return m.UidMap
	}
	return nil
}

var E_ImportWarningSet = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.CommandPropertyEntryArchive)(nil),
	ExtensionType: (*ImportWarningSetArchive)(nil),
	Field:         500,
	Name:          "TST.import_warning_set",
	Tag:           "bytes,500,opt,name=import_warning_set",
	Filename:      "TSTArchives.proto",
}

var E_FormatAndValue = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.CommandPropertyEntryArchive)(nil),
	ExtensionType: (*CellFormatAndValueArchive)(nil),
	Field:         501,
	Name:          "TST.format_and_value",
	Tag:           "bytes,501,opt,name=format_and_value",
	Filename:      "TSTArchives.proto",
}

var E_CellBorder = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.CommandPropertyEntryArchive)(nil),
	ExtensionType: (*CellBorderArchive)(nil),
	Field:         503,
	Name:          "TST.cell_border",
	Tag:           "bytes,503,opt,name=cell_border",
	Filename:      "TSTArchives.proto",
}

var E_CommentStorage = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.CommandPropertyEntryArchive)(nil),
	ExtensionType: (*CommentStorageWrapperArchive)(nil),
	Field:         504,
	Name:          "TST.comment_storage",
	Tag:           "bytes,504,opt,name=comment_storage",
	Filename:      "TSTArchives.proto",
}

var E_CellSpec = &proto.ExtensionDesc{
	ExtendedType:  (*TSS.CommandPropertyEntryArchive)(nil),
	ExtensionType: (*CellSpecArchive)(nil),
	Field:         505,
	Name:          "TST.cell_spec",
	Tag:           "bytes,505,opt,name=cell_spec",
	Filename:      "TSTArchives.proto",
}

func init() {
	proto.RegisterEnum("TST.CellType", CellType_name, CellType_value)
	proto.RegisterEnum("TST.CellValueType", CellValueType_name, CellValueType_value)
	proto.RegisterEnum("TST.TableDimensionArchive", TableDimensionArchive_name, TableDimensionArchive_value)
	proto.RegisterEnum("TST.SelectionTypeArchive", SelectionTypeArchive_name, SelectionTypeArchive_value)
	proto.RegisterEnum("TST.FillDirectionArchive", FillDirectionArchive_name, FillDirectionArchive_value)
	proto.RegisterEnum("TST.MergeActionArchive", MergeActionArchive_name, MergeActionArchive_value)
	proto.RegisterEnum("TST.HideShowActionArchive", HideShowActionArchive_name, HideShowActionArchive_value)
	proto.RegisterEnum("TST.GroupingType", GroupingType_name, GroupingType_value)
	proto.RegisterEnum("TST.AggregateType", AggregateType_name, AggregateType_value)
	proto.RegisterEnum("TST.PopUpMenuModel_CellValueType", PopUpMenuModel_CellValueType_name, PopUpMenuModel_CellValueType_value)
	proto.RegisterEnum("TST.ImportWarningSetArchive_FormulaWarningType", ImportWarningSetArchive_FormulaWarningType_name, ImportWarningSetArchive_FormulaWarningType_value)
	proto.RegisterEnum("TST.TableDataList_ListType", TableDataList_ListType_name, TableDataList_ListType_value)
	proto.RegisterEnum("TST.TableSortOrderArchive_SortType", TableSortOrderArchive_SortType_name, TableSortOrderArchive_SortType_value)
	proto.RegisterEnum("TST.TableSortOrderArchive_SortRuleArchive_Direction", TableSortOrderArchive_SortRuleArchive_Direction_name, TableSortOrderArchive_SortRuleArchive_Direction_value)
	proto.RegisterEnum("TST.TableSortOrderUIDArchive_SortType", TableSortOrderUIDArchive_SortType_name, TableSortOrderUIDArchive_SortType_value)
	proto.RegisterEnum("TST.TableSortOrderUIDArchive_SortRuleArchive_Direction", TableSortOrderUIDArchive_SortRuleArchive_Direction_name, TableSortOrderUIDArchive_SortRuleArchive_Direction_value)
	proto.RegisterEnum("TST.FormulaPredicateArchive_FormulaPredicateType", FormulaPredicateArchive_FormulaPredicateType_name, FormulaPredicateArchive_FormulaPredicateType_value)
	proto.RegisterEnum("TST.FormulaPredicateArchive_QualifierType", FormulaPredicateArchive_QualifierType_name, FormulaPredicateArchive_QualifierType_value)
	proto.RegisterEnum("TST.FilterSetArchive_FilterSetType", FilterSetArchive_FilterSetType_name, FilterSetArchive_FilterSetType_value)
	proto.RegisterEnum("TST.HiddenStateExtentArchive_RowOrColumnDirection", HiddenStateExtentArchive_RowOrColumnDirection_name, HiddenStateExtentArchive_RowOrColumnDirection_value)
	proto.RegisterEnum("TST.MultiTableRemapperArchive_Purpose", MultiTableRemapperArchive_Purpose_name, MultiTableRemapperArchive_Purpose_value)
	proto.RegisterType((*CellID)(nil), "TST.CellID")
	proto.RegisterType((*CellUIDListArchive)(nil), "TST.CellUIDListArchive")
	proto.RegisterType((*TableSize)(nil), "TST.TableSize")
	proto.RegisterType((*ExpandedTableSize)(nil), "TST.ExpandedTableSize")
	proto.RegisterType((*CellRange)(nil), "TST.CellRange")
	proto.RegisterType((*ExpandedCellRange)(nil), "TST.ExpandedCellRange")
	proto.RegisterType((*TableSelection)(nil), "TST.TableSelection")
	proto.RegisterType((*TileRowInfo)(nil), "TST.TileRowInfo")
	proto.RegisterType((*Tile)(nil), "TST.Tile")
	proto.RegisterType((*TileStorage)(nil), "TST.TileStorage")
	proto.RegisterType((*TileStorage_Tile)(nil), "TST.TileStorage.Tile")
	proto.RegisterType((*PopUpMenuModel)(nil), "TST.PopUpMenuModel")
	proto.RegisterType((*PopUpMenuModel_CellValue)(nil), "TST.PopUpMenuModel.CellValue")
	proto.RegisterType((*ImportWarningSetArchive)(nil), "TST.ImportWarningSetArchive")
	proto.RegisterType((*ImportWarningSetArchive_FormulaImportWarning)(nil), "TST.ImportWarningSetArchive.FormulaImportWarning")
	proto.RegisterType((*CellRefImportWarningSetPairArchive)(nil), "TST.CellRefImportWarningSetPairArchive")
	proto.RegisterType((*ImportWarningSetByCellRefArchive)(nil), "TST.ImportWarningSetByCellRefArchive")
	proto.RegisterType((*TableDataList)(nil), "TST.TableDataList")
	proto.RegisterType((*TableDataList_ListEntry)(nil), "TST.TableDataList.ListEntry")
	proto.RegisterType((*TableRBTree)(nil), "TST.TableRBTree")
	proto.RegisterType((*TableRBTree_Node)(nil), "TST.TableRBTree.Node")
	proto.RegisterType((*HeaderStorageBucket)(nil), "TST.HeaderStorageBucket")
	proto.RegisterType((*HeaderStorageBucket_Header)(nil), "TST.HeaderStorageBucket.Header")
	proto.RegisterType((*HeaderStorage)(nil), "TST.HeaderStorage")
	proto.RegisterType((*DataStore)(nil), "TST.DataStore")
	proto.RegisterType((*TableInfoArchive)(nil), "TST.TableInfoArchive")
	proto.RegisterType((*CategoryInfoArchive)(nil), "TST.CategoryInfoArchive")
	proto.RegisterType((*WPTableInfoArchive)(nil), "TST.WPTableInfoArchive")
	proto.RegisterType((*TableStyleNetworkArchive)(nil), "TST.TableStyleNetworkArchive")
	proto.RegisterType((*TableSortOrderArchive)(nil), "TST.TableSortOrderArchive")
	proto.RegisterType((*TableSortOrderArchive_SortRuleArchive)(nil), "TST.TableSortOrderArchive.SortRuleArchive")
	proto.RegisterType((*TableSortOrderUIDArchive)(nil), "TST.TableSortOrderUIDArchive")
	proto.RegisterType((*TableSortOrderUIDArchive_SortRuleArchive)(nil), "TST.TableSortOrderUIDArchive.SortRuleArchive")
	proto.RegisterType((*SortRuleReferenceTrackerArchive)(nil), "TST.SortRuleReferenceTrackerArchive")
	proto.RegisterType((*CellRegion)(nil), "TST.CellRegion")
	proto.RegisterType((*CellUIDRegionArchive)(nil), "TST.CellUIDRegionArchive")
	proto.RegisterType((*StructuredTextImportRecord)(nil), "TST.StructuredTextImportRecord")
	proto.RegisterType((*TableModelArchive)(nil), "TST.TableModelArchive")
	proto.RegisterType((*SummaryModelArchive)(nil), "TST.SummaryModelArchive")
	proto.RegisterType((*SummaryModelGroupByChangeStateArchive)(nil), "TST.SummaryModelGroupByChangeStateArchive")
	proto.RegisterType((*ColumnRowUIDMapArchive)(nil), "TST.ColumnRowUIDMapArchive")
	proto.RegisterType((*StrokeLayerArchive)(nil), "TST.StrokeLayerArchive")
	proto.RegisterType((*StrokeLayerArchive_StrokeRunArchive)(nil), "TST.StrokeLayerArchive.StrokeRunArchive")
	proto.RegisterType((*StrokeSidecarArchive)(nil), "TST.StrokeSidecarArchive")
	proto.RegisterType((*DurationWrapperArchive)(nil), "TST.DurationWrapperArchive")
	proto.RegisterType((*Cell)(nil), "TST.Cell")
	proto.RegisterType((*MergeRegionMapArchive)(nil), "TST.MergeRegionMapArchive")
	proto.RegisterType((*CellMapArchive)(nil), "TST.CellMapArchive")
	proto.RegisterType((*CellListArchive)(nil), "TST.CellListArchive")
	proto.RegisterType((*CellListArchive_OptionalCell)(nil), "TST.CellListArchive.OptionalCell")
	proto.RegisterType((*CellFormatAndValueArchive)(nil), "TST.CellFormatAndValueArchive")
	proto.RegisterType((*CellSpecArchive)(nil), "TST.CellSpecArchive")
	proto.RegisterType((*CommentStorageWrapperArchive)(nil), "TST.CommentStorageWrapperArchive")
	proto.RegisterType((*CellDiffArchive)(nil), "TST.CellDiffArchive")
	proto.RegisterType((*CellDiffMapArchive)(nil), "TST.CellDiffMapArchive")
	proto.RegisterType((*DoubleStyleMapArchive)(nil), "TST.DoubleStyleMapArchive")
	proto.RegisterType((*DoubleStyleMapArchive_DoubleStyleMapEntryArchive)(nil), "TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive")
	proto.RegisterType((*StyleTableMapArchive)(nil), "TST.StyleTableMapArchive")
	proto.RegisterType((*StyleTableMapArchive_StyleTableMapEntryArchive)(nil), "TST.StyleTableMapArchive.StyleTableMapEntryArchive")
	proto.RegisterType((*SelectionArchive)(nil), "TST.SelectionArchive")
	proto.RegisterType((*DeathhawkRdar39989167CellSelectionArchive)(nil), "TST.DeathhawkRdar39989167CellSelectionArchive")
	proto.RegisterType((*StrokeSelectionArchive)(nil), "TST.StrokeSelectionArchive")
	proto.RegisterType((*ControlCellSelectionArchive)(nil), "TST.ControlCellSelectionArchive")
	proto.RegisterType((*StockCellSelectionArchive)(nil), "TST.StockCellSelectionArchive")
	proto.RegisterType((*TableNameSelectionArchive)(nil), "TST.TableNameSelectionArchive")
	proto.RegisterType((*AutofillSelectionArchive)(nil), "TST.AutofillSelectionArchive")
	proto.RegisterType((*FilterRuleArchive)(nil), "TST.FilterRuleArchive")
	proto.RegisterType((*TableStyleArchive)(nil), "TST.TableStyleArchive")
	proto.RegisterType((*CellStyleArchive)(nil), "TST.CellStyleArchive")
	proto.RegisterType((*FormulaPredicateArchive)(nil), "TST.FormulaPredicateArchive")
	proto.RegisterType((*ConditionalStyleSetArchive)(nil), "TST.ConditionalStyleSetArchive")
	proto.RegisterType((*ConditionalStyleSetArchive_ConditionalStyleRule)(nil), "TST.ConditionalStyleSetArchive.ConditionalStyleRule")
	proto.RegisterType((*FilterSetArchive)(nil), "TST.FilterSetArchive")
	proto.RegisterType((*HiddenStateExtentArchive)(nil), "TST.HiddenStateExtentArchive")
	proto.RegisterType((*HiddenStateExtentArchive_RowOrColumnState)(nil), "TST.HiddenStateExtentArchive.RowOrColumnState")
	proto.RegisterType((*HiddenStatesArchive)(nil), "TST.HiddenStatesArchive")
	proto.RegisterType((*HiddenStatesOwnerArchive)(nil), "TST.HiddenStatesOwnerArchive")
	proto.RegisterType((*ExpandCollapseStateArchive)(nil), "TST.ExpandCollapseStateArchive")
	proto.RegisterType((*TokenAttachmentArchive)(nil), "TST.TokenAttachmentArchive")
	proto.RegisterType((*FormulaArchive)(nil), "TST.FormulaArchive")
	proto.RegisterType((*ExpressionNodeArchive)(nil), "TST.ExpressionNodeArchive")
	proto.RegisterType((*BooleanNodeArchive)(nil), "TST.BooleanNodeArchive")
	proto.RegisterType((*NumberNodeArchive)(nil), "TST.NumberNodeArchive")
	proto.RegisterType((*StringNodeArchive)(nil), "TST.StringNodeArchive")
	proto.RegisterType((*IdentifierNodeArchive)(nil), "TST.IdentifierNodeArchive")
	proto.RegisterType((*ArrayNodeArchive)(nil), "TST.ArrayNodeArchive")
	proto.RegisterType((*ListNodeArchive)(nil), "TST.ListNodeArchive")
	proto.RegisterType((*OperatorNodeArchive)(nil), "TST.OperatorNodeArchive")
	proto.RegisterType((*PostfixOperatorNodeArchive)(nil), "TST.PostfixOperatorNodeArchive")
	proto.RegisterType((*PrefixOperatorNodeArchive)(nil), "TST.PrefixOperatorNodeArchive")
	proto.RegisterType((*FunctionNodeArchive)(nil), "TST.FunctionNodeArchive")
	proto.RegisterType((*FunctionEndNodeArchive)(nil), "TST.FunctionEndNodeArchive")
	proto.RegisterType((*DateNodeArchive)(nil), "TST.DateNodeArchive")
	proto.RegisterType((*ReferenceNodeArchive)(nil), "TST.ReferenceNodeArchive")
	proto.RegisterType((*DurationNodeArchive)(nil), "TST.DurationNodeArchive")
	proto.RegisterType((*ArgumentPlaceholderNodeArchive)(nil), "TST.ArgumentPlaceholderNodeArchive")
	proto.RegisterType((*EmptyExpressionNodeArchive)(nil), "TST.EmptyExpressionNodeArchive")
	proto.RegisterType((*LetNodeArchive)(nil), "TST.LetNodeArchive")
	proto.RegisterType((*InNodeArchive)(nil), "TST.InNodeArchive")
	proto.RegisterType((*VariableNodeArchive)(nil), "TST.VariableNodeArchive")
	proto.RegisterType((*LayoutHintArchive)(nil), "TST.LayoutHintArchive")
	proto.RegisterType((*CompletionTokenAttachmentArchive)(nil), "TST.CompletionTokenAttachmentArchive")
	proto.RegisterType((*HiddenStateFormulaOwnerArchive)(nil), "TST.HiddenStateFormulaOwnerArchive")
	proto.RegisterType((*FormulaStoreArchive)(nil), "TST.FormulaStoreArchive")
	proto.RegisterType((*FormulaStoreArchive_FormulaStorePair)(nil), "TST.FormulaStoreArchive.FormulaStorePair")
	proto.RegisterType((*MergeOperationArchive)(nil), "TST.MergeOperationArchive")
	proto.RegisterType((*MergeOwnerArchive)(nil), "TST.MergeOwnerArchive")
	proto.RegisterType((*PencilAnnotationArchive)(nil), "TST.PencilAnnotationArchive")
	proto.RegisterType((*PencilAnnotationOwnerArchive)(nil), "TST.PencilAnnotationOwnerArchive")
	proto.RegisterType((*AccumulatorArchive)(nil), "TST.AccumulatorArchive")
	proto.RegisterType((*GroupColumnArchive)(nil), "TST.GroupColumnArchive")
	proto.RegisterType((*GroupColumnListArchive)(nil), "TST.GroupColumnListArchive")
	proto.RegisterType((*ColumnAggregateArchive)(nil), "TST.ColumnAggregateArchive")
	proto.RegisterType((*ColumnAggregateListArchive)(nil), "TST.ColumnAggregateListArchive")
	proto.RegisterType((*CategoryOwnerArchive)(nil), "TST.CategoryOwnerArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_AggNodeArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.AggNodeArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.GroupNodeArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.GroupNodeArchive.GroupValueTupleArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.GroupNodeArchive.FormatManagerArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive")
	proto.RegisterType((*CategoryOwnerArchive_GroupByArchive_AggregatorArchive)(nil), "TST.CategoryOwnerArchive.GroupByArchive.AggregatorArchive")
	proto.RegisterType((*RichTextPayloadArchive)(nil), "TST.RichTextPayloadArchive")
	proto.RegisterType((*FormulaEqualsTokenAttachmentArchive)(nil), "TST.FormulaEqualsTokenAttachmentArchive")
	proto.RegisterType((*CellFillStandIn)(nil), "TST.CellFillStandIn")
	proto.RegisterType((*FormulaSelectionArchive)(nil), "TST.FormulaSelectionArchive")
	proto.RegisterType((*CellBorderArchive)(nil), "TST.CellBorderArchive")
	proto.RegisterType((*DefaultCellStylesContainerArchive)(nil), "TST.DefaultCellStylesContainerArchive")
	proto.RegisterType((*MultiTableRemapperArchive)(nil), "TST.MultiTableRemapperArchive")
	proto.RegisterType((*ChangePropagationMapWrapper)(nil), "TST.ChangePropagationMapWrapper")
	proto.RegisterType((*SummaryCellVendorArchive)(nil), "TST.SummaryCellVendorArchive")
	proto.RegisterType((*SummaryCellVendorArchive_SummaryCellEntry)(nil), "TST.SummaryCellVendorArchive.SummaryCellEntry")
	proto.RegisterType((*CategoryOrderArchive)(nil), "TST.CategoryOrderArchive")
	proto.RegisterExtension(E_ImportWarningSet)
	proto.RegisterExtension(E_FormatAndValue)
	proto.RegisterExtension(E_CellBorder)
	proto.RegisterExtension(E_CommentStorage)
	proto.RegisterExtension(E_CellSpec)
}

func init() { proto.RegisterFile("TSTArchives.proto", fileDescriptor_eccd47301a17c227) }

var fileDescriptor_eccd47301a17c227 = []byte{
	// 13060 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0xbd, 0x5b, 0x6c, 0x24, 0x49,
	0x76, 0x18, 0x3a, 0xc5, 0x77, 0x9d, 0x62, 0x15, 0xb3, 0x82, 0xaf, 0x22, 0xd9, 0x0f, 0x4e, 0x75,
	0xcf, 0x4c, 0x4f, 0x4f, 0x0f, 0xa7, 0x9b, 0xdd, 0x3d, 0xbd, 0xd3, 0xbb, 0xf3, 0x28, 0x92, 0xc5,
	0xee, 0x9a, 0x21, 0x8b, 0xdc, 0xac, 0xe2, 0xf4, 0xce, 0xae, 0xae, 0x52, 0xd9, 0x95, 0x41, 0x32,
	0xd5, 0x55, 0x99, 0xb5, 0x99, 0x59, 0xcd, 0xe6, 0xde, 0x0b, 0x5d, 0xc8, 0x96, 0x25, 0xec, 0x9f,
	0x6d, 0x08, 0x30, 0x60, 0xd8, 0x90, 0x01, 0xfb, 0x47, 0xc6, 0x1a, 0x7e, 0x7d, 0x58, 0x02, 0x64,
	0xd9, 0x3f, 0xfa, 0xf1, 0x97, 0x01, 0x7f, 0x48, 0x80, 0x0d, 0x08, 0x30, 0x0c, 0xd8, 0x80, 0x0d,
	0x18, 0x90, 0x65, 0xcb, 0x32, 0x0c, 0xc3, 0x88, 0x13, 0x8f, 0x8c, 0xac, 0xca, 0x22, 0xd9, 0xc3,
	0x5e, 0x7d, 0x91, 0x75, 0x5e, 0x11, 0x79, 0xe2, 0x75, 0x22, 0xe2, 0x9c, 0x13, 0x50, 0x6c, 0x36,
	0x9a, 0x95, 0xa0, 0x75, 0xec, 0xbe, 0xa4, 0xe1, 0x5a, 0x37, 0xf0, 0x23, 0x9f, 0x8c, 0x36, 0x1b,
	0xcd, 0xe5, 0x62, 0xb3, 0xb1, 0xbf, 0x4b, 0xc3, 0xd0, 0x3e, 0x92, 0x70, 0x06, 0xda, 0x4a, 0x92,
	0x32, 0xd0, 0x57, 0x83, 0xa0, 0x46, 0x1f, 0x88, 0x34, 0x1b, 0x9b, 0xd5, 0x41, 0xd8, 0xb3, 0xfd,
	0x3e, 0xd8, 0xf5, 0x66, 0xa3, 0xd9, 0x88, 0x4e, 0xdb, 0x74, 0x3f, 0xf0, 0xbb, 0x34, 0x88, 0x4e,
	0x39, 0xde, 0xf5, 0x8e, 0x38, 0x41, 0xb9, 0x0d, 0x13, 0x9b, 0xb4, 0xdd, 0xae, 0x6d, 0x91, 0x6b,
	0x00, 0x5d, 0xbb, 0xf5, 0x82, 0x3a, 0x5b, 0x76, 0x64, 0x97, 0x32, 0xab, 0x23, 0xb7, 0x26, 0x4d,
	0x0d, 0x42, 0x36, 0xa0, 0x40, 0x5f, 0x75, 0x6d, 0xcf, 0xa1, 0x8e, 0xd5, 0xf2, 0xfd, 0xc0, 0x29,
	0x8d, 0xac, 0x66, 0x6e, 0xe5, 0xd6, 0x57, 0xd6, 0x58, 0x5d, 0xd6, 0x98, 0x94, 0x4d, 0x06, 0x76,
	0x3d, 0x3b, 0xa2, 0xa2, 0x1a, 0x66, 0x5e, 0xb2, 0x20, 0xaa, 0xfc, 0x47, 0x19, 0x20, 0x8c, 0xf0,
	0xa0, 0xb6, 0xb5, 0xe3, 0x86, 0x91, 0xa0, 0x22, 0x37, 0x61, 0x2a, 0xf0, 0x4f, 0xac, 0x9e, 0xeb,
	0x84, 0xa5, 0xcc, 0xea, 0xe8, 0xad, 0xdc, 0x7a, 0x76, 0xad, 0xd9, 0xd8, 0x5f, 0x3b, 0x38, 0xa8,
	0x6d, 0x99, 0x93, 0x81, 0x7f, 0x72, 0xe0, 0x3a, 0x21, 0xb9, 0x0d, 0xb9, 0x96, 0xdf, 0xee, 0x75,
	0x3c, 0x4e, 0x38, 0xd2, 0x4f, 0x08, 0x1c, 0x8b, 0xb4, 0x0f, 0x60, 0xa1, 0xe5, 0x77, 0xba, 0x01,
	0x0d, 0x43, 0xea, 0x58, 0x4c, 0xb8, 0xeb, 0x39, 0xf4, 0x15, 0x0d, 0x4b, 0xa3, 0xab, 0xa3, 0xb7,
	0xc6, 0xcd, 0xb9, 0x18, 0x6b, 0xfa, 0x27, 0x35, 0x8e, 0x23, 0x8f, 0x61, 0x49, 0xe3, 0x12, 0x85,
	0x49, 0xc6, 0x31, 0x64, 0x5c, 0x8c, 0x09, 0x36, 0x11, 0x2f, 0x78, 0xcb, 0x47, 0x90, 0x6d, 0xda,
	0xcf, 0xdb, 0xb4, 0xe1, 0xfe, 0x84, 0x9e, 0xab, 0xcb, 0xeb, 0x90, 0xf3, 0x7a, 0x1d, 0x51, 0x42,
	0x88, 0x8a, 0xcc, 0x9b, 0xe0, 0xf5, 0x3a, 0x5c, 0x66, 0x48, 0x96, 0x60, 0x8a, 0x11, 0x04, 0xfe,
	0x09, 0xab, 0x31, 0xc3, 0x4e, 0x7a, 0xbd, 0x8e, 0xe9, 0x9f, 0x84, 0xe5, 0x3d, 0x28, 0x56, 0x85,
	0x52, 0xe3, 0x02, 0xfb, 0x04, 0xb2, 0x12, 0x87, 0x0b, 0x1c, 0x41, 0xac, 0x12, 0xd8, 0x84, 0x2c,
	0x6b, 0x13, 0xd3, 0xf6, 0x8e, 0x28, 0xb9, 0x01, 0x13, 0x7e, 0xe0, 0x1e, 0xb9, 0x1e, 0xca, 0xc8,
	0xad, 0xe7, 0xd6, 0x9a, 0x8d, 0xe6, 0x1a, 0xef, 0x22, 0xa6, 0x40, 0x91, 0x32, 0x8c, 0x85, 0xee,
	0x4f, 0x28, 0x0a, 0xca, 0xad, 0x17, 0x90, 0x44, 0xd5, 0xc5, 0x44, 0x5c, 0x39, 0x8a, 0xab, 0x19,
	0x4b, 0xbf, 0xdf, 0x27, 0xfd, 0xcc, 0xbe, 0x23, 0x4b, 0xbb, 0x9d, 0x28, 0x6d, 0x01, 0x4b, 0x1b,
	0xd0, 0x80, 0x28, 0xf5, 0x7f, 0x64, 0xa0, 0xc0, 0x61, 0xb4, 0x4d, 0x5b, 0x91, 0xeb, 0x7b, 0xe4,
	0x0e, 0x64, 0x5b, 0xb2, 0x02, 0xa2, 0xd8, 0x82, 0xfa, 0x28, 0x84, 0x9a, 0x31, 0x01, 0xf9, 0x1e,
	0x14, 0xe9, 0xab, 0x88, 0x26, 0xaa, 0x9d, 0xf8, 0xce, 0x98, 0x6b, 0x90, 0x90, 0x7c, 0x0c, 0x0b,
	0x03, 0xc0, 0xaf, 0xed, 0xb6, 0xeb, 0x94, 0x46, 0x57, 0x47, 0x6e, 0x4d, 0x99, 0x43, 0xb0, 0xe4,
	0x0b, 0x28, 0x84, 0xb2, 0xc2, 0x56, 0x74, 0xda, 0xa5, 0xa5, 0xb1, 0xd5, 0x91, 0x5b, 0x85, 0xf5,
	0x25, 0x2c, 0x52, 0x7d, 0x4b, 0xf3, 0xb4, 0x1b, 0x8f, 0xac, 0x50, 0x87, 0x96, 0xff, 0xf9, 0x08,
	0xe4, 0x9a, 0x6e, 0x9b, 0x62, 0x6f, 0x3e, 0xf4, 0xc9, 0x4d, 0x28, 0x44, 0x6e, 0x9b, 0xc6, 0x5d,
	0x5f, 0xf4, 0x89, 0xe9, 0x48, 0x12, 0x39, 0xf4, 0x15, 0xb9, 0x0a, 0xc0, 0x3e, 0xdd, 0x6a, 0xf9,
	0x3d, 0x2f, 0x12, 0xfd, 0x02, 0x95, 0xb1, 0xc9, 0x00, 0xe4, 0x7b, 0xb0, 0x82, 0xe8, 0x30, 0xf2,
	0x03, 0xfb, 0x88, 0x5a, 0xcf, 0x7b, 0x87, 0x87, 0x34, 0xb0, 0xba, 0x01, 0xb5, 0x9e, 0x7b, 0x2d,
	0xfc, 0xa6, 0x69, 0x73, 0x91, 0x91, 0x34, 0x38, 0xc5, 0x06, 0x12, 0xec, 0x07, 0x74, 0xc3, 0x6b,
	0x91, 0x8f, 0x60, 0x0e, 0xb9, 0xfd, 0xc3, 0xc3, 0x90, 0x46, 0xa1, 0x62, 0x1b, 0x43, 0xb6, 0x22,
	0xc3, 0xed, 0x71, 0x94, 0x60, 0x78, 0x0f, 0x66, 0x64, 0x49, 0x2f, 0x69, 0x10, 0xba, 0xbe, 0x57,
	0x1a, 0xc7, 0xbe, 0x5f, 0x10, 0xe0, 0xaf, 0x39, 0x94, 0xac, 0xc1, 0x6c, 0x4a, 0xbd, 0x4a, 0x13,
	0xab, 0x19, 0x29, 0x38, 0x51, 0x1f, 0xf2, 0x36, 0x4c, 0xeb, 0x35, 0x29, 0x4d, 0x22, 0x61, 0x4e,
	0xab, 0x41, 0xf9, 0x4f, 0x33, 0x30, 0xc6, 0xf4, 0x47, 0xae, 0x40, 0xb6, 0x63, 0xbf, 0xe2, 0xc3,
	0x46, 0xe8, 0x2c, 0x06, 0x90, 0x05, 0x98, 0xe8, 0xd8, 0xaf, 0x4c, 0xff, 0x44, 0x28, 0x4b, 0xfc,
	0x22, 0xcb, 0x38, 0xbc, 0x58, 0xab, 0x86, 0xa8, 0x96, 0xbc, 0xa9, 0x7e, 0x93, 0x12, 0xb0, 0xa1,
	0x86, 0x23, 0x6f, 0x4c, 0x8d, 0x3c, 0xf6, 0x93, 0xdc, 0xc1, 0x79, 0x8f, 0xb5, 0x57, 0x58, 0x1a,
	0xc7, 0xe9, 0xcc, 0xe0, 0x63, 0x29, 0x6e, 0x48, 0x53, 0x51, 0xa4, 0xa9, 0x67, 0x22, 0x55, 0x3d,
	0xef, 0x43, 0xb1, 0x6d, 0x87, 0x91, 0x15, 0xda, 0x2f, 0xa9, 0x63, 0xb9, 0x9e, 0xb5, 0x51, 0xdf,
	0xc4, 0x6f, 0x9e, 0x32, 0x0b, 0x0c, 0xd1, 0x60, 0xf0, 0x9a, 0xb7, 0x51, 0xdf, 0x2c, 0xff, 0x0a,
	0xef, 0x35, 0x42, 0x5d, 0xe4, 0x03, 0x18, 0x67, 0xfd, 0x43, 0xce, 0xc2, 0xf3, 0xaa, 0x36, 0x82,
	0x80, 0xd7, 0x8c, 0xd3, 0x2c, 0x6f, 0x08, 0x8d, 0x2d, 0xc0, 0x04, 0x03, 0xb8, 0x8e, 0x50, 0x97,
	0xf8, 0xc5, 0x66, 0x09, 0xf6, 0x9f, 0x36, 0x7a, 0xf6, 0xd7, 0x4c, 0x7a, 0x48, 0x03, 0xea, 0xb5,
	0xa8, 0x89, 0xb8, 0xf2, 0xef, 0x8c, 0x41, 0x61, 0xdf, 0xef, 0x1e, 0x74, 0x77, 0xa9, 0xd7, 0xdb,
	0xf5, 0x1d, 0xda, 0x26, 0x0f, 0x61, 0xcc, 0x8d, 0x68, 0x47, 0x54, 0xe1, 0x2a, 0x56, 0x21, 0x49,
	0x82, 0x63, 0xf0, 0x6b, 0xbb, 0xdd, 0xa3, 0x1b, 0x23, 0xa5, 0x8c, 0x89, 0xe4, 0xe4, 0x3e, 0x64,
	0xa3, 0xb0, 0x45, 0x2d, 0xe4, 0xe5, 0x6b, 0xc3, 0x42, 0x3c, 0xbb, 0x20, 0xb5, 0x1c, 0x3a, 0x53,
	0x8c, 0xb0, 0x16, 0xd1, 0xce, 0xf2, 0x1f, 0x8e, 0xf0, 0xb9, 0x0f, 0xd1, 0xa4, 0x06, 0x33, 0xd8,
	0x4d, 0x5e, 0xb2, 0x5f, 0x7c, 0x18, 0x66, 0x70, 0x18, 0xbe, 0x7d, 0x66, 0x25, 0xd8, 0xf8, 0x33,
	0xf3, 0x2d, 0xfd, 0x27, 0xd9, 0x80, 0xfc, 0x73, 0xdf, 0x6f, 0x53, 0xdb, 0xe3, 0xd2, 0xc4, 0x5a,
	0x79, 0x95, 0xd7, 0x68, 0x83, 0xa3, 0x06, 0x2a, 0x36, 0x2d, 0x78, 0x78, 0x75, 0x3e, 0x01, 0x70,
	0xec, 0x88, 0x0a, 0x01, 0xa3, 0x28, 0x60, 0x99, 0x0b, 0xd8, 0xb2, 0x23, 0x3a, 0xc0, 0x9d, 0x65,
	0xd4, 0x9c, 0xf5, 0x73, 0x98, 0xf6, 0x7a, 0x9d, 0xe7, 0x34, 0x10, 0xcc, 0x63, 0xc8, 0x7c, 0x85,
	0x33, 0xd7, 0x11, 0x33, 0xc0, 0x9e, 0xe3, 0x1c, 0x4a, 0x40, 0x18, 0x05, 0xae, 0x77, 0x24, 0x04,
	0x8c, 0xeb, 0x02, 0x1a, 0x88, 0x19, 0x14, 0xc0, 0x39, 0x10, 0x56, 0xfe, 0x25, 0xc8, 0x27, 0x14,
	0x44, 0xa6, 0x61, 0xaa, 0x5e, 0xdb, 0xb1, 0x9a, 0xdf, 0xec, 0x57, 0x8d, 0x0c, 0x31, 0x60, 0x7a,
	0x63, 0x6f, 0x6f, 0xa7, 0x5a, 0xa9, 0x73, 0xc8, 0x08, 0xc9, 0x43, 0x76, 0xab, 0xd2, 0xac, 0xf2,
	0x9f, 0xa3, 0x64, 0x06, 0x72, 0xf5, 0x83, 0xdd, 0x8d, 0xaa, 0xc9, 0x01, 0x63, 0x0c, 0xd0, 0x68,
	0x9a, 0xb5, 0xfa, 0x13, 0x0e, 0x18, 0x2f, 0xff, 0x71, 0x1e, 0x16, 0x6b, 0x9d, 0xae, 0x1f, 0x44,
	0xcf, 0xec, 0xc0, 0x73, 0xbd, 0xa3, 0x06, 0x55, 0x06, 0xc5, 0x11, 0x2c, 0x1c, 0xfa, 0x41, 0xa7,
	0xd7, 0xb6, 0x2d, 0x17, 0x49, 0xac, 0x13, 0x4e, 0x53, 0xca, 0xe0, 0x87, 0xdc, 0xc3, 0x06, 0x1d,
	0xc2, 0xbd, 0xb6, 0xcd, 0x59, 0x13, 0x68, 0x73, 0xee, 0x30, 0x05, 0x4a, 0xbe, 0x84, 0xeb, 0x2d,
	0xdf, 0x73, 0x2c, 0x86, 0xb4, 0x23, 0xcb, 0x7e, 0xee, 0xbf, 0xa4, 0x96, 0xfd, 0xf2, 0xc8, 0xa2,
	0x3f, 0xee, 0xd9, 0x6d, 0xf6, 0x1f, 0xb6, 0xfc, 0xd4, 0xe3, 0xf1, 0x43, 0xbb, 0x1d, 0x52, 0x73,
	0x99, 0x51, 0x6f, 0x23, 0x71, 0x85, 0xd1, 0x56, 0x5e, 0x1e, 0x55, 0x19, 0x65, 0xe5, 0xe5, 0x11,
	0xd9, 0x86, 0xab, 0xe9, 0xb2, 0xc2, 0xc8, 0xb1, 0x1c, 0xfa, 0x12, 0xbb, 0x80, 0x92, 0x54, 0x1a,
	0x94, 0xd4, 0x88, 0x9c, 0x2d, 0xfa, 0x92, 0x6c, 0xc1, 0x8a, 0x2e, 0x87, 0x19, 0x2c, 0x6d, 0xfa,
	0xca, 0x12, 0xf5, 0xc7, 0xbe, 0x90, 0x26, 0x65, 0x93, 0xd3, 0x89, 0x8f, 0x1f, 0x94, 0xe2, 0x45,
	0xb6, 0xeb, 0x85, 0x16, 0x0d, 0x02, 0x3f, 0x08, 0xb1, 0x43, 0xa4, 0x4b, 0xe1, 0x74, 0x55, 0x24,
	0x23, 0x1f, 0x81, 0xa1, 0x4b, 0xa1, 0xaf, 0xba, 0x7c, 0x9a, 0x56, 0xac, 0x85, 0x98, 0xb5, 0xfa,
	0xaa, 0x1b, 0x90, 0xaf, 0x92, 0x0a, 0xf5, 0xfc, 0xc1, 0xa2, 0x27, 0x75, 0xfe, 0x95, 0x98, 0xbf,
	0xee, 0xf7, 0x97, 0xfe, 0x23, 0xb8, 0xa5, 0x0b, 0xeb, 0xda, 0x81, 0xdd, 0xa1, 0x11, 0x0d, 0x42,
	0x94, 0x6b, 0xb3, 0x15, 0xc4, 0xee, 0x88, 0x91, 0x3e, 0xa5, 0x4b, 0x2d, 0xc7, 0x52, 0xf7, 0x15,
	0x53, 0xdd, 0x8f, 0x2a, 0xed, 0x76, 0xc3, 0xee, 0xf0, 0x0e, 0xfd, 0x29, 0x94, 0x74, 0xe1, 0x61,
	0xe4, 0x77, 0x2d, 0xf7, 0xd0, 0x8a, 0x82, 0x1e, 0x2d, 0x65, 0x75, 0x61, 0x73, 0xb1, 0xb0, 0x46,
	0xe4, 0x77, 0x6b, 0x87, 0xcd, 0xa0, 0x47, 0x49, 0x1d, 0x56, 0x75, 0xf6, 0x9e, 0x17, 0xf6, 0xba,
	0xac, 0x67, 0x51, 0xc7, 0x62, 0x96, 0xba, 0x1d, 0xf9, 0x41, 0x09, 0x74, 0x31, 0x57, 0x63, 0x31,
	0x07, 0x31, 0xf1, 0x9e, 0xa0, 0x25, 0x3b, 0x49, 0xc5, 0xe9, 0xf2, 0xc2, 0xe8, 0xb4, 0xcd, 0xfa,
	0x7e, 0x4e, 0x17, 0x77, 0x25, 0x55, 0x5c, 0x83, 0x93, 0x92, 0x06, 0xdc, 0x18, 0x26, 0x2d, 0x72,
	0x3b, 0xd4, 0xea, 0xd2, 0xc0, 0xf5, 0x9d, 0xd2, 0xb4, 0x2e, 0xf1, 0x7a, 0xaa, 0xc4, 0xa6, 0xdb,
	0xa1, 0xfb, 0x48, 0x4d, 0x2a, 0xb0, 0x8c, 0x4d, 0x68, 0xe1, 0x2c, 0x7b, 0xe2, 0x46, 0xc7, 0x96,
	0xe7, 0xab, 0x7e, 0x99, 0xd7, 0x65, 0x2d, 0x20, 0x21, 0x9b, 0x41, 0x9e, 0xb9, 0xd1, 0x71, 0xdd,
	0x97, 0xbd, 0xf2, 0x53, 0x58, 0xd4, 0xeb, 0xa2, 0xd5, 0xb1, 0x54, 0xd0, 0xf9, 0xe7, 0x35, 0xaa,
	0x4d, 0x55, 0x2d, 0x72, 0x17, 0xe6, 0xb8, 0x51, 0x69, 0xb7, 0x2d, 0xc7, 0x8e, 0x6c, 0xc9, 0x3b,
	0xb3, 0x9a, 0xb9, 0x95, 0x35, 0x89, 0xc4, 0x31, 0x1b, 0x9d, 0x73, 0x2c, 0xff, 0x9b, 0x0c, 0xcc,
	0xa5, 0xcd, 0x07, 0xc4, 0x06, 0x39, 0x23, 0xc8, 0xb9, 0x45, 0x5f, 0x31, 0x3e, 0xba, 0xc8, 0x04,
	0x23, 0x10, 0xb8, 0x7e, 0x90, 0xc3, 0x01, 0x18, 0x79, 0x1f, 0x0c, 0x55, 0x5b, 0xa9, 0xa5, 0x11,
	0xac, 0xe9, 0x8c, 0x84, 0x4b, 0xbd, 0x7c, 0x08, 0x84, 0x7d, 0x6f, 0x9b, 0x76, 0xa8, 0x17, 0xd9,
	0xc1, 0xa9, 0x15, 0xd1, 0x57, 0x11, 0x4e, 0x18, 0x59, 0xb3, 0x98, 0xc0, 0x34, 0xe9, 0xab, 0xa8,
	0xfc, 0x77, 0x47, 0x81, 0x0c, 0x56, 0x82, 0xcc, 0x43, 0xb1, 0xf9, 0xd4, 0xac, 0x56, 0xad, 0x2d,
	0xcb, 0xac, 0x6e, 0x57, 0xcd, 0x6a, 0x7d, 0x93, 0x4d, 0xd6, 0xb3, 0x30, 0x53, 0x31, 0xcd, 0xca,
	0x37, 0xd5, 0x2d, 0x6b, 0x7b, 0xcf, 0xdc, 0x3d, 0xd8, 0xa9, 0x18, 0x23, 0xe4, 0x06, 0x5c, 0xdf,
	0xaa, 0x6d, 0x23, 0x51, 0xd3, 0xda, 0xa8, 0x3e, 0xad, 0x7c, 0x5d, 0xdb, 0x33, 0x19, 0xde, 0xda,
	0x3e, 0xa8, 0x6f, 0x36, 0x6b, 0x7b, 0x75, 0x3e, 0x8b, 0x57, 0x4d, 0x73, 0xcf, 0xb4, 0x9a, 0x7b,
	0x5f, 0x55, 0xeb, 0xc6, 0x18, 0x59, 0x00, 0x52, 0xfd, 0x41, 0xb3, 0x6a, 0xd6, 0x2b, 0x3b, 0x5a,
	0x11, 0xe3, 0xe4, 0x0a, 0x94, 0xea, 0x95, 0xe6, 0x81, 0x59, 0xd9, 0xb1, 0x76, 0x2a, 0xf5, 0x27,
	0x07, 0x95, 0x27, 0x55, 0x55, 0xd6, 0x04, 0x59, 0x81, 0x45, 0x45, 0x6c, 0xed, 0x1d, 0x34, 0xad,
	0xbd, 0x6d, 0x6b, 0x63, 0xef, 0xa0, 0xbe, 0xd5, 0x30, 0x26, 0xc9, 0xdb, 0x70, 0xb5, 0xf1, 0xb4,
	0x62, 0xc6, 0x95, 0xb3, 0x36, 0x2a, 0x8d, 0xaa, 0x55, 0xdf, 0x6b, 0x5a, 0xdb, 0x8c, 0xc6, 0x98,
	0x62, 0xab, 0xcd, 0x41, 0xfd, 0xab, 0xfa, 0xde, 0xb3, 0xba, 0x55, 0xaf, 0xec, 0x56, 0x8d, 0x2c,
	0x59, 0x84, 0xd9, 0x83, 0x7a, 0xe3, 0x60, 0x7f, 0x7f, 0xcf, 0x6c, 0x6a, 0x9f, 0x05, 0xa4, 0x04,
	0x73, 0x09, 0x84, 0xfc, 0x96, 0x1c, 0x99, 0x03, 0x43, 0xc7, 0xa0, 0xa0, 0x69, 0x46, 0xdf, 0x34,
	0x2b, 0xf5, 0xc6, 0xfe, 0x5e, 0x83, 0x01, 0xf7, 0xac, 0x5a, 0xa3, 0x71, 0x50, 0x6d, 0x18, 0x79,
	0xb2, 0x0c, 0x0b, 0x1a, 0xe6, 0x59, 0xad, 0xf9, 0x54, 0xe2, 0x0a, 0xe4, 0x26, 0xac, 0xa6, 0xe3,
	0xac, 0x83, 0xfa, 0xe6, 0xd3, 0x4a, 0xfd, 0x49, 0x75, 0xcb, 0x98, 0x29, 0xff, 0xcd, 0x0c, 0x94,
	0x71, 0xa3, 0x40, 0x0f, 0xfb, 0x7b, 0xd2, 0xbe, 0xed, 0x06, 0x72, 0xb1, 0x7b, 0x08, 0x53, 0x38,
	0xa0, 0x02, 0x7a, 0x28, 0xf6, 0x37, 0xcb, 0xb1, 0xe1, 0xa3, 0x0c, 0x2e, 0xb9, 0x4a, 0x4f, 0xb6,
	0x38, 0x94, 0x7c, 0x0a, 0x39, 0xd9, 0x71, 0x43, 0x1a, 0x09, 0xfb, 0xe2, 0xca, 0x59, 0xfd, 0xd6,
	0x84, 0x13, 0x05, 0x2a, 0xff, 0x5a, 0x06, 0x56, 0xfb, 0xe9, 0x36, 0x4e, 0x45, 0x91, 0xb2, 0x6a,
	0xbf, 0x04, 0x25, 0x56, 0x5c, 0x40, 0x0f, 0x2d, 0xad, 0x2c, 0xab, 0x6b, 0xbb, 0x81, 0xb0, 0xef,
	0xde, 0x8b, 0x37, 0x55, 0x67, 0x7e, 0xa5, 0x39, 0x2f, 0x04, 0x25, 0xb1, 0xe5, 0xdf, 0x9e, 0x84,
	0x3c, 0x6e, 0xf8, 0xd8, 0x98, 0xdd, 0x71, 0xc3, 0x88, 0x3c, 0x82, 0xa9, 0xb6, 0x1b, 0x46, 0xcd,
	0x78, 0x30, 0xae, 0xc4, 0x1b, 0x54, 0x49, 0xb5, 0xb6, 0x23, 0x48, 0x4c, 0x45, 0xcc, 0x36, 0xed,
	0x1e, 0x7d, 0x15, 0x31, 0x4c, 0x6d, 0x4b, 0xd8, 0xf7, 0x1a, 0x84, 0x7c, 0x0c, 0x93, 0xd4, 0x8b,
	0x02, 0x57, 0x1c, 0x22, 0x48, 0x65, 0x0d, 0xca, 0xad, 0x7a, 0x51, 0x70, 0x6a, 0x4a, 0xe2, 0xe5,
	0xdf, 0x1c, 0x83, 0xac, 0x02, 0x13, 0x03, 0x46, 0x5f, 0xd0, 0x53, 0x61, 0x2a, 0xb3, 0x7f, 0xd9,
	0xde, 0x21, 0xa0, 0x87, 0xfa, 0x16, 0x4c, 0xfd, 0x66, 0xb6, 0x35, 0xb7, 0xaa, 0xc4, 0x58, 0x16,
	0xbf, 0xd8, 0xa6, 0x36, 0x90, 0x2d, 0x2b, 0xac, 0xbb, 0x7e, 0x03, 0x3b, 0x26, 0x20, 0x6b, 0x30,
	0x29, 0xe7, 0x0f, 0x6e, 0xc8, 0xcd, 0xf1, 0x0e, 0x22, 0xa6, 0x00, 0xd5, 0x35, 0x04, 0x11, 0xb9,
	0x0b, 0x13, 0x62, 0x62, 0x9c, 0x40, 0xf2, 0xd2, 0x5a, 0xb3, 0xf1, 0xd5, 0x9a, 0x5c, 0xc2, 0x82,
	0x5e, 0x4b, 0xf5, 0x08, 0x41, 0x47, 0x3e, 0x85, 0x7c, 0xab, 0x17, 0x46, 0x7e, 0x47, 0xce, 0xa8,
	0x53, 0x1a, 0xe3, 0x26, 0x62, 0x84, 0xad, 0x22, 0x4d, 0xdd, 0x96, 0x06, 0x24, 0x8f, 0xa1, 0x18,
	0xb8, 0xad, 0x63, 0x9c, 0xb5, 0xac, 0xae, 0x7d, 0xda, 0xf6, 0x6d, 0x07, 0x17, 0xd1, 0xc1, 0xcf,
	0x9a, 0x61, 0x84, 0x6c, 0x12, 0xdb, 0xe7, 0x64, 0xe4, 0x11, 0xcc, 0xb4, 0xfc, 0x0e, 0x9b, 0xdd,
	0xe4, 0x7e, 0x10, 0xd7, 0xcd, 0x41, 0xce, 0x82, 0x20, 0x93, 0x9b, 0x9d, 0x2f, 0x81, 0x24, 0x8d,
	0x43, 0x1c, 0x07, 0xb9, 0x0b, 0x8c, 0x03, 0xc3, 0xed, 0x43, 0x90, 0x7b, 0xfc, 0x90, 0xc1, 0x0a,
	0xbb, 0xb4, 0x85, 0xab, 0x22, 0xd7, 0x31, 0xef, 0xd9, 0x8d, 0x2e, 0x6d, 0xa9, 0xbd, 0x47, 0x4b,
	0x00, 0xca, 0xff, 0x35, 0x03, 0x53, 0xb2, 0x17, 0x12, 0x80, 0x09, 0x6e, 0xdd, 0x1a, 0x19, 0xf6,
	0x3f, 0x9b, 0x8f, 0x2a, 0x4d, 0x63, 0x84, 0xe4, 0x60, 0x52, 0xce, 0x4d, 0xa3, 0x24, 0x0b, 0xe3,
	0x8d, 0xe6, 0x37, 0x3b, 0xcc, 0x1a, 0x2e, 0x42, 0x5e, 0xce, 0x76, 0x38, 0xc1, 0x1a, 0xe3, 0x0c,
	0xb4, 0x79, 0xd0, 0x68, 0xee, 0xed, 0x5a, 0x82, 0x7b, 0x82, 0x5c, 0x87, 0x95, 0xdd, 0x83, 0x9d,
	0x66, 0x6d, 0x7f, 0xa7, 0x6a, 0x6d, 0x3e, 0xdd, 0xab, 0x6d, 0x56, 0xad, 0x9d, 0x5a, 0xa3, 0x29,
	0x09, 0x26, 0xd9, 0x84, 0x6f, 0xd6, 0x36, 0x9f, 0x5a, 0xcd, 0xea, 0x0f, 0x9a, 0xd6, 0x7e, 0xe5,
	0x9b, 0x9d, 0xbd, 0x0a, 0x9b, 0x2f, 0xe7, 0xa1, 0xb8, 0xb9, 0x57, 0xdf, 0xaa, 0xb1, 0x99, 0xaf,
	0xb2, 0x63, 0xf1, 0x42, 0xb3, 0x6c, 0x1d, 0xd8, 0xdc, 0xdb, 0xdd, 0x65, 0x13, 0x7e, 0xa3, 0xb9,
	0x67, 0x56, 0x9e, 0x54, 0x0d, 0x20, 0x04, 0x0a, 0xb5, 0x5d, 0x36, 0x27, 0x5a, 0xcf, 0x2a, 0x66,
	0x9d, 0x7d, 0x41, 0x4e, 0xf0, 0x37, 0xcd, 0xbd, 0x1d, 0x6b, 0xb3, 0xba, 0xb3, 0x63, 0x35, 0xf6,
	0xab, 0x9b, 0xc6, 0x74, 0xf9, 0x97, 0x21, 0x87, 0x83, 0xc5, 0xdc, 0x68, 0x06, 0x14, 0x37, 0x9b,
	0x9e, 0xef, 0xf4, 0x6f, 0x36, 0x63, 0x82, 0xb5, 0xba, 0xef, 0x50, 0x93, 0xd3, 0x2c, 0xaf, 0xc1,
	0x18, 0xfb, 0x99, 0x32, 0x7c, 0xe6, 0x60, 0x5c, 0x6e, 0xb1, 0x18, 0x8c, 0xff, 0x28, 0xff, 0xdb,
	0x11, 0x98, 0x7d, 0x4a, 0x6d, 0x87, 0x06, 0xea, 0x28, 0xa0, 0xf5, 0x82, 0x46, 0x64, 0x0d, 0xc8,
	0x73, 0xfc, 0xef, 0xa9, 0x1d, 0x1e, 0x6f, 0xf7, 0x3c, 0x3c, 0x41, 0x11, 0xe2, 0x52, 0x30, 0xe4,
	0x13, 0x98, 0x3c, 0x46, 0x31, 0xf2, 0xc0, 0xf1, 0x3a, 0x56, 0x33, 0x45, 0xb4, 0x80, 0x99, 0x92,
	0x7e, 0xf9, 0x8f, 0x32, 0x30, 0xc1, 0x61, 0xac, 0x8e, 0xfa, 0x21, 0x0c, 0xff, 0x41, 0x88, 0x76,
	0xb0, 0x35, 0xc2, 0x0f, 0xb0, 0xc8, 0x2a, 0xe4, 0x8e, 0x5d, 0x87, 0xf5, 0xaa, 0xc8, 0x8e, 0xa8,
	0x38, 0x4b, 0xd0, 0x41, 0xe4, 0x26, 0xe4, 0xf9, 0x4e, 0x6d, 0xef, 0x90, 0x9f, 0x37, 0xf0, 0x43,
	0x85, 0x24, 0x90, 0x7c, 0x28, 0x4e, 0x76, 0x98, 0xed, 0x27, 0xb7, 0x6f, 0x03, 0x33, 0x04, 0x3f,
	0x29, 0x39, 0x6d, 0x53, 0x46, 0x8e, 0x63, 0x8f, 0x93, 0x4f, 0xa4, 0x93, 0x33, 0x0a, 0x24, 0x2f,
	0xbb, 0x90, 0x4f, 0x68, 0xe0, 0xb5, 0xd5, 0x7a, 0x0b, 0x26, 0x39, 0x54, 0xaa, 0xb5, 0xbf, 0x30,
	0x89, 0x2e, 0xff, 0xef, 0x2c, 0x64, 0xd9, 0xec, 0xca, 0x4a, 0xa2, 0x64, 0x1d, 0x20, 0xf0, 0x4f,
	0x9e, 0x8a, 0x16, 0xe1, 0xab, 0x1d, 0x19, 0x6c, 0x11, 0x53, 0xa3, 0x22, 0x0f, 0x20, 0xcf, 0xcf,
	0x45, 0x9f, 0xaa, 0x86, 0x4c, 0x3b, 0x90, 0x48, 0x12, 0x91, 0x77, 0xe5, 0x51, 0xc8, 0x28, 0x52,
	0x1b, 0xfd, 0x47, 0x21, 0xe2, 0x14, 0x84, 0xdc, 0x05, 0xb1, 0xef, 0xc5, 0x9e, 0x8b, 0x8d, 0x31,
	0x28, 0x5b, 0x27, 0x21, 0x6b, 0x00, 0xa8, 0x66, 0xce, 0x30, 0x9e, 0xca, 0xa0, 0x51, 0x90, 0xfb,
	0x90, 0x97, 0x96, 0x66, 0x84, 0x2c, 0x13, 0xa9, 0x2c, 0xd3, 0x82, 0x88, 0x33, 0x7d, 0x0f, 0x8a,
	0xe2, 0x37, 0xee, 0x85, 0x78, 0x59, 0xd3, 0xa9, 0xed, 0x3a, 0x48, 0x48, 0x3e, 0xe7, 0xc6, 0xad,
	0x1d, 0xf1, 0x12, 0xd5, 0xd1, 0x5d, 0x2e, 0xb5, 0xe4, 0x22, 0xa7, 0x45, 0x56, 0x71, 0x94, 0xd7,
	0x84, 0xab, 0x9d, 0x5e, 0x3b, 0x72, 0xbb, 0x6d, 0xba, 0x79, 0xec, 0xbb, 0x2d, 0xca, 0x66, 0xba,
	0xed, 0x98, 0xac, 0x64, 0xa4, 0x56, 0xe5, 0x6c, 0x26, 0xf2, 0x1d, 0x30, 0x3a, 0x34, 0x38, 0xa2,
	0x56, 0x40, 0x8f, 0x5c, 0xdf, 0xb3, 0x3a, 0x76, 0x17, 0xb7, 0x0d, 0x29, 0x73, 0x3d, 0xd2, 0x99,
	0x48, 0xb6, 0x6b, 0x77, 0x99, 0x3a, 0xf4, 0x05, 0x87, 0xd7, 0x61, 0x26, 0x5d, 0x1d, 0x03, 0x84,
	0xe4, 0x5d, 0x28, 0x30, 0x3b, 0xc0, 0xf4, 0x4f, 0x1a, 0x51, 0xe0, 0x76, 0x6b, 0x5b, 0xa5, 0x49,
	0xec, 0xd9, 0x7d, 0x50, 0x72, 0x07, 0x8a, 0x0c, 0xc2, 0xcf, 0x0a, 0x25, 0xe9, 0x14, 0x92, 0x0e,
	0x22, 0xc8, 0x3a, 0xe4, 0x02, 0xff, 0x84, 0x75, 0x29, 0x36, 0xdb, 0x95, 0xb2, 0x7a, 0x3f, 0x8b,
	0x67, 0x41, 0x53, 0x27, 0x22, 0xdf, 0x81, 0x02, 0xef, 0xa6, 0x8a, 0x0d, 0x86, 0xb0, 0xf5, 0xd1,
	0x91, 0x87, 0xb0, 0xd8, 0x77, 0x7a, 0xa8, 0x5a, 0xb5, 0x80, 0xa7, 0x88, 0x73, 0xc9, 0x53, 0x44,
	0xd1, 0x90, 0x1f, 0xc3, 0x4c, 0xbc, 0x32, 0xf3, 0xee, 0x57, 0x4c, 0x55, 0x5b, 0x5e, 0xae, 0xcb,
	0x5c, 0x65, 0x5b, 0x30, 0xcf, 0x36, 0x67, 0x2e, 0x1b, 0xed, 0x76, 0x1b, 0x7b, 0x33, 0xe7, 0x26,
	0xa9, 0xdc, 0xe9, 0xc4, 0xe4, 0x0b, 0x98, 0x4d, 0x2e, 0xda, 0xbc, 0xe1, 0x66, 0x53, 0x65, 0xa4,
	0x91, 0xb2, 0x7a, 0xf4, 0x2f, 0xd6, 0x5c, 0xc6, 0x5c, 0x7a, 0x3d, 0x52, 0x89, 0x49, 0x15, 0x16,
	0x5b, 0xbe, 0x17, 0x05, 0x7e, 0xdb, 0x52, 0xcb, 0xbc, 0xd0, 0xc6, 0x7c, 0xaa, 0x9c, 0x39, 0x41,
	0x2e, 0x97, 0x7f, 0x2e, 0xe6, 0x1e, 0x4c, 0xeb, 0xc3, 0xaa, 0xb4, 0x90, 0xca, 0x9b, 0xd3, 0x86,
	0x53, 0xf9, 0xbf, 0x8c, 0x82, 0x81, 0xff, 0xd5, 0xbc, 0x43, 0x5f, 0x9a, 0xd5, 0xb7, 0x61, 0x3c,
	0xec, 0x75, 0x69, 0x20, 0x26, 0x40, 0x66, 0x69, 0x6c, 0xad, 0x6d, 0x05, 0xf6, 0x09, 0x23, 0x94,
	0x96, 0x06, 0x27, 0x61, 0xb3, 0x0d, 0x16, 0x86, 0x87, 0x96, 0x43, 0xa6, 0x3e, 0x8d, 0x82, 0x3c,
	0x82, 0x3c, 0x65, 0x2d, 0xc1, 0xcc, 0x21, 0xb1, 0x04, 0xa5, 0x54, 0x12, 0x0f, 0x5e, 0xa7, 0x05,
	0x21, 0x5f, 0x97, 0xee, 0x43, 0x3e, 0xec, 0x75, 0x3a, 0x6c, 0xf3, 0xd9, 0xc1, 0xb2, 0xd2, 0xcd,
	0xd2, 0x69, 0x41, 0x24, 0x0f, 0x7b, 0x0b, 0x2d, 0x3b, 0xa2, 0x47, 0x7e, 0x70, 0x6a, 0xf9, 0x81,
	0x43, 0x83, 0x21, 0x4b, 0x55, 0x5e, 0x52, 0xed, 0x31, 0x22, 0x36, 0x3f, 0xbd, 0x74, 0xe9, 0x89,
	0xbc, 0xa2, 0x53, 0x97, 0x87, 0xe9, 0x0b, 0x57, 0x91, 0xd1, 0xf2, 0xb1, 0x67, 0x8a, 0xbb, 0xc4,
	0x0f, 0x21, 0x7f, 0x14, 0xf8, 0xbd, 0xae, 0xf5, 0xfc, 0xd4, 0xea, 0xf5, 0x5c, 0x07, 0x0f, 0x95,
	0x12, 0xb7, 0x89, 0x39, 0xc4, 0x6f, 0x9c, 0x1e, 0xf4, 0x5c, 0x66, 0x63, 0x92, 0x63, 0xd7, 0x71,
	0xa8, 0xc7, 0x75, 0x12, 0x72, 0x9e, 0xa9, 0x7e, 0x1e, 0x83, 0x13, 0xa1, 0x3e, 0x42, 0x64, 0x5c,
	0x83, 0x59, 0x39, 0x77, 0xe3, 0x9d, 0xa9, 0x15, 0x76, 0xed, 0x16, 0x3f, 0x1f, 0xca, 0xab, 0x89,
	0x17, 0xaf, 0xbe, 0x1a, 0x0c, 0x51, 0xfe, 0x31, 0xcc, 0x6e, 0x8a, 0x2f, 0xfd, 0x0b, 0x6a, 0xf0,
	0xf2, 0x0b, 0x20, 0xcf, 0xf6, 0x07, 0xba, 0xd8, 0x07, 0xc9, 0x12, 0x35, 0xe3, 0x4c, 0xa3, 0x92,
	0x45, 0xde, 0x82, 0x49, 0x69, 0x7a, 0x8f, 0xa4, 0xb6, 0x80, 0x44, 0x97, 0xff, 0x9d, 0x01, 0x25,
	0x7e, 0x3f, 0xc7, 0x06, 0x79, 0x9d, 0x46, 0x27, 0x7e, 0xf0, 0x42, 0x96, 0xf9, 0x11, 0xe4, 0xf8,
	0x72, 0xc3, 0xad, 0x90, 0xec, 0x19, 0x55, 0xe7, 0x56, 0xcb, 0xc7, 0x30, 0xf3, 0xdc, 0x77, 0xf8,
	0x61, 0x87, 0x60, 0xca, 0xa4, 0xaf, 0xed, 0x8c, 0xac, 0x29, 0xcd, 0x17, 0x52, 0x81, 0x79, 0x6e,
	0xa4, 0x61, 0xcf, 0xd1, 0xb8, 0xd3, 0xb5, 0x45, 0x38, 0xb1, 0xe9, 0x9f, 0xc4, 0x22, 0x9e, 0x40,
	0x49, 0x88, 0x10, 0x7d, 0x50, 0x93, 0x32, 0x9a, 0x2a, 0x45, 0x14, 0xc9, 0xfb, 0x61, 0xa2, 0x2e,
	0x87, 0xbe, 0x1f, 0x0d, 0xd6, 0x25, 0xdd, 0x92, 0x20, 0x9c, 0x38, 0x51, 0x97, 0x1d, 0x58, 0x51,
	0x83, 0xa8, 0x4d, 0x5f, 0xd2, 0xb6, 0x75, 0x4f, 0x17, 0x94, 0xbe, 0x42, 0x2e, 0x4a, 0x96, 0x1d,
	0xc6, 0x71, 0xef, 0x2c, 0x69, 0xeb, 0xba, 0xb4, 0xc2, 0x05, 0xa4, 0xad, 0x9f, 0x25, 0xed, 0xbe,
	0x2e, 0x6d, 0xe6, 0x02, 0xd2, 0xee, 0x9f, 0x25, 0xed, 0x81, 0x2e, 0xcd, 0xb8, 0x80, 0xb4, 0x07,
	0x67, 0x49, 0x7b, 0xa8, 0x4b, 0x2b, 0x5e, 0x40, 0xda, 0xc3, 0x58, 0xda, 0x36, 0x94, 0xda, 0xf6,
	0x73, 0xda, 0x4e, 0x6b, 0x82, 0xc5, 0xf4, 0x45, 0x02, 0xe9, 0xfb, 0xf5, 0xdf, 0x27, 0x27, 0xa1,
	0xfc, 0xd2, 0x79, 0x72, 0xd6, 0x87, 0xca, 0x49, 0xa8, 0x7d, 0xe9, 0x3c, 0x39, 0xf7, 0x87, 0xca,
	0x49, 0x28, 0x7c, 0xf9, 0x3c, 0x39, 0x0f, 0x86, 0xca, 0x49, 0xa8, 0x7a, 0xe5, 0x3c, 0x39, 0x9a,
	0x9e, 0xe5, 0xa0, 0x4f, 0x6c, 0x6f, 0x86, 0x0e, 0xfa, 0x4d, 0xb5, 0xc5, 0xf9, 0x0e, 0x18, 0xda,
	0xa0, 0x97, 0x1b, 0x9d, 0x34, 0xc6, 0x82, 0x1a, 0xef, 0x9c, 0xf3, 0x33, 0x98, 0x4d, 0x8e, 0x75,
	0xce, 0x3c, 0x99, 0x6e, 0x0c, 0xeb, 0xc3, 0x5c, 0x95, 0xac, 0x0d, 0x71, 0xce, 0x3c, 0x95, 0x5e,
	0xb2, 0x1a, 0xdd, 0x9c, 0x73, 0x13, 0x16, 0x06, 0x46, 0x36, 0xe7, 0x27, 0x43, 0x4c, 0xa0, 0xc4,
	0xa0, 0x1e, 0x26, 0x64, 0x5d, 0x08, 0x99, 0xbd, 0x80, 0x90, 0xf5, 0x61, 0x42, 0xee, 0x0b, 0x21,
	0x73, 0x17, 0x10, 0x72, 0x7f, 0x98, 0x90, 0x07, 0x42, 0xc8, 0xfc, 0x05, 0x84, 0x3c, 0x18, 0x26,
	0xe4, 0xa1, 0x10, 0xb2, 0x70, 0x01, 0x21, 0x0f, 0xb9, 0x90, 0x4f, 0x61, 0x36, 0x39, 0x58, 0xb9,
	0x84, 0x2b, 0xa9, 0x12, 0x0c, 0x6d, 0x9c, 0xa6, 0xb2, 0x4b, 0x7d, 0x5e, 0x3d, 0x8f, 0x7d, 0x3d,
	0x95, 0x5d, 0x6a, 0xf2, 0xda, 0x79, 0xec, 0xf7, 0x53, 0xd9, 0xa5, 0x0e, 0xaf, 0x9f, 0xc7, 0xfe,
	0x20, 0x95, 0x5d, 0x6a, 0x6f, 0xf5, 0x3c, 0xf6, 0x87, 0xaa, 0x37, 0xf3, 0x55, 0xda, 0xb3, 0x3b,
	0x72, 0xa9, 0x1e, 0x72, 0xe0, 0x86, 0x74, 0x75, 0xbb, 0x43, 0x55, 0xcb, 0xe9, 0x9c, 0xc7, 0x76,
	0x57, 0xf2, 0xe7, 0xd2, 0x5b, 0x2e, 0xe6, 0x67, 0xb4, 0x5c, 0xc8, 0x0a, 0x64, 0xbb, 0x01, 0x0d,
	0x69, 0x64, 0xb9, 0xfc, 0xfe, 0x29, 0x6f, 0x4e, 0x71, 0x40, 0xcd, 0x29, 0xff, 0xe7, 0x11, 0x98,
	0xe7, 0xe6, 0x85, 0x1f, 0x44, 0x68, 0x2a, 0x4a, 0xdb, 0xe2, 0x11, 0x8c, 0x69, 0xd7, 0x33, 0x37,
	0x34, 0x97, 0xa5, 0x3e, 0xca, 0x35, 0x06, 0xc0, 0x93, 0x61, 0x64, 0x20, 0x5f, 0xc0, 0x78, 0xd0,
	0x6b, 0x53, 0x79, 0x4e, 0x71, 0xfb, 0x1c, 0x4e, 0xb3, 0xa7, 0x19, 0x64, 0xc8, 0xb8, 0xfc, 0xdb,
	0x19, 0x98, 0xe9, 0x43, 0x91, 0x05, 0x98, 0x68, 0xe9, 0x2e, 0x26, 0xe2, 0x17, 0x31, 0x21, 0xeb,
	0xb8, 0x01, 0xf7, 0xeb, 0x41, 0x6b, 0xa4, 0xb0, 0xfe, 0xe0, 0xe2, 0x25, 0xae, 0x6d, 0x49, 0x5e,
	0x33, 0x16, 0x53, 0xbe, 0x0d, 0x59, 0x05, 0x27, 0x79, 0xc8, 0xda, 0x61, 0x8b, 0x7a, 0x8e, 0xeb,
	0x1d, 0x19, 0x6f, 0x91, 0x02, 0x80, 0x43, 0xd5, 0xef, 0x4c, 0xf9, 0x03, 0x98, 0x92, 0xdf, 0x4f,
	0x0c, 0x98, 0xa6, 0x5e, 0xe4, 0x06, 0x94, 0xef, 0x56, 0x8c, 0xb7, 0x18, 0x33, 0x9b, 0xc1, 0x02,
	0xdb, 0x3b, 0xa2, 0x46, 0xa6, 0xfc, 0xd3, 0x51, 0x69, 0xcc, 0xc9, 0x7a, 0x1d, 0xd4, 0xa4, 0x3b,
	0x23, 0x79, 0x9c, 0x50, 0xf8, 0xbb, 0x29, 0x1f, 0x11, 0x13, 0xf7, 0xeb, 0x7c, 0x33, 0xa9, 0xf3,
	0x0f, 0xcf, 0x67, 0x4e, 0x51, 0xfb, 0xef, 0xa7, 0xa8, 0xfd, 0x16, 0x40, 0xec, 0x42, 0x28, 0x6c,
	0x45, 0xcd, 0x7e, 0xcf, 0x2a, 0x0f, 0x42, 0x72, 0x30, 0xd8, 0x10, 0x8f, 0x5e, 0xab, 0x1a, 0x7f,
	0xc1, 0x6d, 0xf1, 0x8b, 0x70, 0x5d, 0x56, 0x40, 0x0d, 0xa0, 0x66, 0x60, 0xb7, 0x5e, 0xc4, 0x43,
	0xe0, 0xbb, 0x50, 0x54, 0x57, 0x02, 0x56, 0xc4, 0x71, 0x43, 0xec, 0x65, 0x23, 0xe8, 0x93, 0x51,
	0xfe, 0x14, 0x80, 0x5f, 0xd2, 0x1c, 0xb1, 0x9a, 0x7f, 0x04, 0x39, 0x7e, 0xe5, 0xc4, 0x4a, 0x97,
	0x07, 0xb8, 0xfd, 0xfe, 0x71, 0xa0, 0xbc, 0xea, 0xc2, 0x72, 0x13, 0xe6, 0x84, 0xdf, 0x27, 0x97,
	0x20, 0xeb, 0xf4, 0x3d, 0xe1, 0x72, 0xd3, 0x73, 0x9d, 0xa4, 0xb0, 0xb9, 0xb8, 0x55, 0x68, 0x7c,
	0xdd, 0x80, 0x5e, 0x36, 0x07, 0xae, 0x23, 0xa4, 0xfe, 0x6c, 0x14, 0x96, 0xf9, 0x7d, 0x44, 0x2f,
	0xa0, 0x0e, 0x33, 0x11, 0xf8, 0x89, 0xbd, 0x49, 0x5b, 0x7e, 0xe0, 0x90, 0x2f, 0x61, 0x46, 0x1c,
	0xf0, 0x87, 0x34, 0x62, 0x1b, 0x55, 0x79, 0x62, 0xf8, 0x36, 0x5e, 0x4b, 0xa4, 0x71, 0x36, 0x04,
	0xa1, 0x59, 0x70, 0x13, 0xbf, 0xc9, 0x0d, 0xc8, 0x4b, 0x59, 0x7e, 0x2f, 0x68, 0x51, 0x71, 0x11,
	0x3b, 0x2d, 0xc8, 0x10, 0x46, 0xae, 0x43, 0x4e, 0x10, 0x39, 0x72, 0xe7, 0x9c, 0x31, 0x81, 0x83,
	0xb6, 0xd8, 0x1e, 0xf9, 0x3a, 0xe4, 0x38, 0x3b, 0xde, 0x3e, 0xe3, 0x0e, 0x79, 0xda, 0x04, 0x0e,
	0x42, 0xc7, 0xd0, 0xf7, 0x60, 0x46, 0x10, 0x50, 0xaf, 0xe5, 0xb3, 0x8e, 0x80, 0x1b, 0xe2, 0x31,
	0xb3, 0xc0, 0xc1, 0x55, 0x01, 0x25, 0xd7, 0x58, 0x4f, 0xf6, 0x0e, 0x5d, 0x07, 0x6f, 0x80, 0xd8,
	0xbe, 0x77, 0xc4, 0xd4, 0x20, 0xe4, 0x3b, 0xf2, 0xdb, 0xa9, 0x23, 0x4e, 0xcb, 0xc4, 0x16, 0x77,
	0x46, 0xbb, 0x70, 0x63, 0x60, 0xf9, 0xa5, 0xd4, 0x11, 0x6d, 0x7b, 0x0b, 0x0c, 0x51, 0x05, 0xd6,
	0xbf, 0xf8, 0xb5, 0xd4, 0x94, 0x5e, 0x07, 0xd3, 0x3f, 0xe1, 0xee, 0x81, 0x6b, 0x30, 0x2b, 0x28,
	0xc5, 0xa0, 0xe2, 0xc4, 0x59, 0x24, 0x2e, 0x72, 0x14, 0xb7, 0x83, 0x90, 0xbe, 0xfc, 0x27, 0x37,
	0xa0, 0xd8, 0x54, 0x1b, 0x4f, 0xd9, 0x05, 0x96, 0x60, 0x8a, 0xaf, 0x0a, 0x62, 0x44, 0x66, 0xcd,
	0x49, 0xfc, 0x5d, 0x73, 0x48, 0x19, 0xf2, 0x87, 0x81, 0xdf, 0xb1, 0x14, 0xfe, 0x03, 0x54, 0x7a,
	0x8e, 0x01, 0x9b, 0x82, 0x66, 0x11, 0x26, 0x4f, 0xec, 0xd0, 0x6a, 0xf5, 0xa2, 0xd2, 0x3a, 0xba,
	0xb8, 0x4d, 0x9c, 0xd8, 0xe1, 0x66, 0x2f, 0xea, 0xdf, 0x4d, 0x8e, 0x7e, 0x9b, 0xdd, 0x64, 0xe9,
	0x52, 0xbb, 0xc9, 0xa5, 0x37, 0xb2, 0x9b, 0x5c, 0x7e, 0x23, 0xbb, 0xc9, 0x95, 0x0b, 0xef, 0x26,
	0x53, 0xec, 0x6b, 0xf2, 0x6d, 0xed, 0xeb, 0xd9, 0xcb, 0xd8, 0xd7, 0x73, 0x97, 0xb1, 0xaf, 0xe7,
	0x2f, 0x64, 0x5f, 0xa7, 0xd9, 0x32, 0xd7, 0x2e, 0x69, 0xcb, 0xdc, 0xbc, 0xb8, 0x2d, 0xf3, 0x3d,
	0x20, 0x5a, 0x17, 0xb5, 0xb8, 0x19, 0x53, 0xba, 0x9b, 0x6e, 0x88, 0xc5, 0x3d, 0x75, 0x1f, 0xe9,
	0xc8, 0xdb, 0x30, 0x2d, 0x2d, 0x21, 0xbc, 0x5b, 0xba, 0x82, 0xc6, 0x50, 0x4e, 0x18, 0x43, 0x78,
	0xc3, 0xc4, 0xda, 0xd2, 0x0e, 0xf9, 0x6c, 0x83, 0xb7, 0xa3, 0xfa, 0xb1, 0x42, 0x73, 0x4d, 0xdd,
	0xab, 0x98, 0x79, 0x46, 0x16, 0x5f, 0xb3, 0xdc, 0x86, 0xa9, 0x6e, 0xe0, 0xbf, 0x74, 0x87, 0x1f,
	0xc8, 0x29, 0x3c, 0xb9, 0x09, 0x05, 0xe1, 0x6b, 0xe8, 0x1f, 0x72, 0xff, 0xf2, 0x09, 0xee, 0x69,
	0x2c, 0x2f, 0xa4, 0x4c, 0xff, 0x24, 0x24, 0xb7, 0xa1, 0x18, 0x53, 0x49, 0x37, 0x75, 0x7e, 0x8a,
	0x3e, 0xa3, 0x6e, 0xae, 0x84, 0xaf, 0xfa, 0x55, 0x71, 0x82, 0x85, 0xba, 0xc5, 0x9d, 0x52, 0xd6,
	0xcc, 0x2a, 0xfd, 0x91, 0x3b, 0x52, 0x6b, 0xa8, 0x7a, 0xea, 0xb1, 0xff, 0x1d, 0x34, 0xfe, 0xa7,
	0x84, 0x96, 0x18, 0x59, 0x95, 0xc3, 0x59, 0xc1, 0x1a, 0xf5, 0x31, 0x75, 0x8f, 0x8e, 0xa3, 0xd2,
	0xdb, 0x38, 0x33, 0xcf, 0x28, 0xe2, 0xa7, 0x08, 0x26, 0x9f, 0xc0, 0x92, 0x46, 0xfb, 0x1c, 0x0f,
	0x24, 0x55, 0x01, 0xef, 0x60, 0x01, 0x0b, 0x8a, 0x67, 0x03, 0xd1, 0xb2, 0x98, 0x7b, 0x30, 0x1f,
	0x7f, 0x5f, 0x3c, 0x0e, 0x42, 0x71, 0xd4, 0x47, 0xe4, 0x37, 0x3e, 0x95, 0x5d, 0x3f, 0x24, 0x8f,
	0xa0, 0x34, 0xc0, 0x22, 0x35, 0x03, 0xc8, 0x35, 0x9f, 0xe4, 0x92, 0xfa, 0x49, 0x94, 0x15, 0xf7,
	0xfc, 0x10, 0xcd, 0x68, 0xad, 0xac, 0x6d, 0xd9, 0xd9, 0x43, 0xa6, 0x33, 0xad, 0x52, 0xd6, 0x61,
	0xe0, 0xff, 0x84, 0x7a, 0xdc, 0x7d, 0xcb, 0x34, 0xd4, 0x70, 0x0c, 0xb7, 0x11, 0x4e, 0xd6, 0xd5,
	0x8c, 0x26, 0xea, 0x23, 0x19, 0xd0, 0x47, 0xcb, 0x9c, 0xd5, 0x87, 0xa0, 0xe4, 0x49, 0x2a, 0x80,
	0x1f, 0x96, 0x62, 0xa5, 0x0a, 0x7d, 0x0a, 0x40, 0x54, 0x8a, 0x02, 0x38, 0x8b, 0x54, 0xc0, 0x4c,
	0x9f, 0x02, 0x10, 0x2b, 0x15, 0xf0, 0x18, 0x96, 0x63, 0xc6, 0x5e, 0x48, 0x83, 0x44, 0x81, 0xef,
	0x23, 0xeb, 0x82, 0x64, 0x3d, 0x08, 0x69, 0xa0, 0x15, 0xfa, 0x05, 0x5c, 0x4d, 0xe7, 0x95, 0x25,
	0xdf, 0x46, 0xf6, 0xa5, 0x41, 0x76, 0x59, 0xfa, 0x43, 0x58, 0xd4, 0xd4, 0xef, 0xb6, 0x23, 0x1a,
	0xf0, 0x18, 0x93, 0xb0, 0x74, 0x8b, 0xdf, 0xa4, 0xa8, 0x06, 0x10, 0x48, 0xd9, 0x04, 0x0e, 0x3d,
	0xb4, 0x7b, 0xed, 0x08, 0xa7, 0x29, 0xd1, 0x13, 0x8d, 0xd5, 0x91, 0x5b, 0x19, 0xd3, 0x10, 0x18,
	0xd3, 0x3f, 0x11, 0x5d, 0xf1, 0x2e, 0xcc, 0x49, 0x6a, 0x31, 0x29, 0x9e, 0xb8, 0x4e, 0x74, 0x5c,
	0x2a, 0x22, 0xbd, 0x94, 0xc4, 0xab, 0xf4, 0x8c, 0x61, 0xc8, 0x03, 0xc8, 0x73, 0xaf, 0x30, 0xe1,
	0xe6, 0x2e, 0x0e, 0x9d, 0xf4, 0x00, 0x0e, 0x7e, 0x6a, 0xcf, 0xa9, 0xb8, 0xe3, 0x3b, 0xa9, 0xc0,
	0xd5, 0x80, 0x76, 0xa9, 0x8d, 0x07, 0xfe, 0x7a, 0x17, 0x91, 0xdd, 0xfe, 0x2a, 0x36, 0xf9, 0xb2,
	0x22, 0x8a, 0x3b, 0xb0, 0xec, 0xfa, 0x4f, 0x60, 0x75, 0x40, 0x84, 0xec, 0x37, 0x52, 0xca, 0x2a,
	0x4a, 0xb9, 0xda, 0x27, 0x45, 0x68, 0x54, 0x0a, 0xba, 0x0f, 0x0b, 0x7c, 0x22, 0xb4, 0xbb, 0xdd,
	0xf6, 0xa9, 0xd5, 0x6a, 0x53, 0x3b, 0x08, 0x2d, 0xbb, 0xdd, 0xc6, 0xad, 0xed, 0x94, 0x39, 0x8b,
	0xd8, 0x0a, 0x43, 0x6e, 0x22, 0xae, 0xd2, 0x6e, 0x13, 0x1b, 0xde, 0xd5, 0x8f, 0xe6, 0xa5, 0xa3,
	0x9c, 0xe5, 0x9f, 0x78, 0x34, 0x60, 0xbf, 0x54, 0xc3, 0x96, 0x53, 0x27, 0xb2, 0xb7, 0xb5, 0x33,
	0x7b, 0xe1, 0x0f, 0xb3, 0xc7, 0x58, 0xb7, 0x7d, 0x35, 0xde, 0x7e, 0x04, 0x37, 0xce, 0x29, 0x02,
	0x1b, 0xff, 0x46, 0xaa, 0xfc, 0x6b, 0xc3, 0xe5, 0x63, 0xb7, 0xf8, 0x10, 0x80, 0xf7, 0x21, 0xf4,
	0x3e, 0x79, 0x37, 0xfd, 0xe6, 0x9d, 0x53, 0x34, 0x68, 0x44, 0x7e, 0x11, 0xca, 0xda, 0x55, 0x99,
	0x58, 0x38, 0x92, 0x15, 0x72, 0x9d, 0xd2, 0x7b, 0x28, 0x86, 0xa0, 0x98, 0xcd, 0xed, 0x83, 0x78,
	0x97, 0x62, 0x5e, 0xd3, 0xb8, 0x71, 0x31, 0xd1, 0xeb, 0x54, 0x73, 0xc8, 0x27, 0x00, 0x21, 0x33,
	0x60, 0xf9, 0x65, 0xcc, 0x1d, 0xe5, 0x74, 0x3e, 0x64, 0x07, 0x6a, 0x66, 0x43, 0x09, 0x21, 0x2d,
	0x58, 0x41, 0x56, 0xb6, 0xfd, 0xb2, 0x06, 0x77, 0x1a, 0x1f, 0xa2, 0xac, 0x9b, 0x3c, 0xa2, 0xe5,
	0xec, 0xad, 0x8a, 0x59, 0x0a, 0x87, 0x10, 0x90, 0xcf, 0x61, 0x0e, 0x57, 0xb4, 0xfe, 0x9b, 0x9f,
	0xb5, 0xf4, 0x9b, 0x1f, 0x46, 0x9b, 0xbc, 0xf9, 0x79, 0x04, 0x39, 0x7e, 0x87, 0x8c, 0xca, 0x2a,
	0x7d, 0x84, 0x7c, 0x3c, 0xa8, 0x68, 0x97, 0xc1, 0x51, 0x11, 0xca, 0xe1, 0xad, 0xa3, 0x40, 0xe4,
	0x21, 0x14, 0xc2, 0x28, 0xf0, 0x5f, 0x50, 0x2b, 0x74, 0x1d, 0xda, 0xb2, 0x83, 0xd2, 0xbd, 0xf4,
	0xab, 0x2a, 0x4e, 0xd5, 0xe0, 0x44, 0x6c, 0x80, 0x89, 0x55, 0xda, 0xa3, 0xd4, 0x09, 0x2d, 0x86,
	0xf5, 0x8e, 0x78, 0xe9, 0xe1, 0xb1, 0xdb, 0x2d, 0xdd, 0xe7, 0x03, 0x8c, 0x13, 0xd5, 0x19, 0x4d,
	0x03, 0x49, 0xf6, 0x24, 0x05, 0xd9, 0x05, 0x82, 0x96, 0x9c, 0xd8, 0x5b, 0x04, 0xb8, 0xbb, 0x29,
	0x3d, 0xc0, 0xd2, 0xb9, 0x3b, 0xca, 0xf0, 0x4d, 0x90, 0x69, 0x44, 0xfd, 0xdb, 0xa2, 0xe1, 0x87,
	0x8a, 0xdf, 0x7b, 0x13, 0x87, 0x8a, 0x9f, 0xbe, 0x89, 0x43, 0xc5, 0xcf, 0xde, 0xc4, 0xa1, 0xe2,
	0xe7, 0x6f, 0xe2, 0x50, 0xf1, 0x8b, 0x4b, 0x1f, 0x2a, 0x3e, 0xb9, 0xdc, 0xa1, 0xe2, 0xd3, 0xcb,
	0x1d, 0x2a, 0xd6, 0x2e, 0x77, 0xa8, 0xf8, 0xe5, 0xe5, 0x0e, 0x15, 0xbf, 0xba, 0xe0, 0xa1, 0xe2,
	0x39, 0x57, 0x58, 0x95, 0x37, 0x7a, 0x85, 0xb5, 0xf1, 0x46, 0xaf, 0xb0, 0x36, 0xdf, 0xe8, 0x15,
	0xd6, 0xd6, 0x1b, 0xbd, 0xc2, 0xaa, 0xbe, 0xb9, 0x2b, 0xac, 0x9d, 0x37, 0x74, 0x85, 0xb5, 0xfb,
	0x86, 0xae, 0xb0, 0xea, 0x6f, 0xe8, 0x0a, 0x6b, 0xef, 0x0d, 0x5d, 0x61, 0xed, 0xbf, 0xc6, 0x15,
	0xd6, 0x2e, 0xcc, 0x26, 0xdd, 0x09, 0xf8, 0x5a, 0xb4, 0xad, 0x62, 0xc4, 0x9a, 0x6b, 0x4f, 0x35,
	0x4f, 0x82, 0xc4, 0x92, 0x54, 0x3c, 0xee, 0xc7, 0x90, 0x2f, 0x74, 0x27, 0x0a, 0x94, 0xf4, 0x7d,
	0x94, 0xc4, 0xa3, 0x47, 0xa5, 0x3f, 0x41, 0x42, 0x4a, 0xec, 0x4f, 0x81, 0x12, 0xbe, 0x81, 0xc5,
	0x2e, 0xf5, 0x5a, 0x6e, 0xdb, 0xb2, 0x3d, 0xcf, 0x8f, 0x6c, 0x8c, 0x43, 0xe5, 0xa2, 0x4c, 0x14,
	0x25, 0x22, 0xe0, 0x90, 0xa6, 0xa2, 0x48, 0x12, 0x22, 0xe7, 0xbb, 0x69, 0xd8, 0xf2, 0x7f, 0xc8,
	0xc1, 0x6c, 0x43, 0x73, 0xf9, 0x90, 0xc7, 0x3e, 0x1f, 0xca, 0x4d, 0x9e, 0xeb, 0x1d, 0xfa, 0x43,
	0x8e, 0x21, 0xf9, 0xa6, 0x0f, 0xe3, 0x59, 0x3f, 0xc4, 0x60, 0x38, 0xb9, 0x89, 0x8d, 0xbd, 0x0c,
	0xf4, 0x4d, 0x6c, 0xd6, 0x51, 0x1b, 0xd8, 0x8f, 0x61, 0xa6, 0xdf, 0x42, 0x18, 0x1d, 0xe2, 0x58,
	0x92, 0xb0, 0x0e, 0xbe, 0x84, 0x2b, 0xf6, 0xd1, 0x51, 0x40, 0x8f, 0x06, 0xed, 0x3c, 0x74, 0xf9,
	0x18, 0xeb, 0x77, 0xf9, 0x58, 0x52, 0xe4, 0xba, 0x21, 0x85, 0xbe, 0x1f, 0x9f, 0xc1, 0xac, 0x74,
	0x88, 0xe1, 0x61, 0x85, 0xd4, 0x73, 0xfc, 0x61, 0xfb, 0xe9, 0xa2, 0x20, 0xc5, 0xa0, 0x39, 0x24,
	0x64, 0xbb, 0x30, 0xd5, 0xac, 0x89, 0x3d, 0x00, 0xe0, 0xee, 0x55, 0x2d, 0x41, 0xfa, 0x26, 0xe0,
	0x33, 0x58, 0x96, 0x65, 0xb2, 0x0f, 0x97, 0xe3, 0x58, 0x6c, 0x36, 0xd8, 0xfe, 0x30, 0x83, 0x9b,
	0x80, 0x05, 0x41, 0x65, 0xfa, 0x27, 0x7c, 0xf0, 0x8a, 0x6d, 0x47, 0x2a, 0xff, 0xba, 0xe4, 0x9f,
	0x1e, 0xca, 0xbf, 0x7e, 0x16, 0xff, 0x7d, 0xc9, 0x9f, 0x1f, 0xca, 0x7f, 0xff, 0x2c, 0xfe, 0x07,
	0x92, 0xbf, 0x30, 0x94, 0xff, 0xc1, 0x59, 0xfc, 0x0f, 0x25, 0xff, 0xcc, 0x50, 0xfe, 0x87, 0x82,
	0xbf, 0x06, 0xab, 0x92, 0x9f, 0x8f, 0xf4, 0x14, 0x2d, 0x1a, 0x4a, 0xca, 0x8a, 0xa0, 0xdd, 0x61,
	0xa4, 0xfd, 0xaa, 0x3c, 0x43, 0x94, 0x52, 0x68, 0xf1, 0x6c, 0x51, 0xeb, 0xe7, 0x8b, 0x52, 0xba,
	0x25, 0x67, 0x8b, 0xba, 0x7f, 0xbe, 0x28, 0xa5, 0xe6, 0xd9, 0xb3, 0x45, 0x3d, 0x38, 0x5f, 0x94,
	0xd2, 0xf8, 0xdc, 0xd9, 0xa2, 0xa4, 0xda, 0x1f, 0xc1, 0x42, 0x2c, 0xe2, 0xa5, 0x1b, 0xba, 0xcf,
	0xdd, 0xb6, 0x1b, 0x9d, 0x5a, 0xf7, 0xf0, 0x62, 0x38, 0x8f, 0x02, 0xb8, 0x7d, 0x61, 0xfa, 0x27,
	0x5f, 0x2b, 0xfc, 0xbd, 0xa1, 0x8c, 0xeb, 0x78, 0x1e, 0x34, 0x94, 0x71, 0x7d, 0x28, 0xe3, 0x7d,
	0xdc, 0x36, 0x0f, 0x65, 0xbc, 0x3f, 0x94, 0xf1, 0x01, 0x3a, 0x67, 0x0c, 0x65, 0x7c, 0x30, 0x94,
	0xf1, 0x21, 0x7a, 0x63, 0x0c, 0x65, 0x7c, 0x88, 0x9e, 0x9b, 0x5a, 0x9f, 0xe6, 0x9a, 0xb5, 0xda,
	0x6e, 0x18, 0x95, 0x96, 0x57, 0x47, 0x6f, 0x65, 0xcc, 0xb9, 0xb8, 0x33, 0x73, 0x7d, 0x62, 0x1c,
	0xcc, 0x3d, 0x98, 0x8f, 0xcb, 0xd3, 0x99, 0x56, 0x90, 0x89, 0xc8, 0xa2, 0x34, 0x96, 0x4f, 0x60,
	0x29, 0xb5, 0x8a, 0xc8, 0x76, 0x65, 0x75, 0xf4, 0x56, 0xde, 0x5c, 0x18, 0xac, 0x21, 0x63, 0x2d,
	0xff, 0x59, 0x06, 0xde, 0xd1, 0xa7, 0xf9, 0x27, 0xdc, 0x7b, 0x6e, 0xf3, 0xd8, 0xf6, 0x8e, 0x28,
	0x2e, 0x56, 0x72, 0xe2, 0x7f, 0x5f, 0x84, 0x2b, 0x75, 0xec, 0xae, 0x88, 0xc6, 0x1d, 0xf0, 0x16,
	0x63, 0xf8, 0x5d, 0xbb, 0x7b, 0xd6, 0x97, 0x8f, 0x7c, 0x9b, 0x2f, 0x1f, 0xfd, 0x76, 0x5f, 0x3e,
	0x76, 0xe6, 0x97, 0xff, 0xde, 0x08, 0x2c, 0xc4, 0x5b, 0xcc, 0xda, 0xd6, 0xae, 0xdd, 0x8d, 0x2f,
	0x9d, 0x49, 0x28, 0x03, 0x15, 0xe3, 0xc4, 0x25, 0x03, 0x19, 0x4e, 0x8c, 0x50, 0xc4, 0x29, 0xaa,
	0xf4, 0x25, 0x1f, 0xc1, 0x9c, 0x9e, 0x7d, 0x04, 0xcf, 0x18, 0xd8, 0xf2, 0x33, 0x82, 0x35, 0x29,
	0xb6, 0xe2, 0xcc, 0x23, 0xdb, 0x7e, 0x70, 0xe0, 0x3a, 0x1a, 0x43, 0xcf, 0xc5, 0x88, 0x48, 0x71,
	0x26, 0x3c, 0xaa, 0x33, 0x1c, 0xb8, 0xce, 0xb6, 0x1f, 0xf0, 0x93, 0xe1, 0x7b, 0x30, 0x23, 0xaa,
	0xa6, 0x16, 0xc8, 0xb1, 0xfe, 0x7a, 0xe5, 0x39, 0x85, 0x5c, 0x1b, 0xdf, 0x87, 0xa2, 0xca, 0x26,
	0xa1, 0x6a, 0x34, 0x8e, 0x05, 0x14, 0x02, 0x91, 0x51, 0x42, 0x54, 0x47, 0x90, 0x26, 0xeb, 0x32,
	0xa1, 0x48, 0xb5, 0x8a, 0x94, 0xff, 0xea, 0x08, 0x90, 0x06, 0xee, 0x98, 0x77, 0xec, 0xd3, 0xf8,
	0xb2, 0xf2, 0x16, 0x18, 0xfc, 0xfa, 0x29, 0xd6, 0x02, 0xf6, 0x16, 0x2e, 0x40, 0x4b, 0xbd, 0x42,
	0x6a, 0xe8, 0x80, 0xcf, 0xf6, 0xe5, 0x41, 0xcf, 0x93, 0x57, 0xc6, 0xb7, 0xe4, 0xb6, 0xb8, 0x4f,
	0xae, 0x00, 0x99, 0x3d, 0x4f, 0x6d, 0xf1, 0x43, 0x09, 0x09, 0x97, 0x7f, 0x2d, 0x03, 0x46, 0x3f,
	0x01, 0x59, 0xd0, 0x72, 0x96, 0x64, 0x6e, 0x8d, 0xab, 0xb4, 0x24, 0x0b, 0x30, 0xd1, 0xa6, 0xde,
	0x51, 0x74, 0x2c, 0xd2, 0xb7, 0x88, 0x5f, 0xe4, 0x36, 0x86, 0x6c, 0xf9, 0x2f, 0xa4, 0xe7, 0x2c,
	0x41, 0x67, 0x4d, 0x2e, 0x56, 0x85, 0x4d, 0x71, 0x0a, 0x32, 0x07, 0xe3, 0xfc, 0xa0, 0x65, 0x0c,
	0x45, 0xf0, 0x1f, 0xe5, 0xbf, 0x31, 0x0a, 0x73, 0x0d, 0xfd, 0x10, 0x41, 0x56, 0x65, 0x05, 0x73,
	0x53, 0x88, 0xb3, 0x19, 0xae, 0x8d, 0xa9, 0x8e, 0xfd, 0x8a, 0x1f, 0xbf, 0xbc, 0x0d, 0xd3, 0x89,
	0x6b, 0x38, 0x5e, 0x2b, 0x91, 0x32, 0x87, 0x5f, 0xd8, 0xad, 0xf0, 0x3b, 0x63, 0x8e, 0xe7, 0x69,
	0x65, 0xa6, 0x02, 0x79, 0x9b, 0x57, 0x83, 0xa5, 0x36, 0x3d, 0x8c, 0xe2, 0x3b, 0x18, 0xd4, 0x69,
	0x9b, 0x29, 0x4f, 0xf6, 0x8d, 0xfe, 0x81, 0xba, 0xc0, 0x18, 0x94, 0x53, 0xbb, 0x54, 0x75, 0x48,
	0xbe, 0x82, 0xe5, 0x00, 0x47, 0x5d, 0xaa, 0xac, 0xf1, 0x54, 0x59, 0x8b, 0xc8, 0x91, 0x22, 0xac,
	0x02, 0xf3, 0x91, 0xdf, 0x15, 0x57, 0x3b, 0xba, 0x9c, 0x89, 0x54, 0x39, 0x24, 0xf2, 0xbb, 0xdc,
	0x25, 0x3f, 0x16, 0xf1, 0x04, 0x4a, 0xcf, 0xfd, 0x28, 0xf2, 0x3b, 0x29, 0x52, 0x26, 0x53, 0xa5,
	0xcc, 0x73, 0xfa, 0x3e, 0x41, 0xe5, 0x12, 0x2c, 0x6c, 0xf5, 0x02, 0xb4, 0x6e, 0x9f, 0x05, 0x76,
	0xb7, 0xab, 0xfa, 0x55, 0xf9, 0x67, 0x39, 0x18, 0x63, 0xb6, 0x1b, 0xb9, 0x0b, 0xd9, 0x97, 0x32,
	0xe9, 0x81, 0x70, 0x1c, 0x20, 0xea, 0x08, 0x36, 0xce, 0x17, 0x11, 0x13, 0xf5, 0x85, 0xea, 0x8c,
	0xbe, 0x5e, 0xa8, 0xce, 0xd8, 0x39, 0xa1, 0x3a, 0x64, 0x15, 0xf4, 0xc4, 0x0e, 0x68, 0x7d, 0x66,
	0x92, 0xb9, 0x1e, 0x56, 0x41, 0xcf, 0xdc, 0x80, 0x77, 0xc9, 0xd9, 0x44, 0x32, 0x07, 0x72, 0x05,
	0xb2, 0xcf, 0x7d, 0x9f, 0xd7, 0x5e, 0x24, 0x12, 0x89, 0x01, 0xe4, 0x73, 0x28, 0xb4, 0x7a, 0x41,
	0x40, 0xbd, 0x48, 0x06, 0xff, 0x65, 0xcf, 0x89, 0x1a, 0xcc, 0x0b, 0x7a, 0x11, 0xfd, 0xb7, 0x0e,
	0xd3, 0x7a, 0x08, 0xca, 0x10, 0x6f, 0xa2, 0x04, 0x0d, 0xf9, 0x54, 0x46, 0x41, 0xc9, 0x32, 0x73,
	0xe7, 0x94, 0x29, 0xae, 0xa3, 0x44, 0x91, 0x15, 0x98, 0xe1, 0x75, 0x68, 0x9d, 0x4a, 0x01, 0xd3,
	0xe7, 0x08, 0x28, 0x48, 0x86, 0x58, 0x84, 0x23, 0xfa, 0x82, 0x14, 0x91, 0x3f, 0x4f, 0x84, 0x64,
	0x10, 0x22, 0x3e, 0x81, 0x9c, 0x23, 0x37, 0x1a, 0x22, 0x82, 0xfd, 0x2c, 0x76, 0x4c, 0x07, 0xb2,
	0x3d, 0x24, 0xe0, 0xd2, 0x38, 0xef, 0xfb, 0x13, 0x01, 0x97, 0x9f, 0x40, 0x0e, 0x8f, 0x51, 0x05,
	0x73, 0xf1, 0xbc, 0x92, 0x19, 0xb1, 0x6a, 0xad, 0x79, 0xfa, 0xaa, 0xdb, 0x76, 0x5b, 0xae, 0x6c,
	0x6f, 0xeb, 0xb0, 0x6d, 0x1f, 0x85, 0x68, 0x36, 0xe6, 0xcd, 0x59, 0x89, 0xe4, 0xe4, 0xdb, 0x0c,
	0x45, 0x6e, 0xc3, 0x94, 0x0c, 0x0f, 0x19, 0xe2, 0x2f, 0xa8, 0xf0, 0xe4, 0xbb, 0x50, 0x1c, 0x38,
	0xe1, 0x1e, 0xe2, 0x1f, 0x68, 0xf4, 0x1f, 0x66, 0xa7, 0x05, 0x83, 0x2e, 0x5e, 0x28, 0x18, 0x74,
	0x13, 0xae, 0x0d, 0x9e, 0xab, 0xdb, 0xdd, 0x6e, 0xdb, 0x65, 0x4b, 0x64, 0x4f, 0xf8, 0xde, 0xe6,
	0x79, 0xbe, 0x09, 0xbd, 0xc8, 0x0a, 0xa7, 0x31, 0x7b, 0xed, 0x61, 0x11, 0xa5, 0x4b, 0xdf, 0x2a,
	0xa2, 0xf4, 0x4b, 0x98, 0x4b, 0x34, 0xb0, 0xe5, 0x3f, 0xff, 0x65, 0xda, 0x8a, 0x84, 0xcb, 0xed,
	0xf0, 0xc0, 0x5a, 0xa2, 0xb7, 0xf3, 0x1e, 0xf2, 0x90, 0x47, 0xc2, 0x5d, 0x87, 0xdf, 0x68, 0x0a,
	0x6f, 0xdb, 0x05, 0x35, 0x2b, 0xf1, 0x9b, 0x4c, 0xd5, 0xd6, 0x2d, 0x05, 0x4a, 0x86, 0xb5, 0x5e,
	0xb9, 0x48, 0x58, 0x2b, 0x5b, 0xb8, 0x91, 0x45, 0xd4, 0xfa, 0x85, 0xeb, 0xf1, 0x3b, 0xa4, 0xbc,
	0x59, 0x60, 0x70, 0x5e, 0xaf, 0xaf, 0x5c, 0xcf, 0x61, 0x7d, 0x10, 0x27, 0x32, 0xd1, 0x07, 0xaf,
	0x9d, 0xd7, 0x07, 0x19, 0xb1, 0xe8, 0x83, 0x9f, 0x43, 0x41, 0xa6, 0xd7, 0x11, 0xdc, 0xd7, 0xcf,
	0x9b, 0x72, 0x04, 0x3d, 0xc7, 0x95, 0xb7, 0x61, 0x7e, 0x37, 0x11, 0x21, 0xa6, 0x1d, 0x4b, 0xc4,
	0x9e, 0x4d, 0x43, 0x1c, 0x9b, 0xe2, 0x74, 0x61, 0xe5, 0x7f, 0x35, 0x06, 0x85, 0x4d, 0x6e, 0xad,
	0xf6, 0x4b, 0xe0, 0xd1, 0x83, 0xe9, 0xd1, 0x8d, 0x28, 0xa1, 0x89, 0xf1, 0x83, 0x2b, 0x90, 0x65,
	0x66, 0x12, 0x1b, 0x60, 0x32, 0x4b, 0xd8, 0x54, 0xcf, 0x75, 0x36, 0xd8, 0x6f, 0xf2, 0x04, 0x8a,
	0x71, 0xce, 0x3d, 0x26, 0x94, 0xd9, 0x69, 0x05, 0x14, 0x79, 0x66, 0xea, 0xb4, 0x19, 0xaa, 0xa5,
	0x5e, 0xab, 0x39, 0x21, 0xf9, 0x2e, 0xe4, 0x95, 0x9f, 0x15, 0xda, 0xb4, 0xfc, 0x14, 0x62, 0x51,
	0x7d, 0x59, 0x32, 0x23, 0x1f, 0xcf, 0x8d, 0x75, 0xe0, 0x3a, 0x68, 0x1c, 0x7f, 0x26, 0xc3, 0xee,
	0x34, 0x2f, 0xad, 0xc9, 0x33, 0xbc, 0xb4, 0x78, 0xf0, 0x9d, 0x72, 0xd3, 0x22, 0x1b, 0x40, 0x7a,
	0xde, 0x80, 0x84, 0xec, 0x19, 0x12, 0x0c, 0x41, 0x1f, 0xcb, 0xf8, 0x1c, 0xf2, 0x5c, 0x82, 0x8d,
	0xbe, 0x73, 0x61, 0x29, 0x8f, 0xec, 0xcb, 0xda, 0xc5, 0x0d, 0x66, 0x42, 0x89, 0x7d, 0xcb, 0xcc,
	0x69, 0x64, 0xa8, 0x70, 0x7a, 0xb2, 0x05, 0x57, 0x3a, 0x36, 0x86, 0x26, 0xb9, 0x87, 0xa7, 0xf2,
	0x68, 0x27, 0xb4, 0x5c, 0x0f, 0x15, 0x1b, 0x8a, 0x5c, 0x2b, 0x63, 0x51, 0xd0, 0xa3, 0x66, 0xa9,
	0x63, 0xb3, 0x5d, 0x8c, 0x7b, 0x78, 0x2a, 0x0e, 0x75, 0xc2, 0x9a, 0xc7, 0xc3, 0x6a, 0x7f, 0x04,
	0xb7, 0x34, 0x29, 0xb8, 0x86, 0x87, 0xf1, 0x5d, 0x97, 0x63, 0x3d, 0x8f, 0x45, 0x8b, 0x74, 0x2b,
	0x5c, 0xe2, 0x0d, 0x25, 0x11, 0xd7, 0xcc, 0x50, 0x75, 0x05, 0x67, 0x43, 0x95, 0x51, 0x3e, 0x85,
	0x19, 0x56, 0x8a, 0x9e, 0x19, 0xf1, 0x11, 0x8c, 0xf3, 0xea, 0xf1, 0x9e, 0xf8, 0xb6, 0x6a, 0x2f,
	0x8d, 0x68, 0x6d, 0xaf, 0xcb, 0xe7, 0x23, 0xec, 0xa1, 0x9c, 0x7e, 0xf9, 0x43, 0x98, 0xd6, 0xc1,
	0xe4, 0x2a, 0x8c, 0x31, 0x84, 0xd8, 0x71, 0x65, 0xe3, 0x1e, 0x8d, 0xe0, 0xf2, 0xbf, 0x9c, 0x84,
	0xa5, 0x4d, 0x35, 0x3c, 0x2b, 0x9e, 0xa3, 0x67, 0x76, 0x4a, 0xda, 0x34, 0x99, 0x8b, 0xd8, 0x34,
	0x7d, 0x56, 0xc7, 0xc8, 0xb9, 0x56, 0xc7, 0xe8, 0x39, 0x56, 0xc7, 0x58, 0xbf, 0xd5, 0xf1, 0x1d,
	0x50, 0x99, 0x00, 0xc4, 0x1c, 0x3e, 0xe4, 0x64, 0xad, 0x9f, 0x8c, 0x6d, 0x0f, 0x7b, 0x21, 0xe5,
	0xe9, 0x7f, 0xba, 0x76, 0x20, 0x17, 0x41, 0xee, 0xb7, 0x32, 0x65, 0x92, 0x5e, 0x48, 0x2b, 0x6c,
	0x32, 0xb3, 0x03, 0xb1, 0xe4, 0x85, 0xe4, 0x1d, 0xcc, 0x7d, 0x29, 0xd6, 0x3c, 0x5c, 0xec, 0xb8,
	0xeb, 0x4a, 0x5e, 0x2d, 0x76, 0xb8, 0xcc, 0xa5, 0xcd, 0x7d, 0x3c, 0xfc, 0xb3, 0x7f, 0xee, 0x1b,
	0x30, 0x5f, 0xe0, 0xb2, 0xe6, 0x4b, 0xee, 0x35, 0xcd, 0x97, 0x3e, 0xdb, 0x63, 0xfa, 0x35, 0x6c,
	0x8f, 0x37, 0x63, 0xf9, 0xe8, 0x73, 0x7f, 0xe1, 0x52, 0x73, 0xff, 0xcc, 0x6b, 0xcd, 0xfd, 0xe4,
	0x3d, 0x98, 0xe1, 0x8c, 0x6c, 0xf7, 0xcb, 0x53, 0x07, 0x18, 0xd8, 0xfb, 0x0a, 0x0a, 0x2c, 0xf3,
	0xc1, 0x2d, 0xc5, 0x84, 0x71, 0x14, 0x2c, 0x67, 0x49, 0x8f, 0x0e, 0x5a, 0x50, 0x0c, 0xa6, 0xe8,
	0x75, 0x5c, 0xd4, 0x43, 0x58, 0xe4, 0x4e, 0x0d, 0x7a, 0x8f, 0xb3, 0x7c, 0xaf, 0x7d, 0x8a, 0xce,
	0x75, 0x53, 0xe6, 0x1c, 0xa2, 0xb5, 0x4e, 0xb7, 0xe7, 0xb5, 0x4f, 0xc9, 0x6d, 0x28, 0x26, 0x18,
	0xd0, 0xa3, 0x7a, 0x16, 0x19, 0x66, 0xc2, 0x98, 0x16, 0x33, 0x40, 0xfe, 0xe1, 0x28, 0x9f, 0x3e,
	0xb4, 0x65, 0x99, 0xbc, 0x0f, 0x86, 0xeb, 0x45, 0x34, 0xb0, 0xb5, 0xcc, 0x92, 0xdc, 0xe1, 0x7c,
	0x46, 0x83, 0xe3, 0x88, 0xd5, 0x72, 0x84, 0x8c, 0x5c, 0x24, 0x47, 0xc8, 0x6d, 0x28, 0xe2, 0x44,
	0x6e, 0xc9, 0xc0, 0xd8, 0x8e, 0xeb, 0x09, 0x8f, 0xd7, 0x19, 0x44, 0x6c, 0x72, 0xf8, 0x2e, 0x66,
	0xf0, 0xec, 0xa7, 0xb5, 0x5f, 0xe1, 0x88, 0xee, 0xa7, 0xb5, 0x5f, 0x0d, 0xd2, 0xba, 0x5e, 0x4b,
	0xec, 0x5a, 0x12, 0xb4, 0x35, 0xaf, 0x45, 0x76, 0x61, 0xa5, 0x75, 0xec, 0xfb, 0x21, 0x3a, 0x9c,
	0x70, 0xea, 0xae, 0xdf, 0xed, 0x75, 0x45, 0x00, 0x6a, 0x7a, 0x34, 0x68, 0x49, 0xb0, 0x08, 0x39,
	0xfb, 0x8c, 0x81, 0x07, 0xa3, 0x7e, 0x01, 0x57, 0xfb, 0xc5, 0x85, 0x91, 0xcd, 0xac, 0x39, 0xeb,
	0xd0, 0x0d, 0xc2, 0x48, 0x6c, 0x7d, 0x96, 0x92, 0x02, 0x1a, 0x8c, 0xe4, 0xd9, 0x36, 0x23, 0x20,
	0x4d, 0x78, 0x47, 0x1d, 0xd9, 0xcb, 0x93, 0xab, 0xf0, 0xd8, 0xef, 0xb5, 0x1d, 0xcb, 0x71, 0xc3,
	0x6e, 0xdb, 0x16, 0x47, 0xa5, 0x3c, 0xdb, 0x18, 0x1e, 0xf9, 0xbd, 0x2d, 0x19, 0xc4, 0xe9, 0x59,
	0x03, 0xc9, 0xb7, 0x38, 0x35, 0x1e, 0x96, 0x96, 0x9f, 0xc1, 0x95, 0xcd, 0x84, 0xb5, 0x9a, 0xdc,
	0x7b, 0xa6, 0x19, 0xbd, 0x99, 0x8b, 0x18, 0xbd, 0xe5, 0x7f, 0x9a, 0xe1, 0x5d, 0x66, 0xcb, 0x3d,
	0x54, 0x29, 0x7b, 0x76, 0x61, 0xb6, 0x2b, 0x72, 0x05, 0x5b, 0x1d, 0xbb, 0x6b, 0x45, 0x3e, 0x1a,
	0xb1, 0xfc, 0x82, 0xe6, 0xda, 0x5a, 0xb3, 0xd1, 0x58, 0x63, 0x95, 0xb1, 0x3d, 0x47, 0xa6, 0x14,
	0x8e, 0x6d, 0x1f, 0xd3, 0xe8, 0xc6, 0xb0, 0xa6, 0xcf, 0xcc, 0xd8, 0xef, 0xc3, 0x7c, 0xbf, 0x38,
	0xee, 0xe5, 0x38, 0x72, 0x21, 0x81, 0x24, 0x21, 0xd0, 0x64, 0x9c, 0xe5, 0x3f, 0x16, 0x49, 0x84,
	0x59, 0xad, 0x35, 0xbb, 0x2b, 0x61, 0x48, 0x65, 0x2e, 0x62, 0x48, 0x8d, 0x7f, 0x0b, 0x43, 0xea,
	0x81, 0xb0, 0x88, 0x45, 0x0a, 0xe2, 0x91, 0xb3, 0x8c, 0xa8, 0x29, 0x61, 0x44, 0xc5, 0xd9, 0x38,
	0x1c, 0xf7, 0xf0, 0x70, 0xd8, 0x61, 0x0a, 0xca, 0x65, 0xdf, 0x14, 0x96, 0xff, 0x60, 0x04, 0xe6,
	0xb7, 0xfc, 0x9e, 0xf4, 0xf7, 0xd4, 0x3e, 0x72, 0x19, 0xa6, 0x5a, 0x76, 0xd7, 0x6e, 0xb9, 0x91,
	0xcc, 0x81, 0xa2, 0x7e, 0x93, 0x39, 0x18, 0xd7, 0x93, 0x08, 0xf1, 0x1f, 0xe4, 0x47, 0x50, 0x90,
	0xc7, 0xad, 0x16, 0xf5, 0xa2, 0xe0, 0x54, 0x24, 0x2f, 0x7a, 0xc8, 0x2f, 0xcf, 0xd2, 0x4a, 0xe9,
	0x83, 0x62, 0xde, 0xa2, 0x78, 0x1b, 0xc9, 0xad, 0x5d, 0x04, 0x2e, 0xff, 0xad, 0x0c, 0x2c, 0x0f,
	0x27, 0x26, 0x37, 0x61, 0x52, 0x28, 0x3b, 0x35, 0x9b, 0x70, 0x0b, 0x75, 0x4a, 0x3e, 0x80, 0xac,
	0xdf, 0x76, 0xce, 0x8c, 0xc0, 0x9d, 0xf2, 0xdb, 0x0e, 0xdf, 0xe0, 0x7d, 0x00, 0x59, 0x8f, 0x9e,
	0x9c, 0xe9, 0xd3, 0x3d, 0xe5, 0x51, 0xee, 0xde, 0x5b, 0xfe, 0x7b, 0x23, 0x30, 0xd7, 0x50, 0x89,
	0x34, 0x2e, 0xa5, 0xc6, 0x7d, 0xc8, 0xf6, 0x6b, 0xf0, 0xbe, 0x38, 0x63, 0x1c, 0x94, 0x9f, 0x04,
	0x26, 0xf4, 0x37, 0xd5, 0x91, 0xba, 0xfb, 0x8d, 0x0c, 0x2c, 0x0d, 0xa5, 0x4b, 0xc9, 0x73, 0xf3,
	0xf3, 0x53, 0xd3, 0x9f, 0x8f, 0x81, 0xa1, 0x72, 0x0c, 0xcb, 0x0a, 0xac, 0x27, 0xc2, 0xc8, 0x33,
	0x43, 0x93, 0x00, 0xe8, 0xb9, 0x03, 0x2e, 0x9d, 0xc6, 0x98, 0xdc, 0x81, 0x9c, 0xed, 0xb5, 0x8e,
	0x45, 0x8e, 0x40, 0x61, 0xd1, 0x25, 0x7a, 0x0d, 0x70, 0x3c, 0x1a, 0xb5, 0x7d, 0x61, 0x28, 0x13,
	0xe7, 0x85, 0xa1, 0x30, 0x06, 0x3c, 0xf6, 0x48, 0x6c, 0x62, 0x06, 0x18, 0x18, 0x89, 0x60, 0xb8,
	0x03, 0xb9, 0x56, 0x2f, 0x08, 0x65, 0x7d, 0xa6, 0x52, 0xea, 0xc3, 0xf1, 0x58, 0x9f, 0xe4, 0x9d,
	0x76, 0x76, 0xc8, 0xd1, 0x9c, 0xba, 0xd3, 0xae, 0xe8, 0xc1, 0x2f, 0x3c, 0x46, 0x03, 0xf4, 0x8b,
	0xfb, 0x94, 0x80, 0x99, 0x38, 0x02, 0x86, 0x07, 0x6b, 0x54, 0x84, 0x83, 0xb7, 0x26, 0x22, 0x77,
	0xae, 0x08, 0xc6, 0x11, 0x8b, 0xf8, 0x14, 0x66, 0x34, 0x95, 0xe3, 0xa1, 0x3e, 0x37, 0x06, 0xe7,
	0xd5, 0xd6, 0x0c, 0xe7, 0x45, 0xc5, 0x1e, 0x37, 0xc0, 0x81, 0xcb, 0x2c, 0xd9, 0x19, 0x4d, 0x43,
	0xc8, 0x9e, 0x3f, 0x93, 0x3d, 0xd6, 0xd7, 0x81, 0xeb, 0x94, 0xff, 0xce, 0x28, 0xbc, 0xbf, 0x45,
	0xed, 0xe8, 0xf8, 0xd8, 0x3e, 0x79, 0x61, 0x3a, 0x76, 0x70, 0xff, 0x93, 0x4f, 0xbe, 0xf3, 0xc9,
	0xbd, 0x8f, 0x1f, 0xa1, 0x29, 0xd3, 0xdf, 0x29, 0xfb, 0x9d, 0x06, 0xce, 0x51, 0xf0, 0x60, 0x7f,
	0x64, 0xa6, 0xcd, 0xeb, 0xf4, 0xc7, 0x94, 0x26, 0x1a, 0xbd, 0x7c, 0x13, 0x8d, 0x5d, 0xbe, 0x89,
	0xc6, 0x2f, 0xd7, 0x44, 0x13, 0xaf, 0xd1, 0x44, 0x77, 0x60, 0x41, 0xdc, 0x46, 0xf4, 0x37, 0x07,
	0x81, 0xb1, 0x8e, 0x1d, 0xbe, 0x10, 0x17, 0x23, 0xf8, 0x7f, 0xf9, 0x2a, 0xac, 0x6c, 0x6a, 0xb9,
	0x4f, 0xfa, 0x58, 0xca, 0x2b, 0x6c, 0xd2, 0xf3, 0x5b, 0x2f, 0x86, 0x21, 0x9b, 0x2a, 0x4c, 0xa2,
	0x1f, 0xf9, 0xd7, 0x33, 0x50, 0xaa, 0xf4, 0x22, 0xff, 0xd0, 0x4d, 0xe9, 0x18, 0x8f, 0xa1, 0x28,
	0x43, 0x91, 0xf4, 0xd3, 0x9b, 0x4c, 0xca, 0xf0, 0x16, 0x01, 0x56, 0x71, 0xd2, 0xf6, 0xc7, 0x50,
	0x8c, 0xec, 0xe0, 0x88, 0x46, 0x3a, 0xef, 0x48, 0x3a, 0x2f, 0x27, 0x54, 0x80, 0xf2, 0x0b, 0x28,
	0x72, 0x27, 0x6f, 0x3d, 0xca, 0xf0, 0x31, 0x86, 0xa8, 0x3a, 0x2e, 0xb3, 0xec, 0xc4, 0xc2, 0xc7,
	0x4f, 0xff, 0x84, 0x2d, 0xbd, 0x2f, 0x91, 0xca, 0x89, 0x56, 0x91, 0xb3, 0x95, 0xc9, 0x71, 0x43,
	0xee, 0x34, 0x8d, 0x99, 0x83, 0x4d, 0xf5, 0x9b, 0x99, 0x6b, 0xc5, 0x38, 0x79, 0x86, 0x2c, 0xed,
	0xbd, 0x64, 0xa6, 0x8e, 0x22, 0x5a, 0x54, 0x3a, 0x45, 0x9c, 0xa5, 0xa3, 0xe0, 0xbf, 0xa4, 0x41,
	0xe0, 0x3a, 0x54, 0x5c, 0x01, 0x61, 0x94, 0xc1, 0xe3, 0xcc, 0x5d, 0x33, 0x2f, 0x11, 0xfc, 0x2a,
	0xe8, 0x2b, 0x19, 0x16, 0x23, 0xac, 0x2f, 0x97, 0x86, 0x62, 0x5a, 0x59, 0xd5, 0x5c, 0x81, 0xb5,
	0x67, 0x25, 0x5c, 0x1a, 0x2a, 0x8b, 0x29, 0xe2, 0x69, 0xa0, 0x24, 0xbc, 0xfc, 0x0f, 0x33, 0x60,
	0xa8, 0x28, 0xa1, 0x9f, 0x63, 0xa5, 0x9f, 0x8a, 0xa1, 0x3a, 0x50, 0xe7, 0xeb, 0xf1, 0x89, 0x65,
	0x7a, 0x95, 0xd1, 0x40, 0xd2, 0x6a, 0xfc, 0xbb, 0xd3, 0xb0, 0x38, 0xa4, 0xa9, 0xf4, 0x6d, 0x52,
	0x9c, 0x8b, 0xe5, 0x8c, 0x6d, 0xd2, 0x0f, 0xa0, 0xa0, 0x1a, 0x57, 0x4e, 0x41, 0x6c, 0x49, 0xbc,
	0x77, 0x56, 0x87, 0x18, 0x80, 0xf3, 0x14, 0xe3, 0x5d, 0xfd, 0x27, 0xf9, 0x12, 0xe0, 0xc7, 0x3d,
	0xbb, 0xed, 0x1e, 0xba, 0x34, 0xb8, 0x87, 0x6b, 0x7c, 0x41, 0x44, 0x27, 0x0f, 0x93, 0xfa, 0x7d,
	0x49, 0x8e, 0xe2, 0x34, 0xee, 0x84, 0xac, 0x75, 0xb1, 0x68, 0x7f, 0x3b, 0x59, 0xeb, 0x18, 0x96,
	0x64, 0x07, 0x76, 0x87, 0x5f, 0xda, 0xde, 0xc3, 0xe4, 0x0c, 0xe3, 0x66, 0x0e, 0x61, 0x78, 0x63,
	0x7b, 0xaf, 0x8f, 0x64, 0x1d, 0x0f, 0x5e, 0x12, 0x24, 0xfd, 0x52, 0xee, 0xe2, 0x79, 0x4b, 0x82,
	0xe4, 0x6e, 0xf9, 0xa7, 0x53, 0x2a, 0x35, 0x6f, 0x42, 0x51, 0x64, 0x1a, 0xa6, 0x18, 0xa0, 0xee,
	0x7b, 0xd4, 0x78, 0x8b, 0x10, 0x28, 0xf0, 0xd3, 0x1f, 0x3b, 0x88, 0xc2, 0x67, 0x6e, 0x74, 0xcc,
	0xd3, 0x8f, 0x33, 0x58, 0xd5, 0x73, 0x38, 0x64, 0x44, 0x42, 0x64, 0x02, 0x69, 0x63, 0x94, 0x2c,
	0x00, 0x61, 0x90, 0x2d, 0x9f, 0x86, 0x71, 0x66, 0x69, 0x63, 0x8c, 0x14, 0x00, 0x70, 0x4f, 0x8f,
	0x79, 0xbb, 0x79, 0xde, 0x45, 0xfc, 0x5d, 0xf7, 0x23, 0x0e, 0x9a, 0x20, 0x73, 0x60, 0x20, 0xe8,
	0x49, 0x40, 0xed, 0x88, 0x06, 0xcd, 0x63, 0xdb, 0x33, 0x26, 0xc9, 0x0a, 0x2c, 0xf6, 0x43, 0xf7,
	0x02, 0xce, 0x32, 0xa5, 0xa4, 0xec, 0xd0, 0x30, 0x44, 0xfa, 0x2c, 0x29, 0xc1, 0x5c, 0x02, 0x24,
	0x89, 0x81, 0xcc, 0x43, 0x91, 0x9f, 0xcf, 0xf1, 0xc4, 0xdf, 0x94, 0x6d, 0xe6, 0x78, 0xda, 0x45,
	0x9e, 0x15, 0x9f, 0xb6, 0xfd, 0x13, 0x09, 0x9e, 0x66, 0x9f, 0x26, 0xc0, 0xd1, 0x09, 0xa5, 0x9e,
	0x91, 0xc7, 0xac, 0x92, 0x5c, 0x71, 0x46, 0x81, 0x7d, 0xcf, 0x56, 0xaf, 0xdb, 0x46, 0xf5, 0x85,
	0xc6, 0x0c, 0x43, 0x1e, 0x78, 0xee, 0x8f, 0x7b, 0x34, 0x34, 0x0c, 0x32, 0x03, 0xb9, 0x2d, 0x3b,
	0xa2, 0xb5, 0xb0, 0xe9, 0x3b, 0xf6, 0xa9, 0x51, 0x24, 0xb3, 0x30, 0xc3, 0x01, 0xdf, 0xd0, 0x30,
	0xa2, 0x01, 0x03, 0x12, 0xa6, 0x62, 0x49, 0xd5, 0xf1, 0x83, 0xc0, 0x3f, 0x31, 0x66, 0xd9, 0x07,
	0x09, 0xd8, 0x31, 0x65, 0xff, 0x18, 0x73, 0xac, 0x7e, 0xec, 0xbf, 0x0d, 0x7a, 0xe8, 0x07, 0x54,
	0x82, 0xe7, 0x99, 0xb6, 0xd8, 0x7f, 0x95, 0x43, 0x54, 0x0a, 0x87, 0x2e, 0x48, 0x68, 0x2d, 0xac,
	0x79, 0xcd, 0x63, 0x6e, 0x8e, 0x19, 0x8b, 0x4a, 0x2a, 0x83, 0xd5, 0xe9, 0xab, 0xc8, 0x28, 0x25,
	0x40, 0x3b, 0x76, 0x18, 0x19, 0x4b, 0x71, 0xd9, 0xd5, 0x57, 0x76, 0x2b, 0x6a, 0x9f, 0x1a, 0xcb,
	0xac, 0x35, 0xe3, 0xb2, 0x4d, 0xda, 0xb6, 0x23, 0xf7, 0x25, 0x35, 0x56, 0x64, 0x9d, 0xb0, 0x70,
	0x05, 0xbe, 0x42, 0x16, 0x61, 0x96, 0x93, 0xa3, 0xca, 0x14, 0xe2, 0x2a, 0xeb, 0x5b, 0xfc, 0xc0,
	0xd3, 0xef, 0x1a, 0xd7, 0x98, 0x7a, 0xb8, 0x6a, 0xf1, 0xb6, 0xd8, 0xb8, 0xce, 0xd4, 0x23, 0x3b,
	0x83, 0x54, 0xf7, 0x2a, 0x6a, 0x58, 0xd4, 0xd0, 0x0d, 0x8d, 0xb7, 0x99, 0x86, 0x6b, 0xe1, 0x46,
	0xdb, 0xf6, 0x5e, 0x18, 0x65, 0x86, 0xac, 0xb1, 0x0e, 0xc6, 0x7f, 0xdf, 0x20, 0x00, 0x13, 0xe8,
	0xc3, 0x1f, 0x1a, 0x37, 0x49, 0x1e, 0xb2, 0xfc, 0xff, 0xba, 0x1f, 0x19, 0xef, 0xe0, 0x67, 0x89,
	0x63, 0x34, 0xde, 0x13, 0xde, 0x45, 0x2d, 0x09, 0x90, 0xea, 0x7f, 0xef, 0x61, 0xed, 0x05, 0x54,
	0xef, 0x82, 0xb7, 0xc8, 0x35, 0x58, 0x4e, 0x41, 0xc8, 0x8e, 0xf5, 0xbe, 0x2e, 0x4e, 0x75, 0xc4,
	0xdb, 0xac, 0xe3, 0xf6, 0x43, 0x25, 0xcb, 0x07, 0xd8, 0x21, 0x04, 0x52, 0x7e, 0xf1, 0x1d, 0xd4,
	0x76, 0x5c, 0x2d, 0x09, 0xff, 0x90, 0x75, 0x69, 0x09, 0x4f, 0xf4, 0xdd, 0x35, 0x1d, 0x93, 0xe8,
	0xbe, 0x1f, 0x61, 0x17, 0x14, 0x18, 0xa6, 0xf4, 0xbb, 0xd8, 0xdb, 0x24, 0x29, 0xd7, 0xfb, 0xbd,
	0xf2, 0xaf, 0x67, 0x20, 0x9f, 0x98, 0x92, 0x58, 0x43, 0x31, 0x80, 0x98, 0x04, 0xa6, 0x60, 0x6c,
	0xcb, 0x3e, 0x0d, 0x8d, 0x11, 0x92, 0x85, 0xf1, 0x67, 0x94, 0xbe, 0x60, 0x23, 0x1c, 0x60, 0x62,
	0xd7, 0xf7, 0xa2, 0xe3, 0xd0, 0x18, 0x63, 0xe0, 0x6f, 0xa8, 0x1d, 0x84, 0xc6, 0x38, 0x99, 0x84,
	0xd1, 0xca, 0x91, 0x6f, 0x4c, 0xe0, 0x30, 0x09, 0xfc, 0x4e, 0xdd, 0x3f, 0x31, 0x26, 0x85, 0xbc,
	0x20, 0xa2, 0x41, 0x68, 0x4c, 0x31, 0xd4, 0x3e, 0x0d, 0x5a, 0xd4, 0x8b, 0x8c, 0x2c, 0x93, 0xc3,
	0x4f, 0xf5, 0x0d, 0x28, 0xff, 0xee, 0x08, 0x2c, 0x6f, 0xf6, 0x5d, 0x11, 0x6a, 0x0f, 0x13, 0x5c,
	0x81, 0x6c, 0xd0, 0x6b, 0xf3, 0x15, 0x4b, 0xbe, 0x2e, 0xa2, 0x00, 0xe4, 0xcb, 0x64, 0xde, 0x03,
	0x9e, 0xf9, 0x61, 0xb8, 0xb4, 0x01, 0x14, 0x46, 0xcc, 0x88, 0xf4, 0x07, 0xff, 0x28, 0x03, 0x73,
	0x69, 0xf8, 0x4b, 0x59, 0x27, 0x49, 0x57, 0x85, 0xf4, 0x4d, 0xe8, 0x50, 0x57, 0x85, 0xd1, 0x21,
	0x3e, 0xbe, 0x2a, 0xab, 0xe8, 0xcf, 0x46, 0xc1, 0xd8, 0x96, 0x91, 0x4e, 0x52, 0x63, 0xfb, 0x2a,
	0x8f, 0x44, 0x46, 0x25, 0xee, 0xe8, 0x27, 0x8a, 0x01, 0xac, 0xe9, 0x1f, 0x2f, 0xf6, 0xe3, 0xd1,
	0xc0, 0x6f, 0xb7, 0x45, 0x76, 0x89, 0x1b, 0x00, 0x6e, 0x1c, 0x99, 0x36, 0xa2, 0xdd, 0xd2, 0x64,
	0x5d, 0x15, 0x8b, 0xf6, 0x09, 0x4c, 0x8b, 0xb0, 0x2c, 0xde, 0x22, 0xa3, 0xea, 0x45, 0x11, 0x59,
	0xbc, 0x9e, 0x72, 0x22, 0x77, 0xa8, 0x40, 0x21, 0xd9, 0x85, 0x55, 0x1e, 0xea, 0x23, 0xfd, 0x87,
	0x03, 0x7a, 0x12, 0xb8, 0xfc, 0xa8, 0x5d, 0xc4, 0xf0, 0x24, 0x1f, 0x61, 0xb8, 0x82, 0xe4, 0x42,
	0xfd, 0x26, 0x27, 0xde, 0xf6, 0x03, 0x7e, 0x57, 0x4c, 0xde, 0x81, 0x82, 0xa8, 0x89, 0x7c, 0xbe,
	0x86, 0xfb, 0x5c, 0xe5, 0x39, 0x54, 0x3c, 0x60, 0xa3, 0x91, 0xc9, 0x2f, 0x63, 0xdb, 0xe1, 0x29,
	0x49, 0x26, 0xbe, 0xab, 0x5c, 0x83, 0x7c, 0x42, 0x59, 0x6c, 0x70, 0x0f, 0x51, 0x97, 0xf1, 0xd6,
	0x50, 0xa4, 0x77, 0x6a, 0x64, 0xca, 0xbf, 0x33, 0x0e, 0x25, 0xcd, 0x4d, 0xbd, 0xfa, 0x2a, 0xa2,
	0x9e, 0x6a, 0xb6, 0x2f, 0x60, 0x31, 0x11, 0x33, 0x87, 0x0f, 0x1f, 0x45, 0xe9, 0x69, 0x37, 0xe6,
	0x8e, 0xfb, 0xa5, 0xb0, 0x5d, 0x4b, 0x03, 0xf2, 0x09, 0x27, 0x79, 0x31, 0x28, 0xd6, 0xfa, 0xdd,
	0xe3, 0x13, 0xe5, 0xae, 0x99, 0xfe, 0xc9, 0x9e, 0x0a, 0x0e, 0xb7, 0x23, 0x6a, 0x4e, 0xeb, 0xfe,
	0xf2, 0xc4, 0x85, 0xc5, 0xc0, 0x3f, 0xb1, 0x54, 0x54, 0xa0, 0x15, 0x27, 0xf9, 0xe0, 0x16, 0xd4,
	0xfa, 0x85, 0xc5, 0xc7, 0xf9, 0x3d, 0xe6, 0x82, 0x14, 0x28, 0xf9, 0x1c, 0x66, 0xa2, 0xe3, 0x80,
	0x86, 0xc7, 0x7e, 0xdb, 0x51, 0xaf, 0xa8, 0x9c, 0xf5, 0x2c, 0x4d, 0x41, 0x91, 0xf3, 0x3b, 0x83,
	0x03, 0x78, 0x87, 0xf7, 0xa3, 0xc8, 0xb7, 0x7a, 0x5d, 0x7e, 0x59, 0xa3, 0x22, 0x05, 0xf5, 0xce,
	0x94, 0x78, 0x50, 0xe3, 0x3a, 0xf2, 0x34, 0xfd, 0x03, 0xe4, 0x50, 0xad, 0x17, 0xf7, 0xa7, 0xef,
	0xa2, 0xab, 0x60, 0xdb, 0xee, 0x86, 0xd4, 0xb1, 0x78, 0x12, 0x44, 0x3c, 0xcc, 0x9c, 0xec, 0x77,
	0xff, 0x23, 0x8a, 0x0c, 0x9d, 0x39, 0x0f, 0x5c, 0x27, 0x5c, 0xfe, 0x2b, 0x19, 0x30, 0xfa, 0x55,
	0x4c, 0x1e, 0x70, 0x6f, 0xbf, 0x58, 0xa9, 0xa9, 0xad, 0x5c, 0xd0, 0xb4, 0xc4, 0xda, 0xf7, 0x3a,
	0xe4, 0xb4, 0xf0, 0x5b, 0xb1, 0xd9, 0x81, 0x9e, 0x0a, 0xb7, 0x65, 0x5b, 0x21, 0x19, 0x5d, 0xcb,
	0x9f, 0x3e, 0x31, 0xd5, 0xef, 0xf2, 0xa7, 0x30, 0x97, 0xd6, 0x14, 0x98, 0xa2, 0x3a, 0x09, 0x32,
	0xde, 0x62, 0x06, 0x90, 0xe9, 0x9f, 0xc4, 0x90, 0x4c, 0xf9, 0xff, 0x64, 0x60, 0x56, 0x8f, 0xb0,
	0x88, 0x53, 0xe9, 0x17, 0xfb, 0xf2, 0x3c, 0xa6, 0x7d, 0xc9, 0x4c, 0x22, 0xcd, 0xa3, 0xeb, 0x90,
	0x1f, 0xc2, 0xb2, 0xf8, 0xf2, 0x94, 0x3e, 0x2f, 0xa6, 0xc9, 0xab, 0x67, 0x76, 0x2c, 0x73, 0x51,
	0x64, 0x1f, 0xee, 0xc7, 0x93, 0x26, 0xef, 0xb1, 0x69, 0x82, 0x47, 0x2f, 0x22, 0x98, 0x75, 0xce,
	0x01, 0x64, 0xf9, 0x57, 0x33, 0x89, 0xb1, 0x9b, 0x08, 0x31, 0x21, 0xef, 0x42, 0x56, 0x84, 0x3c,
	0xa4, 0x7d, 0xfd, 0x14, 0xe2, 0xf8, 0xb9, 0x42, 0xea, 0x08, 0x2d, 0x0d, 0x04, 0xb0, 0xa8, 0xc3,
	0x63, 0x5d, 0x71, 0xe5, 0x5f, 0x81, 0x65, 0xfe, 0x8c, 0xdb, 0xa6, 0xe8, 0x67, 0x09, 0x37, 0xe1,
	0xbb, 0x50, 0x60, 0xdd, 0xd2, 0x52, 0x9d, 0x70, 0xd0, 0x6f, 0x36, 0xcf, 0x08, 0x24, 0xb3, 0x43,
	0xd6, 0x00, 0x01, 0x96, 0x3c, 0xb2, 0x1f, 0x7c, 0x21, 0x70, 0x9a, 0xe1, 0xe5, 0xd3, 0x71, 0xe5,
	0xbf, 0x9c, 0x81, 0x85, 0xa6, 0xff, 0x82, 0x7a, 0x95, 0x28, 0xb2, 0x5b, 0xc7, 0x1d, 0x6d, 0xf6,
	0xba, 0x97, 0xdc, 0x9e, 0xae, 0xac, 0x35, 0x1b, 0xcf, 0xf6, 0xd7, 0x0e, 0x6a, 0x4f, 0x02, 0xbb,
	0x7b, 0xec, 0xb6, 0xec, 0x76, 0xcc, 0x22, 0x37, 0xaa, 0x1f, 0xe3, 0x15, 0x71, 0x40, 0xc3, 0x10,
	0x8d, 0x1e, 0x67, 0x58, 0x2a, 0xcc, 0x3e, 0xaa, 0xf2, 0x53, 0x28, 0x24, 0xf7, 0x8e, 0x49, 0x49,
	0x98, 0xe3, 0x37, 0x73, 0x9e, 0x24, 0x46, 0x55, 0xfe, 0x69, 0x06, 0xe6, 0xab, 0x09, 0xe1, 0x71,
	0xfa, 0xd0, 0xa9, 0xd6, 0xb1, 0xdb, 0x76, 0x02, 0xea, 0x69, 0x2e, 0x2d, 0x89, 0xc3, 0x60, 0x89,
	0x27, 0x65, 0xc8, 0xe1, 0x65, 0x97, 0xf0, 0xb9, 0x65, 0x1f, 0x31, 0xc6, 0x76, 0xdb, 0x80, 0x50,
	0xee, 0x72, 0xbb, 0x0a, 0x80, 0x0f, 0x8c, 0x49, 0x1f, 0x63, 0x41, 0x92, 0x65, 0x40, 0xee, 0xd5,
	0xfb, 0x0b, 0x40, 0xc4, 0x23, 0x57, 0x7a, 0x3d, 0xee, 0x26, 0xd5, 0xba, 0x2c, 0x9f, 0xf2, 0x1b,
	0xac, 0xb2, 0xd4, 0x6a, 0x22, 0xb9, 0xfb, 0x94, 0x4c, 0xee, 0xfe, 0xff, 0x40, 0x91, 0x3f, 0x62,
	0x75, 0x39, 0xe1, 0x0b, 0x30, 0xc1, 0x6f, 0xd5, 0x51, 0x7a, 0xc6, 0x14, 0xbf, 0xca, 0x3f, 0x82,
	0x22, 0x7f, 0xe2, 0xea, 0x0d, 0xd6, 0x3d, 0x2b, 0xeb, 0xfe, 0xab, 0x19, 0x98, 0xaf, 0x39, 0xd4,
	0x8b, 0xd0, 0x54, 0xbd, 0x5c, 0x09, 0xd7, 0x00, 0x5c, 0x25, 0x4a, 0x64, 0x24, 0xd2, 0x20, 0xf8,
	0x7a, 0xc4, 0x69, 0xe7, 0xb9, 0xdf, 0x16, 0xce, 0xbe, 0xe2, 0x57, 0x39, 0x00, 0xa3, 0x12, 0x04,
	0xf6, 0xe9, 0xe5, 0x4a, 0x2f, 0xc1, 0x64, 0xf2, 0x01, 0x4b, 0xf9, 0x93, 0x10, 0x18, 0xd3, 0x5e,
	0xae, 0xc4, 0xff, 0xcb, 0x9b, 0x30, 0xb3, 0xe3, 0x86, 0xd1, 0xa5, 0x8a, 0x2c, 0xbf, 0x80, 0x59,
	0xf9, 0xe0, 0xd1, 0xe5, 0xea, 0x5e, 0x86, 0x69, 0xf9, 0xca, 0xd2, 0xe6, 0xb1, 0x1d, 0x88, 0xbb,
	0x9e, 0x04, 0xac, 0xbc, 0x03, 0xcb, 0xfb, 0x7e, 0x18, 0x1d, 0xba, 0xaf, 0xd2, 0xca, 0x5c, 0x4b,
	0x96, 0xc9, 0x27, 0xbd, 0x14, 0x42, 0x59, 0xf5, 0xaf, 0x60, 0x69, 0x3f, 0xa0, 0x6f, 0x48, 0xd8,
	0x6f, 0x65, 0x60, 0x56, 0xe6, 0xd2, 0xbf, 0x9c, 0x22, 0x6e, 0x42, 0xfe, 0x50, 0x08, 0xaa, 0x89,
	0x01, 0x8f, 0x8e, 0x2d, 0x09, 0x20, 0xb9, 0x0b, 0xb3, 0xae, 0xf7, 0xd2, 0x6e, 0xbb, 0x8e, 0x2a,
	0xd5, 0xee, 0x48, 0xa7, 0x9d, 0x34, 0x54, 0xf9, 0x4b, 0x58, 0x90, 0xbf, 0xab, 0x9e, 0x73, 0xb9,
	0x56, 0xff, 0x31, 0x3f, 0x73, 0xf8, 0x39, 0x8c, 0x46, 0x36, 0x42, 0x84, 0x13, 0x89, 0x78, 0x5f,
	0x85, 0xff, 0x2a, 0xff, 0x8b, 0x31, 0x98, 0x53, 0xb3, 0xe3, 0xe5, 0x0a, 0xde, 0x84, 0x02, 0x1e,
	0x29, 0x2b, 0x71, 0xc9, 0x77, 0x73, 0xcd, 0x04, 0x4e, 0xd9, 0x82, 0x49, 0x16, 0x66, 0xdd, 0x63,
	0x82, 0x80, 0xe0, 0x25, 0x15, 0x0e, 0x48, 0xfc, 0x65, 0x88, 0xbc, 0x84, 0x72, 0x07, 0xa4, 0x55,
	0xc8, 0x1d, 0xfb, 0x21, 0x4f, 0x1d, 0x5e, 0xdb, 0xc2, 0x5d, 0x46, 0xd6, 0xd4, 0x41, 0xe4, 0x33,
	0xc8, 0xb3, 0x9f, 0x96, 0x7a, 0x31, 0x08, 0xf4, 0x77, 0x05, 0x53, 0x5f, 0x0c, 0x42, 0x7e, 0x81,
	0x61, 0xb6, 0x01, 0x3f, 0x1a, 0x8e, 0x2f, 0x21, 0x74, 0xdb, 0x00, 0x71, 0xcc, 0x36, 0xf8, 0xae,
	0xf8, 0x6a, 0x2b, 0xf2, 0xbb, 0x56, 0x9b, 0x1e, 0x46, 0x67, 0x5f, 0x39, 0x4c, 0x23, 0x71, 0xd3,
	0xef, 0xee, 0xd0, 0xc3, 0x88, 0x6c, 0x02, 0xe1, 0xcc, 0xd2, 0x6b, 0x1f, 0x63, 0xc9, 0x26, 0xcf,
	0x12, 0x60, 0x20, 0x03, 0x3f, 0x0f, 0x30, 0x31, 0xa6, 0xac, 0x02, 0xd3, 0xca, 0x17, 0x83, 0x7d,
	0x28, 0xbf, 0xbb, 0xbb, 0x26, 0x3e, 0x54, 0x60, 0x06, 0x3f, 0xb6, 0x15, 0x63, 0xc8, 0x63, 0xb4,
	0x41, 0xf8, 0x8d, 0x80, 0xc5, 0xac, 0x47, 0x71, 0xa7, 0x97, 0xee, 0xb4, 0xc8, 0xac, 0x0b, 0xd1,
	0x9a, 0xad, 0xa8, 0xfc, 0xcf, 0x32, 0xf1, 0x21, 0xcc, 0xa5, 0xe7, 0xaa, 0xc8, 0xed, 0x50, 0x74,
	0xd8, 0x79, 0x69, 0xb7, 0xc5, 0x62, 0x95, 0x80, 0x31, 0x5b, 0x39, 0xec, 0xd8, 0xed, 0x36, 0x0d,
	0x23, 0xf9, 0xfe, 0xa8, 0xfc, 0xcd, 0xe6, 0xe9, 0xb6, 0x1d, 0x1c, 0x51, 0x8c, 0x64, 0xc2, 0xf7,
	0x47, 0xc5, 0x4f, 0x36, 0x26, 0xe2, 0x04, 0xba, 0x79, 0x93, 0xff, 0x28, 0xff, 0x93, 0x0c, 0x5c,
	0xab, 0x04, 0x47, 0x3d, 0x66, 0xdd, 0xec, 0xb7, 0xed, 0x16, 0x65, 0x5b, 0x92, 0xcb, 0x2e, 0x55,
	0x29, 0xf3, 0x4c, 0x66, 0x70, 0x9e, 0xb9, 0x09, 0x79, 0x5b, 0x94, 0x5c, 0x53, 0xb6, 0x45, 0xde,
	0x4c, 0x02, 0xf1, 0xda, 0x89, 0x19, 0x58, 0x3c, 0x68, 0x06, 0xff, 0x2f, 0xd7, 0x61, 0xb9, 0xda,
	0xe9, 0x46, 0xa7, 0xe9, 0x06, 0xd0, 0xeb, 0xcf, 0x39, 0x7f, 0x7f, 0x04, 0x0a, 0x3b, 0xf4, 0x72,
	0xcb, 0x15, 0xb9, 0x0b, 0x73, 0x27, 0xc7, 0x6e, 0x44, 0x31, 0xe9, 0xbb, 0x65, 0x1f, 0xb2, 0xbd,
	0x5b, 0x9b, 0x46, 0x62, 0xa5, 0x26, 0x31, 0x0e, 0x8f, 0x1f, 0x77, 0x68, 0x44, 0x3e, 0x83, 0x95,
	0x01, 0x0e, 0x6d, 0x89, 0xe7, 0x93, 0xd4, 0x52, 0x1f, 0x63, 0x6c, 0x4e, 0x90, 0x8f, 0x61, 0x71,
	0x80, 0x1f, 0x9f, 0xa2, 0x0c, 0xc5, 0x64, 0x30, 0xdf, 0xc7, 0x8b, 0xc7, 0x78, 0x21, 0xf9, 0x1e,
	0x2c, 0x0f, 0xf0, 0x39, 0xb4, 0xed, 0x76, 0xdc, 0x48, 0xa4, 0x00, 0xcb, 0x9a, 0xa5, 0x3e, 0xd6,
	0x2d, 0x89, 0x2f, 0x57, 0x20, 0x5f, 0xbb, 0xa4, 0xbe, 0xff, 0x7f, 0x98, 0xfd, 0xda, 0x0e, 0x5c,
	0xbc, 0xfd, 0x7b, 0xa3, 0x36, 0xd1, 0xc8, 0x19, 0x36, 0xd1, 0x88, 0x66, 0x13, 0xfd, 0xd1, 0x08,
	0x14, 0x77, 0xec, 0x53, 0xbf, 0x17, 0x3d, 0x75, 0xe3, 0x8d, 0x40, 0x09, 0x26, 0xdd, 0x90, 0xbf,
	0xe0, 0xcc, 0x5d, 0x8a, 0xe4, 0xcf, 0xe4, 0xb3, 0xd2, 0xe9, 0xb7, 0x85, 0xda, 0xb3, 0xd2, 0x37,
	0x60, 0xe2, 0xd8, 0xf5, 0xa2, 0xda, 0x96, 0xb8, 0x3e, 0x4e, 0x3a, 0xc2, 0x70, 0x14, 0xf9, 0x00,
	0x72, 0x1d, 0xfb, 0x95, 0xdb, 0xe9, 0x75, 0x1a, 0xee, 0x4f, 0x64, 0xa6, 0x36, 0x3e, 0xbb, 0xe2,
	0x13, 0xd7, 0x3a, 0x96, 0xdc, 0x81, 0x62, 0xd7, 0x0e, 0x22, 0x3c, 0xde, 0xdb, 0xf7, 0x43, 0xfc,
	0x2b, 0xc6, 0xf1, 0x20, 0x82, 0x69, 0xe5, 0xd8, 0x0f, 0xdc, 0x9f, 0xf8, 0x5e, 0x64, 0xb7, 0x85,
	0xa3, 0xab, 0x06, 0x21, 0x1f, 0x41, 0x9e, 0x1e, 0x1e, 0xb2, 0xfd, 0xf1, 0x4b, 0x7c, 0x4e, 0x3b,
	0xf1, 0x1e, 0x02, 0x16, 0x9e, 0xc4, 0x93, 0xdb, 0x60, 0xa8, 0x52, 0x5c, 0xef, 0x68, 0xdf, 0x0e,
	0x43, 0x9c, 0x61, 0xf3, 0xe6, 0x00, 0xbc, 0xfc, 0x07, 0x19, 0x58, 0xe5, 0xaf, 0x8b, 0xf2, 0x43,
	0xdc, 0x8b, 0x6e, 0xb9, 0x9a, 0x6b, 0xe9, 0xb4, 0xb2, 0xa9, 0xdf, 0x85, 0x42, 0x2b, 0x16, 0x4b,
	0x5f, 0xc9, 0x81, 0xd5, 0x07, 0x65, 0xb3, 0x4a, 0xcb, 0x0e, 0x68, 0xa4, 0xd4, 0x24, 0x66, 0x95,
	0x04, 0x90, 0xad, 0x9d, 0x5d, 0x34, 0xd0, 0xf0, 0xa6, 0x48, 0x4c, 0x2e, 0x3a, 0xa8, 0xfc, 0x1f,
	0x33, 0x70, 0xed, 0x69, 0x7a, 0x36, 0xa7, 0xd8, 0x41, 0x61, 0x4a, 0x25, 0x61, 0xca, 0x0c, 0x4d,
	0xc2, 0x34, 0xe9, 0x8b, 0x6c, 0x4b, 0x29, 0x67, 0x44, 0x23, 0x3f, 0x9f, 0x33, 0xa2, 0xd1, 0xd7,
	0x39, 0x23, 0x2a, 0xff, 0x37, 0x66, 0x5f, 0xf2, 0xcf, 0xc3, 0x7c, 0x0a, 0xf2, 0xf3, 0xee, 0x00,
	0xf1, 0xa4, 0xdb, 0x2e, 0x3e, 0xae, 0xab, 0x99, 0x8c, 0x86, 0x27, 0x7c, 0x74, 0x7b, 0x6d, 0x9b,
	0xcf, 0xd3, 0x55, 0x98, 0x52, 0xce, 0xf0, 0xfc, 0xfc, 0xf4, 0x7d, 0xfd, 0xa0, 0x59, 0x97, 0x9c,
	0x80, 0xed, 0xdb, 0x6e, 0x60, 0x2a, 0xd6, 0xe5, 0x23, 0x30, 0xfa, 0xb1, 0xe4, 0x46, 0xfc, 0x26,
	0x52, 0xe2, 0x75, 0xf3, 0x43, 0xbd, 0xfc, 0x84, 0x4b, 0xeb, 0xf9, 0x77, 0xb5, 0xe5, 0x3f, 0xcf,
	0x88, 0xa8, 0x90, 0xfe, 0x50, 0x02, 0xf2, 0x31, 0xf0, 0x4c, 0x50, 0xfa, 0x13, 0x9f, 0x8b, 0x71,
	0xe8, 0x41, 0x45, 0xf7, 0x45, 0x30, 0xb3, 0x48, 0x8a, 0x87, 0xab, 0x8f, 0x60, 0x5a, 0x3c, 0x58,
	0xc4, 0x1d, 0x8e, 0x46, 0xce, 0x88, 0x79, 0xe0, 0x69, 0xa9, 0x84, 0xdf, 0xd1, 0x77, 0x81, 0x07,
	0x51, 0x58, 0x7d, 0x0a, 0x4c, 0xff, 0x02, 0x1e, 0x1a, 0x21, 0xe3, 0x08, 0xc8, 0x3a, 0xcc, 0x27,
	0x98, 0xb9, 0x8a, 0x68, 0x28, 0x02, 0x99, 0x67, 0x75, 0xea, 0x1a, 0x47, 0xb1, 0x6d, 0x69, 0x71,
	0x20, 0xff, 0x55, 0x5f, 0x77, 0x1e, 0x39, 0xaf, 0x3b, 0x7f, 0x1a, 0xb7, 0x8a, 0x9e, 0xa7, 0xa3,
	0x34, 0xac, 0xd5, 0x55, 0x7b, 0x21, 0xb0, 0xfc, 0x9b, 0x19, 0x58, 0xec, 0x4f, 0x31, 0xf2, 0x2d,
	0x3d, 0x7f, 0xbe, 0x84, 0xa5, 0xc1, 0x84, 0x26, 0x67, 0xbf, 0x51, 0xb2, 0xd8, 0x9f, 0xbf, 0x44,
	0x7a, 0xc9, 0xfe, 0x7e, 0x06, 0xae, 0x9c, 0x95, 0xf9, 0xe4, 0x2f, 0x56, 0x4b, 0xe4, 0x2e, 0xe4,
	0xe2, 0x6f, 0x92, 0xfd, 0x62, 0xe0, 0x0d, 0x21, 0x8d, 0xa4, 0xfc, 0xbf, 0xc6, 0x80, 0x54, 0x5a,
	0xad, 0x1e, 0x93, 0x11, 0xf9, 0xaa, 0xda, 0x57, 0x01, 0x9e, 0xfb, 0xbe, 0x7c, 0xfc, 0x9f, 0x87,
	0x13, 0x63, 0x80, 0x05, 0xbf, 0x8c, 0x7a, 0x17, 0x66, 0x10, 0x1d, 0x05, 0x3d, 0xe9, 0x7a, 0xc1,
	0xd3, 0xad, 0xa3, 0x3b, 0x7d, 0x33, 0xe8, 0x89, 0x4b, 0xab, 0xb7, 0xd5, 0x5b, 0xe3, 0x89, 0xb8,
	0x63, 0x0e, 0xe3, 0x24, 0x57, 0xc5, 0x4b, 0xe6, 0x7a, 0xe0, 0x31, 0xbe, 0x56, 0xce, 0xd1, 0xef,
	0x80, 0x0a, 0x0f, 0x10, 0x24, 0x7c, 0xf2, 0xcd, 0x4b, 0xa8, 0x2a, 0x48, 0xbc, 0x49, 0xce, 0x89,
	0xc6, 0x79, 0x41, 0x1c, 0xc6, 0x49, 0xae, 0x43, 0x4e, 0xbc, 0x30, 0x8c, 0x14, 0x79, 0xa4, 0x00,
	0xfe, 0x96, 0xb0, 0xfc, 0x28, 0x37, 0xb4, 0x5a, 0x6e, 0xd0, 0xea, 0xb5, 0xed, 0x00, 0xf7, 0x05,
	0xf8, 0x6e, 0xb0, 0x99, 0x77, 0xc3, 0x4d, 0x01, 0x65, 0x96, 0xff, 0x7d, 0xc8, 0x76, 0x5c, 0xf9,
	0x76, 0x3b, 0x7f, 0x25, 0x62, 0xe8, 0x6b, 0xf2, 0x1d, 0x57, 0x3c, 0xd8, 0x7e, 0x9f, 0x87, 0x67,
	0xbf, 0x14, 0x61, 0xb2, 0x67, 0x33, 0xd9, 0xaf, 0x38, 0xd3, 0x16, 0x88, 0xd4, 0x98, 0x56, 0xe4,
	0x47, 0xb6, 0x78, 0x7c, 0x5e, 0x3c, 0x0f, 0x31, 0x8c, 0xdb, 0xe0, 0x1c, 0x4d, 0xc6, 0xc0, 0xa5,
	0x7c, 0x06, 0x33, 0xfc, 0xd4, 0x0e, 0xf5, 0x1c, 0x52, 0xea, 0x89, 0xad, 0xca, 0x30, 0x11, 0x79,
	0x24, 0x67, 0xdb, 0xea, 0x06, 0xa5, 0x1e, 0xf9, 0x0e, 0x2c, 0xf1, 0xe2, 0x43, 0xda, 0x0a, 0xad,
	0xd0, 0xf5, 0x5a, 0x98, 0xc2, 0x8f, 0xe7, 0xb1, 0xe6, 0xf9, 0x66, 0xe6, 0x91, 0xa0, 0x41, 0x5b,
	0x61, 0x83, 0xa1, 0x4d, 0x7a, 0x88, 0x29, 0xad, 0xaf, 0x41, 0x0e, 0x79, 0x22, 0xdf, 0xb2, 0x1d,
	0x87, 0xa7, 0x98, 0x31, 0xb3, 0x0c, 0xd4, 0xf4, 0x2b, 0x8e, 0x53, 0xfe, 0x93, 0x0c, 0x10, 0xbc,
	0x3f, 0xe0, 0xe7, 0xf2, 0xaf, 0x9f, 0x89, 0xfd, 0x63, 0xf1, 0x54, 0x93, 0x7a, 0x61, 0x99, 0x3b,
	0xd0, 0x14, 0x71, 0xb8, 0x3c, 0x11, 0x18, 0xf4, 0x42, 0x99, 0x3e, 0xd2, 0x7e, 0x91, 0xcf, 0xc1,
	0x50, 0x7c, 0xb8, 0xcb, 0xf0, 0x03, 0x61, 0x7c, 0xc9, 0x49, 0x94, 0x03, 0x95, 0xe3, 0x92, 0xa4,
	0x16, 0x70, 0xf2, 0x09, 0xcc, 0x2a, 0x01, 0x5a, 0x5d, 0x07, 0x52, 0x00, 0x15, 0x25, 0x95, 0xba,
	0xdb, 0x28, 0x37, 0x61, 0x41, 0xfb, 0x66, 0x3d, 0xa0, 0xeb, 0x31, 0xf0, 0x5a, 0x5a, 0x2a, 0xfd,
	0xff, 0xa8, 0x72, 0x21, 0x1f, 0x54, 0x93, 0x78, 0x85, 0x8a, 0xc3, 0xca, 0xbf, 0x91, 0x91, 0x99,
	0x26, 0x2a, 0x32, 0xe9, 0xd0, 0xeb, 0xab, 0x73, 0x0e, 0xc6, 0x31, 0x47, 0x8b, 0x74, 0x6f, 0xc6,
	0x1f, 0x6c, 0x0a, 0xb3, 0x8f, 0x84, 0x7e, 0x47, 0xb5, 0x00, 0x2f, 0x55, 0x10, 0x2a, 0x78, 0xd2,
	0x3e, 0x42, 0xdd, 0x96, 0xbf, 0x81, 0xe5, 0xbe, 0x8a, 0xe8, 0xdf, 0xf8, 0x5d, 0x00, 0x95, 0x15,
	0x49, 0x46, 0xae, 0xad, 0x88, 0xbb, 0xec, 0xb4, 0xda, 0x9b, 0x1a, 0x79, 0xf9, 0x3f, 0x11, 0x98,
	0x4b, 0x4b, 0x59, 0x75, 0xe1, 0x5b, 0x89, 0x4d, 0x98, 0x92, 0x4f, 0x7b, 0x25, 0x92, 0x41, 0xa4,
	0x09, 0x5d, 0x13, 0x69, 0x4a, 0xd4, 0x1c, 0x2d, 0x1e, 0xfd, 0x5a, 0xfe, 0xf7, 0x45, 0x28, 0x24,
	0x71, 0xe4, 0x03, 0xd9, 0x72, 0xcf, 0x4f, 0xd3, 0xab, 0x00, 0xf2, 0xc5, 0x30, 0xd7, 0x19, 0x68,
	0xe6, 0x91, 0x8b, 0x37, 0x33, 0xb1, 0x81, 0x77, 0x45, 0xcb, 0xf3, 0x1d, 0x6a, 0x05, 0xbe, 0x2f,
	0x6f, 0x7a, 0x3e, 0xb9, 0xe8, 0x77, 0xf0, 0x9f, 0xfa, 0xe6, 0x88, 0x0f, 0x21, 0x7c, 0x50, 0xd5,
	0xf7, 0x23, 0xf2, 0xc3, 0xb8, 0x85, 0xfc, 0x40, 0xc4, 0x23, 0x3c, 0xbe, 0xb0, 0xf4, 0x8a, 0x62,
	0x1d, 0x68, 0x40, 0x3f, 0x20, 0x9b, 0x2a, 0xf5, 0x96, 0xea, 0x51, 0xe3, 0xe7, 0x77, 0x01, 0x91,
	0x87, 0xab, 0xc2, 0x3b, 0x18, 0x5b, 0x31, 0xb4, 0x3b, 0x7a, 0xbe, 0x5f, 0xd1, 0x6e, 0xe7, 0x5b,
	0xb0, 0xea, 0x7a, 0xfc, 0xea, 0x56, 0x95, 0x62, 0xb5, 0x30, 0xd7, 0x8c, 0x7a, 0x29, 0x7d, 0x52,
	0x3f, 0x65, 0x4b, 0x8f, 0xee, 0xb8, 0x22, 0x85, 0x88, 0x62, 0x79, 0xb6, 0x1a, 0xf9, 0xa6, 0xfa,
	0x01, 0x94, 0xfa, 0xc6, 0xbf, 0xba, 0xd2, 0x17, 0x87, 0x49, 0x67, 0x0a, 0x5f, 0x48, 0x4e, 0x0b,
	0xf2, 0x7e, 0x9f, 0x3c, 0x87, 0xeb, 0xfd, 0xd3, 0x8a, 0x78, 0x31, 0x56, 0x49, 0x87, 0x0b, 0x54,
	0x3d, 0x29, 0x5d, 0xbc, 0x5a, 0x2a, 0xcb, 0x78, 0x06, 0xcb, 0xf6, 0xd1, 0x11, 0x46, 0xb7, 0xf2,
	0xae, 0xc4, 0x7a, 0x91, 0x12, 0x9f, 0xbd, 0x40, 0xe5, 0x19, 0x7b, 0xcd, 0xc3, 0x86, 0x67, 0x3d,
	0x46, 0x0a, 0xfe, 0x05, 0xb8, 0x22, 0xea, 0xcc, 0x93, 0x63, 0x73, 0x9d, 0x3b, 0x4a, 0x74, 0xee,
	0x7c, 0xd1, 0x4b, 0x5c, 0x00, 0x26, 0x2d, 0xe1, 0x0a, 0x77, 0xa4, 0xf4, 0xaf, 0x61, 0x89, 0x5f,
	0x24, 0xa7, 0x89, 0x9e, 0xbe, 0x40, 0xad, 0xf1, 0x8a, 0x79, 0x40, 0xee, 0xf2, 0xbf, 0xce, 0x40,
	0xa1, 0x72, 0x94, 0xb8, 0xce, 0xf9, 0x22, 0x36, 0xc2, 0xf0, 0x61, 0x3e, 0x6d, 0xdb, 0x39, 0x54,
	0xfc, 0xb4, 0xfe, 0x5e, 0x1f, 0xf9, 0x10, 0xc6, 0x6d, 0x66, 0x54, 0x09, 0xf3, 0x8d, 0x8f, 0xed,
	0x41, 0x33, 0xcb, 0xe4, 0x54, 0x64, 0x17, 0xc6, 0xf1, 0x8e, 0x4d, 0x18, 0x6c, 0x8f, 0x5e, 0x67,
	0xb4, 0x25, 0x8e, 0x39, 0x50, 0xca, 0xf2, 0x3f, 0x98, 0x04, 0xa3, 0x7f, 0x94, 0xb3, 0x29, 0x52,
	0x5d, 0xe8, 0xa7, 0x4c, 0x91, 0x47, 0xe2, 0x1a, 0x9f, 0xfc, 0x7f, 0xc0, 0xd7, 0x2c, 0x6e, 0x6c,
	0x58, 0x51, 0xaf, 0xdb, 0x96, 0x56, 0xe8, 0xfe, 0xb7, 0x9e, 0x63, 0x38, 0x80, 0x3b, 0xc7, 0x31,
	0x81, 0xc9, 0x75, 0x35, 0x86, 0x93, 0x2f, 0xc4, 0xc2, 0x2c, 0xb2, 0xe2, 0xa9, 0xa4, 0x22, 0x67,
	0xec, 0x7a, 0xf9, 0xf4, 0x28, 0xc1, 0x64, 0x2f, 0xa9, 0xcb, 0x4b, 0xcc, 0x8b, 0x5c, 0x0e, 0x29,
	0xc3, 0xa4, 0xc8, 0x57, 0x34, 0x98, 0x05, 0x69, 0x82, 0x27, 0x2c, 0x22, 0x35, 0x20, 0x6c, 0xaa,
	0x49, 0xf4, 0x9a, 0x0b, 0xc5, 0x90, 0x19, 0xf6, 0xd1, 0xd1, 0xb6, 0xd6, 0x73, 0x42, 0xd2, 0x03,
	0x11, 0x6a, 0x6a, 0x75, 0x6c, 0xcf, 0x3e, 0xa2, 0x81, 0x38, 0x1c, 0xaf, 0x7f, 0x7b, 0xe5, 0xf3,
	0x40, 0xd0, 0x5d, 0x2e, 0x2e, 0x36, 0xf2, 0x74, 0xe8, 0xf2, 0xb6, 0xb0, 0x4a, 0x06, 0xda, 0x88,
	0xdc, 0x91, 0x97, 0x23, 0x99, 0x33, 0x4f, 0x1f, 0x38, 0xd1, 0xf2, 0x3f, 0x1e, 0xe1, 0x8e, 0xb7,
	0xfd, 0xe5, 0x91, 0x87, 0xc2, 0x3d, 0x4c, 0xca, 0x3a, 0xab, 0x4d, 0xf1, 0x70, 0x8c, 0x37, 0xe7,
	0x3a, 0xdf, 0xa7, 0xdb, 0x91, 0xee, 0x41, 0x90, 0x1e, 0xca, 0x2b, 0x09, 0xc9, 0x09, 0x4c, 0x61,
	0x2e, 0x1f, 0x1a, 0xc9, 0x2d, 0xd0, 0x2f, 0xbc, 0x59, 0xe5, 0xad, 0x99, 0xfe, 0x89, 0x96, 0xa0,
	0x83, 0xf5, 0x8f, 0x06, 0x8d, 0xc2, 0xe5, 0x87, 0x90, 0x4f, 0x60, 0xc8, 0x4d, 0x5e, 0x93, 0xf4,
	0xd4, 0x5e, 0x93, 0xbc, 0xf3, 0x84, 0xcb, 0x7f, 0x2d, 0x03, 0xc5, 0x81, 0x75, 0xf3, 0x35, 0xcc,
	0x36, 0x93, 0x1b, 0x68, 0x5e, 0xec, 0x58, 0xf0, 0xad, 0x67, 0x10, 0x66, 0xc5, 0xa1, 0xeb, 0xc1,
	0x4f, 0x33, 0xb0, 0x60, 0x26, 0x5f, 0xd3, 0x8f, 0x2b, 0x36, 0x19, 0x87, 0x92, 0x8e, 0x9c, 0xf1,
	0xa2, 0x27, 0x59, 0x85, 0x71, 0x3d, 0x62, 0x02, 0x38, 0x1d, 0x9e, 0x7f, 0x72, 0x04, 0xb9, 0x01,
	0x18, 0xe9, 0xe7, 0x3a, 0xc2, 0x8c, 0x19, 0x0c, 0x02, 0x74, 0x9d, 0xf2, 0x0f, 0xe0, 0x86, 0x18,
	0x23, 0xfc, 0x44, 0xfa, 0x8d, 0x39, 0x66, 0x94, 0x7f, 0x6f, 0x8a, 0x07, 0xb9, 0x6e, 0xbb, 0xed,
	0x76, 0x23, 0xb2, 0x3d, 0xa7, 0xe6, 0x91, 0x9b, 0x30, 0x76, 0xe8, 0x62, 0x36, 0x04, 0xf9, 0x78,
	0xf2, 0xd6, 0x1a, 0xc3, 0x4b, 0x15, 0x21, 0x96, 0x94, 0x21, 0x8f, 0x86, 0x85, 0x1b, 0x5a, 0x1d,
	0xf7, 0x95, 0x0a, 0xc8, 0xc8, 0x31, 0x60, 0x2d, 0xdc, 0x65, 0x20, 0xf2, 0x10, 0x16, 0x5b, 0x7e,
	0xdb, 0x0f, 0xac, 0x63, 0x3b, 0xb4, 0x9e, 0x53, 0xea, 0xf1, 0xdc, 0x10, 0xae, 0xf2, 0x59, 0x9a,
	0x43, 0xf4, 0x53, 0x3b, 0xdc, 0xa0, 0xd4, 0xdb, 0x15, 0x38, 0x72, 0x13, 0xdf, 0x71, 0xf6, 0x83,
	0x58, 0x36, 0x4f, 0x70, 0x30, 0x8d, 0x50, 0x29, 0xfc, 0x0b, 0xb8, 0xca, 0x77, 0x75, 0xc3, 0x8a,
	0x18, 0xe7, 0x01, 0xc9, 0x48, 0xb4, 0x99, 0x56, 0xce, 0x47, 0x30, 0xa7, 0x4b, 0x50, 0xa5, 0xa1,
	0xcb, 0x98, 0x59, 0x8c, 0x19, 0x65, 0x91, 0x9f, 0xc1, 0x15, 0x74, 0xed, 0x18, 0x56, 0x22, 0x0f,
	0x81, 0x2e, 0x31, 0x9a, 0xd4, 0x02, 0x3f, 0x84, 0x59, 0x8d, 0x5f, 0x95, 0x37, 0xc5, 0x5f, 0x9a,
	0x50, 0x6c, 0xb2, 0xb8, 0x2d, 0x66, 0x0c, 0xd9, 0x8e, 0x4b, 0x3d, 0x1e, 0xdc, 0x9e, 0x52, 0x62,
	0x16, 0x59, 0x57, 0x24, 0x19, 0xb3, 0xd3, 0xfa, 0x0b, 0xbd, 0x0f, 0x0b, 0x49, 0x29, 0xaa, 0x5c,
	0xe0, 0x0f, 0x07, 0xe8, 0xcc, 0xb2, 0xe8, 0x6d, 0x58, 0x55, 0x4c, 0xb6, 0x77, 0xd4, 0x4e, 0x2b,
	0x1b, 0x53, 0x78, 0x30, 0x5b, 0x8b, 0xd3, 0x55, 0x18, 0x59, 0x7f, 0xe1, 0x0f, 0x61, 0xb1, 0x4f,
	0x8e, 0x2a, 0x9d, 0xbf, 0xaf, 0x31, 0x97, 0x60, 0xd7, 0x14, 0xed, 0x76, 0xec, 0x23, 0xf1, 0x36,
	0xcb, 0x60, 0xd1, 0xfc, 0xa9, 0x8d, 0x12, 0xd2, 0x6c, 0xd9, 0x91, 0x9d, 0xa2, 0x68, 0x8d, 0x5f,
	0x15, 0xc9, 0x4f, 0x33, 0x0c, 0xc5, 0xa6, 0x15, 0x17, 0xb9, 0xde, 0xf0, 0x76, 0x9d, 0xe1, 0xc5,
	0x31, 0x9a, 0x61, 0xed, 0xaa, 0xf1, 0xab, 0xe2, 0x0c, 0xf1, 0xea, 0x8a, 0x64, 0xd3, 0x86, 0x45,
	0xd8, 0xb2, 0x53, 0x75, 0x5a, 0xe4, 0x4a, 0x41, 0x74, 0xca, 0xb0, 0xe0, 0x6c, 0xaa, 0x00, 0xc2,
	0x87, 0x05, 0x42, 0xa5, 0xf0, 0x4f, 0x61, 0x25, 0xa2, 0xad, 0x63, 0x0c, 0x52, 0x48, 0x29, 0x60,
	0x56, 0x7c, 0x8a, 0x24, 0xe9, 0x2f, 0xe4, 0x0e, 0x90, 0x98, 0x5d, 0x15, 0x34, 0x27, 0xbe, 0x44,
	0x62, 0x44, 0x61, 0xe5, 0xff, 0x57, 0xc5, 0x02, 0x0d, 0x04, 0x9d, 0xdd, 0x49, 0x4e, 0x46, 0x0b,
	0x7c, 0x32, 0xea, 0x27, 0x93, 0xb7, 0x15, 0xeb, 0x30, 0x67, 0xe3, 0xfd, 0x09, 0x4e, 0x6d, 0x9b,
	0xc7, 0x76, 0xa0, 0x5f, 0x84, 0xa6, 0xe2, 0xca, 0xbf, 0x35, 0x0a, 0xc5, 0x81, 0x0c, 0x4d, 0xe4,
	0x1e, 0x40, 0xe4, 0x77, 0x45, 0x1e, 0x3b, 0xed, 0x9a, 0xa1, 0x3f, 0xcb, 0x60, 0x36, 0xf2, 0xbb,
	0x1c, 0x42, 0x6e, 0x81, 0x11, 0xb3, 0x88, 0x04, 0x82, 0x23, 0x18, 0xb5, 0x57, 0x50, 0x44, 0x3c,
	0x8d, 0xe0, 0x43, 0x98, 0xe6, 0xb9, 0xfb, 0xce, 0x4d, 0x62, 0x98, 0x43, 0x3a, 0x51, 0xc0, 0x1d,
	0x20, 0x3a, 0x9b, 0x15, 0xa7, 0x35, 0x1c, 0x37, 0x0d, 0x8d, 0x90, 0x17, 0xf2, 0x08, 0xf2, 0xe2,
	0x6a, 0x5f, 0x94, 0x32, 0x3e, 0xb4, 0x94, 0x69, 0x4e, 0x28, 0x8a, 0x59, 0x83, 0xd9, 0x04, 0xa3,
	0x28, 0x67, 0x02, 0xcb, 0x29, 0xea, 0xa4, 0xbc, 0xa0, 0xfb, 0x90, 0xc3, 0xa4, 0x86, 0xa2, 0x98,
	0xc9, 0xa1, 0xc5, 0x00, 0x23, 0x13, 0x85, 0xdc, 0x86, 0xa2, 0xc6, 0x24, 0x8a, 0x98, 0xc2, 0x22,
	0x66, 0x62, 0x32, 0x2c, 0xa0, 0xfc, 0x97, 0x46, 0xe0, 0xed, 0x2d, 0xf1, 0x18, 0x8b, 0xf4, 0x7b,
	0x0f, 0x45, 0xb0, 0x50, 0xdc, 0x62, 0x9f, 0xc1, 0xac, 0xfe, 0xd0, 0x93, 0xc7, 0xdf, 0xbd, 0x1e,
	0xb2, 0xb4, 0x16, 0xa3, 0xfe, 0x07, 0xb2, 0xc9, 0x3d, 0x98, 0xd1, 0xde, 0xd6, 0x12, 0xb9, 0x07,
	0xfa, 0xbd, 0x21, 0xd5, 0x33, 0x3e, 0x98, 0x72, 0xe0, 0x1e, 0xcc, 0x68, 0x8f, 0x62, 0x89, 0x0c,
	0xd8, 0xfd, 0x2c, 0xea, 0x39, 0x2c, 0xf1, 0x34, 0x06, 0x49, 0xbe, 0xc3, 0x95, 0x9e, 0x16, 0xd4,
	0xd0, 0x9f, 0xff, 0x61, 0x8c, 0xe5, 0xdf, 0x1a, 0x83, 0xa5, 0xdd, 0x5e, 0x3b, 0x72, 0xd1, 0xcb,
	0xc4, 0xa4, 0x9d, 0x44, 0x7a, 0x8a, 0x3d, 0x98, 0x61, 0x00, 0xb6, 0xdf, 0xed, 0xf6, 0x82, 0xae,
	0x1f, 0x26, 0x1f, 0x85, 0x1c, 0xca, 0xb8, 0xb6, 0xcf, 0xa9, 0xcd, 0x82, 0x60, 0x17, 0xbf, 0xc9,
	0xc7, 0xb0, 0x28, 0x92, 0x6a, 0x84, 0x11, 0xb5, 0xdb, 0x71, 0xfe, 0xa5, 0x50, 0xb8, 0x09, 0xce,
	0x73, 0x74, 0x83, 0x61, 0x95, 0x5e, 0xf1, 0xdd, 0xa4, 0x96, 0xed, 0x59, 0x01, 0xed, 0x85, 0xe2,
	0x1d, 0x45, 0x7c, 0xe8, 0x29, 0x14, 0x69, 0xb7, 0x48, 0xcb, 0xf6, 0x4c, 0x86, 0x53, 0x31, 0xa8,
	0x21, 0xa9, 0x82, 0xa1, 0x0e, 0x9d, 0x2c, 0x5e, 0x3b, 0xa1, 0x10, 0x61, 0xf2, 0xf3, 0x74, 0xdf,
	0x98, 0xf5, 0x35, 0xae, 0xb9, 0x59, 0x90, 0xa7, 0x51, 0x1c, 0x4c, 0xea, 0xb0, 0xf4, 0xdc, 0x6e,
	0xbd, 0xc0, 0x23, 0x4c, 0x26, 0x3c, 0xe4, 0x0f, 0xd3, 0x1c, 0xdb, 0x01, 0xba, 0xf3, 0xb3, 0x5e,
	0x30, 0xab, 0x14, 0xac, 0xa5, 0xbf, 0x58, 0x10, 0x5c, 0x58, 0x23, 0xb6, 0xbb, 0xdf, 0x44, 0x16,
	0x72, 0x17, 0xe6, 0x5a, 0x81, 0x1f, 0x86, 0x96, 0xe3, 0xb7, 0xd0, 0x31, 0xc2, 0xea, 0xda, 0x61,
	0x44, 0x65, 0x06, 0x23, 0xc4, 0x6d, 0x09, 0xd4, 0x3e, 0xc3, 0xb0, 0x81, 0xe3, 0xd1, 0x30, 0xa2,
	0x8e, 0xe5, 0x7a, 0xec, 0x7b, 0xc4, 0xb7, 0x4c, 0x22, 0x43, 0x91, 0xa3, 0x6a, 0x0c, 0xc3, 0x6b,
	0x5c, 0xde, 0x85, 0x49, 0xa9, 0xee, 0x1c, 0x4c, 0x6e, 0x55, 0xb7, 0x2b, 0x07, 0x3b, 0x4d, 0xe3,
	0x2d, 0x32, 0x0d, 0x53, 0x4f, 0xcc, 0xbd, 0x83, 0xfd, 0x5a, 0xfd, 0x89, 0x91, 0x21, 0xef, 0xc1,
	0x8d, 0xfd, 0xca, 0x93, 0x6a, 0xc3, 0x6a, 0x54, 0x37, 0x9b, 0xb5, 0xbd, 0xba, 0xb5, 0x75, 0xb0,
	0xbf, 0x53, 0xdb, 0xac, 0xe0, 0xff, 0xf5, 0xbd, 0xfa, 0xe6, 0xde, 0xce, 0x4e, 0x65, 0xc3, 0x18,
	0x29, 0xff, 0x6c, 0x12, 0x56, 0xf8, 0xa6, 0x7c, 0x3f, 0xf0, 0xbb, 0xf6, 0x11, 0x1e, 0xeb, 0xef,
	0xda, 0x5d, 0x91, 0xc9, 0x84, 0xdc, 0x83, 0xb9, 0x80, 0x76, 0xdb, 0x76, 0x8b, 0xe2, 0xd7, 0x3c,
	0xa7, 0xc7, 0xf6, 0x4b, 0xd7, 0xe7, 0x33, 0xeb, 0xb8, 0x39, 0xab, 0xe1, 0x36, 0x04, 0x8a, 0x3c,
	0x85, 0x12, 0x1f, 0x4d, 0x02, 0x69, 0x75, 0x03, 0x3f, 0xf2, 0xd9, 0xf2, 0x3f, 0x2c, 0xeb, 0x1a,
	0x7f, 0x5d, 0xc8, 0xe4, 0xe4, 0xfb, 0x8a, 0x9a, 0xec, 0xc0, 0x72, 0x52, 0x92, 0x56, 0xdc, 0xb0,
	0x0b, 0x96, 0x92, 0x2e, 0xcb, 0xd4, 0xe8, 0x31, 0xed, 0x3b, 0x4a, 0x13, 0x49, 0xc2, 0xf0, 0xc7,
	0xb0, 0xa4, 0x1f, 0x45, 0xc4, 0xf2, 0xcc, 0x60, 0x7c, 0xee, 0x20, 0x5f, 0xca, 0xda, 0x08, 0x7e,
	0xbf, 0xed, 0x60, 0x4c, 0x2b, 0x6b, 0xb2, 0x61, 0xc9, 0x53, 0x17, 0x34, 0x31, 0x7b, 0x6d, 0x4c,
	0xa4, 0xb2, 0x6b, 0x77, 0x07, 0x65, 0x79, 0xf4, 0x44, 0x93, 0x35, 0x71, 0xae, 0xac, 0x3a, 0x3d,
	0x51, 0xb2, 0xb6, 0x61, 0x91, 0xcb, 0x72, 0x68, 0x9b, 0x46, 0x09, 0x75, 0x0f, 0xc9, 0xa1, 0x8a,
	0xe4, 0x5b, 0x48, 0xad, 0x69, 0xfb, 0x4b, 0x58, 0x4a, 0xc8, 0x49, 0x28, 0x7b, 0x2a, 0x3d, 0x37,
	0xac, 0x26, 0x29, 0xa1, 0xeb, 0x06, 0x5c, 0x93, 0x81, 0xca, 0xf8, 0xc4, 0xce, 0x40, 0x57, 0x18,
	0x92, 0x84, 0x61, 0x45, 0x04, 0x29, 0x33, 0xa6, 0xfe, 0xfe, 0x40, 0x9e, 0xc1, 0x6a, 0xaa, 0x50,
	0xad, 0xa2, 0x43, 0x52, 0x94, 0x5e, 0x1d, 0x14, 0xab, 0x55, 0x97, 0x7c, 0x1f, 0xae, 0x26, 0x04,
	0xf7, 0x2b, 0x72, 0xc8, 0x33, 0xc8, 0xcb, 0x9a, 0xd4, 0x3e, 0x6d, 0x92, 0x03, 0xb8, 0x9e, 0x26,
	0x52, 0xaf, 0xea, 0x74, 0xaa, 0xd0, 0x2b, 0x03, 0x42, 0xb5, 0x9a, 0x96, 0xff, 0xf6, 0x08, 0x94,
	0x1a, 0xfd, 0x0f, 0x12, 0x7c, 0xcb, 0x97, 0x1b, 0x9e, 0xc2, 0x24, 0xf5, 0xa2, 0xc0, 0xed, 0x8b,
	0xe0, 0x19, 0x26, 0x5e, 0x47, 0x60, 0x46, 0x14, 0x53, 0xb2, 0x2f, 0xff, 0x46, 0x06, 0x8c, 0x7e,
	0x2c, 0xf9, 0x00, 0x72, 0x27, 0x6e, 0xdb, 0x69, 0xd9, 0x81, 0x73, 0x50, 0xdb, 0x1a, 0xdc, 0x43,
	0xeb, 0x58, 0xf2, 0x1e, 0xc8, 0x2d, 0x75, 0x6d, 0x4b, 0xf8, 0x04, 0xa4, 0x6c, 0xb7, 0x6b, 0x5b,
	0x2a, 0x5d, 0xde, 0xa8, 0xa2, 0x49, 0xa4, 0xcb, 0xf3, 0xb4, 0x3b, 0x0a, 0xdd, 0x32, 0x7b, 0x4d,
	0xd5, 0xbc, 0x07, 0x93, 0x62, 0x5d, 0x19, 0x12, 0x4b, 0x37, 0xd1, 0xc3, 0x25, 0xe4, 0xf6, 0x1f,
	0x66, 0x60, 0x8a, 0x15, 0x8f, 0x67, 0xe3, 0xb3, 0x30, 0x73, 0x44, 0x3d, 0x1a, 0xb8, 0x2d, 0x09,
	0xe2, 0x31, 0x2e, 0x61, 0xd7, 0xf6, 0x14, 0x24, 0x43, 0x88, 0x7c, 0x97, 0x51, 0xc1, 0x30, 0xca,
	0x39, 0xa2, 0xaf, 0x22, 0x05, 0x19, 0x65, 0xc2, 0xe4, 0xa9, 0xa6, 0x04, 0x8e, 0x31, 0x32, 0xbc,
	0x9d, 0x95, 0x90, 0x71, 0x06, 0xc1, 0x9b, 0x61, 0x09, 0xc1, 0x18, 0x67, 0x75, 0x3d, 0x2b, 0xa1,
	0x93, 0xa4, 0x04, 0x73, 0x7a, 0x9a, 0x5e, 0x85, 0x99, 0x22, 0xf3, 0x50, 0xb4, 0x7b, 0x91, 0xdf,
	0xb1, 0x23, 0xad, 0xde, 0xd9, 0xdb, 0xbf, 0x3e, 0x02, 0xf9, 0x44, 0x16, 0x41, 0xb2, 0x00, 0x84,
	0x76, 0xba, 0xd1, 0x69, 0x02, 0x6a, 0xbc, 0x45, 0x16, 0x61, 0x36, 0xfe, 0x9e, 0x18, 0x91, 0x61,
	0x08, 0x71, 0x07, 0x9c, 0x40, 0x8c, 0x90, 0x25, 0xcc, 0x3d, 0xf5, 0xd2, 0x15, 0xe9, 0x9b, 0x62,
	0xd4, 0x28, 0xab, 0x8d, 0xfc, 0xc2, 0x18, 0x3c, 0xc6, 0xc0, 0xf2, 0x33, 0x63, 0xf0, 0x38, 0x13,
	0xa4, 0x7f, 0x6b, 0x8c, 0x9a, 0xc0, 0xda, 0xca, 0x2f, 0x8d, 0xe1, 0x93, 0x4c, 0x3d, 0x32, 0xef,
	0xa0, 0xa6, 0x84, 0x25, 0x98, 0x97, 0x69, 0xf8, 0x92, 0x0c, 0xd9, 0xdb, 0x9f, 0x89, 0x97, 0xcb,
	0xb7, 0xdc, 0x0e, 0xf5, 0x42, 0x6d, 0x97, 0xc1, 0x1a, 0x43, 0xc2, 0x4c, 0xff, 0xc4, 0x78, 0x8b,
	0xb5, 0x99, 0x82, 0x70, 0x2b, 0xcc, 0xc8, 0xdc, 0xfe, 0xb5, 0x11, 0x98, 0x4b, 0xcb, 0x68, 0x42,
	0xae, 0xc3, 0x8a, 0x43, 0xbb, 0x01, 0x6d, 0xd9, 0x11, 0xd7, 0x43, 0x82, 0xca, 0x78, 0x0b, 0xab,
	0xea, 0x9f, 0x24, 0xa1, 0xa8, 0x55, 0x3e, 0x1c, 0x92, 0x88, 0x11, 0xf2, 0x2e, 0x94, 0x93, 0xf2,
	0xaa, 0x8e, 0x1b, 0x61, 0xd2, 0x5a, 0x9d, 0x6e, 0x94, 0xdc, 0x84, 0xd5, 0x98, 0x6e, 0x30, 0xad,
	0x87, 0xd0, 0xf8, 0x2a, 0x5c, 0xe9, 0xa3, 0x4a, 0x52, 0x8c, 0xb3, 0x8a, 0xf0, 0xb4, 0x29, 0x49,
	0xc4, 0x04, 0x53, 0x83, 0xe7, 0x27, 0x81, 0x93, 0xb7, 0x4f, 0x61, 0x6e, 0xdb, 0x6d, 0xb7, 0x55,
	0xb0, 0x97, 0xd4, 0xc2, 0x22, 0xcc, 0xbe, 0x68, 0x36, 0x9a, 0x88, 0xf3, 0x4f, 0x24, 0xd8, 0xc8,
	0xb0, 0x26, 0x97, 0x88, 0x03, 0x69, 0x77, 0x19, 0x23, 0xac, 0x23, 0x4b, 0x30, 0xba, 0x13, 0x4b,
	0xcc, 0xa8, 0x2e, 0x69, 0x87, 0x1e, 0x2a, 0xc4, 0xd8, 0x6d, 0x0f, 0xc8, 0xa0, 0x37, 0x10, 0x93,
	0xaf, 0xe5, 0x21, 0xad, 0x79, 0x21, 0x0d, 0x22, 0x5e, 0xac, 0x06, 0x36, 0x69, 0xc7, 0xc7, 0x62,
	0x93, 0xe0, 0xc6, 0x71, 0xe0, 0x7a, 0x2f, 0xf8, 0x28, 0xd5, 0xc0, 0x4f, 0x02, 0xff, 0xc4, 0x18,
	0xbb, 0xfd, 0x04, 0xe6, 0x9f, 0xba, 0x0e, 0x6d, 0x1c, 0xfb, 0x27, 0xc9, 0x22, 0x17, 0x80, 0x1c,
	0x27, 0x10, 0x8c, 0xcc, 0x78, 0x6b, 0x10, 0xce, 0xfe, 0x33, 0x32, 0xb7, 0x43, 0x98, 0xd6, 0xef,
	0xd1, 0x09, 0xc0, 0xc4, 0x41, 0xbd, 0xf6, 0xfd, 0x83, 0x2a, 0x0f, 0x9c, 0xfe, 0xa6, 0x5a, 0x31,
	0x8d, 0x0c, 0xc9, 0xc2, 0xf8, 0xee, 0x5e, 0xbd, 0xf9, 0xd4, 0x18, 0x21, 0x79, 0xc8, 0x6e, 0x55,
	0xbe, 0xd9, 0xdb, 0x7e, 0x56, 0xad, 0x7e, 0x65, 0x8c, 0x92, 0x49, 0x18, 0xdd, 0xaa, 0x7c, 0x63,
	0x8c, 0x31, 0xe3, 0x90, 0x11, 0x23, 0x78, 0x9c, 0xcc, 0x40, 0x8e, 0xfd, 0xfa, 0xfe, 0x41, 0xc5,
	0x6c, 0x56, 0x4d, 0x1e, 0x4f, 0x6d, 0xee, 0x1d, 0xd4, 0xb7, 0xac, 0xbb, 0x06, 0xdc, 0xfe, 0x09,
	0xe4, 0x13, 0x97, 0xcb, 0xac, 0xa4, 0xfa, 0x5e, 0x9d, 0x95, 0x99, 0x85, 0xf1, 0xcd, 0xbd, 0x83,
	0x7a, 0x93, 0x17, 0xda, 0xdc, 0x6b, 0x56, 0x76, 0x8c, 0x11, 0xc6, 0x5d, 0xf9, 0xba, 0x6a, 0x56,
	0x9e, 0x54, 0x79, 0x91, 0xbb, 0xb5, 0xba, 0x31, 0x86, 0xff, 0x54, 0x7e, 0x60, 0x8c, 0x93, 0x02,
	0x00, 0x1a, 0xa6, 0x5f, 0x57, 0x76, 0x0e, 0xaa, 0x46, 0x96, 0xd5, 0x65, 0x63, 0x6f, 0xeb, 0x1b,
	0x73, 0xef, 0x59, 0xc3, 0x00, 0xf6, 0xab, 0x56, 0xdf, 0xaa, 0x99, 0xd5, 0xcd, 0xa6, 0x91, 0x7b,
	0xdc, 0x49, 0xcb, 0xd3, 0x4c, 0x56, 0xd3, 0x72, 0xd1, 0xe9, 0x49, 0xb9, 0x4a, 0x7f, 0x3a, 0xfa,
	0x6d, 0x52, 0x39, 0x3f, 0x7e, 0x01, 0x86, 0x38, 0xee, 0xb7, 0x3d, 0xe1, 0xe6, 0x77, 0x81, 0xc2,
	0xfe, 0xfb, 0xa8, 0x72, 0x58, 0xe7, 0x6b, 0x4f, 0x6a, 0x6e, 0x56, 0x99, 0xb4, 0x52, 0x82, 0x1f,
	0xff, 0x30, 0x91, 0xeb, 0xf9, 0x02, 0xe5, 0xfc, 0xd9, 0xe8, 0x45, 0xd3, 0x41, 0x3f, 0xee, 0x0c,
	0x24, 0x1a, 0xbc, 0x80, 0xfc, 0xff, 0x39, 0xaa, 0xbd, 0x20, 0x75, 0x56, 0x1e, 0xc3, 0xfe, 0xf4,
	0x84, 0x8f, 0x9b, 0x5a, 0xf6, 0xe9, 0x0b, 0x14, 0xf4, 0xe7, 0xa3, 0x17, 0x49, 0x50, 0xbd, 0xf1,
	0xde, 0x0f, 0xdf, 0x39, 0x72, 0xa3, 0xe3, 0xde, 0xf3, 0xb5, 0x96, 0xdf, 0xf9, 0xe8, 0x27, 0x6e,
	0xe7, 0xb9, 0xfd, 0xdc, 0xf6, 0x3f, 0x72, 0xfc, 0x56, 0xcb, 0xf7, 0x5e, 0x7e, 0xe4, 0x3e, 0xf3,
	0x83, 0x17, 0x1f, 0x35, 0x1b, 0xcd, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x61, 0x3f, 0x66,
	0xc8, 0xa9, 0x00, 0x00,
}
