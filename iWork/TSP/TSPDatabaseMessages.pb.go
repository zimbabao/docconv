// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TSPDatabaseMessages.proto

package TSP

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DatabaseImageDataArchive_ImageType int32

const (
	DatabaseImageDataArchive_unknown DatabaseImageDataArchive_ImageType = 0
	DatabaseImageDataArchive_bitmap  DatabaseImageDataArchive_ImageType = 1
	DatabaseImageDataArchive_pdf     DatabaseImageDataArchive_ImageType = 2
)

var DatabaseImageDataArchive_ImageType_name = map[int32]string{
	0: "unknown",
	1: "bitmap",
	2: "pdf",
}

var DatabaseImageDataArchive_ImageType_value = map[string]int32{
	"unknown": 0,
	"bitmap":  1,
	"pdf":     2,
}

func (x DatabaseImageDataArchive_ImageType) Enum() *DatabaseImageDataArchive_ImageType {
	p := new(DatabaseImageDataArchive_ImageType)
	*p = x
	return p
}

func (x DatabaseImageDataArchive_ImageType) String() string {
	return proto.EnumName(DatabaseImageDataArchive_ImageType_name, int32(x))
}

func (x *DatabaseImageDataArchive_ImageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatabaseImageDataArchive_ImageType_value, data, "DatabaseImageDataArchive_ImageType")
	if err != nil {
		return err
	}
	*x = DatabaseImageDataArchive_ImageType(value)
	return nil
}

func (DatabaseImageDataArchive_ImageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f49ab1ad8c3ebc15, []int{2, 0}
}

type DatabaseData struct {
	Data                 *DataReference `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DatabaseData) Reset()         { *m = DatabaseData{} }
func (m *DatabaseData) String() string { return proto.CompactTextString(m) }
func (*DatabaseData) ProtoMessage()    {}
func (*DatabaseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49ab1ad8c3ebc15, []int{0}
}

func (m *DatabaseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseData.Unmarshal(m, b)
}
func (m *DatabaseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseData.Marshal(b, m, deterministic)
}
func (m *DatabaseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseData.Merge(m, src)
}
func (m *DatabaseData) XXX_Size() int {
	return xxx_messageInfo_DatabaseData.Size(m)
}
func (m *DatabaseData) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseData.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseData proto.InternalMessageInfo

func (m *DatabaseData) GetData() *DataReference {
	if m != nil {
		return m.Data
	}
	return nil
}

type DatabaseDataArchive struct {
	Data                 *Reference `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	AppRelativePath      *string    `protobuf:"bytes,2,opt,name=app_relative_path,json=appRelativePath" json:"app_relative_path,omitempty"`
	DisplayName          *string    `protobuf:"bytes,3,req,name=display_name,json=displayName" json:"display_name,omitempty"`
	Length               *uint64    `protobuf:"varint,4,opt,name=length" json:"length,omitempty"`
	Hash                 *uint32    `protobuf:"varint,5,opt,name=hash" json:"hash,omitempty"`
	Sharable             *bool      `protobuf:"varint,6,req,name=sharable,def=1" json:"sharable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DatabaseDataArchive) Reset()         { *m = DatabaseDataArchive{} }
func (m *DatabaseDataArchive) String() string { return proto.CompactTextString(m) }
func (*DatabaseDataArchive) ProtoMessage()    {}
func (*DatabaseDataArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49ab1ad8c3ebc15, []int{1}
}

func (m *DatabaseDataArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseDataArchive.Unmarshal(m, b)
}
func (m *DatabaseDataArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseDataArchive.Marshal(b, m, deterministic)
}
func (m *DatabaseDataArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseDataArchive.Merge(m, src)
}
func (m *DatabaseDataArchive) XXX_Size() int {
	return xxx_messageInfo_DatabaseDataArchive.Size(m)
}
func (m *DatabaseDataArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseDataArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseDataArchive proto.InternalMessageInfo

const Default_DatabaseDataArchive_Sharable bool = true

func (m *DatabaseDataArchive) GetData() *Reference {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DatabaseDataArchive) GetAppRelativePath() string {
	if m != nil && m.AppRelativePath != nil {
		return *m.AppRelativePath
	}
	return ""
}

func (m *DatabaseDataArchive) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *DatabaseDataArchive) GetLength() uint64 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *DatabaseDataArchive) GetHash() uint32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *DatabaseDataArchive) GetSharable() bool {
	if m != nil && m.Sharable != nil {
		return *m.Sharable
	}
	return Default_DatabaseDataArchive_Sharable
}

type DatabaseImageDataArchive struct {
	Super                *DatabaseDataArchive                `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Type                 *DatabaseImageDataArchive_ImageType `protobuf:"varint,2,req,name=type,enum=TSP.DatabaseImageDataArchive_ImageType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *DatabaseImageDataArchive) Reset()         { *m = DatabaseImageDataArchive{} }
func (m *DatabaseImageDataArchive) String() string { return proto.CompactTextString(m) }
func (*DatabaseImageDataArchive) ProtoMessage()    {}
func (*DatabaseImageDataArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49ab1ad8c3ebc15, []int{2}
}

func (m *DatabaseImageDataArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseImageDataArchive.Unmarshal(m, b)
}
func (m *DatabaseImageDataArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseImageDataArchive.Marshal(b, m, deterministic)
}
func (m *DatabaseImageDataArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseImageDataArchive.Merge(m, src)
}
func (m *DatabaseImageDataArchive) XXX_Size() int {
	return xxx_messageInfo_DatabaseImageDataArchive.Size(m)
}
func (m *DatabaseImageDataArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseImageDataArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseImageDataArchive proto.InternalMessageInfo

func (m *DatabaseImageDataArchive) GetSuper() *DatabaseDataArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DatabaseImageDataArchive) GetType() DatabaseImageDataArchive_ImageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DatabaseImageDataArchive_unknown
}

func init() {
	proto.RegisterEnum("TSP.DatabaseImageDataArchive_ImageType", DatabaseImageDataArchive_ImageType_name, DatabaseImageDataArchive_ImageType_value)
	proto.RegisterType((*DatabaseData)(nil), "TSP.DatabaseData")
	proto.RegisterType((*DatabaseDataArchive)(nil), "TSP.DatabaseDataArchive")
	proto.RegisterType((*DatabaseImageDataArchive)(nil), "TSP.DatabaseImageDataArchive")
}

func init() { proto.RegisterFile("TSPDatabaseMessages.proto", fileDescriptor_f49ab1ad8c3ebc15) }

var fileDescriptor_f49ab1ad8c3ebc15 = []byte{
	// 377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x49, 0x9a, 0xed, 0x6e, 0xa7, 0xcb, 0xd2, 0x35, 0x12, 0x32, 0x9c, 0x4c, 0x24, 0x58,
	0x0b, 0x89, 0x54, 0xea, 0x81, 0x03, 0x9c, 0x40, 0x5c, 0x38, 0x80, 0x22, 0x27, 0x12, 0x12, 0x97,
	0x6a, 0x92, 0xce, 0xd6, 0xd1, 0x36, 0xb1, 0x65, 0xbb, 0x45, 0xe5, 0xc1, 0x78, 0x14, 0x9e, 0x07,
	0x6d, 0xe8, 0x46, 0xb4, 0x27, 0xdb, 0xdf, 0xcc, 0x67, 0xe9, 0xff, 0xe1, 0x79, 0x59, 0xe4, 0x9f,
	0x31, 0x60, 0x85, 0x9e, 0xbe, 0x92, 0xf7, 0xb8, 0x26, 0x9f, 0x59, 0x67, 0x82, 0x61, 0xa3, 0xb2,
	0xc8, 0x5f, 0x5c, 0x97, 0x45, 0x7e, 0xcc, 0xd3, 0x77, 0x70, 0xf9, 0x60, 0xdc, 0x9f, 0xec, 0x35,
	0x24, 0x2b, 0x0c, 0xc8, 0x23, 0x11, 0xcb, 0xe9, 0x82, 0x65, 0x65, 0x91, 0x67, 0xf7, 0x03, 0x45,
	0xb7, 0xe4, 0xa8, 0xab, 0x49, 0xf5, 0xf3, 0xf4, 0x4f, 0x04, 0x4f, 0xff, 0x17, 0x3f, 0xba, 0x5a,
	0x37, 0x3b, 0x62, 0xe9, 0xe0, 0x47, 0x72, 0xba, 0xb8, 0xea, 0xfd, 0x13, 0x97, 0xbd, 0x81, 0x6b,
	0xb4, 0x76, 0xe9, 0x68, 0x83, 0xa1, 0xd9, 0xd1, 0xd2, 0x62, 0xd0, 0x3c, 0x16, 0x91, 0x9c, 0xa8,
	0x27, 0x68, 0xad, 0x3a, 0xf0, 0x1c, 0x83, 0x66, 0x2f, 0xe1, 0x72, 0xd5, 0x78, 0xbb, 0xc1, 0xfd,
	0xb2, 0xc3, 0x96, 0xf8, 0x48, 0xc4, 0x72, 0xa2, 0xa6, 0x07, 0xf6, 0x0d, 0x5b, 0x62, 0xcf, 0x60,
	0xbc, 0xa1, 0x6e, 0x1d, 0x34, 0x4f, 0x44, 0x24, 0x13, 0x75, 0x78, 0x31, 0x06, 0x89, 0x46, 0xaf,
	0xf9, 0x99, 0x88, 0xe4, 0x63, 0xd5, 0xdf, 0x99, 0x80, 0x0b, 0xaf, 0xd1, 0x61, 0xb5, 0x21, 0x3e,
	0x16, 0xb1, 0xbc, 0x78, 0x9f, 0x04, 0xb7, 0x25, 0x35, 0xd0, 0xf4, 0x77, 0x04, 0xfc, 0x21, 0xd8,
	0x97, 0x16, 0xd7, 0x47, 0xe9, 0x32, 0x38, 0xf3, 0x5b, 0x4b, 0xee, 0x50, 0x0f, 0x1f, 0xea, 0x39,
	0xa9, 0x41, 0xfd, 0x5b, 0x63, 0x1f, 0x20, 0x09, 0x7b, 0x4b, 0x3c, 0x16, 0xb1, 0xbc, 0x5a, 0xdc,
	0x1c, 0xad, 0x9f, 0x7e, 0x9e, 0xf5, 0xa0, 0xdc, 0x5b, 0x52, 0xbd, 0x94, 0xbe, 0x85, 0xc9, 0x80,
	0xd8, 0x14, 0xce, 0xb7, 0xdd, 0x5d, 0x67, 0x7e, 0x76, 0xb3, 0x47, 0x0c, 0x60, 0x5c, 0x35, 0xa1,
	0x45, 0x3b, 0x8b, 0xd8, 0x39, 0x8c, 0xec, 0xea, 0x76, 0x16, 0x7f, 0xba, 0xf9, 0xf1, 0x6a, 0xdd,
	0x04, 0xbd, 0xad, 0xb2, 0xda, 0xb4, 0xf3, 0x5f, 0x4d, 0x5b, 0x61, 0x85, 0x66, 0xbe, 0x32, 0x75,
	0x6d, 0xba, 0xdd, 0xbc, 0xf9, 0x6e, 0xdc, 0xdd, 0xbc, 0x2c, 0xf2, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x37, 0x6b, 0xf8, 0xf7, 0x26, 0x02, 0x00, 0x00,
}
