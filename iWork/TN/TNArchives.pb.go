// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TNArchives.proto

package TN

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSA "github.com/zimbabao/docconv/iWork/TSA"
	TSCE "github.com/zimbabao/docconv/iWork/TSCE"
	TSCH "github.com/zimbabao/docconv/iWork/TSCH"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	TST "github.com/zimbabao/docconv/iWork/TST"
	TSWP "github.com/zimbabao/docconv/iWork/TSWP"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SheetPageOrder int32

const (
	SheetPageOrder_SheetPageOrderTopToBottom SheetPageOrder = 0
	SheetPageOrder_SheetPageOrderLeftToRight SheetPageOrder = 1
)

var SheetPageOrder_name = map[int32]string{
	0: "SheetPageOrderTopToBottom",
	1: "SheetPageOrderLeftToRight",
}

var SheetPageOrder_value = map[string]int32{
	"SheetPageOrderTopToBottom": 0,
	"SheetPageOrderLeftToRight": 1,
}

func (x SheetPageOrder) Enum() *SheetPageOrder {
	p := new(SheetPageOrder)
	*p = x
	return p
}

func (x SheetPageOrder) String() string {
	return proto.EnumName(SheetPageOrder_name, int32(x))
}

func (x *SheetPageOrder) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SheetPageOrder_value, data, "SheetPageOrder")
	if err != nil {
		return err
	}
	*x = SheetPageOrder(value)
	return nil
}

func (SheetPageOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{0}
}

type UIStateArchive_InspectorPaneViewMode int32

const (
	UIStateArchive_kInspectorPaneViewModeFormat UIStateArchive_InspectorPaneViewMode = 0
	UIStateArchive_kInspectorPaneViewModeFilter UIStateArchive_InspectorPaneViewMode = 1
)

var UIStateArchive_InspectorPaneViewMode_name = map[int32]string{
	0: "kInspectorPaneViewModeFormat",
	1: "kInspectorPaneViewModeFilter",
}

var UIStateArchive_InspectorPaneViewMode_value = map[string]int32{
	"kInspectorPaneViewModeFormat": 0,
	"kInspectorPaneViewModeFilter": 1,
}

func (x UIStateArchive_InspectorPaneViewMode) Enum() *UIStateArchive_InspectorPaneViewMode {
	p := new(UIStateArchive_InspectorPaneViewMode)
	*p = x
	return p
}

func (x UIStateArchive_InspectorPaneViewMode) String() string {
	return proto.EnumName(UIStateArchive_InspectorPaneViewMode_name, int32(x))
}

func (x *UIStateArchive_InspectorPaneViewMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UIStateArchive_InspectorPaneViewMode_value, data, "UIStateArchive_InspectorPaneViewMode")
	if err != nil {
		return err
	}
	*x = UIStateArchive_InspectorPaneViewMode(value)
	return nil
}

func (UIStateArchive_InspectorPaneViewMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{2, 0}
}

type SheetUIStateArchive struct {
	ViewScale                   *float32   `protobuf:"fixed32,1,req,name=view_scale,json=viewScale" json:"view_scale,omitempty"`
	ScrollPosition              *TSP.Point `protobuf:"bytes,2,req,name=scroll_position,json=scrollPosition" json:"scroll_position,omitempty"`
	PreviousViewScale           *float32   `protobuf:"fixed32,3,opt,name=previous_view_scale,json=previousViewScale" json:"previous_view_scale,omitempty"`
	ScrollPositionIsUnscaled    *bool      `protobuf:"varint,4,opt,name=scroll_position_is_unscaled,json=scrollPositionIsUnscaled" json:"scroll_position_is_unscaled,omitempty"`
	PreviousScrollPosition      *TSP.Point `protobuf:"bytes,5,opt,name=previous_scroll_position,json=previousScrollPosition" json:"previous_scroll_position,omitempty"`
	ScrollPositionValid         *bool      `protobuf:"varint,6,opt,name=scroll_position_valid,json=scrollPositionValid" json:"scroll_position_valid,omitempty"`
	PreviousScrollPositionValid *bool      `protobuf:"varint,7,opt,name=previous_scroll_position_valid,json=previousScrollPositionValid" json:"previous_scroll_position_valid,omitempty"`
	VisibleSize                 *TSP.Size  `protobuf:"bytes,8,opt,name=visible_size,json=visibleSize" json:"visible_size,omitempty"`
	PreviousVisibleSize         *TSP.Size  `protobuf:"bytes,9,opt,name=previous_visible_size,json=previousVisibleSize" json:"previous_visible_size,omitempty"`
	DeviceIdiom                 *uint32    `protobuf:"varint,10,opt,name=device_idiom,json=deviceIdiom" json:"device_idiom,omitempty"`
	FormFocusedRecordIndex      *uint32    `protobuf:"varint,11,opt,name=form_focused_record_index,json=formFocusedRecordIndex" json:"form_focused_record_index,omitempty"`
	FormFocusedFieldIndex       *uint32    `protobuf:"varint,12,opt,name=form_focused_field_index,json=formFocusedFieldIndex" json:"form_focused_field_index,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}   `json:"-"`
	XXX_unrecognized            []byte     `json:"-"`
	XXX_sizecache               int32      `json:"-"`
}

func (m *SheetUIStateArchive) Reset()         { *m = SheetUIStateArchive{} }
func (m *SheetUIStateArchive) String() string { return proto.CompactTextString(m) }
func (*SheetUIStateArchive) ProtoMessage()    {}
func (*SheetUIStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{0}
}

func (m *SheetUIStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SheetUIStateArchive.Unmarshal(m, b)
}
func (m *SheetUIStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SheetUIStateArchive.Marshal(b, m, deterministic)
}
func (m *SheetUIStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SheetUIStateArchive.Merge(m, src)
}
func (m *SheetUIStateArchive) XXX_Size() int {
	return xxx_messageInfo_SheetUIStateArchive.Size(m)
}
func (m *SheetUIStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SheetUIStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SheetUIStateArchive proto.InternalMessageInfo

func (m *SheetUIStateArchive) GetViewScale() float32 {
	if m != nil && m.ViewScale != nil {
		return *m.ViewScale
	}
	return 0
}

func (m *SheetUIStateArchive) GetScrollPosition() *TSP.Point {
	if m != nil {
		return m.ScrollPosition
	}
	return nil
}

func (m *SheetUIStateArchive) GetPreviousViewScale() float32 {
	if m != nil && m.PreviousViewScale != nil {
		return *m.PreviousViewScale
	}
	return 0
}

func (m *SheetUIStateArchive) GetScrollPositionIsUnscaled() bool {
	if m != nil && m.ScrollPositionIsUnscaled != nil {
		return *m.ScrollPositionIsUnscaled
	}
	return false
}

func (m *SheetUIStateArchive) GetPreviousScrollPosition() *TSP.Point {
	if m != nil {
		return m.PreviousScrollPosition
	}
	return nil
}

func (m *SheetUIStateArchive) GetScrollPositionValid() bool {
	if m != nil && m.ScrollPositionValid != nil {
		return *m.ScrollPositionValid
	}
	return false
}

func (m *SheetUIStateArchive) GetPreviousScrollPositionValid() bool {
	if m != nil && m.PreviousScrollPositionValid != nil {
		return *m.PreviousScrollPositionValid
	}
	return false
}

func (m *SheetUIStateArchive) GetVisibleSize() *TSP.Size {
	if m != nil {
		return m.VisibleSize
	}
	return nil
}

func (m *SheetUIStateArchive) GetPreviousVisibleSize() *TSP.Size {
	if m != nil {
		return m.PreviousVisibleSize
	}
	return nil
}

func (m *SheetUIStateArchive) GetDeviceIdiom() uint32 {
	if m != nil && m.DeviceIdiom != nil {
		return *m.DeviceIdiom
	}
	return 0
}

func (m *SheetUIStateArchive) GetFormFocusedRecordIndex() uint32 {
	if m != nil && m.FormFocusedRecordIndex != nil {
		return *m.FormFocusedRecordIndex
	}
	return 0
}

func (m *SheetUIStateArchive) GetFormFocusedFieldIndex() uint32 {
	if m != nil && m.FormFocusedFieldIndex != nil {
		return *m.FormFocusedFieldIndex
	}
	return 0
}

type SheetUIStateDictionaryEntryArchive struct {
	Sheet                *TSP.Reference       `protobuf:"bytes,1,req,name=sheet" json:"sheet,omitempty"`
	SheetUistate         *SheetUIStateArchive `protobuf:"bytes,2,req,name=sheet_uistate,json=sheetUistate" json:"sheet_uistate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SheetUIStateDictionaryEntryArchive) Reset()         { *m = SheetUIStateDictionaryEntryArchive{} }
func (m *SheetUIStateDictionaryEntryArchive) String() string { return proto.CompactTextString(m) }
func (*SheetUIStateDictionaryEntryArchive) ProtoMessage()    {}
func (*SheetUIStateDictionaryEntryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{1}
}

func (m *SheetUIStateDictionaryEntryArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SheetUIStateDictionaryEntryArchive.Unmarshal(m, b)
}
func (m *SheetUIStateDictionaryEntryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SheetUIStateDictionaryEntryArchive.Marshal(b, m, deterministic)
}
func (m *SheetUIStateDictionaryEntryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SheetUIStateDictionaryEntryArchive.Merge(m, src)
}
func (m *SheetUIStateDictionaryEntryArchive) XXX_Size() int {
	return xxx_messageInfo_SheetUIStateDictionaryEntryArchive.Size(m)
}
func (m *SheetUIStateDictionaryEntryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SheetUIStateDictionaryEntryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SheetUIStateDictionaryEntryArchive proto.InternalMessageInfo

func (m *SheetUIStateDictionaryEntryArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *SheetUIStateDictionaryEntryArchive) GetSheetUistate() *SheetUIStateArchive {
	if m != nil {
		return m.SheetUistate
	}
	return nil
}

type UIStateArchive struct {
	ActiveSheetIndex                    *uint32                               `protobuf:"varint,1,req,name=active_sheet_index,json=activeSheetIndex" json:"active_sheet_index,omitempty"` // Deprecated: Do not use.
	SelectedInfo                        []*TSP.Reference                      `protobuf:"bytes,2,rep,name=selected_info,json=selectedInfo" json:"selected_info,omitempty"`
	SheetUistateDictionaryEntry         []*SheetUIStateDictionaryEntryArchive `protobuf:"bytes,3,rep,name=sheet_uistate_dictionary_entry,json=sheetUistateDictionaryEntry" json:"sheet_uistate_dictionary_entry,omitempty"`
	TableSelection                      *TST.SelectionArchive                 `protobuf:"bytes,4,opt,name=table_selection,json=tableSelection" json:"table_selection,omitempty"`
	EditingSheetIndex                   *uint32                               `protobuf:"varint,5,opt,name=editing_sheet_index,json=editingSheetIndex" json:"editing_sheet_index,omitempty"` // Deprecated: Do not use.
	DocumentMode                        *int32                                `protobuf:"varint,6,opt,name=document_mode,json=documentMode" json:"document_mode,omitempty"`
	EditModeSheetUistateDictionaryEntry []*SheetUIStateDictionaryEntryArchive `protobuf:"bytes,7,rep,name=edit_mode_sheet_uistate_dictionary_entry,json=editModeSheetUistateDictionaryEntry" json:"edit_mode_sheet_uistate_dictionary_entry,omitempty"`
	TableEditingMode                    *int32                                `protobuf:"varint,8,opt,name=table_editing_mode,json=tableEditingMode" json:"table_editing_mode,omitempty"`
	FormFocusedRecordIndex              *uint32                               `protobuf:"varint,9,opt,name=form_focused_record_index,json=formFocusedRecordIndex" json:"form_focused_record_index,omitempty"` // Deprecated: Do not use.
	FormFocusedFieldIndex               *uint32                               `protobuf:"varint,10,opt,name=form_focused_field_index,json=formFocusedFieldIndex" json:"form_focused_field_index,omitempty"`   // Deprecated: Do not use.
	InChartMode                         *bool                                 `protobuf:"varint,11,opt,name=in_chart_mode,json=inChartMode" json:"in_chart_mode,omitempty"`
	ChartSelection                      *ChartSelectionArchive                `protobuf:"bytes,12,opt,name=chart_selection,json=chartSelection" json:"chart_selection,omitempty"`
	SheetSelection                      *TSP.Reference                        `protobuf:"bytes,13,opt,name=sheet_selection,json=sheetSelection" json:"sheet_selection,omitempty"`
	InspectorPaneVisible                *bool                                 `protobuf:"varint,14,opt,name=inspector_pane_visible,json=inspectorPaneVisible,def=1" json:"inspector_pane_visible,omitempty"`
	InspectorPaneViewMode               *UIStateArchive_InspectorPaneViewMode `protobuf:"varint,15,opt,name=inspector_pane_view_mode,json=inspectorPaneViewMode,enum=TN.UIStateArchive_InspectorPaneViewMode,def=0" json:"inspector_pane_view_mode,omitempty"`
	SelectedQuickCalcFunctions          []uint32                              `protobuf:"varint,16,rep,name=selected_quick_calc_functions,json=selectedQuickCalcFunctions" json:"selected_quick_calc_functions,omitempty"`
	RemovedAllQuickCalcFunctions        *bool                                 `protobuf:"varint,17,opt,name=removed_all_quick_calc_functions,json=removedAllQuickCalcFunctions" json:"removed_all_quick_calc_functions,omitempty"`
	ShowCanvasGuides                    *bool                                 `protobuf:"varint,18,opt,name=show_canvas_guides,json=showCanvasGuides" json:"show_canvas_guides,omitempty"`
	ShowsComments                       *bool                                 `protobuf:"varint,19,opt,name=shows_comments,json=showsComments" json:"shows_comments,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                              `json:"-"`
	XXX_unrecognized                    []byte                                `json:"-"`
	XXX_sizecache                       int32                                 `json:"-"`
}

func (m *UIStateArchive) Reset()         { *m = UIStateArchive{} }
func (m *UIStateArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateArchive) ProtoMessage()    {}
func (*UIStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{2}
}

func (m *UIStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIStateArchive.Unmarshal(m, b)
}
func (m *UIStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIStateArchive.Marshal(b, m, deterministic)
}
func (m *UIStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIStateArchive.Merge(m, src)
}
func (m *UIStateArchive) XXX_Size() int {
	return xxx_messageInfo_UIStateArchive.Size(m)
}
func (m *UIStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UIStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UIStateArchive proto.InternalMessageInfo

const Default_UIStateArchive_InspectorPaneVisible bool = true
const Default_UIStateArchive_InspectorPaneViewMode UIStateArchive_InspectorPaneViewMode = UIStateArchive_kInspectorPaneViewModeFormat

// Deprecated: Do not use.
func (m *UIStateArchive) GetActiveSheetIndex() uint32 {
	if m != nil && m.ActiveSheetIndex != nil {
		return *m.ActiveSheetIndex
	}
	return 0
}

func (m *UIStateArchive) GetSelectedInfo() []*TSP.Reference {
	if m != nil {
		return m.SelectedInfo
	}
	return nil
}

func (m *UIStateArchive) GetSheetUistateDictionaryEntry() []*SheetUIStateDictionaryEntryArchive {
	if m != nil {
		return m.SheetUistateDictionaryEntry
	}
	return nil
}

func (m *UIStateArchive) GetTableSelection() *TST.SelectionArchive {
	if m != nil {
		return m.TableSelection
	}
	return nil
}

// Deprecated: Do not use.
func (m *UIStateArchive) GetEditingSheetIndex() uint32 {
	if m != nil && m.EditingSheetIndex != nil {
		return *m.EditingSheetIndex
	}
	return 0
}

func (m *UIStateArchive) GetDocumentMode() int32 {
	if m != nil && m.DocumentMode != nil {
		return *m.DocumentMode
	}
	return 0
}

func (m *UIStateArchive) GetEditModeSheetUistateDictionaryEntry() []*SheetUIStateDictionaryEntryArchive {
	if m != nil {
		return m.EditModeSheetUistateDictionaryEntry
	}
	return nil
}

func (m *UIStateArchive) GetTableEditingMode() int32 {
	if m != nil && m.TableEditingMode != nil {
		return *m.TableEditingMode
	}
	return 0
}

// Deprecated: Do not use.
func (m *UIStateArchive) GetFormFocusedRecordIndex() uint32 {
	if m != nil && m.FormFocusedRecordIndex != nil {
		return *m.FormFocusedRecordIndex
	}
	return 0
}

// Deprecated: Do not use.
func (m *UIStateArchive) GetFormFocusedFieldIndex() uint32 {
	if m != nil && m.FormFocusedFieldIndex != nil {
		return *m.FormFocusedFieldIndex
	}
	return 0
}

func (m *UIStateArchive) GetInChartMode() bool {
	if m != nil && m.InChartMode != nil {
		return *m.InChartMode
	}
	return false
}

func (m *UIStateArchive) GetChartSelection() *ChartSelectionArchive {
	if m != nil {
		return m.ChartSelection
	}
	return nil
}

func (m *UIStateArchive) GetSheetSelection() *TSP.Reference {
	if m != nil {
		return m.SheetSelection
	}
	return nil
}

func (m *UIStateArchive) GetInspectorPaneVisible() bool {
	if m != nil && m.InspectorPaneVisible != nil {
		return *m.InspectorPaneVisible
	}
	return Default_UIStateArchive_InspectorPaneVisible
}

func (m *UIStateArchive) GetInspectorPaneViewMode() UIStateArchive_InspectorPaneViewMode {
	if m != nil && m.InspectorPaneViewMode != nil {
		return *m.InspectorPaneViewMode
	}
	return Default_UIStateArchive_InspectorPaneViewMode
}

func (m *UIStateArchive) GetSelectedQuickCalcFunctions() []uint32 {
	if m != nil {
		return m.SelectedQuickCalcFunctions
	}
	return nil
}

func (m *UIStateArchive) GetRemovedAllQuickCalcFunctions() bool {
	if m != nil && m.RemovedAllQuickCalcFunctions != nil {
		return *m.RemovedAllQuickCalcFunctions
	}
	return false
}

func (m *UIStateArchive) GetShowCanvasGuides() bool {
	if m != nil && m.ShowCanvasGuides != nil {
		return *m.ShowCanvasGuides
	}
	return false
}

func (m *UIStateArchive) GetShowsComments() bool {
	if m != nil && m.ShowsComments != nil {
		return *m.ShowsComments
	}
	return false
}

type SheetSelectionArchive struct {
	Sheet                *TSP.Reference `protobuf:"bytes,1,opt,name=sheet" json:"sheet,omitempty"`
	Paginated            *bool          `protobuf:"varint,2,opt,name=paginated" json:"paginated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SheetSelectionArchive) Reset()         { *m = SheetSelectionArchive{} }
func (m *SheetSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*SheetSelectionArchive) ProtoMessage()    {}
func (*SheetSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{3}
}

func (m *SheetSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SheetSelectionArchive.Unmarshal(m, b)
}
func (m *SheetSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SheetSelectionArchive.Marshal(b, m, deterministic)
}
func (m *SheetSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SheetSelectionArchive.Merge(m, src)
}
func (m *SheetSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_SheetSelectionArchive.Size(m)
}
func (m *SheetSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SheetSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SheetSelectionArchive proto.InternalMessageInfo

func (m *SheetSelectionArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *SheetSelectionArchive) GetPaginated() bool {
	if m != nil && m.Paginated != nil {
		return *m.Paginated
	}
	return false
}

type UndoRedoStateArchive struct {
	UiState              *UIStateArchive `protobuf:"bytes,1,req,name=ui_state,json=uiState" json:"ui_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UndoRedoStateArchive) Reset()         { *m = UndoRedoStateArchive{} }
func (m *UndoRedoStateArchive) String() string { return proto.CompactTextString(m) }
func (*UndoRedoStateArchive) ProtoMessage()    {}
func (*UndoRedoStateArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{4}
}

func (m *UndoRedoStateArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndoRedoStateArchive.Unmarshal(m, b)
}
func (m *UndoRedoStateArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndoRedoStateArchive.Marshal(b, m, deterministic)
}
func (m *UndoRedoStateArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndoRedoStateArchive.Merge(m, src)
}
func (m *UndoRedoStateArchive) XXX_Size() int {
	return xxx_messageInfo_UndoRedoStateArchive.Size(m)
}
func (m *UndoRedoStateArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UndoRedoStateArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UndoRedoStateArchive proto.InternalMessageInfo

func (m *UndoRedoStateArchive) GetUiState() *UIStateArchive {
	if m != nil {
		return m.UiState
	}
	return nil
}

type DocumentArchive struct {
	Sheets               []*TSP.Reference     `protobuf:"bytes,1,rep,name=sheets" json:"sheets,omitempty"`
	Super                *TSA.DocumentArchive `protobuf:"bytes,8,req,name=super" json:"super,omitempty"`
	CalculationEngine    *TSP.Reference       `protobuf:"bytes,3,opt,name=calculation_engine,json=calculationEngine" json:"calculation_engine,omitempty"` // Deprecated: Do not use.
	Stylesheet           *TSP.Reference       `protobuf:"bytes,4,req,name=stylesheet" json:"stylesheet,omitempty"`
	SidebarOrder         *TSP.Reference       `protobuf:"bytes,5,req,name=sidebar_order,json=sidebarOrder" json:"sidebar_order,omitempty"`
	Theme                *TSP.Reference       `protobuf:"bytes,6,req,name=theme" json:"theme,omitempty"`
	Uistate              *UIStateArchive      `protobuf:"bytes,7,opt,name=uistate" json:"uistate,omitempty"`
	CustomFormatList     *TSP.Reference       `protobuf:"bytes,9,opt,name=custom_format_list,json=customFormatList" json:"custom_format_list,omitempty"`
	PrinterId            *string              `protobuf:"bytes,10,opt,name=printer_id,json=printerId" json:"printer_id,omitempty"`
	PaperId              *string              `protobuf:"bytes,11,opt,name=paper_id,json=paperId" json:"paper_id,omitempty"`
	PageSize             *TSP.Size            `protobuf:"bytes,12,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DocumentArchive) Reset()         { *m = DocumentArchive{} }
func (m *DocumentArchive) String() string { return proto.CompactTextString(m) }
func (*DocumentArchive) ProtoMessage()    {}
func (*DocumentArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{5}
}

func (m *DocumentArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocumentArchive.Unmarshal(m, b)
}
func (m *DocumentArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocumentArchive.Marshal(b, m, deterministic)
}
func (m *DocumentArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentArchive.Merge(m, src)
}
func (m *DocumentArchive) XXX_Size() int {
	return xxx_messageInfo_DocumentArchive.Size(m)
}
func (m *DocumentArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentArchive.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentArchive proto.InternalMessageInfo

func (m *DocumentArchive) GetSheets() []*TSP.Reference {
	if m != nil {
		return m.Sheets
	}
	return nil
}

func (m *DocumentArchive) GetSuper() *TSA.DocumentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

// Deprecated: Do not use.
func (m *DocumentArchive) GetCalculationEngine() *TSP.Reference {
	if m != nil {
		return m.CalculationEngine
	}
	return nil
}

func (m *DocumentArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *DocumentArchive) GetSidebarOrder() *TSP.Reference {
	if m != nil {
		return m.SidebarOrder
	}
	return nil
}

func (m *DocumentArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *DocumentArchive) GetUistate() *UIStateArchive {
	if m != nil {
		return m.Uistate
	}
	return nil
}

func (m *DocumentArchive) GetCustomFormatList() *TSP.Reference {
	if m != nil {
		return m.CustomFormatList
	}
	return nil
}

func (m *DocumentArchive) GetPrinterId() string {
	if m != nil && m.PrinterId != nil {
		return *m.PrinterId
	}
	return ""
}

func (m *DocumentArchive) GetPaperId() string {
	if m != nil && m.PaperId != nil {
		return *m.PaperId
	}
	return ""
}

func (m *DocumentArchive) GetPageSize() *TSP.Size {
	if m != nil {
		return m.PageSize
	}
	return nil
}

type PlaceholderArchive struct {
	Super                *TSWP.ShapeInfoArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PlaceholderArchive) Reset()         { *m = PlaceholderArchive{} }
func (m *PlaceholderArchive) String() string { return proto.CompactTextString(m) }
func (*PlaceholderArchive) ProtoMessage()    {}
func (*PlaceholderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{6}
}

func (m *PlaceholderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaceholderArchive.Unmarshal(m, b)
}
func (m *PlaceholderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaceholderArchive.Marshal(b, m, deterministic)
}
func (m *PlaceholderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceholderArchive.Merge(m, src)
}
func (m *PlaceholderArchive) XXX_Size() int {
	return xxx_messageInfo_PlaceholderArchive.Size(m)
}
func (m *PlaceholderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceholderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceholderArchive proto.InternalMessageInfo

func (m *PlaceholderArchive) GetSuper() *TSWP.ShapeInfoArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type SheetArchive struct {
	Name                      *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	DrawableInfos             []*TSP.Reference       `protobuf:"bytes,2,rep,name=drawable_infos,json=drawableInfos" json:"drawable_infos,omitempty"`
	InPortraitPageOrientation *bool                  `protobuf:"varint,3,opt,name=in_portrait_page_orientation,json=inPortraitPageOrientation" json:"in_portrait_page_orientation,omitempty"`
	ShowRepeatingHeaders      *bool                  `protobuf:"varint,4,opt,name=show_repeating_headers,json=showRepeatingHeaders" json:"show_repeating_headers,omitempty"` // Deprecated: Do not use.
	ShowPageNumbers           *bool                  `protobuf:"varint,5,opt,name=show_page_numbers,json=showPageNumbers" json:"show_page_numbers,omitempty"`
	IsAutofitOn               *bool                  `protobuf:"varint,6,opt,name=is_autofit_on,json=isAutofitOn" json:"is_autofit_on,omitempty"`
	ContentScale              *float32               `protobuf:"fixed32,7,opt,name=content_scale,json=contentScale" json:"content_scale,omitempty"`
	PageOrder                 *SheetPageOrder        `protobuf:"varint,8,opt,name=page_order,json=pageOrder,enum=TN.SheetPageOrder" json:"page_order,omitempty"`
	PrintMargins              *TSD.EdgeInsetsArchive `protobuf:"bytes,10,opt,name=print_margins,json=printMargins" json:"print_margins,omitempty"`
	UsingStartPageNumber      *bool                  `protobuf:"varint,11,opt,name=using_start_page_number,json=usingStartPageNumber" json:"using_start_page_number,omitempty"`
	StartPageNumber           *int32                 `protobuf:"varint,12,opt,name=start_page_number,json=startPageNumber" json:"start_page_number,omitempty"`
	PageHeaderInset           *float32               `protobuf:"fixed32,13,opt,name=page_header_inset,json=pageHeaderInset" json:"page_header_inset,omitempty"`
	PageFooterInset           *float32               `protobuf:"fixed32,14,opt,name=page_footer_inset,json=pageFooterInset" json:"page_footer_inset,omitempty"`
	HeaderStorage             *TSP.Reference         `protobuf:"bytes,15,opt,name=header_storage,json=headerStorage" json:"header_storage,omitempty"`
	FooterStorage             *TSP.Reference         `protobuf:"bytes,16,opt,name=footer_storage,json=footerStorage" json:"footer_storage,omitempty"`
	UserDefinedGuideStorage   *TSP.Reference         `protobuf:"bytes,17,opt,name=userDefinedGuideStorage" json:"userDefinedGuideStorage,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}               `json:"-"`
	XXX_unrecognized          []byte                 `json:"-"`
	XXX_sizecache             int32                  `json:"-"`
}

func (m *SheetArchive) Reset()         { *m = SheetArchive{} }
func (m *SheetArchive) String() string { return proto.CompactTextString(m) }
func (*SheetArchive) ProtoMessage()    {}
func (*SheetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{7}
}

func (m *SheetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SheetArchive.Unmarshal(m, b)
}
func (m *SheetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SheetArchive.Marshal(b, m, deterministic)
}
func (m *SheetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SheetArchive.Merge(m, src)
}
func (m *SheetArchive) XXX_Size() int {
	return xxx_messageInfo_SheetArchive.Size(m)
}
func (m *SheetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SheetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SheetArchive proto.InternalMessageInfo

func (m *SheetArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SheetArchive) GetDrawableInfos() []*TSP.Reference {
	if m != nil {
		return m.DrawableInfos
	}
	return nil
}

func (m *SheetArchive) GetInPortraitPageOrientation() bool {
	if m != nil && m.InPortraitPageOrientation != nil {
		return *m.InPortraitPageOrientation
	}
	return false
}

// Deprecated: Do not use.
func (m *SheetArchive) GetShowRepeatingHeaders() bool {
	if m != nil && m.ShowRepeatingHeaders != nil {
		return *m.ShowRepeatingHeaders
	}
	return false
}

func (m *SheetArchive) GetShowPageNumbers() bool {
	if m != nil && m.ShowPageNumbers != nil {
		return *m.ShowPageNumbers
	}
	return false
}

func (m *SheetArchive) GetIsAutofitOn() bool {
	if m != nil && m.IsAutofitOn != nil {
		return *m.IsAutofitOn
	}
	return false
}

func (m *SheetArchive) GetContentScale() float32 {
	if m != nil && m.ContentScale != nil {
		return *m.ContentScale
	}
	return 0
}

func (m *SheetArchive) GetPageOrder() SheetPageOrder {
	if m != nil && m.PageOrder != nil {
		return *m.PageOrder
	}
	return SheetPageOrder_SheetPageOrderTopToBottom
}

func (m *SheetArchive) GetPrintMargins() *TSD.EdgeInsetsArchive {
	if m != nil {
		return m.PrintMargins
	}
	return nil
}

func (m *SheetArchive) GetUsingStartPageNumber() bool {
	if m != nil && m.UsingStartPageNumber != nil {
		return *m.UsingStartPageNumber
	}
	return false
}

func (m *SheetArchive) GetStartPageNumber() int32 {
	if m != nil && m.StartPageNumber != nil {
		return *m.StartPageNumber
	}
	return 0
}

func (m *SheetArchive) GetPageHeaderInset() float32 {
	if m != nil && m.PageHeaderInset != nil {
		return *m.PageHeaderInset
	}
	return 0
}

func (m *SheetArchive) GetPageFooterInset() float32 {
	if m != nil && m.PageFooterInset != nil {
		return *m.PageFooterInset
	}
	return 0
}

func (m *SheetArchive) GetHeaderStorage() *TSP.Reference {
	if m != nil {
		return m.HeaderStorage
	}
	return nil
}

func (m *SheetArchive) GetFooterStorage() *TSP.Reference {
	if m != nil {
		return m.FooterStorage
	}
	return nil
}

func (m *SheetArchive) GetUserDefinedGuideStorage() *TSP.Reference {
	if m != nil {
		return m.UserDefinedGuideStorage
	}
	return nil
}

type FormBasedSheetArchive struct {
	Super                *SheetArchive       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	TableId              *TSCE.CFUUIDArchive `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FormBasedSheetArchive) Reset()         { *m = FormBasedSheetArchive{} }
func (m *FormBasedSheetArchive) String() string { return proto.CompactTextString(m) }
func (*FormBasedSheetArchive) ProtoMessage()    {}
func (*FormBasedSheetArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{8}
}

func (m *FormBasedSheetArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormBasedSheetArchive.Unmarshal(m, b)
}
func (m *FormBasedSheetArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormBasedSheetArchive.Marshal(b, m, deterministic)
}
func (m *FormBasedSheetArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormBasedSheetArchive.Merge(m, src)
}
func (m *FormBasedSheetArchive) XXX_Size() int {
	return xxx_messageInfo_FormBasedSheetArchive.Size(m)
}
func (m *FormBasedSheetArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_FormBasedSheetArchive.DiscardUnknown(m)
}

var xxx_messageInfo_FormBasedSheetArchive proto.InternalMessageInfo

func (m *FormBasedSheetArchive) GetSuper() *SheetArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *FormBasedSheetArchive) GetTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

type ThemeArchive struct {
	Super                *TSS.ThemeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Prototypes           []*TSP.Reference  `protobuf:"bytes,2,rep,name=prototypes" json:"prototypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ThemeArchive) Reset()         { *m = ThemeArchive{} }
func (m *ThemeArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeArchive) ProtoMessage()    {}
func (*ThemeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{9}
}

func (m *ThemeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThemeArchive.Unmarshal(m, b)
}
func (m *ThemeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThemeArchive.Marshal(b, m, deterministic)
}
func (m *ThemeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeArchive.Merge(m, src)
}
func (m *ThemeArchive) XXX_Size() int {
	return xxx_messageInfo_ThemeArchive.Size(m)
}
func (m *ThemeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeArchive proto.InternalMessageInfo

func (m *ThemeArchive) GetSuper() *TSS.ThemeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeArchive) GetPrototypes() []*TSP.Reference {
	if m != nil {
		return m.Prototypes
	}
	return nil
}

type ChartMediatorFormulaStorage struct {
	DataFormulae                   []*TSCE.FormulaArchive `protobuf:"bytes,1,rep,name=data_formulae,json=dataFormulae" json:"data_formulae,omitempty"`
	RowLabelFormulae               []*TSCE.FormulaArchive `protobuf:"bytes,3,rep,name=row_label_formulae,json=rowLabelFormulae" json:"row_label_formulae,omitempty"`
	ColLabelFormulae               []*TSCE.FormulaArchive `protobuf:"bytes,4,rep,name=col_label_formulae,json=colLabelFormulae" json:"col_label_formulae,omitempty"`
	Direction                      *int32                 `protobuf:"varint,5,opt,name=direction" json:"direction,omitempty"`
	ErrorCustomPosFormulae         []*TSCE.FormulaArchive `protobuf:"bytes,6,rep,name=error_custom_pos_formulae,json=errorCustomPosFormulae" json:"error_custom_pos_formulae,omitempty"`
	ErrorCustomNegFormulae         []*TSCE.FormulaArchive `protobuf:"bytes,7,rep,name=error_custom_neg_formulae,json=errorCustomNegFormulae" json:"error_custom_neg_formulae,omitempty"`
	ErrorCustomPosScatterXFormulae []*TSCE.FormulaArchive `protobuf:"bytes,8,rep,name=error_custom_pos_scatterX_formulae,json=errorCustomPosScatterXFormulae" json:"error_custom_pos_scatterX_formulae,omitempty"`
	ErrorCustomNegScatterXFormulae []*TSCE.FormulaArchive `protobuf:"bytes,9,rep,name=error_custom_neg_scatterX_formulae,json=errorCustomNegScatterXFormulae" json:"error_custom_neg_scatterX_formulae,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}               `json:"-"`
	XXX_unrecognized               []byte                 `json:"-"`
	XXX_sizecache                  int32                  `json:"-"`
}

func (m *ChartMediatorFormulaStorage) Reset()         { *m = ChartMediatorFormulaStorage{} }
func (m *ChartMediatorFormulaStorage) String() string { return proto.CompactTextString(m) }
func (*ChartMediatorFormulaStorage) ProtoMessage()    {}
func (*ChartMediatorFormulaStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{10}
}

func (m *ChartMediatorFormulaStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartMediatorFormulaStorage.Unmarshal(m, b)
}
func (m *ChartMediatorFormulaStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartMediatorFormulaStorage.Marshal(b, m, deterministic)
}
func (m *ChartMediatorFormulaStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartMediatorFormulaStorage.Merge(m, src)
}
func (m *ChartMediatorFormulaStorage) XXX_Size() int {
	return xxx_messageInfo_ChartMediatorFormulaStorage.Size(m)
}
func (m *ChartMediatorFormulaStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartMediatorFormulaStorage.DiscardUnknown(m)
}

var xxx_messageInfo_ChartMediatorFormulaStorage proto.InternalMessageInfo

func (m *ChartMediatorFormulaStorage) GetDataFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.DataFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetRowLabelFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.RowLabelFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetColLabelFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.ColLabelFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetDirection() int32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *ChartMediatorFormulaStorage) GetErrorCustomPosFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.ErrorCustomPosFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetErrorCustomNegFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.ErrorCustomNegFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetErrorCustomPosScatterXFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.ErrorCustomPosScatterXFormulae
	}
	return nil
}

func (m *ChartMediatorFormulaStorage) GetErrorCustomNegScatterXFormulae() []*TSCE.FormulaArchive {
	if m != nil {
		return m.ErrorCustomNegScatterXFormulae
	}
	return nil
}

type ChartMediatorArchive struct {
	Super                      *TSCH.ChartMediatorArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	EntityId                   *string                      `protobuf:"bytes,2,req,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Formulas                   *ChartMediatorFormulaStorage `protobuf:"bytes,3,opt,name=formulas" json:"formulas,omitempty"`
	ColumnsAreSeries           *bool                        `protobuf:"varint,4,opt,name=columns_are_series,json=columnsAreSeries" json:"columns_are_series,omitempty"`
	IsRegisteredWithCalcEngine *bool                        `protobuf:"varint,5,opt,name=is_registered_with_calc_engine,json=isRegisteredWithCalcEngine" json:"is_registered_with_calc_engine,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *ChartMediatorArchive) Reset()         { *m = ChartMediatorArchive{} }
func (m *ChartMediatorArchive) String() string { return proto.CompactTextString(m) }
func (*ChartMediatorArchive) ProtoMessage()    {}
func (*ChartMediatorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{11}
}

func (m *ChartMediatorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartMediatorArchive.Unmarshal(m, b)
}
func (m *ChartMediatorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartMediatorArchive.Marshal(b, m, deterministic)
}
func (m *ChartMediatorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartMediatorArchive.Merge(m, src)
}
func (m *ChartMediatorArchive) XXX_Size() int {
	return xxx_messageInfo_ChartMediatorArchive.Size(m)
}
func (m *ChartMediatorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartMediatorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartMediatorArchive proto.InternalMessageInfo

func (m *ChartMediatorArchive) GetSuper() *TSCH.ChartMediatorArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ChartMediatorArchive) GetEntityId() string {
	if m != nil && m.EntityId != nil {
		return *m.EntityId
	}
	return ""
}

func (m *ChartMediatorArchive) GetFormulas() *ChartMediatorFormulaStorage {
	if m != nil {
		return m.Formulas
	}
	return nil
}

func (m *ChartMediatorArchive) GetColumnsAreSeries() bool {
	if m != nil && m.ColumnsAreSeries != nil {
		return *m.ColumnsAreSeries
	}
	return false
}

// Deprecated: Do not use.
func (m *ChartMediatorArchive) GetIsRegisteredWithCalcEngine() bool {
	if m != nil && m.IsRegisteredWithCalcEngine != nil {
		return *m.IsRegisteredWithCalcEngine
	}
	return false
}

type ChartSelectionArchive struct {
	Reference            *TSCE.RangeReferenceArchive `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
	Super                *TSCH.ChartSelectionArchive `protobuf:"bytes,2,opt,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChartSelectionArchive) Reset()         { *m = ChartSelectionArchive{} }
func (m *ChartSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*ChartSelectionArchive) ProtoMessage()    {}
func (*ChartSelectionArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9acc05a24d621e52, []int{12}
}

func (m *ChartSelectionArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartSelectionArchive.Unmarshal(m, b)
}
func (m *ChartSelectionArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartSelectionArchive.Marshal(b, m, deterministic)
}
func (m *ChartSelectionArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartSelectionArchive.Merge(m, src)
}
func (m *ChartSelectionArchive) XXX_Size() int {
	return xxx_messageInfo_ChartSelectionArchive.Size(m)
}
func (m *ChartSelectionArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartSelectionArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartSelectionArchive proto.InternalMessageInfo

func (m *ChartSelectionArchive) GetReference() *TSCE.RangeReferenceArchive {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *ChartSelectionArchive) GetSuper() *TSCH.ChartSelectionArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func init() {
	proto.RegisterEnum("TN.SheetPageOrder", SheetPageOrder_name, SheetPageOrder_value)
	proto.RegisterEnum("TN.UIStateArchive_InspectorPaneViewMode", UIStateArchive_InspectorPaneViewMode_name, UIStateArchive_InspectorPaneViewMode_value)
	proto.RegisterType((*SheetUIStateArchive)(nil), "TN.SheetUIStateArchive")
	proto.RegisterType((*SheetUIStateDictionaryEntryArchive)(nil), "TN.SheetUIStateDictionaryEntryArchive")
	proto.RegisterType((*UIStateArchive)(nil), "TN.UIStateArchive")
	proto.RegisterType((*SheetSelectionArchive)(nil), "TN.SheetSelectionArchive")
	proto.RegisterType((*UndoRedoStateArchive)(nil), "TN.UndoRedoStateArchive")
	proto.RegisterType((*DocumentArchive)(nil), "TN.DocumentArchive")
	proto.RegisterType((*PlaceholderArchive)(nil), "TN.PlaceholderArchive")
	proto.RegisterType((*SheetArchive)(nil), "TN.SheetArchive")
	proto.RegisterType((*FormBasedSheetArchive)(nil), "TN.FormBasedSheetArchive")
	proto.RegisterType((*ThemeArchive)(nil), "TN.ThemeArchive")
	proto.RegisterType((*ChartMediatorFormulaStorage)(nil), "TN.ChartMediatorFormulaStorage")
	proto.RegisterType((*ChartMediatorArchive)(nil), "TN.ChartMediatorArchive")
	proto.RegisterType((*ChartSelectionArchive)(nil), "TN.ChartSelectionArchive")
}

func init() { proto.RegisterFile("TNArchives.proto", fileDescriptor_9acc05a24d621e52) }

var fileDescriptor_9acc05a24d621e52 = []byte{
	// 2040 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xeb, 0x6e, 0xdb, 0xc8,
	0x15, 0x5e, 0x29, 0x76, 0x2c, 0x1d, 0x4b, 0xb2, 0x3c, 0xbe, 0x2c, 0x1d, 0x67, 0x53, 0x55, 0xbb,
	0x4d, 0x8d, 0x20, 0x65, 0xba, 0x5e, 0x04, 0xdb, 0x24, 0x9b, 0x16, 0xbe, 0x36, 0x02, 0x12, 0xc7,
	0x25, 0xe5, 0x4d, 0xd1, 0xfe, 0x60, 0xc7, 0xe4, 0x48, 0x1a, 0x84, 0xe2, 0xa8, 0x33, 0x23, 0xbb,
	0x0e, 0x50, 0x14, 0xfd, 0x51, 0xa0, 0x8f, 0x50, 0xa0, 0xaf, 0xd0, 0x97, 0xe8, 0xbb, 0xf4, 0x41,
	0x8a, 0x39, 0x43, 0x52, 0xa2, 0x24, 0xbb, 0xdb, 0x7f, 0xe4, 0x39, 0xdf, 0xb9, 0xcc, 0x99, 0x73,
	0x1b, 0x68, 0x76, 0xcf, 0x0e, 0x64, 0x38, 0xe0, 0x57, 0x4c, 0xb9, 0x23, 0x29, 0xb4, 0x20, 0xe5,
	0xee, 0xd9, 0x83, 0xf5, 0xae, 0x7f, 0xfe, 0x8e, 0x29, 0x45, 0xfb, 0x19, 0xf9, 0x01, 0xe9, 0xfa,
	0x47, 0x6f, 0x8a, 0x50, 0xa4, 0x9d, 0xcc, 0xd0, 0xd6, 0xbb, 0xbe, 0x3f, 0x4f, 0x3a, 0x9e, 0x97,
	0xfc, 0x70, 0x3e, 0x0f, 0x3b, 0x98, 0x27, 0x75, 0x8b, 0xa4, 0xf6, 0x3f, 0x97, 0x61, 0xc3, 0x1f,
	0x30, 0xa6, 0x2f, 0x3a, 0xbe, 0xa6, 0x9a, 0xa5, 0x6c, 0xf2, 0x05, 0xc0, 0x15, 0x67, 0xd7, 0x81,
	0x0a, 0x69, 0xcc, 0x9c, 0x52, 0xab, 0xbc, 0x57, 0xf6, 0xaa, 0x86, 0xe2, 0x1b, 0x02, 0xf9, 0x06,
	0xd6, 0x54, 0x28, 0x45, 0x1c, 0x07, 0x23, 0xa1, 0xb8, 0xe6, 0x22, 0x71, 0xca, 0xad, 0xf2, 0xde,
	0xea, 0x3e, 0xb8, 0x5d, 0xff, 0xdc, 0x3d, 0x17, 0x3c, 0xd1, 0x5e, 0xc3, 0x42, 0xce, 0x53, 0x04,
	0x71, 0x61, 0x63, 0x24, 0xd9, 0x15, 0x17, 0x63, 0x15, 0x4c, 0x29, 0xbf, 0xd7, 0x2a, 0xed, 0x95,
	0xbd, 0xf5, 0x8c, 0xf5, 0x7d, 0x6e, 0xe4, 0x35, 0xec, 0xce, 0x18, 0x09, 0xb8, 0x0a, 0xc6, 0x09,
	0x8a, 0x45, 0xce, 0x52, 0xab, 0xb4, 0x57, 0xf1, 0x9c, 0xa2, 0x91, 0x8e, 0xba, 0x48, 0xf9, 0xe4,
	0x18, 0x9c, 0xdc, 0xdc, 0xac, 0xb3, 0xcb, 0xad, 0xd2, 0x8c, 0xb3, 0xdb, 0x19, 0xd6, 0x2f, 0x3a,
	0xbd, 0x0f, 0x5b, 0xb3, 0x4e, 0x5c, 0xd1, 0x98, 0x47, 0xce, 0x7d, 0x34, 0xbf, 0x51, 0x34, 0xff,
	0xbd, 0x61, 0x91, 0x23, 0x78, 0x74, 0x9b, 0xe5, 0x54, 0x78, 0x05, 0x85, 0x77, 0x17, 0xdb, 0xb4,
	0x4a, 0x9e, 0x42, 0xed, 0x8a, 0x2b, 0x7e, 0x19, 0xb3, 0x40, 0xf1, 0x4f, 0xcc, 0xa9, 0xa0, 0xcb,
	0x55, 0x74, 0xd9, 0xe7, 0x9f, 0x98, 0xb7, 0x9a, 0xb2, 0xcd, 0x0f, 0x79, 0x0d, 0x5b, 0x53, 0xb1,
	0x9d, 0x12, 0xab, 0xce, 0x8a, 0x6d, 0x4c, 0x02, 0x3d, 0x11, 0xff, 0x31, 0xd4, 0x22, 0x76, 0xc5,
	0x43, 0x16, 0xf0, 0x88, 0x8b, 0xa1, 0x03, 0xad, 0xd2, 0x5e, 0xdd, 0x5b, 0xb5, 0xb4, 0x8e, 0x21,
	0x91, 0x17, 0xb0, 0xd3, 0x13, 0x72, 0x18, 0xf4, 0x44, 0x38, 0x56, 0x2c, 0x0a, 0x24, 0x0b, 0x85,
	0x8c, 0x02, 0x9e, 0x44, 0xec, 0x4f, 0xce, 0x2a, 0xe2, 0xb7, 0x0d, 0xe0, 0xd4, 0xf2, 0x3d, 0x64,
	0x77, 0x0c, 0x97, 0x7c, 0x0b, 0x4e, 0x41, 0xb4, 0xc7, 0x59, 0x9c, 0x49, 0xd6, 0x50, 0x72, 0x6b,
	0x4a, 0xf2, 0xd4, 0x70, 0x51, 0xb0, 0xfd, 0xf7, 0x12, 0xb4, 0xa7, 0xb3, 0xf3, 0x98, 0x87, 0x26,
	0x40, 0x54, 0xde, 0x9c, 0x24, 0x5a, 0xde, 0x64, 0xc9, 0xfa, 0x15, 0x2c, 0x2b, 0x83, 0xc2, 0x3c,
	0x5d, 0xdd, 0x6f, 0xe0, 0x61, 0x3d, 0xd6, 0x63, 0x92, 0x25, 0x21, 0xf3, 0x2c, 0x93, 0x7c, 0x07,
	0x75, 0xfc, 0x08, 0xc6, 0x5c, 0x19, 0x65, 0x69, 0xc6, 0x7e, 0xee, 0x76, 0xcf, 0xdc, 0x05, 0x25,
	0xe0, 0xd5, 0x10, 0x7d, 0x61, 0xc1, 0xed, 0x7f, 0x03, 0x34, 0x66, 0x6a, 0xe4, 0xe7, 0x40, 0x68,
	0xa8, 0xf9, 0x15, 0x0b, 0xac, 0x5e, 0x7b, 0x20, 0xe3, 0x43, 0xfd, 0xb0, 0xec, 0x94, 0xbc, 0xa6,
	0xe5, 0xa2, 0x6e, 0x1b, 0x88, 0x6f, 0xa0, 0xae, 0x58, 0xcc, 0x42, 0xcd, 0xcc, 0xf1, 0x7b, 0xc2,
	0x29, 0xb7, 0xee, 0x2d, 0x70, 0xb8, 0x96, 0x81, 0x3a, 0x49, 0x4f, 0x90, 0x8f, 0xf0, 0xa8, 0xe0,
	0x77, 0x10, 0xe5, 0x51, 0x08, 0x98, 0x09, 0x83, 0x73, 0x0f, 0xb5, 0x3c, 0x9e, 0x3d, 0xc8, 0xe2,
	0x68, 0x79, 0xbb, 0xd3, 0xe7, 0x9a, 0xc1, 0x90, 0x5f, 0xc2, 0x9a, 0xa6, 0x98, 0x3c, 0xe8, 0x82,
	0xa9, 0x95, 0x25, 0xcc, 0xa0, 0x2d, 0xb7, 0xeb, 0x77, 0x5d, 0x3f, 0xa3, 0x66, 0xca, 0x1a, 0x88,
	0xce, 0xc9, 0x64, 0x1f, 0x36, 0x58, 0xc4, 0x35, 0x4f, 0xfa, 0x85, 0xa0, 0x98, 0x7a, 0xb3, 0x41,
	0x59, 0x4f, 0xd9, 0x53, 0x51, 0xf9, 0x12, 0xea, 0x91, 0x08, 0xc7, 0x43, 0x96, 0xe8, 0x60, 0x28,
	0x22, 0x86, 0xa5, 0xb5, 0xec, 0xd5, 0x32, 0xe2, 0x3b, 0x11, 0x31, 0xf2, 0x67, 0xd8, 0x33, 0x92,
	0x08, 0x08, 0xfe, 0x47, 0x3c, 0x56, 0xfe, 0xaf, 0x78, 0x7c, 0x69, 0xf4, 0x1a, 0x1b, 0xfe, 0x1d,
	0x71, 0x79, 0x0a, 0xc4, 0xc6, 0x25, 0x3b, 0x1d, 0x3a, 0x5a, 0x41, 0x47, 0x9b, 0xc8, 0x39, 0xb1,
	0x0c, 0x74, 0xf6, 0xf5, 0x5d, 0xb5, 0x52, 0xcd, 0x63, 0x71, 0x5b, 0xbd, 0xbc, 0xba, 0xa3, 0x5e,
	0x20, 0x97, 0x5e, 0x5c, 0x33, 0xa4, 0x0d, 0x75, 0x9e, 0x04, 0xe1, 0x80, 0xca, 0x34, 0x9a, 0xab,
	0xd8, 0x6b, 0x56, 0x79, 0x72, 0x64, 0x68, 0xe8, 0xdf, 0x21, 0xac, 0x59, 0xc0, 0xe4, 0x96, 0x6b,
	0x78, 0xcb, 0x3b, 0x26, 0x66, 0x88, 0x9b, 0xbf, 0xe9, 0xb0, 0x40, 0x26, 0xdf, 0xc2, 0x9a, 0xbd,
	0x86, 0x89, 0x8e, 0x3a, 0xea, 0x98, 0xcd, 0xe6, 0x06, 0xc2, 0x26, 0x82, 0x2f, 0x61, 0x9b, 0x27,
	0x6a, 0xc4, 0x42, 0x2d, 0x64, 0x30, 0xa2, 0x09, 0xcb, 0x1a, 0x96, 0xd3, 0x30, 0x9e, 0xbe, 0x5c,
	0xd2, 0x72, 0xcc, 0xbc, 0xcd, 0x1c, 0x73, 0x4e, 0x13, 0x96, 0xf6, 0x2a, 0xf2, 0x17, 0x70, 0xe6,
	0x64, 0xd9, 0xb5, 0x3d, 0xe7, 0x5a, 0xab, 0xb4, 0xd7, 0xd8, 0xdf, 0x33, 0x27, 0x28, 0x16, 0xaa,
	0xdb, 0x29, 0xaa, 0x62, 0xd7, 0x26, 0x08, 0x2f, 0x1f, 0x7e, 0x5c, 0x48, 0x3f, 0x15, 0x72, 0x48,
	0xb5, 0xb7, 0xc5, 0x17, 0x31, 0xc9, 0x01, 0x7c, 0x91, 0x57, 0xf0, 0x1f, 0xc7, 0x3c, 0xfc, 0x18,
	0x84, 0x34, 0x0e, 0x83, 0xde, 0x38, 0xc1, 0xc3, 0x29, 0xa7, 0xd9, 0xba, 0xb7, 0x57, 0xf7, 0x1e,
	0x64, 0xa0, 0xdf, 0x18, 0xcc, 0x11, 0x8d, 0xc3, 0xd3, 0x0c, 0x41, 0x4e, 0xa1, 0x25, 0xd9, 0x50,
	0x5c, 0xb1, 0x28, 0xa0, 0x71, 0xbc, 0x58, 0xcb, 0x3a, 0xde, 0xd9, 0xc3, 0x14, 0x77, 0x10, 0xc7,
	0x0b, 0xf4, 0x3c, 0x05, 0xa2, 0x06, 0xe2, 0x3a, 0x08, 0x69, 0x72, 0x45, 0x55, 0xd0, 0x1f, 0xf3,
	0x88, 0x29, 0x87, 0xa0, 0x64, 0xd3, 0x70, 0x8e, 0x90, 0xf1, 0x6b, 0xa4, 0x93, 0x9f, 0x40, 0xc3,
	0xd0, 0x54, 0x10, 0x8a, 0xa1, 0x29, 0x2a, 0xe5, 0x6c, 0x20, 0xb2, 0x8e, 0xd4, 0xa3, 0x94, 0xd8,
	0xfe, 0x3d, 0x6c, 0x2d, 0x8c, 0x0a, 0x69, 0xc1, 0x9d, 0xf1, 0x6a, 0x7e, 0x76, 0x07, 0x82, 0xc7,
	0x9a, 0xc9, 0x66, 0xc9, 0x28, 0xf7, 0x0b, 0xb9, 0xb0, 0xa0, 0x81, 0x97, 0x6e, 0x6f, 0xe0, 0x0f,
	0xa1, 0x3a, 0xa2, 0x7d, 0x9e, 0x50, 0xcd, 0x22, 0xa7, 0x8c, 0xde, 0x4f, 0x08, 0xed, 0x13, 0xd8,
	0xbc, 0x48, 0x22, 0xe1, 0xb1, 0x48, 0x14, 0xba, 0xf4, 0xcf, 0xa0, 0x32, 0xe6, 0x81, 0xed, 0xf8,
	0x76, 0x3e, 0x90, 0xf9, 0x14, 0xf1, 0x56, 0xc6, 0x1c, 0xff, 0xdb, 0x7f, 0x5d, 0x82, 0xb5, 0xe3,
	0xb4, 0xf1, 0x64, 0x2a, 0x1e, 0xc3, 0x7d, 0xf4, 0x40, 0x39, 0xa5, 0x85, 0xfd, 0x3a, 0xe5, 0x92,
	0x27, 0xb0, 0xac, 0xc6, 0x23, 0x26, 0x9d, 0x0a, 0xda, 0xd9, 0x74, 0xbb, 0xfe, 0x81, 0x3b, 0xa3,
	0xcc, 0xb3, 0x10, 0x72, 0x00, 0xc4, 0xdc, 0xf9, 0x38, 0xa6, 0xb8, 0x16, 0xb0, 0xa4, 0xcf, 0x13,
	0xbb, 0x0b, 0xcd, 0xe9, 0xb7, 0x7d, 0x73, 0x0a, 0x7d, 0x82, 0x60, 0xe2, 0x02, 0x28, 0x7d, 0x13,
	0x33, 0x1b, 0xba, 0xa5, 0x85, 0xb3, 0x6f, 0x0a, 0x81, 0xd3, 0x87, 0x47, 0xec, 0x92, 0xca, 0x40,
	0xc8, 0x88, 0x49, 0x67, 0x79, 0xa1, 0x48, 0x2d, 0x05, 0xbd, 0x37, 0x18, 0x73, 0x35, 0x7a, 0xc0,
	0x86, 0xa6, 0x29, 0x2f, 0x9c, 0xad, 0xc8, 0x24, 0x4f, 0x61, 0x25, 0x9b, 0xaa, 0x2b, 0x78, 0x84,
	0x5b, 0x62, 0x8c, 0x10, 0xf2, 0x1d, 0x90, 0x70, 0xac, 0xb4, 0x30, 0x1d, 0xce, 0x24, 0x4f, 0x10,
	0x73, 0xa5, 0xd3, 0x4d, 0x65, 0xd6, 0x40, 0xd3, 0x22, 0x6d, 0x96, 0xbd, 0xe5, 0x4a, 0x9b, 0xd5,
	0x74, 0x24, 0x79, 0xa2, 0x99, 0x0c, 0x78, 0x84, 0xfd, 0xb0, 0xea, 0x55, 0x53, 0x4a, 0x27, 0x22,
	0x3b, 0x50, 0x19, 0xd1, 0x91, 0x65, 0xae, 0x22, 0x73, 0x05, 0xff, 0x3b, 0x11, 0x79, 0x8c, 0x09,
	0x94, 0x2e, 0x46, 0xb5, 0xd9, 0xc5, 0xa8, 0x62, 0x78, 0xe6, 0xab, 0x7d, 0x08, 0xe4, 0x3c, 0xa6,
	0x21, 0x1b, 0x88, 0x38, 0x62, 0x32, 0xcb, 0x82, 0xa7, 0xd9, 0xed, 0xda, 0x2c, 0xda, 0x76, 0xcd,
	0xd2, 0xed, 0xfa, 0x03, 0x3a, 0x62, 0x66, 0x4e, 0x17, 0xef, 0xb7, 0xfd, 0xaf, 0xfb, 0x50, 0xc3,
	0x64, 0xcf, 0xc4, 0x09, 0x2c, 0x25, 0x74, 0x68, 0x73, 0xb0, 0xea, 0xe1, 0x37, 0x79, 0x0e, 0x8d,
	0x48, 0xd2, 0x6b, 0x1c, 0x2c, 0x66, 0x1f, 0x50, 0xb7, 0x2c, 0x04, 0xf5, 0x0c, 0x65, 0x0c, 0x29,
	0xf2, 0x2b, 0x78, 0xc8, 0x93, 0x60, 0x24, 0xa4, 0x96, 0x94, 0xeb, 0x00, 0xcf, 0x24, 0x24, 0x67,
	0x89, 0xc6, 0xf4, 0xc0, 0x2c, 0xaa, 0x78, 0x3b, 0x3c, 0x39, 0x4f, 0x21, 0xe7, 0xb4, 0xcf, 0xde,
	0x4f, 0x00, 0xe4, 0x17, 0xb0, 0x8d, 0xad, 0x43, 0xb2, 0x11, 0xa3, 0x38, 0xce, 0x06, 0x8c, 0x46,
	0x4c, 0x2a, 0xbb, 0x54, 0x63, 0xc2, 0x6d, 0x1a, 0x84, 0x97, 0x01, 0xde, 0x58, 0x3e, 0x79, 0x02,
	0xeb, 0x28, 0x89, 0x36, 0x93, 0xf1, 0xf0, 0xd2, 0x08, 0x2d, 0xa3, 0xbd, 0x35, 0xc3, 0x30, 0x96,
	0xce, 0x2c, 0x19, 0x27, 0x91, 0x0a, 0xe8, 0x58, 0x8b, 0x1e, 0xd7, 0x81, 0x48, 0xd2, 0x95, 0x79,
	0x95, 0xab, 0x03, 0x4b, 0x7b, 0x9f, 0x98, 0xd9, 0x1f, 0x8a, 0x44, 0x9b, 0xd1, 0x6f, 0x5f, 0x03,
	0x2b, 0xf8, 0x1a, 0xa8, 0xa5, 0x44, 0xfb, 0x10, 0xf8, 0x1a, 0x20, 0x3d, 0x63, 0x84, 0xc5, 0x65,
	0xfa, 0x3c, 0xc9, 0xa7, 0xbb, 0x3d, 0x5c, 0xc4, 0x24, 0x76, 0x03, 0xfb, 0x49, 0x5e, 0x41, 0x1d,
	0x53, 0x22, 0x18, 0x52, 0xd9, 0xe7, 0x89, 0xc2, 0x3c, 0xb1, 0x97, 0x76, 0xec, 0x9e, 0x44, 0x7d,
	0xd6, 0x49, 0x14, 0xd3, 0x2a, 0xdf, 0xf5, 0x10, 0xfc, 0xce, 0x62, 0xc9, 0x73, 0xf8, 0x7c, 0xac,
	0x70, 0x85, 0xd1, 0x66, 0x48, 0x4e, 0x9d, 0x35, 0x1d, 0xa6, 0x9b, 0xc8, 0xf6, 0x0d, 0x77, 0x72,
	0x60, 0x8c, 0xcd, 0x9c, 0x40, 0x0d, 0x57, 0x84, 0x35, 0x35, 0x8f, 0x45, 0x94, 0x8d, 0x7b, 0xc0,
	0x8d, 0x37, 0x38, 0x3f, 0xcb, 0xde, 0x9a, 0x61, 0xd8, 0x78, 0xa3, 0x93, 0x39, 0xb6, 0x27, 0x84,
	0xce, 0xb1, 0x8d, 0x09, 0xf6, 0x14, 0xe9, 0x16, 0xfb, 0x1c, 0x1a, 0xa9, 0x4a, 0xa5, 0x85, 0xa4,
	0x7d, 0x3b, 0x16, 0x17, 0x64, 0x94, 0x45, 0xf9, 0x16, 0x64, 0xc4, 0x52, 0xed, 0x99, 0x58, 0x73,
	0xb1, 0x98, 0x45, 0x65, 0x62, 0x6f, 0x4c, 0xa0, 0x98, 0x3c, 0x66, 0x3d, 0x9e, 0xb0, 0x08, 0x27,
	0x4d, 0xca, 0xc2, 0x09, 0x36, 0x2f, 0x7f, 0x1b, 0xbc, 0x2d, 0x60, 0xcb, 0x94, 0xf8, 0x21, 0x55,
	0x2c, 0x2a, 0x94, 0xcd, 0xe3, 0x62, 0xd5, 0x35, 0xf3, 0x6b, 0x9f, 0xe9, 0xa7, 0x2e, 0x54, 0xec,
	0x82, 0xc6, 0xed, 0x6c, 0x58, 0xdd, 0xdf, 0x70, 0xcd, 0x7b, 0xda, 0x3d, 0x3a, 0xbd, 0xb8, 0xe8,
	0x1c, 0xe7, 0x3d, 0x08, 0x41, 0x9d, 0xa8, 0xdd, 0x87, 0x5a, 0xd7, 0xb4, 0xae, 0xcc, 0xce, 0x4f,
	0x8b, 0x76, 0xd6, 0xdd, 0xae, 0xef, 0xbb, 0xd3, 0x88, 0x89, 0x21, 0xc0, 0xa7, 0xb3, 0xbe, 0x19,
	0xb1, 0xdb, 0xea, 0x75, 0x0a, 0xd1, 0xfe, 0xcf, 0x12, 0xec, 0xda, 0xcd, 0x8b, 0x45, 0x9c, 0x6a,
	0x21, 0xcd, 0x39, 0xc7, 0x31, 0xcd, 0x62, 0xf8, 0x02, 0xea, 0x11, 0xd5, 0x14, 0x5b, 0xe1, 0x38,
	0xa6, 0x2c, 0x9d, 0x31, 0x9b, 0xd6, 0xfb, 0x14, 0x9c, 0xe7, 0xa9, 0x81, 0xa6, 0x34, 0xb3, 0xc6,
	0x11, 0x29, 0xae, 0x83, 0x98, 0x5e, 0xb2, 0x78, 0x22, 0x7f, 0xef, 0x0e, 0xf9, 0xa6, 0x14, 0xd7,
	0x6f, 0x0d, 0x7c, 0x5a, 0x47, 0x28, 0xe2, 0x59, 0x1d, 0x4b, 0x77, 0xe9, 0x08, 0x45, 0x5c, 0xd4,
	0xf1, 0x10, 0xaa, 0x11, 0x97, 0xe9, 0x12, 0xb8, 0x8c, 0x09, 0x3f, 0x21, 0x90, 0xf7, 0xb0, 0xc3,
	0xa4, 0x14, 0x32, 0x48, 0x7b, 0xfe, 0x48, 0xa8, 0x89, 0xa1, 0xfb, 0x77, 0x18, 0xda, 0x46, 0xb1,
	0x23, 0x94, 0x3a, 0x17, 0x2a, 0x37, 0x37, 0xab, 0x30, 0x61, 0xfd, 0x89, 0xc2, 0x95, 0x1f, 0xa8,
	0xf0, 0x8c, 0xf5, 0x73, 0x85, 0x7f, 0x80, 0xf6, 0x9c, 0x87, 0x2a, 0xa4, 0x5a, 0x33, 0xf9, 0xdb,
	0x89, 0xe6, 0xca, 0x1d, 0x9a, 0x1f, 0x15, 0x5d, 0xf5, 0x53, 0xe1, 0x5b, 0x2d, 0x18, 0x97, 0xe7,
	0x2d, 0x54, 0x7f, 0xa0, 0x85, 0x33, 0xd6, 0x9f, 0xb5, 0xd0, 0xfe, 0x47, 0x19, 0x36, 0x0b, 0x69,
	0x36, 0x79, 0xa5, 0x16, 0x12, 0xfb, 0x81, 0xd1, 0xfe, 0xc6, 0x5d, 0x04, 0xcd, 0x32, 0x7c, 0x17,
	0xaa, 0x2c, 0xd1, 0x5c, 0xdf, 0xd8, 0x5a, 0x32, 0xe3, 0xaa, 0x62, 0x09, 0x9d, 0x88, 0xbc, 0x82,
	0x4a, 0xea, 0xaf, 0x4a, 0xb7, 0x95, 0x1f, 0xe5, 0x6f, 0x86, 0xc5, 0x19, 0xee, 0xe5, 0x02, 0x66,
	0x65, 0x0d, 0x45, 0x3c, 0x1e, 0x26, 0x2a, 0xa0, 0xd2, 0xbc, 0x31, 0x25, 0x67, 0xe9, 0xcc, 0xc1,
	0xb4, 0x32, 0x9c, 0x03, 0xc9, 0x7c, 0xa4, 0x93, 0x53, 0x78, 0xc4, 0x55, 0x20, 0x59, 0x9f, 0x2b,
	0xcd, 0x24, 0x8b, 0x82, 0x6b, 0xae, 0x07, 0x76, 0x53, 0x4e, 0xd7, 0xa5, 0xe5, 0x7c, 0x5a, 0x3d,
	0xe0, 0xca, 0xcb, 0x81, 0x1f, 0xb8, 0x1e, 0x98, 0x5d, 0xd9, 0xee, 0x49, 0xed, 0xbf, 0x95, 0x60,
	0x6b, 0xe1, 0x9b, 0x86, 0xbc, 0x80, 0xaa, 0xcc, 0x8a, 0x36, 0xdd, 0x3d, 0x77, 0x6d, 0xf4, 0x3d,
	0x9a, 0xf4, 0x59, 0x5e, 0xd0, 0x59, 0x80, 0x26, 0x68, 0xf2, 0x75, 0x16, 0xd6, 0xf2, 0x44, 0xec,
	0xcd, 0x2d, 0x4f, 0x27, 0x8b, 0x7c, 0x72, 0x06, 0x8d, 0xe2, 0xc0, 0x22, 0x5f, 0xc0, 0x4e, 0x91,
	0xd2, 0x15, 0xa3, 0xae, 0x38, 0x14, 0x5a, 0x8b, 0x61, 0xf3, 0xb3, 0x79, 0xf6, 0x5b, 0xd6, 0xd3,
	0x5d, 0xe1, 0xf1, 0xfe, 0x40, 0x37, 0x4b, 0x87, 0x8f, 0x7f, 0xf7, 0x55, 0x9f, 0xeb, 0xc1, 0xf8,
	0xd2, 0x0d, 0xc5, 0xf0, 0xd9, 0x27, 0x3e, 0xbc, 0xa4, 0x97, 0x54, 0x3c, 0x8b, 0x44, 0x18, 0x8a,
	0xe4, 0xea, 0x19, 0xff, 0x20, 0xe4, 0xc7, 0x67, 0xdd, 0xb3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x8d, 0x21, 0xbe, 0x77, 0x95, 0x14, 0x00, 0x00,
}
