// Code generated by protoc-gen-go. DO NOT EDIT.
// source: KNCommandArchives.proto

package KN

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	TSD "github.com/zimbabao/docconv/iWork/TSD"
	TSK "github.com/zimbabao/docconv/iWork/TSK"
	TSP "github.com/zimbabao/docconv/iWork/TSP"
	TSS "github.com/zimbabao/docconv/iWork/TSS"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandShowInsertSlideArchive_Kind int32

const (
	CommandShowInsertSlideArchive_kKindInsertSlide             CommandShowInsertSlideArchive_Kind = 0
	CommandShowInsertSlideArchive_kKindInsertSlideForPaste     CommandShowInsertSlideArchive_Kind = 1
	CommandShowInsertSlideArchive_kKindInsertSlideForDuplicate CommandShowInsertSlideArchive_Kind = 2
)

var CommandShowInsertSlideArchive_Kind_name = map[int32]string{
	0: "kKindInsertSlide",
	1: "kKindInsertSlideForPaste",
	2: "kKindInsertSlideForDuplicate",
}

var CommandShowInsertSlideArchive_Kind_value = map[string]int32{
	"kKindInsertSlide":             0,
	"kKindInsertSlideForPaste":     1,
	"kKindInsertSlideForDuplicate": 2,
}

func (x CommandShowInsertSlideArchive_Kind) Enum() *CommandShowInsertSlideArchive_Kind {
	p := new(CommandShowInsertSlideArchive_Kind)
	*p = x
	return p
}

func (x CommandShowInsertSlideArchive_Kind) String() string {
	return proto.EnumName(CommandShowInsertSlideArchive_Kind_name, int32(x))
}

func (x *CommandShowInsertSlideArchive_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandShowInsertSlideArchive_Kind_value, data, "CommandShowInsertSlideArchive_Kind")
	if err != nil {
		return err
	}
	*x = CommandShowInsertSlideArchive_Kind(value)
	return nil
}

func (CommandShowInsertSlideArchive_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{13, 0}
}

type SlideCollectionCommandSelectionBehaviorArchive_Type int32

const (
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeGeneral   SlideCollectionCommandSelectionBehaviorArchive_Type = 0
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeInsertion SlideCollectionCommandSelectionBehaviorArchive_Type = 1
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeDeletion  SlideCollectionCommandSelectionBehaviorArchive_Type = 2
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeMove      SlideCollectionCommandSelectionBehaviorArchive_Type = 3
)

var SlideCollectionCommandSelectionBehaviorArchive_Type_name = map[int32]string{
	0: "kKindSlideSelectionBehaviorTypeGeneral",
	1: "kKindSlideSelectionBehaviorTypeInsertion",
	2: "kKindSlideSelectionBehaviorTypeDeletion",
	3: "kKindSlideSelectionBehaviorTypeMove",
}

var SlideCollectionCommandSelectionBehaviorArchive_Type_value = map[string]int32{
	"kKindSlideSelectionBehaviorTypeGeneral":   0,
	"kKindSlideSelectionBehaviorTypeInsertion": 1,
	"kKindSlideSelectionBehaviorTypeDeletion":  2,
	"kKindSlideSelectionBehaviorTypeMove":      3,
}

func (x SlideCollectionCommandSelectionBehaviorArchive_Type) Enum() *SlideCollectionCommandSelectionBehaviorArchive_Type {
	p := new(SlideCollectionCommandSelectionBehaviorArchive_Type)
	*p = x
	return p
}

func (x SlideCollectionCommandSelectionBehaviorArchive_Type) String() string {
	return proto.EnumName(SlideCollectionCommandSelectionBehaviorArchive_Type_name, int32(x))
}

func (x *SlideCollectionCommandSelectionBehaviorArchive_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SlideCollectionCommandSelectionBehaviorArchive_Type_value, data, "SlideCollectionCommandSelectionBehaviorArchive_Type")
	if err != nil {
		return err
	}
	*x = SlideCollectionCommandSelectionBehaviorArchive_Type(value)
	return nil
}

func (SlideCollectionCommandSelectionBehaviorArchive_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{42, 0}
}

type UIStateCommandGroupArchive struct {
	Super                     *TSK.CommandGroupArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UiState                   *TSP.Reference           `protobuf:"bytes,2,req,name=uiState" json:"uiState,omitempty"`
	Property                  *string                  `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	SlideNodesToEdit          []*TSP.Reference         `protobuf:"bytes,4,rep,name=slideNodesToEdit" json:"slideNodesToEdit,omitempty"`
	MasterSlideNodesToApply   []*TSP.Reference         `protobuf:"bytes,5,rep,name=masterSlideNodesToApply" json:"masterSlideNodesToApply,omitempty"`
	ThumbnailSizes            []*TSP.Size              `protobuf:"bytes,6,rep,name=thumbnailSizes" json:"thumbnailSizes,omitempty"`
	SelectedSlideNodes        []*TSP.Reference         `protobuf:"bytes,7,rep,name=selectedSlideNodes" json:"selectedSlideNodes,omitempty"`
	RestoreSelectedSlideNodes []*TSP.Reference         `protobuf:"bytes,8,rep,name=restoreSelectedSlideNodes" json:"restoreSelectedSlideNodes,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *UIStateCommandGroupArchive) Reset()         { *m = UIStateCommandGroupArchive{} }
func (m *UIStateCommandGroupArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateCommandGroupArchive) ProtoMessage()    {}
func (*UIStateCommandGroupArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{0}
}

func (m *UIStateCommandGroupArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIStateCommandGroupArchive.Unmarshal(m, b)
}
func (m *UIStateCommandGroupArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIStateCommandGroupArchive.Marshal(b, m, deterministic)
}
func (m *UIStateCommandGroupArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIStateCommandGroupArchive.Merge(m, src)
}
func (m *UIStateCommandGroupArchive) XXX_Size() int {
	return xxx_messageInfo_UIStateCommandGroupArchive.Size(m)
}
func (m *UIStateCommandGroupArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_UIStateCommandGroupArchive.DiscardUnknown(m)
}

var xxx_messageInfo_UIStateCommandGroupArchive proto.InternalMessageInfo

func (m *UIStateCommandGroupArchive) GetSuper() *TSK.CommandGroupArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetUiState() *TSP.Reference {
	if m != nil {
		return m.UiState
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *UIStateCommandGroupArchive) GetSlideNodesToEdit() []*TSP.Reference {
	if m != nil {
		return m.SlideNodesToEdit
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetMasterSlideNodesToApply() []*TSP.Reference {
	if m != nil {
		return m.MasterSlideNodesToApply
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetThumbnailSizes() []*TSP.Size {
	if m != nil {
		return m.ThumbnailSizes
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetSelectedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.SelectedSlideNodes
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetRestoreSelectedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.RestoreSelectedSlideNodes
	}
	return nil
}

type CommandSlideInsertDrawablesArchive struct {
	Super                        *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode                    *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Drawables                    []*TSP.Reference    `protobuf:"bytes,3,rep,name=drawables" json:"drawables,omitempty"`
	ForDrag                      *bool               `protobuf:"varint,4,opt,name=forDrag" json:"forDrag,omitempty"`
	AtIndex                      *int32              `protobuf:"varint,5,opt,name=atIndex" json:"atIndex,omitempty"`
	UseObjectPlaceholderGeometry *bool               `protobuf:"varint,6,req,name=use_object_placeholder_geometry,json=useObjectPlaceholderGeometry" json:"use_object_placeholder_geometry,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}            `json:"-"`
	XXX_unrecognized             []byte              `json:"-"`
	XXX_sizecache                int32               `json:"-"`
}

func (m *CommandSlideInsertDrawablesArchive) Reset()         { *m = CommandSlideInsertDrawablesArchive{} }
func (m *CommandSlideInsertDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertDrawablesArchive) ProtoMessage()    {}
func (*CommandSlideInsertDrawablesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{1}
}

func (m *CommandSlideInsertDrawablesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideInsertDrawablesArchive.Unmarshal(m, b)
}
func (m *CommandSlideInsertDrawablesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideInsertDrawablesArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideInsertDrawablesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideInsertDrawablesArchive.Merge(m, src)
}
func (m *CommandSlideInsertDrawablesArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideInsertDrawablesArchive.Size(m)
}
func (m *CommandSlideInsertDrawablesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideInsertDrawablesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideInsertDrawablesArchive proto.InternalMessageInfo

func (m *CommandSlideInsertDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetForDrag() bool {
	if m != nil && m.ForDrag != nil {
		return *m.ForDrag
	}
	return false
}

func (m *CommandSlideInsertDrawablesArchive) GetAtIndex() int32 {
	if m != nil && m.AtIndex != nil {
		return *m.AtIndex
	}
	return 0
}

func (m *CommandSlideInsertDrawablesArchive) GetUseObjectPlaceholderGeometry() bool {
	if m != nil && m.UseObjectPlaceholderGeometry != nil {
		return *m.UseObjectPlaceholderGeometry
	}
	return false
}

type CommandSlideSetPlaceholdersForTagsArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Infos                []*TSP.Reference    `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	Tags                 []string            `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	OldInfos             []*TSP.Reference    `protobuf:"bytes,6,rep,name=old_infos,json=oldInfos" json:"old_infos,omitempty"`
	OldTags              []string            `protobuf:"bytes,5,rep,name=old_tags,json=oldTags" json:"old_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) Reset() {
	*m = CommandSlideSetPlaceholdersForTagsArchive{}
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetPlaceholdersForTagsArchive) ProtoMessage()    {}
func (*CommandSlideSetPlaceholdersForTagsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{2}
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive.Unmarshal(m, b)
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive.Merge(m, src)
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive.Size(m)
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideSetPlaceholdersForTagsArchive proto.InternalMessageInfo

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetOldInfos() []*TSP.Reference {
	if m != nil {
		return m.OldInfos
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetOldTags() []string {
	if m != nil {
		return m.OldTags
	}
	return nil
}

type CommandSlideRemoveDrawableArchive struct {
	Super                              *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode                          *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	SortedDrawables                    []*TSP.Reference    `protobuf:"bytes,3,rep,name=sortedDrawables" json:"sortedDrawables,omitempty"`
	DrawableIndices                    *TSP.IndexSet       `protobuf:"bytes,4,req,name=drawableIndices" json:"drawableIndices,omitempty"`
	PlaceholderTags                    []string            `protobuf:"bytes,5,rep,name=placeholderTags" json:"placeholderTags,omitempty"`
	InfoUsingObjectPlaceholderGeometry *TSP.Reference      `protobuf:"bytes,6,opt,name=info_using_object_placeholder_geometry,json=infoUsingObjectPlaceholderGeometry" json:"info_using_object_placeholder_geometry,omitempty"`
	DidMatchObjectPlaceholderGeometry  *bool               `protobuf:"varint,7,opt,name=did_match_object_placeholder_geometry,json=didMatchObjectPlaceholderGeometry" json:"did_match_object_placeholder_geometry,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}            `json:"-"`
	XXX_unrecognized                   []byte              `json:"-"`
	XXX_sizecache                      int32               `json:"-"`
}

func (m *CommandSlideRemoveDrawableArchive) Reset()         { *m = CommandSlideRemoveDrawableArchive{} }
func (m *CommandSlideRemoveDrawableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveDrawableArchive) ProtoMessage()    {}
func (*CommandSlideRemoveDrawableArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{3}
}

func (m *CommandSlideRemoveDrawableArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideRemoveDrawableArchive.Unmarshal(m, b)
}
func (m *CommandSlideRemoveDrawableArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideRemoveDrawableArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideRemoveDrawableArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideRemoveDrawableArchive.Merge(m, src)
}
func (m *CommandSlideRemoveDrawableArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideRemoveDrawableArchive.Size(m)
}
func (m *CommandSlideRemoveDrawableArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideRemoveDrawableArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideRemoveDrawableArchive proto.InternalMessageInfo

func (m *CommandSlideRemoveDrawableArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetSortedDrawables() []*TSP.Reference {
	if m != nil {
		return m.SortedDrawables
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetDrawableIndices() *TSP.IndexSet {
	if m != nil {
		return m.DrawableIndices
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetPlaceholderTags() []string {
	if m != nil {
		return m.PlaceholderTags
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetInfoUsingObjectPlaceholderGeometry() *TSP.Reference {
	if m != nil {
		return m.InfoUsingObjectPlaceholderGeometry
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetDidMatchObjectPlaceholderGeometry() bool {
	if m != nil && m.DidMatchObjectPlaceholderGeometry != nil {
		return *m.DidMatchObjectPlaceholderGeometry
	}
	return false
}

type CommandSlideMoveDrawableZOrderArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Infos                []*TSP.Reference    `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	OldOrderedInfos      []*TSP.Reference    `protobuf:"bytes,4,rep,name=old_ordered_infos,json=oldOrderedInfos" json:"old_ordered_infos,omitempty"`
	Indexes              *TSP.IndexSet       `protobuf:"bytes,5,req,name=indexes" json:"indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideMoveDrawableZOrderArchive) Reset()         { *m = CommandSlideMoveDrawableZOrderArchive{} }
func (m *CommandSlideMoveDrawableZOrderArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveDrawableZOrderArchive) ProtoMessage()    {}
func (*CommandSlideMoveDrawableZOrderArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{4}
}

func (m *CommandSlideMoveDrawableZOrderArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive.Unmarshal(m, b)
}
func (m *CommandSlideMoveDrawableZOrderArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideMoveDrawableZOrderArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive.Merge(m, src)
}
func (m *CommandSlideMoveDrawableZOrderArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive.Size(m)
}
func (m *CommandSlideMoveDrawableZOrderArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideMoveDrawableZOrderArchive proto.InternalMessageInfo

func (m *CommandSlideMoveDrawableZOrderArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetOldOrderedInfos() []*TSP.Reference {
	if m != nil {
		return m.OldOrderedInfos
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetIndexes() *TSP.IndexSet {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type CommandSlidePasteDrawablesArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Commands             []*TSP.Reference    `protobuf:"bytes,2,rep,name=commands" json:"commands,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,3,req,name=slide" json:"slide,omitempty"`
	Drawables            []*TSP.Reference    `protobuf:"bytes,4,rep,name=drawables" json:"drawables,omitempty"`
	HasBuilds            *bool               `protobuf:"varint,5,opt,name=has_builds,json=hasBuilds,def=0" json:"has_builds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlidePasteDrawablesArchive) Reset()         { *m = CommandSlidePasteDrawablesArchive{} }
func (m *CommandSlidePasteDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlidePasteDrawablesArchive) ProtoMessage()    {}
func (*CommandSlidePasteDrawablesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{5}
}

func (m *CommandSlidePasteDrawablesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlidePasteDrawablesArchive.Unmarshal(m, b)
}
func (m *CommandSlidePasteDrawablesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlidePasteDrawablesArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlidePasteDrawablesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlidePasteDrawablesArchive.Merge(m, src)
}
func (m *CommandSlidePasteDrawablesArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlidePasteDrawablesArchive.Size(m)
}
func (m *CommandSlidePasteDrawablesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlidePasteDrawablesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlidePasteDrawablesArchive proto.InternalMessageInfo

const Default_CommandSlidePasteDrawablesArchive_HasBuilds bool = false

func (m *CommandSlidePasteDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetCommands() []*TSP.Reference {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetHasBuilds() bool {
	if m != nil && m.HasBuilds != nil {
		return *m.HasBuilds
	}
	return Default_CommandSlidePasteDrawablesArchive_HasBuilds
}

type CommandSlideNodeSetPropertyArchive struct {
	Super                *TSK.CommandArchive                               `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference                                    `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Property             *string                                           `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue             *CommandSlideNodeSetPropertyArchive_PropertyValue `protobuf:"bytes,4,req,name=oldValue" json:"oldValue,omitempty"`
	NewValue             *CommandSlideNodeSetPropertyArchive_PropertyValue `protobuf:"bytes,5,req,name=newValue" json:"newValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CommandSlideNodeSetPropertyArchive) Reset()         { *m = CommandSlideNodeSetPropertyArchive{} }
func (m *CommandSlideNodeSetPropertyArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideNodeSetPropertyArchive) ProtoMessage()    {}
func (*CommandSlideNodeSetPropertyArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{6}
}

func (m *CommandSlideNodeSetPropertyArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive.Unmarshal(m, b)
}
func (m *CommandSlideNodeSetPropertyArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideNodeSetPropertyArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideNodeSetPropertyArchive.Merge(m, src)
}
func (m *CommandSlideNodeSetPropertyArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive.Size(m)
}
func (m *CommandSlideNodeSetPropertyArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideNodeSetPropertyArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideNodeSetPropertyArchive proto.InternalMessageInfo

func (m *CommandSlideNodeSetPropertyArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSlideNodeSetPropertyArchive) GetOldValue() *CommandSlideNodeSetPropertyArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetNewValue() *CommandSlideNodeSetPropertyArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandSlideNodeSetPropertyArchive_PropertyValue struct {
	BoolValue            *bool              `protobuf:"varint,1,opt,name=boolValue" json:"boolValue,omitempty"`
	Image                *TSP.DataReference `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	DatabaseImage        *TSP.Reference     `protobuf:"bytes,2,opt,name=database_image,json=databaseImage" json:"database_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) Reset() {
	*m = CommandSlideNodeSetPropertyArchive_PropertyValue{}
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideNodeSetPropertyArchive_PropertyValue) ProtoMessage() {}
func (*CommandSlideNodeSetPropertyArchive_PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{6, 0}
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue.Unmarshal(m, b)
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue.Marshal(b, m, deterministic)
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue.Merge(m, src)
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) XXX_Size() int {
	return xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue.Size(m)
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideNodeSetPropertyArchive_PropertyValue proto.InternalMessageInfo

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetImage() *TSP.DataReference {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetDatabaseImage() *TSP.Reference {
	if m != nil {
		return m.DatabaseImage
	}
	return nil
}

type CommandSlideSetValueArchive struct {
	Super                *TSK.CommandArchive                        `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference                             `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Property             *string                                    `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue             *CommandSlideSetValueArchive_PropertyValue `protobuf:"bytes,4,req,name=oldValue" json:"oldValue,omitempty"`
	NewValue             *CommandSlideSetValueArchive_PropertyValue `protobuf:"bytes,5,req,name=newValue" json:"newValue,omitempty"`
	OldSlideStyle        *TSP.Reference                             `protobuf:"bytes,6,req,name=oldSlideStyle" json:"oldSlideStyle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CommandSlideSetValueArchive) Reset()         { *m = CommandSlideSetValueArchive{} }
func (m *CommandSlideSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetValueArchive) ProtoMessage()    {}
func (*CommandSlideSetValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{7}
}

func (m *CommandSlideSetValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideSetValueArchive.Unmarshal(m, b)
}
func (m *CommandSlideSetValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideSetValueArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideSetValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideSetValueArchive.Merge(m, src)
}
func (m *CommandSlideSetValueArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideSetValueArchive.Size(m)
}
func (m *CommandSlideSetValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideSetValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideSetValueArchive proto.InternalMessageInfo

func (m *CommandSlideSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSlideSetValueArchive) GetOldValue() *CommandSlideSetValueArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetNewValue() *CommandSlideSetValueArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetOldSlideStyle() *TSP.Reference {
	if m != nil {
		return m.OldSlideStyle
	}
	return nil
}

type CommandSlideSetValueArchive_PropertyValue struct {
	BoolValue            *bool            `protobuf:"varint,1,opt,name=boolValue" json:"boolValue,omitempty"`
	ObjectValue          *TSP.Reference   `protobuf:"bytes,2,opt,name=objectValue" json:"objectValue,omitempty"`
	Fill                 *TSD.FillArchive `protobuf:"bytes,3,opt,name=fill" json:"fill,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CommandSlideSetValueArchive_PropertyValue) Reset() {
	*m = CommandSlideSetValueArchive_PropertyValue{}
}
func (m *CommandSlideSetValueArchive_PropertyValue) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetValueArchive_PropertyValue) ProtoMessage()    {}
func (*CommandSlideSetValueArchive_PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{7, 0}
}

func (m *CommandSlideSetValueArchive_PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue.Unmarshal(m, b)
}
func (m *CommandSlideSetValueArchive_PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue.Marshal(b, m, deterministic)
}
func (m *CommandSlideSetValueArchive_PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue.Merge(m, src)
}
func (m *CommandSlideSetValueArchive_PropertyValue) XXX_Size() int {
	return xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue.Size(m)
}
func (m *CommandSlideSetValueArchive_PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideSetValueArchive_PropertyValue proto.InternalMessageInfo

func (m *CommandSlideSetValueArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandSlideSetValueArchive_PropertyValue) GetObjectValue() *TSP.Reference {
	if m != nil {
		return m.ObjectValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive_PropertyValue) GetFill() *TSD.FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

type CommandSlideSetStyleArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	SlideStyle           *TSP.Reference      `protobuf:"bytes,3,req,name=slide_style,json=slideStyle" json:"slide_style,omitempty"`
	OldSlideStyle        *TSP.Reference      `protobuf:"bytes,4,req,name=old_slide_style,json=oldSlideStyle" json:"old_slide_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideSetStyleArchive) Reset()         { *m = CommandSlideSetStyleArchive{} }
func (m *CommandSlideSetStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetStyleArchive) ProtoMessage()    {}
func (*CommandSlideSetStyleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{8}
}

func (m *CommandSlideSetStyleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideSetStyleArchive.Unmarshal(m, b)
}
func (m *CommandSlideSetStyleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideSetStyleArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideSetStyleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideSetStyleArchive.Merge(m, src)
}
func (m *CommandSlideSetStyleArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideSetStyleArchive.Size(m)
}
func (m *CommandSlideSetStyleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideSetStyleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideSetStyleArchive proto.InternalMessageInfo

func (m *CommandSlideSetStyleArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetSlideStyle() *TSP.Reference {
	if m != nil {
		return m.SlideStyle
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetOldSlideStyle() *TSP.Reference {
	if m != nil {
		return m.OldSlideStyle
	}
	return nil
}

type CommandShowMarkOutOfSyncRecordingArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	OldRecording         *TSP.Reference      `protobuf:"bytes,3,opt,name=old_recording,json=oldRecording" json:"old_recording,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) Reset() {
	*m = CommandShowMarkOutOfSyncRecordingArchive{}
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowMarkOutOfSyncRecordingArchive) ProtoMessage()    {}
func (*CommandShowMarkOutOfSyncRecordingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{9}
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive.Unmarshal(m, b)
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive.Merge(m, src)
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive.Size(m)
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowMarkOutOfSyncRecordingArchive proto.InternalMessageInfo

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowRemoveRecordingArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	OldRecording         *TSP.Reference      `protobuf:"bytes,3,opt,name=old_recording,json=oldRecording" json:"old_recording,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowRemoveRecordingArchive) Reset()         { *m = CommandShowRemoveRecordingArchive{} }
func (m *CommandShowRemoveRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowRemoveRecordingArchive) ProtoMessage()    {}
func (*CommandShowRemoveRecordingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{10}
}

func (m *CommandShowRemoveRecordingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowRemoveRecordingArchive.Unmarshal(m, b)
}
func (m *CommandShowRemoveRecordingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowRemoveRecordingArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowRemoveRecordingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowRemoveRecordingArchive.Merge(m, src)
}
func (m *CommandShowRemoveRecordingArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowRemoveRecordingArchive.Size(m)
}
func (m *CommandShowRemoveRecordingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowRemoveRecordingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowRemoveRecordingArchive proto.InternalMessageInfo

func (m *CommandShowRemoveRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowRemoveRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowRemoveRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowReplaceRecordingArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	ReplacementRecording *TSP.Reference      `protobuf:"bytes,3,req,name=replacement_recording,json=replacementRecording" json:"replacement_recording,omitempty"`
	ReplacementStartTime *float64            `protobuf:"fixed64,4,req,name=replacement_start_time,json=replacementStartTime" json:"replacement_start_time,omitempty"`
	OldRecording         *TSP.Reference      `protobuf:"bytes,5,opt,name=old_recording,json=oldRecording" json:"old_recording,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowReplaceRecordingArchive) Reset()         { *m = CommandShowReplaceRecordingArchive{} }
func (m *CommandShowReplaceRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowReplaceRecordingArchive) ProtoMessage()    {}
func (*CommandShowReplaceRecordingArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{11}
}

func (m *CommandShowReplaceRecordingArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowReplaceRecordingArchive.Unmarshal(m, b)
}
func (m *CommandShowReplaceRecordingArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowReplaceRecordingArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowReplaceRecordingArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowReplaceRecordingArchive.Merge(m, src)
}
func (m *CommandShowReplaceRecordingArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowReplaceRecordingArchive.Size(m)
}
func (m *CommandShowReplaceRecordingArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowReplaceRecordingArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowReplaceRecordingArchive proto.InternalMessageInfo

func (m *CommandShowReplaceRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetReplacementRecording() *TSP.Reference {
	if m != nil {
		return m.ReplacementRecording
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetReplacementStartTime() float64 {
	if m != nil && m.ReplacementStartTime != nil {
		return *m.ReplacementStartTime
	}
	return 0
}

func (m *CommandShowReplaceRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowSetValueArchive struct {
	Super                *TSK.CommandArchive                       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference                            `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	Property             *string                                   `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue             *CommandShowSetValueArchive_PropertyValue `protobuf:"bytes,4,req,name=old_value,json=oldValue" json:"old_value,omitempty"`
	NewValue             *CommandShowSetValueArchive_PropertyValue `protobuf:"bytes,5,req,name=new_value,json=newValue" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CommandShowSetValueArchive) Reset()         { *m = CommandShowSetValueArchive{} }
func (m *CommandShowSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetValueArchive) ProtoMessage()    {}
func (*CommandShowSetValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{12}
}

func (m *CommandShowSetValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowSetValueArchive.Unmarshal(m, b)
}
func (m *CommandShowSetValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowSetValueArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowSetValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowSetValueArchive.Merge(m, src)
}
func (m *CommandShowSetValueArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowSetValueArchive.Size(m)
}
func (m *CommandShowSetValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowSetValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowSetValueArchive proto.InternalMessageInfo

func (m *CommandShowSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandShowSetValueArchive) GetOldValue() *CommandShowSetValueArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetNewValue() *CommandShowSetValueArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandShowSetValueArchive_PropertyValue struct {
	BoolValue            *bool                   `protobuf:"varint,1,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	DoubleValue          *float64                `protobuf:"fixed64,2,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	ShowModeValue        *ShowArchive_KNShowMode `protobuf:"varint,3,opt,name=show_mode_value,json=showModeValue,enum=KN.ShowArchive_KNShowMode" json:"show_mode_value,omitempty"`
	SizeValue            *TSP.Size               `protobuf:"bytes,4,opt,name=size_value,json=sizeValue" json:"size_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CommandShowSetValueArchive_PropertyValue) Reset() {
	*m = CommandShowSetValueArchive_PropertyValue{}
}
func (m *CommandShowSetValueArchive_PropertyValue) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetValueArchive_PropertyValue) ProtoMessage()    {}
func (*CommandShowSetValueArchive_PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{12, 0}
}

func (m *CommandShowSetValueArchive_PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowSetValueArchive_PropertyValue.Unmarshal(m, b)
}
func (m *CommandShowSetValueArchive_PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowSetValueArchive_PropertyValue.Marshal(b, m, deterministic)
}
func (m *CommandShowSetValueArchive_PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowSetValueArchive_PropertyValue.Merge(m, src)
}
func (m *CommandShowSetValueArchive_PropertyValue) XXX_Size() int {
	return xxx_messageInfo_CommandShowSetValueArchive_PropertyValue.Size(m)
}
func (m *CommandShowSetValueArchive_PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowSetValueArchive_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowSetValueArchive_PropertyValue proto.InternalMessageInfo

func (m *CommandShowSetValueArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandShowSetValueArchive_PropertyValue) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *CommandShowSetValueArchive_PropertyValue) GetShowModeValue() ShowArchive_KNShowMode {
	if m != nil && m.ShowModeValue != nil {
		return *m.ShowModeValue
	}
	return ShowArchive_kKNShowModeNormal
}

func (m *CommandShowSetValueArchive_PropertyValue) GetSizeValue() *TSP.Size {
	if m != nil {
		return m.SizeValue
	}
	return nil
}

type CommandShowInsertSlideArchive struct {
	Super                *TSK.CommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference                      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode            *TSP.Reference                      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ChildIndex           *uint32                             `protobuf:"varint,4,req,name=childIndex" json:"childIndex,omitempty"`
	ParentSlideNode      *TSP.Reference                      `protobuf:"bytes,5,req,name=parentSlideNode" json:"parentSlideNode,omitempty"`
	Kind                 *CommandShowInsertSlideArchive_Kind `protobuf:"varint,6,opt,name=kind,enum=KN.CommandShowInsertSlideArchive_Kind,def=0" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CommandShowInsertSlideArchive) Reset()         { *m = CommandShowInsertSlideArchive{} }
func (m *CommandShowInsertSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowInsertSlideArchive) ProtoMessage()    {}
func (*CommandShowInsertSlideArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{13}
}

func (m *CommandShowInsertSlideArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowInsertSlideArchive.Unmarshal(m, b)
}
func (m *CommandShowInsertSlideArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowInsertSlideArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowInsertSlideArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowInsertSlideArchive.Merge(m, src)
}
func (m *CommandShowInsertSlideArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowInsertSlideArchive.Size(m)
}
func (m *CommandShowInsertSlideArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowInsertSlideArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowInsertSlideArchive proto.InternalMessageInfo

const Default_CommandShowInsertSlideArchive_Kind CommandShowInsertSlideArchive_Kind = CommandShowInsertSlideArchive_kKindInsertSlide

func (m *CommandShowInsertSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetChildIndex() uint32 {
	if m != nil && m.ChildIndex != nil {
		return *m.ChildIndex
	}
	return 0
}

func (m *CommandShowInsertSlideArchive) GetParentSlideNode() *TSP.Reference {
	if m != nil {
		return m.ParentSlideNode
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetKind() CommandShowInsertSlideArchive_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return Default_CommandShowInsertSlideArchive_Kind
}

type CommandShowMoveSlideArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ParentSlideNodes     []*TSP.Reference    `protobuf:"bytes,4,rep,name=parentSlideNodes" json:"parentSlideNodes,omitempty"`
	ChildIndices         []uint32            `protobuf:"varint,5,rep,name=childIndices" json:"childIndices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowMoveSlideArchive) Reset()         { *m = CommandShowMoveSlideArchive{} }
func (m *CommandShowMoveSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowMoveSlideArchive) ProtoMessage()    {}
func (*CommandShowMoveSlideArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{14}
}

func (m *CommandShowMoveSlideArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowMoveSlideArchive.Unmarshal(m, b)
}
func (m *CommandShowMoveSlideArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowMoveSlideArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowMoveSlideArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowMoveSlideArchive.Merge(m, src)
}
func (m *CommandShowMoveSlideArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowMoveSlideArchive.Size(m)
}
func (m *CommandShowMoveSlideArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowMoveSlideArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowMoveSlideArchive proto.InternalMessageInfo

func (m *CommandShowMoveSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetParentSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.ParentSlideNodes
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetChildIndices() []uint32 {
	if m != nil {
		return m.ChildIndices
	}
	return nil
}

type CommandShowRemoveSlideArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ParentSlideNode      *TSP.Reference      `protobuf:"bytes,4,req,name=parentSlideNode" json:"parentSlideNode,omitempty"`
	ChildIndex           *uint32             `protobuf:"varint,5,req,name=childIndex" json:"childIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowRemoveSlideArchive) Reset()         { *m = CommandShowRemoveSlideArchive{} }
func (m *CommandShowRemoveSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowRemoveSlideArchive) ProtoMessage()    {}
func (*CommandShowRemoveSlideArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{15}
}

func (m *CommandShowRemoveSlideArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowRemoveSlideArchive.Unmarshal(m, b)
}
func (m *CommandShowRemoveSlideArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowRemoveSlideArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowRemoveSlideArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowRemoveSlideArchive.Merge(m, src)
}
func (m *CommandShowRemoveSlideArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowRemoveSlideArchive.Size(m)
}
func (m *CommandShowRemoveSlideArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowRemoveSlideArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowRemoveSlideArchive proto.InternalMessageInfo

func (m *CommandShowRemoveSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetParentSlideNode() *TSP.Reference {
	if m != nil {
		return m.ParentSlideNode
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetChildIndex() uint32 {
	if m != nil && m.ChildIndex != nil {
		return *m.ChildIndex
	}
	return 0
}

type CommandShowChangeThemeArchive struct {
	Super                 *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                  *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	Theme                 *TSP.Reference      `protobuf:"bytes,3,req,name=theme" json:"theme,omitempty"`
	OldTheme              *TSP.Reference      `protobuf:"bytes,4,req,name=old_theme,json=oldTheme" json:"old_theme,omitempty"`
	TemplateIdentifier    *string             `protobuf:"bytes,5,opt,name=template_identifier,json=templateIdentifier" json:"template_identifier,omitempty"`
	OldTemplateIdentifier *string             `protobuf:"bytes,6,opt,name=old_template_identifier,json=oldTemplateIdentifier" json:"old_template_identifier,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *CommandShowChangeThemeArchive) Reset()         { *m = CommandShowChangeThemeArchive{} }
func (m *CommandShowChangeThemeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowChangeThemeArchive) ProtoMessage()    {}
func (*CommandShowChangeThemeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{16}
}

func (m *CommandShowChangeThemeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowChangeThemeArchive.Unmarshal(m, b)
}
func (m *CommandShowChangeThemeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowChangeThemeArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowChangeThemeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowChangeThemeArchive.Merge(m, src)
}
func (m *CommandShowChangeThemeArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowChangeThemeArchive.Size(m)
}
func (m *CommandShowChangeThemeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowChangeThemeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowChangeThemeArchive proto.InternalMessageInfo

func (m *CommandShowChangeThemeArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetOldTheme() *TSP.Reference {
	if m != nil {
		return m.OldTheme
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetTemplateIdentifier() string {
	if m != nil && m.TemplateIdentifier != nil {
		return *m.TemplateIdentifier
	}
	return ""
}

func (m *CommandShowChangeThemeArchive) GetOldTemplateIdentifier() string {
	if m != nil && m.OldTemplateIdentifier != nil {
		return *m.OldTemplateIdentifier
	}
	return ""
}

type CommandMoveMastersArchive struct {
	Super                  *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                  *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlides           []*TSP.Reference    `protobuf:"bytes,3,rep,name=master_slides,json=masterSlides" json:"master_slides,omitempty"`
	PreviousIndexesKeys    []*TSP.Reference    `protobuf:"bytes,4,rep,name=previous_indexes_keys,json=previousIndexesKeys" json:"previous_indexes_keys,omitempty"`
	PreviousIndexesValues  []uint32            `protobuf:"varint,5,rep,name=previous_indexes_values,json=previousIndexesValues" json:"previous_indexes_values,omitempty"`
	FinalMasterArrangement []*TSP.Reference    `protobuf:"bytes,6,rep,name=final_master_arrangement,json=finalMasterArrangement" json:"final_master_arrangement,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *CommandMoveMastersArchive) Reset()         { *m = CommandMoveMastersArchive{} }
func (m *CommandMoveMastersArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMoveMastersArchive) ProtoMessage()    {}
func (*CommandMoveMastersArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{17}
}

func (m *CommandMoveMastersArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandMoveMastersArchive.Unmarshal(m, b)
}
func (m *CommandMoveMastersArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandMoveMastersArchive.Marshal(b, m, deterministic)
}
func (m *CommandMoveMastersArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandMoveMastersArchive.Merge(m, src)
}
func (m *CommandMoveMastersArchive) XXX_Size() int {
	return xxx_messageInfo_CommandMoveMastersArchive.Size(m)
}
func (m *CommandMoveMastersArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandMoveMastersArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandMoveMastersArchive proto.InternalMessageInfo

func (m *CommandMoveMastersArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetMasterSlides() []*TSP.Reference {
	if m != nil {
		return m.MasterSlides
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetPreviousIndexesKeys() []*TSP.Reference {
	if m != nil {
		return m.PreviousIndexesKeys
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetPreviousIndexesValues() []uint32 {
	if m != nil {
		return m.PreviousIndexesValues
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetFinalMasterArrangement() []*TSP.Reference {
	if m != nil {
		return m.FinalMasterArrangement
	}
	return nil
}

type CommandInsertMasterArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlideNode      *TSP.Reference      `protobuf:"bytes,3,req,name=master_slide_node,json=masterSlideNode" json:"master_slide_node,omitempty"`
	InsertionIndex       *uint32             `protobuf:"varint,4,req,name=insertion_index,json=insertionIndex" json:"insertion_index,omitempty"`
	WasInsertedWithDrop  *bool               `protobuf:"varint,5,req,name=was_inserted_with_drop,json=wasInsertedWithDrop" json:"was_inserted_with_drop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandInsertMasterArchive) Reset()         { *m = CommandInsertMasterArchive{} }
func (m *CommandInsertMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandInsertMasterArchive) ProtoMessage()    {}
func (*CommandInsertMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{18}
}

func (m *CommandInsertMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandInsertMasterArchive.Unmarshal(m, b)
}
func (m *CommandInsertMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandInsertMasterArchive.Marshal(b, m, deterministic)
}
func (m *CommandInsertMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandInsertMasterArchive.Merge(m, src)
}
func (m *CommandInsertMasterArchive) XXX_Size() int {
	return xxx_messageInfo_CommandInsertMasterArchive.Size(m)
}
func (m *CommandInsertMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandInsertMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandInsertMasterArchive proto.InternalMessageInfo

func (m *CommandInsertMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetMasterSlideNode() *TSP.Reference {
	if m != nil {
		return m.MasterSlideNode
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetInsertionIndex() uint32 {
	if m != nil && m.InsertionIndex != nil {
		return *m.InsertionIndex
	}
	return 0
}

func (m *CommandInsertMasterArchive) GetWasInsertedWithDrop() bool {
	if m != nil && m.WasInsertedWithDrop != nil {
		return *m.WasInsertedWithDrop
	}
	return false
}

type CommandRemoveMasterArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlideNode      *TSP.Reference      `protobuf:"bytes,3,req,name=master_slide_node,json=masterSlideNode" json:"master_slide_node,omitempty"`
	PreviousIndex        *uint32             `protobuf:"varint,4,req,name=previous_index,json=previousIndex" json:"previous_index,omitempty"`
	MasterChangeCommands *TSP.Reference      `protobuf:"bytes,5,opt,name=master_change_commands,json=masterChangeCommands" json:"master_change_commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandRemoveMasterArchive) Reset()         { *m = CommandRemoveMasterArchive{} }
func (m *CommandRemoveMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRemoveMasterArchive) ProtoMessage()    {}
func (*CommandRemoveMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{19}
}

func (m *CommandRemoveMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRemoveMasterArchive.Unmarshal(m, b)
}
func (m *CommandRemoveMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRemoveMasterArchive.Marshal(b, m, deterministic)
}
func (m *CommandRemoveMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRemoveMasterArchive.Merge(m, src)
}
func (m *CommandRemoveMasterArchive) XXX_Size() int {
	return xxx_messageInfo_CommandRemoveMasterArchive.Size(m)
}
func (m *CommandRemoveMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRemoveMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRemoveMasterArchive proto.InternalMessageInfo

func (m *CommandRemoveMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetMasterSlideNode() *TSP.Reference {
	if m != nil {
		return m.MasterSlideNode
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetPreviousIndex() uint32 {
	if m != nil && m.PreviousIndex != nil {
		return *m.PreviousIndex
	}
	return 0
}

func (m *CommandRemoveMasterArchive) GetMasterChangeCommands() *TSP.Reference {
	if m != nil {
		return m.MasterChangeCommands
	}
	return nil
}

type CommandRenameMasterArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	MasterSlide          *TSP.Reference      `protobuf:"bytes,2,req,name=master_slide,json=masterSlide" json:"master_slide,omitempty"`
	MasterName           *string             `protobuf:"bytes,3,req,name=master_name,json=masterName" json:"master_name,omitempty"`
	OldMasterName        *string             `protobuf:"bytes,4,req,name=old_master_name,json=oldMasterName" json:"old_master_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandRenameMasterArchive) Reset()         { *m = CommandRenameMasterArchive{} }
func (m *CommandRenameMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRenameMasterArchive) ProtoMessage()    {}
func (*CommandRenameMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{20}
}

func (m *CommandRenameMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRenameMasterArchive.Unmarshal(m, b)
}
func (m *CommandRenameMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRenameMasterArchive.Marshal(b, m, deterministic)
}
func (m *CommandRenameMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRenameMasterArchive.Merge(m, src)
}
func (m *CommandRenameMasterArchive) XXX_Size() int {
	return xxx_messageInfo_CommandRenameMasterArchive.Size(m)
}
func (m *CommandRenameMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRenameMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRenameMasterArchive proto.InternalMessageInfo

func (m *CommandRenameMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRenameMasterArchive) GetMasterSlide() *TSP.Reference {
	if m != nil {
		return m.MasterSlide
	}
	return nil
}

func (m *CommandRenameMasterArchive) GetMasterName() string {
	if m != nil && m.MasterName != nil {
		return *m.MasterName
	}
	return ""
}

func (m *CommandRenameMasterArchive) GetOldMasterName() string {
	if m != nil && m.OldMasterName != nil {
		return *m.OldMasterName
	}
	return ""
}

type CommandSlideInsertBuildArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Build                *TSP.Reference      `protobuf:"bytes,3,req,name=build" json:"build,omitempty"`
	Index                *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	ShouldCreateChunks   *bool               `protobuf:"varint,5,opt,name=shouldCreateChunks" json:"shouldCreateChunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideInsertBuildArchive) Reset()         { *m = CommandSlideInsertBuildArchive{} }
func (m *CommandSlideInsertBuildArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertBuildArchive) ProtoMessage()    {}
func (*CommandSlideInsertBuildArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{21}
}

func (m *CommandSlideInsertBuildArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideInsertBuildArchive.Unmarshal(m, b)
}
func (m *CommandSlideInsertBuildArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideInsertBuildArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideInsertBuildArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideInsertBuildArchive.Merge(m, src)
}
func (m *CommandSlideInsertBuildArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideInsertBuildArchive.Size(m)
}
func (m *CommandSlideInsertBuildArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideInsertBuildArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideInsertBuildArchive proto.InternalMessageInfo

func (m *CommandSlideInsertBuildArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideInsertBuildArchive) GetShouldCreateChunks() bool {
	if m != nil && m.ShouldCreateChunks != nil {
		return *m.ShouldCreateChunks
	}
	return false
}

type CommandSlideRemoveBuildArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Build                *TSP.Reference      `protobuf:"bytes,3,req,name=build" json:"build,omitempty"`
	Index                *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideRemoveBuildArchive) Reset()         { *m = CommandSlideRemoveBuildArchive{} }
func (m *CommandSlideRemoveBuildArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveBuildArchive) ProtoMessage()    {}
func (*CommandSlideRemoveBuildArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{22}
}

func (m *CommandSlideRemoveBuildArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideRemoveBuildArchive.Unmarshal(m, b)
}
func (m *CommandSlideRemoveBuildArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideRemoveBuildArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideRemoveBuildArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideRemoveBuildArchive.Merge(m, src)
}
func (m *CommandSlideRemoveBuildArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideRemoveBuildArchive.Size(m)
}
func (m *CommandSlideRemoveBuildArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideRemoveBuildArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideRemoveBuildArchive proto.InternalMessageInfo

func (m *CommandSlideRemoveBuildArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideMoveBuildWithoutMovingChunksArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Index                *uint32             `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	OldIndex             *uint32             `protobuf:"varint,4,req,name=oldIndex" json:"oldIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) Reset() {
	*m = CommandSlideMoveBuildWithoutMovingChunksArchive{}
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideMoveBuildWithoutMovingChunksArchive) ProtoMessage() {}
func (*CommandSlideMoveBuildWithoutMovingChunksArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{23}
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive.Unmarshal(m, b)
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive.Merge(m, src)
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive.Size(m)
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideMoveBuildWithoutMovingChunksArchive proto.InternalMessageInfo

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetOldIndex() uint32 {
	if m != nil && m.OldIndex != nil {
		return *m.OldIndex
	}
	return 0
}

type CommandSlideMoveBuildsArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Builds               []*TSP.Reference    `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
	ToIndex              *uint32             `protobuf:"varint,3,opt,name=toIndex" json:"toIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideMoveBuildsArchive) Reset()         { *m = CommandSlideMoveBuildsArchive{} }
func (m *CommandSlideMoveBuildsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildsArchive) ProtoMessage()    {}
func (*CommandSlideMoveBuildsArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{24}
}

func (m *CommandSlideMoveBuildsArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideMoveBuildsArchive.Unmarshal(m, b)
}
func (m *CommandSlideMoveBuildsArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideMoveBuildsArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideMoveBuildsArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideMoveBuildsArchive.Merge(m, src)
}
func (m *CommandSlideMoveBuildsArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideMoveBuildsArchive.Size(m)
}
func (m *CommandSlideMoveBuildsArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideMoveBuildsArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideMoveBuildsArchive proto.InternalMessageInfo

func (m *CommandSlideMoveBuildsArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildsArchive) GetBuilds() []*TSP.Reference {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *CommandSlideMoveBuildsArchive) GetToIndex() uint32 {
	if m != nil && m.ToIndex != nil {
		return *m.ToIndex
	}
	return 0
}

type CommandSlideInsertBuildChunkArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	BuildChunk           *BuildChunkArchive  `protobuf:"bytes,3,req,name=buildChunk" json:"buildChunk,omitempty"`
	Index                *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideInsertBuildChunkArchive) Reset()         { *m = CommandSlideInsertBuildChunkArchive{} }
func (m *CommandSlideInsertBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertBuildChunkArchive) ProtoMessage()    {}
func (*CommandSlideInsertBuildChunkArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{25}
}

func (m *CommandSlideInsertBuildChunkArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideInsertBuildChunkArchive.Unmarshal(m, b)
}
func (m *CommandSlideInsertBuildChunkArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideInsertBuildChunkArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideInsertBuildChunkArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideInsertBuildChunkArchive.Merge(m, src)
}
func (m *CommandSlideInsertBuildChunkArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideInsertBuildChunkArchive.Size(m)
}
func (m *CommandSlideInsertBuildChunkArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideInsertBuildChunkArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideInsertBuildChunkArchive proto.InternalMessageInfo

func (m *CommandSlideInsertBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideRemoveBuildChunkArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	BuildChunk           *BuildChunkArchive  `protobuf:"bytes,3,req,name=buildChunk" json:"buildChunk,omitempty"`
	Index                *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideRemoveBuildChunkArchive) Reset()         { *m = CommandSlideRemoveBuildChunkArchive{} }
func (m *CommandSlideRemoveBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveBuildChunkArchive) ProtoMessage()    {}
func (*CommandSlideRemoveBuildChunkArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{26}
}

func (m *CommandSlideRemoveBuildChunkArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideRemoveBuildChunkArchive.Unmarshal(m, b)
}
func (m *CommandSlideRemoveBuildChunkArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideRemoveBuildChunkArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideRemoveBuildChunkArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideRemoveBuildChunkArchive.Merge(m, src)
}
func (m *CommandSlideRemoveBuildChunkArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideRemoveBuildChunkArchive.Size(m)
}
func (m *CommandSlideRemoveBuildChunkArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideRemoveBuildChunkArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideRemoveBuildChunkArchive proto.InternalMessageInfo

func (m *CommandSlideRemoveBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideMoveBuildChunkArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Index                *uint32             `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	OldIndex             *uint32             `protobuf:"varint,4,req,name=oldIndex" json:"oldIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlideMoveBuildChunkArchive) Reset()         { *m = CommandSlideMoveBuildChunkArchive{} }
func (m *CommandSlideMoveBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildChunkArchive) ProtoMessage()    {}
func (*CommandSlideMoveBuildChunkArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{27}
}

func (m *CommandSlideMoveBuildChunkArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideMoveBuildChunkArchive.Unmarshal(m, b)
}
func (m *CommandSlideMoveBuildChunkArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideMoveBuildChunkArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideMoveBuildChunkArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideMoveBuildChunkArchive.Merge(m, src)
}
func (m *CommandSlideMoveBuildChunkArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideMoveBuildChunkArchive.Size(m)
}
func (m *CommandSlideMoveBuildChunkArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideMoveBuildChunkArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideMoveBuildChunkArchive proto.InternalMessageInfo

func (m *CommandSlideMoveBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideMoveBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideMoveBuildChunkArchive) GetOldIndex() uint32 {
	if m != nil && m.OldIndex != nil {
		return *m.OldIndex
	}
	return 0
}

type CommandSlideMoveBuildChunksArchive struct {
	Super                *TSK.CommandArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BuildChunks          []*BuildChunkArchive `protobuf:"bytes,2,rep,name=buildChunks" json:"buildChunks,omitempty"`
	ToIndex              *uint32              `protobuf:"varint,3,opt,name=toIndex" json:"toIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CommandSlideMoveBuildChunksArchive) Reset()         { *m = CommandSlideMoveBuildChunksArchive{} }
func (m *CommandSlideMoveBuildChunksArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildChunksArchive) ProtoMessage()    {}
func (*CommandSlideMoveBuildChunksArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{28}
}

func (m *CommandSlideMoveBuildChunksArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideMoveBuildChunksArchive.Unmarshal(m, b)
}
func (m *CommandSlideMoveBuildChunksArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideMoveBuildChunksArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideMoveBuildChunksArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideMoveBuildChunksArchive.Merge(m, src)
}
func (m *CommandSlideMoveBuildChunksArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideMoveBuildChunksArchive.Size(m)
}
func (m *CommandSlideMoveBuildChunksArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideMoveBuildChunksArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideMoveBuildChunksArchive proto.InternalMessageInfo

func (m *CommandSlideMoveBuildChunksArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildChunksArchive) GetBuildChunks() []*BuildChunkArchive {
	if m != nil {
		return m.BuildChunks
	}
	return nil
}

func (m *CommandSlideMoveBuildChunksArchive) GetToIndex() uint32 {
	if m != nil && m.ToIndex != nil {
		return *m.ToIndex
	}
	return 0
}

type CommandBuildSetValueArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Build                *TSP.Reference      `protobuf:"bytes,2,req,name=build" json:"build,omitempty"`
	Property             *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Effects              []string            `protobuf:"bytes,4,rep,name=effects" json:"effects,omitempty"`
	Types                []string            `protobuf:"bytes,5,rep,name=types" json:"types,omitempty"`
	Deliveries           []string            `protobuf:"bytes,6,rep,name=deliveries" json:"deliveries,omitempty"`
	Directions           []uint32            `protobuf:"varint,7,rep,name=directions" json:"directions,omitempty"`
	Durations            []float64           `protobuf:"fixed64,8,rep,name=durations" json:"durations,omitempty"`
	Delays               []float64           `protobuf:"fixed64,9,rep,name=delays" json:"delays,omitempty"`
	DelayAutomaticAfters []float64           `protobuf:"fixed64,10,rep,name=delayAutomaticAfters" json:"delayAutomaticAfters,omitempty"`
	DelayAutomaticWiths  []float64           `protobuf:"fixed64,11,rep,name=delayAutomaticWiths" json:"delayAutomaticWiths,omitempty"`
	EventTriggers        []bool              `protobuf:"varint,12,rep,name=eventTriggers" json:"eventTriggers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandBuildSetValueArchive) Reset()         { *m = CommandBuildSetValueArchive{} }
func (m *CommandBuildSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandBuildSetValueArchive) ProtoMessage()    {}
func (*CommandBuildSetValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{29}
}

func (m *CommandBuildSetValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandBuildSetValueArchive.Unmarshal(m, b)
}
func (m *CommandBuildSetValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandBuildSetValueArchive.Marshal(b, m, deterministic)
}
func (m *CommandBuildSetValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandBuildSetValueArchive.Merge(m, src)
}
func (m *CommandBuildSetValueArchive) XXX_Size() int {
	return xxx_messageInfo_CommandBuildSetValueArchive.Size(m)
}
func (m *CommandBuildSetValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandBuildSetValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandBuildSetValueArchive proto.InternalMessageInfo

func (m *CommandBuildSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandBuildSetValueArchive) GetEffects() []string {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDeliveries() []string {
	if m != nil {
		return m.Deliveries
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDirections() []uint32 {
	if m != nil {
		return m.Directions
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelayAutomaticAfters() []float64 {
	if m != nil {
		return m.DelayAutomaticAfters
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelayAutomaticWiths() []float64 {
	if m != nil {
		return m.DelayAutomaticWiths
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetEventTriggers() []bool {
	if m != nil {
		return m.EventTriggers
	}
	return nil
}

type CommandBuildChunkSetValueArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BuildChunk           *BuildChunkArchive  `protobuf:"bytes,2,req,name=buildChunk" json:"buildChunk,omitempty"`
	Property             *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Referents            []uint32            `protobuf:"varint,4,rep,name=referents" json:"referents,omitempty"`
	Automatics           []bool              `protobuf:"varint,5,rep,name=automatics" json:"automatics,omitempty"`
	Durations            []float64           `protobuf:"fixed64,6,rep,name=durations" json:"durations,omitempty"`
	Delays               []float64           `protobuf:"fixed64,7,rep,name=delays" json:"delays,omitempty"`
	OldOwnsValue         *bool               `protobuf:"varint,8,opt,name=oldOwnsValue" json:"oldOwnsValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandBuildChunkSetValueArchive) Reset()         { *m = CommandBuildChunkSetValueArchive{} }
func (m *CommandBuildChunkSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandBuildChunkSetValueArchive) ProtoMessage()    {}
func (*CommandBuildChunkSetValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{30}
}

func (m *CommandBuildChunkSetValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandBuildChunkSetValueArchive.Unmarshal(m, b)
}
func (m *CommandBuildChunkSetValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandBuildChunkSetValueArchive.Marshal(b, m, deterministic)
}
func (m *CommandBuildChunkSetValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandBuildChunkSetValueArchive.Merge(m, src)
}
func (m *CommandBuildChunkSetValueArchive) XXX_Size() int {
	return xxx_messageInfo_CommandBuildChunkSetValueArchive.Size(m)
}
func (m *CommandBuildChunkSetValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandBuildChunkSetValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandBuildChunkSetValueArchive proto.InternalMessageInfo

func (m *CommandBuildChunkSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandBuildChunkSetValueArchive) GetReferents() []uint32 {
	if m != nil {
		return m.Referents
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetAutomatics() []bool {
	if m != nil {
		return m.Automatics
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetOldOwnsValue() bool {
	if m != nil && m.OldOwnsValue != nil {
		return *m.OldOwnsValue
	}
	return false
}

type CommandTransitionSetValueArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode            *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Property             *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Effects              []string            `protobuf:"bytes,4,rep,name=effects" json:"effects,omitempty"`
	Unused               []string            `protobuf:"bytes,5,rep,name=unused" json:"unused,omitempty"`
	Unused2              []string            `protobuf:"bytes,6,rep,name=unused2" json:"unused2,omitempty"`
	Unused3              []string            `protobuf:"bytes,7,rep,name=unused3" json:"unused3,omitempty"`
	Durations            []float64           `protobuf:"fixed64,8,rep,name=durations" json:"durations,omitempty"`
	Directions           []uint32            `protobuf:"varint,9,rep,name=directions" json:"directions,omitempty"`
	IsAutomatics         []bool              `protobuf:"varint,10,rep,name=isAutomatics" json:"isAutomatics,omitempty"`
	Delays               []float64           `protobuf:"fixed64,11,rep,name=delays" json:"delays,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandTransitionSetValueArchive) Reset()         { *m = CommandTransitionSetValueArchive{} }
func (m *CommandTransitionSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandTransitionSetValueArchive) ProtoMessage()    {}
func (*CommandTransitionSetValueArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{31}
}

func (m *CommandTransitionSetValueArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandTransitionSetValueArchive.Unmarshal(m, b)
}
func (m *CommandTransitionSetValueArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandTransitionSetValueArchive.Marshal(b, m, deterministic)
}
func (m *CommandTransitionSetValueArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandTransitionSetValueArchive.Merge(m, src)
}
func (m *CommandTransitionSetValueArchive) XXX_Size() int {
	return xxx_messageInfo_CommandTransitionSetValueArchive.Size(m)
}
func (m *CommandTransitionSetValueArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandTransitionSetValueArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandTransitionSetValueArchive proto.InternalMessageInfo

func (m *CommandTransitionSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandTransitionSetValueArchive) GetEffects() []string {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused() []string {
	if m != nil {
		return m.Unused
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused2() []string {
	if m != nil {
		return m.Unused2
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused3() []string {
	if m != nil {
		return m.Unused3
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDirections() []uint32 {
	if m != nil {
		return m.Directions
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetIsAutomatics() []bool {
	if m != nil {
		return m.IsAutomatics
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

type CommandShowSetSlideNumberVisibilityArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNumbersVisible  *bool               `protobuf:"varint,3,req,name=slideNumbersVisible" json:"slideNumbersVisible,omitempty"`
	ProviderUndo         *TSP.Reference      `protobuf:"bytes,4,opt,name=providerUndo" json:"providerUndo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowSetSlideNumberVisibilityArchive) Reset() {
	*m = CommandShowSetSlideNumberVisibilityArchive{}
}
func (m *CommandShowSetSlideNumberVisibilityArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandShowSetSlideNumberVisibilityArchive) ProtoMessage() {}
func (*CommandShowSetSlideNumberVisibilityArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{32}
}

func (m *CommandShowSetSlideNumberVisibilityArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive.Unmarshal(m, b)
}
func (m *CommandShowSetSlideNumberVisibilityArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive.Marshal(b, m, deterministic)
}
func (m *CommandShowSetSlideNumberVisibilityArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive.Merge(m, src)
}
func (m *CommandShowSetSlideNumberVisibilityArchive) XXX_Size() int {
	return xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive.Size(m)
}
func (m *CommandShowSetSlideNumberVisibilityArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowSetSlideNumberVisibilityArchive proto.InternalMessageInfo

func (m *CommandShowSetSlideNumberVisibilityArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetSlideNumbersVisible() bool {
	if m != nil && m.SlideNumbersVisible != nil {
		return *m.SlideNumbersVisible
	}
	return false
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetProviderUndo() *TSP.Reference {
	if m != nil {
		return m.ProviderUndo
	}
	return nil
}

type CommandMasterRescaleArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master               *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandMasterRescaleArchive) Reset()         { *m = CommandMasterRescaleArchive{} }
func (m *CommandMasterRescaleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterRescaleArchive) ProtoMessage()    {}
func (*CommandMasterRescaleArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{33}
}

func (m *CommandMasterRescaleArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandMasterRescaleArchive.Unmarshal(m, b)
}
func (m *CommandMasterRescaleArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandMasterRescaleArchive.Marshal(b, m, deterministic)
}
func (m *CommandMasterRescaleArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandMasterRescaleArchive.Merge(m, src)
}
func (m *CommandMasterRescaleArchive) XXX_Size() int {
	return xxx_messageInfo_CommandMasterRescaleArchive.Size(m)
}
func (m *CommandMasterRescaleArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandMasterRescaleArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandMasterRescaleArchive proto.InternalMessageInfo

func (m *CommandMasterRescaleArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterRescaleArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

type CommandMasterSetThumbnailTextArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master               *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	IsBody               *bool               `protobuf:"varint,3,req,name=is_body,json=isBody" json:"is_body,omitempty"`
	NewText              *string             `protobuf:"bytes,4,opt,name=new_text,json=newText" json:"new_text,omitempty"`
	OldText              *string             `protobuf:"bytes,5,opt,name=old_text,json=oldText" json:"old_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandMasterSetThumbnailTextArchive) Reset()         { *m = CommandMasterSetThumbnailTextArchive{} }
func (m *CommandMasterSetThumbnailTextArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterSetThumbnailTextArchive) ProtoMessage()    {}
func (*CommandMasterSetThumbnailTextArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{34}
}

func (m *CommandMasterSetThumbnailTextArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandMasterSetThumbnailTextArchive.Unmarshal(m, b)
}
func (m *CommandMasterSetThumbnailTextArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandMasterSetThumbnailTextArchive.Marshal(b, m, deterministic)
}
func (m *CommandMasterSetThumbnailTextArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandMasterSetThumbnailTextArchive.Merge(m, src)
}
func (m *CommandMasterSetThumbnailTextArchive) XXX_Size() int {
	return xxx_messageInfo_CommandMasterSetThumbnailTextArchive.Size(m)
}
func (m *CommandMasterSetThumbnailTextArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandMasterSetThumbnailTextArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandMasterSetThumbnailTextArchive proto.InternalMessageInfo

func (m *CommandMasterSetThumbnailTextArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterSetThumbnailTextArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandMasterSetThumbnailTextArchive) GetIsBody() bool {
	if m != nil && m.IsBody != nil {
		return *m.IsBody
	}
	return false
}

func (m *CommandMasterSetThumbnailTextArchive) GetNewText() string {
	if m != nil && m.NewText != nil {
		return *m.NewText
	}
	return ""
}

func (m *CommandMasterSetThumbnailTextArchive) GetOldText() string {
	if m != nil && m.OldText != nil {
		return *m.OldText
	}
	return ""
}

type CommandMasterSetBodyStylesArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master               *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	NewParagraphStyles   []*TSP.Reference    `protobuf:"bytes,3,rep,name=new_paragraph_styles,json=newParagraphStyles" json:"new_paragraph_styles,omitempty"`
	NewListStyles        []*TSP.Reference    `protobuf:"bytes,4,rep,name=new_list_styles,json=newListStyles" json:"new_list_styles,omitempty"`
	OldParagraphStyles   []*TSP.Reference    `protobuf:"bytes,5,rep,name=old_paragraph_styles,json=oldParagraphStyles" json:"old_paragraph_styles,omitempty"`
	OldListStyles        []*TSP.Reference    `protobuf:"bytes,6,rep,name=old_list_styles,json=oldListStyles" json:"old_list_styles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandMasterSetBodyStylesArchive) Reset()         { *m = CommandMasterSetBodyStylesArchive{} }
func (m *CommandMasterSetBodyStylesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterSetBodyStylesArchive) ProtoMessage()    {}
func (*CommandMasterSetBodyStylesArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{35}
}

func (m *CommandMasterSetBodyStylesArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandMasterSetBodyStylesArchive.Unmarshal(m, b)
}
func (m *CommandMasterSetBodyStylesArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandMasterSetBodyStylesArchive.Marshal(b, m, deterministic)
}
func (m *CommandMasterSetBodyStylesArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandMasterSetBodyStylesArchive.Merge(m, src)
}
func (m *CommandMasterSetBodyStylesArchive) XXX_Size() int {
	return xxx_messageInfo_CommandMasterSetBodyStylesArchive.Size(m)
}
func (m *CommandMasterSetBodyStylesArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandMasterSetBodyStylesArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandMasterSetBodyStylesArchive proto.InternalMessageInfo

func (m *CommandMasterSetBodyStylesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetNewParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.NewParagraphStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetNewListStyles() []*TSP.Reference {
	if m != nil {
		return m.NewListStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetOldParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.OldParagraphStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetOldListStyles() []*TSP.Reference {
	if m != nil {
		return m.OldListStyles
	}
	return nil
}

type CommandSlideApplyThemeArchive struct {
	Super                *TSS.ApplyThemeChildCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Blob                 *MasterChangeBlobArchive           `protobuf:"bytes,2,req,name=blob" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CommandSlideApplyThemeArchive) Reset()         { *m = CommandSlideApplyThemeArchive{} }
func (m *CommandSlideApplyThemeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideApplyThemeArchive) ProtoMessage()    {}
func (*CommandSlideApplyThemeArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{36}
}

func (m *CommandSlideApplyThemeArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideApplyThemeArchive.Unmarshal(m, b)
}
func (m *CommandSlideApplyThemeArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideApplyThemeArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideApplyThemeArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideApplyThemeArchive.Merge(m, src)
}
func (m *CommandSlideApplyThemeArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideApplyThemeArchive.Size(m)
}
func (m *CommandSlideApplyThemeArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideApplyThemeArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideApplyThemeArchive proto.InternalMessageInfo

func (m *CommandSlideApplyThemeArchive) GetSuper() *TSS.ApplyThemeChildCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideApplyThemeArchive) GetBlob() *MasterChangeBlobArchive {
	if m != nil {
		return m.Blob
	}
	return nil
}

type CommandChangeMasterSlideArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Master               *TSP.Reference      `protobuf:"bytes,3,req,name=master" json:"master,omitempty"`
	PlaceholderCommands  *TSP.Reference      `protobuf:"bytes,4,req,name=placeholder_commands,json=placeholderCommands" json:"placeholder_commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandChangeMasterSlideArchive) Reset()         { *m = CommandChangeMasterSlideArchive{} }
func (m *CommandChangeMasterSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandChangeMasterSlideArchive) ProtoMessage()    {}
func (*CommandChangeMasterSlideArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{37}
}

func (m *CommandChangeMasterSlideArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandChangeMasterSlideArchive.Unmarshal(m, b)
}
func (m *CommandChangeMasterSlideArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandChangeMasterSlideArchive.Marshal(b, m, deterministic)
}
func (m *CommandChangeMasterSlideArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandChangeMasterSlideArchive.Merge(m, src)
}
func (m *CommandChangeMasterSlideArchive) XXX_Size() int {
	return xxx_messageInfo_CommandChangeMasterSlideArchive.Size(m)
}
func (m *CommandChangeMasterSlideArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandChangeMasterSlideArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandChangeMasterSlideArchive proto.InternalMessageInfo

func (m *CommandChangeMasterSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetPlaceholderCommands() *TSP.Reference {
	if m != nil {
		return m.PlaceholderCommands
	}
	return nil
}

type CommandSlidePrimitiveSetMasterArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide                *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Master               *TSP.Reference      `protobuf:"bytes,3,req,name=master" json:"master,omitempty"`
	OldMaster            *TSP.Reference      `protobuf:"bytes,4,req,name=old_master,json=oldMaster" json:"old_master,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandSlidePrimitiveSetMasterArchive) Reset()         { *m = CommandSlidePrimitiveSetMasterArchive{} }
func (m *CommandSlidePrimitiveSetMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlidePrimitiveSetMasterArchive) ProtoMessage()    {}
func (*CommandSlidePrimitiveSetMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{38}
}

func (m *CommandSlidePrimitiveSetMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive.Unmarshal(m, b)
}
func (m *CommandSlidePrimitiveSetMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlidePrimitiveSetMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive.Merge(m, src)
}
func (m *CommandSlidePrimitiveSetMasterArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive.Size(m)
}
func (m *CommandSlidePrimitiveSetMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlidePrimitiveSetMasterArchive proto.InternalMessageInfo

func (m *CommandSlidePrimitiveSetMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetOldMaster() *TSP.Reference {
	if m != nil {
		return m.OldMaster
	}
	return nil
}

type CommandSlideReapplyMasterArchive struct {
	Super                     *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ReapplyAccumulatedCommand *TSP.Reference      `protobuf:"bytes,2,req,name=reapply_accumulated_command,json=reapplyAccumulatedCommand" json:"reapply_accumulated_command,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}            `json:"-"`
	XXX_unrecognized          []byte              `json:"-"`
	XXX_sizecache             int32               `json:"-"`
}

func (m *CommandSlideReapplyMasterArchive) Reset()         { *m = CommandSlideReapplyMasterArchive{} }
func (m *CommandSlideReapplyMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideReapplyMasterArchive) ProtoMessage()    {}
func (*CommandSlideReapplyMasterArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{39}
}

func (m *CommandSlideReapplyMasterArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSlideReapplyMasterArchive.Unmarshal(m, b)
}
func (m *CommandSlideReapplyMasterArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSlideReapplyMasterArchive.Marshal(b, m, deterministic)
}
func (m *CommandSlideReapplyMasterArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSlideReapplyMasterArchive.Merge(m, src)
}
func (m *CommandSlideReapplyMasterArchive) XXX_Size() int {
	return xxx_messageInfo_CommandSlideReapplyMasterArchive.Size(m)
}
func (m *CommandSlideReapplyMasterArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSlideReapplyMasterArchive.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSlideReapplyMasterArchive proto.InternalMessageInfo

func (m *CommandSlideReapplyMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideReapplyMasterArchive) GetReapplyAccumulatedCommand() *TSP.Reference {
	if m != nil {
		return m.ReapplyAccumulatedCommand
	}
	return nil
}

type CommandShowSetSoundtrack struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,opt,name=show" json:"show,omitempty"`
	Soundtrack           *TSP.Reference      `protobuf:"bytes,3,opt,name=soundtrack" json:"soundtrack,omitempty"`
	OldSoundtrack        *TSP.Reference      `protobuf:"bytes,4,opt,name=old_soundtrack,json=oldSoundtrack" json:"old_soundtrack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CommandShowSetSoundtrack) Reset()         { *m = CommandShowSetSoundtrack{} }
func (m *CommandShowSetSoundtrack) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetSoundtrack) ProtoMessage()    {}
func (*CommandShowSetSoundtrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{40}
}

func (m *CommandShowSetSoundtrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandShowSetSoundtrack.Unmarshal(m, b)
}
func (m *CommandShowSetSoundtrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandShowSetSoundtrack.Marshal(b, m, deterministic)
}
func (m *CommandShowSetSoundtrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandShowSetSoundtrack.Merge(m, src)
}
func (m *CommandShowSetSoundtrack) XXX_Size() int {
	return xxx_messageInfo_CommandShowSetSoundtrack.Size(m)
}
func (m *CommandShowSetSoundtrack) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandShowSetSoundtrack.DiscardUnknown(m)
}

var xxx_messageInfo_CommandShowSetSoundtrack proto.InternalMessageInfo

func (m *CommandShowSetSoundtrack) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetSoundtrack() *TSP.Reference {
	if m != nil {
		return m.Soundtrack
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetOldSoundtrack() *TSP.Reference {
	if m != nil {
		return m.OldSoundtrack
	}
	return nil
}

type CommandSoundtrackSetValue struct {
	Super                *TSK.CommandArchive                      `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Soundtrack           *TSP.Reference                           `protobuf:"bytes,2,opt,name=soundtrack" json:"soundtrack,omitempty"`
	Property             *string                                  `protobuf:"bytes,3,opt,name=property" json:"property,omitempty"`
	OldValue             *CommandSoundtrackSetValue_PropertyValue `protobuf:"bytes,4,opt,name=old_value,json=oldValue" json:"old_value,omitempty"`
	NewValue             *CommandSoundtrackSetValue_PropertyValue `protobuf:"bytes,5,opt,name=new_value,json=newValue" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CommandSoundtrackSetValue) Reset()         { *m = CommandSoundtrackSetValue{} }
func (m *CommandSoundtrackSetValue) String() string { return proto.CompactTextString(m) }
func (*CommandSoundtrackSetValue) ProtoMessage()    {}
func (*CommandSoundtrackSetValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{41}
}

func (m *CommandSoundtrackSetValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSoundtrackSetValue.Unmarshal(m, b)
}
func (m *CommandSoundtrackSetValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSoundtrackSetValue.Marshal(b, m, deterministic)
}
func (m *CommandSoundtrackSetValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSoundtrackSetValue.Merge(m, src)
}
func (m *CommandSoundtrackSetValue) XXX_Size() int {
	return xxx_messageInfo_CommandSoundtrackSetValue.Size(m)
}
func (m *CommandSoundtrackSetValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSoundtrackSetValue.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSoundtrackSetValue proto.InternalMessageInfo

func (m *CommandSoundtrackSetValue) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetSoundtrack() *TSP.Reference {
	if m != nil {
		return m.Soundtrack
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSoundtrackSetValue) GetOldValue() *CommandSoundtrackSetValue_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetNewValue() *CommandSoundtrackSetValue_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandSoundtrackSetValue_PropertyValue struct {
	DoubleValue          *float64                   `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	ModeValue            *Soundtrack_SoundtrackMode `protobuf:"varint,2,opt,name=mode_value,json=modeValue,enum=KN.Soundtrack_SoundtrackMode" json:"mode_value,omitempty"`
	MediaReferenceValues []*TSP.DataReference       `protobuf:"bytes,3,rep,name=media_reference_values,json=mediaReferenceValues" json:"media_reference_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CommandSoundtrackSetValue_PropertyValue) Reset() {
	*m = CommandSoundtrackSetValue_PropertyValue{}
}
func (m *CommandSoundtrackSetValue_PropertyValue) String() string { return proto.CompactTextString(m) }
func (*CommandSoundtrackSetValue_PropertyValue) ProtoMessage()    {}
func (*CommandSoundtrackSetValue_PropertyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{41, 0}
}

func (m *CommandSoundtrackSetValue_PropertyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue.Unmarshal(m, b)
}
func (m *CommandSoundtrackSetValue_PropertyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue.Marshal(b, m, deterministic)
}
func (m *CommandSoundtrackSetValue_PropertyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue.Merge(m, src)
}
func (m *CommandSoundtrackSetValue_PropertyValue) XXX_Size() int {
	return xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue.Size(m)
}
func (m *CommandSoundtrackSetValue_PropertyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSoundtrackSetValue_PropertyValue proto.InternalMessageInfo

func (m *CommandSoundtrackSetValue_PropertyValue) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *CommandSoundtrackSetValue_PropertyValue) GetModeValue() Soundtrack_SoundtrackMode {
	if m != nil && m.ModeValue != nil {
		return *m.ModeValue
	}
	return Soundtrack_kKNSoundtrackModePlayOnce
}

func (m *CommandSoundtrackSetValue_PropertyValue) GetMediaReferenceValues() []*TSP.DataReference {
	if m != nil {
		return m.MediaReferenceValues
	}
	return nil
}

type SlideCollectionCommandSelectionBehaviorArchive struct {
	ArchivedNewSelection *TSP.Reference                                       `protobuf:"bytes,1,opt,name=archived_new_selection,json=archivedNewSelection" json:"archived_new_selection,omitempty"`
	ArchivedOldSelection *TSP.Reference                                       `protobuf:"bytes,2,opt,name=archived_old_selection,json=archivedOldSelection" json:"archived_old_selection,omitempty"`
	Type                 *SlideCollectionCommandSelectionBehaviorArchive_Type `protobuf:"varint,3,opt,name=type,enum=KN.SlideCollectionCommandSelectionBehaviorArchive_Type,def=0" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) Reset() {
	*m = SlideCollectionCommandSelectionBehaviorArchive{}
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) String() string {
	return proto.CompactTextString(m)
}
func (*SlideCollectionCommandSelectionBehaviorArchive) ProtoMessage() {}
func (*SlideCollectionCommandSelectionBehaviorArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{42}
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive.Unmarshal(m, b)
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive.Marshal(b, m, deterministic)
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive.Merge(m, src)
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) XXX_Size() int {
	return xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive.Size(m)
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive.DiscardUnknown(m)
}

var xxx_messageInfo_SlideCollectionCommandSelectionBehaviorArchive proto.InternalMessageInfo

const Default_SlideCollectionCommandSelectionBehaviorArchive_Type SlideCollectionCommandSelectionBehaviorArchive_Type = SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeGeneral

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetArchivedNewSelection() *TSP.Reference {
	if m != nil {
		return m.ArchivedNewSelection
	}
	return nil
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetArchivedOldSelection() *TSP.Reference {
	if m != nil {
		return m.ArchivedOldSelection
	}
	return nil
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetType() SlideCollectionCommandSelectionBehaviorArchive_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_SlideCollectionCommandSelectionBehaviorArchive_Type
}

type ChartInfoGeometryCommandArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ChartInfoGeometryCommandArchive) Reset()         { *m = ChartInfoGeometryCommandArchive{} }
func (m *ChartInfoGeometryCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ChartInfoGeometryCommandArchive) ProtoMessage()    {}
func (*ChartInfoGeometryCommandArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc506070cd6467a6, []int{43}
}

func (m *ChartInfoGeometryCommandArchive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChartInfoGeometryCommandArchive.Unmarshal(m, b)
}
func (m *ChartInfoGeometryCommandArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChartInfoGeometryCommandArchive.Marshal(b, m, deterministic)
}
func (m *ChartInfoGeometryCommandArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChartInfoGeometryCommandArchive.Merge(m, src)
}
func (m *ChartInfoGeometryCommandArchive) XXX_Size() int {
	return xxx_messageInfo_ChartInfoGeometryCommandArchive.Size(m)
}
func (m *ChartInfoGeometryCommandArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_ChartInfoGeometryCommandArchive.DiscardUnknown(m)
}

var xxx_messageInfo_ChartInfoGeometryCommandArchive proto.InternalMessageInfo

func (m *ChartInfoGeometryCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func init() {
	proto.RegisterEnum("KN.CommandShowInsertSlideArchive_Kind", CommandShowInsertSlideArchive_Kind_name, CommandShowInsertSlideArchive_Kind_value)
	proto.RegisterEnum("KN.SlideCollectionCommandSelectionBehaviorArchive_Type", SlideCollectionCommandSelectionBehaviorArchive_Type_name, SlideCollectionCommandSelectionBehaviorArchive_Type_value)
	proto.RegisterType((*UIStateCommandGroupArchive)(nil), "KN.UIStateCommandGroupArchive")
	proto.RegisterType((*CommandSlideInsertDrawablesArchive)(nil), "KN.CommandSlideInsertDrawablesArchive")
	proto.RegisterType((*CommandSlideSetPlaceholdersForTagsArchive)(nil), "KN.CommandSlideSetPlaceholdersForTagsArchive")
	proto.RegisterType((*CommandSlideRemoveDrawableArchive)(nil), "KN.CommandSlideRemoveDrawableArchive")
	proto.RegisterType((*CommandSlideMoveDrawableZOrderArchive)(nil), "KN.CommandSlideMoveDrawableZOrderArchive")
	proto.RegisterType((*CommandSlidePasteDrawablesArchive)(nil), "KN.CommandSlidePasteDrawablesArchive")
	proto.RegisterType((*CommandSlideNodeSetPropertyArchive)(nil), "KN.CommandSlideNodeSetPropertyArchive")
	proto.RegisterType((*CommandSlideNodeSetPropertyArchive_PropertyValue)(nil), "KN.CommandSlideNodeSetPropertyArchive.PropertyValue")
	proto.RegisterType((*CommandSlideSetValueArchive)(nil), "KN.CommandSlideSetValueArchive")
	proto.RegisterType((*CommandSlideSetValueArchive_PropertyValue)(nil), "KN.CommandSlideSetValueArchive.PropertyValue")
	proto.RegisterType((*CommandSlideSetStyleArchive)(nil), "KN.CommandSlideSetStyleArchive")
	proto.RegisterType((*CommandShowMarkOutOfSyncRecordingArchive)(nil), "KN.CommandShowMarkOutOfSyncRecordingArchive")
	proto.RegisterType((*CommandShowRemoveRecordingArchive)(nil), "KN.CommandShowRemoveRecordingArchive")
	proto.RegisterType((*CommandShowReplaceRecordingArchive)(nil), "KN.CommandShowReplaceRecordingArchive")
	proto.RegisterType((*CommandShowSetValueArchive)(nil), "KN.CommandShowSetValueArchive")
	proto.RegisterType((*CommandShowSetValueArchive_PropertyValue)(nil), "KN.CommandShowSetValueArchive.PropertyValue")
	proto.RegisterType((*CommandShowInsertSlideArchive)(nil), "KN.CommandShowInsertSlideArchive")
	proto.RegisterType((*CommandShowMoveSlideArchive)(nil), "KN.CommandShowMoveSlideArchive")
	proto.RegisterType((*CommandShowRemoveSlideArchive)(nil), "KN.CommandShowRemoveSlideArchive")
	proto.RegisterType((*CommandShowChangeThemeArchive)(nil), "KN.CommandShowChangeThemeArchive")
	proto.RegisterType((*CommandMoveMastersArchive)(nil), "KN.CommandMoveMastersArchive")
	proto.RegisterType((*CommandInsertMasterArchive)(nil), "KN.CommandInsertMasterArchive")
	proto.RegisterType((*CommandRemoveMasterArchive)(nil), "KN.CommandRemoveMasterArchive")
	proto.RegisterType((*CommandRenameMasterArchive)(nil), "KN.CommandRenameMasterArchive")
	proto.RegisterType((*CommandSlideInsertBuildArchive)(nil), "KN.CommandSlideInsertBuildArchive")
	proto.RegisterType((*CommandSlideRemoveBuildArchive)(nil), "KN.CommandSlideRemoveBuildArchive")
	proto.RegisterType((*CommandSlideMoveBuildWithoutMovingChunksArchive)(nil), "KN.CommandSlideMoveBuildWithoutMovingChunksArchive")
	proto.RegisterType((*CommandSlideMoveBuildsArchive)(nil), "KN.CommandSlideMoveBuildsArchive")
	proto.RegisterType((*CommandSlideInsertBuildChunkArchive)(nil), "KN.CommandSlideInsertBuildChunkArchive")
	proto.RegisterType((*CommandSlideRemoveBuildChunkArchive)(nil), "KN.CommandSlideRemoveBuildChunkArchive")
	proto.RegisterType((*CommandSlideMoveBuildChunkArchive)(nil), "KN.CommandSlideMoveBuildChunkArchive")
	proto.RegisterType((*CommandSlideMoveBuildChunksArchive)(nil), "KN.CommandSlideMoveBuildChunksArchive")
	proto.RegisterType((*CommandBuildSetValueArchive)(nil), "KN.CommandBuildSetValueArchive")
	proto.RegisterType((*CommandBuildChunkSetValueArchive)(nil), "KN.CommandBuildChunkSetValueArchive")
	proto.RegisterType((*CommandTransitionSetValueArchive)(nil), "KN.CommandTransitionSetValueArchive")
	proto.RegisterType((*CommandShowSetSlideNumberVisibilityArchive)(nil), "KN.CommandShowSetSlideNumberVisibilityArchive")
	proto.RegisterType((*CommandMasterRescaleArchive)(nil), "KN.CommandMasterRescaleArchive")
	proto.RegisterType((*CommandMasterSetThumbnailTextArchive)(nil), "KN.CommandMasterSetThumbnailTextArchive")
	proto.RegisterType((*CommandMasterSetBodyStylesArchive)(nil), "KN.CommandMasterSetBodyStylesArchive")
	proto.RegisterType((*CommandSlideApplyThemeArchive)(nil), "KN.CommandSlideApplyThemeArchive")
	proto.RegisterType((*CommandChangeMasterSlideArchive)(nil), "KN.CommandChangeMasterSlideArchive")
	proto.RegisterType((*CommandSlidePrimitiveSetMasterArchive)(nil), "KN.CommandSlidePrimitiveSetMasterArchive")
	proto.RegisterType((*CommandSlideReapplyMasterArchive)(nil), "KN.CommandSlideReapplyMasterArchive")
	proto.RegisterType((*CommandShowSetSoundtrack)(nil), "KN.CommandShowSetSoundtrack")
	proto.RegisterType((*CommandSoundtrackSetValue)(nil), "KN.CommandSoundtrackSetValue")
	proto.RegisterType((*CommandSoundtrackSetValue_PropertyValue)(nil), "KN.CommandSoundtrackSetValue.PropertyValue")
	proto.RegisterType((*SlideCollectionCommandSelectionBehaviorArchive)(nil), "KN.SlideCollectionCommandSelectionBehaviorArchive")
	proto.RegisterType((*ChartInfoGeometryCommandArchive)(nil), "KN.ChartInfoGeometryCommandArchive")
}

func init() { proto.RegisterFile("KNCommandArchives.proto", fileDescriptor_fc506070cd6467a6) }

var fileDescriptor_fc506070cd6467a6 = []byte{
	// 3015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x4b, 0x6c, 0x23, 0xc7,
	0xd1, 0xf6, 0xf0, 0x21, 0x89, 0x25, 0x51, 0x92, 0x7b, 0xb5, 0x5a, 0xae, 0xbc, 0xf6, 0xca, 0xe3,
	0xb5, 0x56, 0x7e, 0x51, 0xf6, 0xae, 0x5f, 0x10, 0x7e, 0xfc, 0xb0, 0x1e, 0xb6, 0x97, 0xd0, 0xea,
	0x81, 0x21, 0x6d, 0x03, 0x46, 0x80, 0x41, 0x93, 0xd3, 0x22, 0x3b, 0x1a, 0x4e, 0x13, 0xd3, 0x43,
	0x71, 0xe5, 0x7b, 0x10, 0x20, 0x09, 0x72, 0xcc, 0x2d, 0x17, 0x07, 0x70, 0x80, 0x1c, 0x72, 0x4b,
	0x10, 0x04, 0x06, 0x72, 0xc8, 0x25, 0xa7, 0x38, 0xb7, 0x20, 0x87, 0x24, 0x08, 0x82, 0x20, 0x80,
	0xcf, 0x41, 0x02, 0xe4, 0x10, 0x04, 0xdd, 0x3d, 0x4f, 0x72, 0x46, 0x4f, 0xd3, 0xd8, 0x9c, 0xc8,
	0xee, 0xfa, 0xba, 0xba, 0xba, 0xaa, 0xba, 0xba, 0xbb, 0x6a, 0xe0, 0xc6, 0xce, 0xde, 0x16, 0xeb,
	0x76, 0xb1, 0x63, 0x6d, 0xb8, 0xad, 0x0e, 0x3d, 0x26, 0xbc, 0xda, 0x73, 0x99, 0xc7, 0x50, 0x6e,
	0x67, 0x6f, 0xe9, 0xc9, 0x46, 0xfd, 0x60, 0x97, 0x70, 0x8e, 0xdb, 0x41, 0xb7, 0xe8, 0xda, 0x49,
	0x22, 0x45, 0x57, 0x7d, 0xb4, 0x6b, 0x7b, 0xa8, 0x6b, 0x7e, 0x67, 0x2f, 0xd9, 0xa3, 0xff, 0x21,
	0x0f, 0x4b, 0x1f, 0xd4, 0xea, 0x1e, 0xf6, 0x88, 0x2f, 0xc2, 0xfb, 0x2e, 0xeb, 0xf7, 0x7c, 0x14,
	0xaa, 0x42, 0x91, 0xf7, 0x7b, 0xc4, 0xad, 0x68, 0xcb, 0xb9, 0xd5, 0xe9, 0x7b, 0x95, 0x6a, 0xa3,
	0xbe, 0x53, 0x4d, 0x01, 0x1a, 0x0a, 0x86, 0x56, 0x61, 0xb2, 0x4f, 0x25, 0xb7, 0x4a, 0x4e, 0x8e,
	0x98, 0xad, 0x36, 0xea, 0x07, 0x55, 0x83, 0x1c, 0x12, 0x97, 0x38, 0x2d, 0x62, 0x04, 0x64, 0xb4,
	0x04, 0x53, 0x3d, 0x97, 0xf5, 0x88, 0xeb, 0x9d, 0x54, 0xf2, 0xcb, 0xb9, 0xd5, 0x92, 0x11, 0xb6,
	0xd1, 0x3a, 0xcc, 0x73, 0x9b, 0x5a, 0x64, 0x8f, 0x59, 0x84, 0x37, 0xd8, 0xbb, 0x16, 0xf5, 0x2a,
	0x85, 0xe5, 0x7c, 0x0a, 0xbb, 0x11, 0x1c, 0x7a, 0x00, 0x37, 0xba, 0x98, 0x7b, 0xc4, 0xad, 0xc7,
	0x28, 0x1b, 0xbd, 0x9e, 0x7d, 0x52, 0x29, 0xa6, 0xb2, 0xc8, 0x82, 0xa3, 0xd7, 0x60, 0xd6, 0xeb,
	0xf4, 0xbb, 0x4d, 0x07, 0x53, 0xbb, 0x4e, 0x3f, 0x21, 0xbc, 0x32, 0x21, 0x19, 0x94, 0x24, 0x03,
	0xd1, 0x63, 0x0c, 0x01, 0xd0, 0xff, 0x03, 0xe2, 0xc4, 0x26, 0x2d, 0x8f, 0x58, 0x11, 0xbf, 0xca,
	0x64, 0xea, 0xbc, 0x29, 0x48, 0xf4, 0x10, 0x6e, 0xba, 0x84, 0x7b, 0xcc, 0x25, 0xf5, 0x51, 0x36,
	0x53, 0xa9, 0x6c, 0xb2, 0x07, 0xe8, 0x9f, 0xe5, 0x40, 0xf7, 0x6d, 0x25, 0x7b, 0x6b, 0x0e, 0x27,
	0xae, 0xb7, 0xed, 0xe2, 0x01, 0x6e, 0xda, 0x84, 0x07, 0x36, 0x7e, 0x21, 0x69, 0xe3, 0x6b, 0x71,
	0x1b, 0x0f, 0x99, 0xf7, 0x65, 0x28, 0x85, 0x0a, 0xcf, 0x30, 0x70, 0x04, 0x10, 0x68, 0x2b, 0x98,
	0xac, 0x92, 0x4f, 0x95, 0x3e, 0x02, 0xa0, 0x0a, 0x4c, 0x1e, 0x32, 0x77, 0xdb, 0xc5, 0xed, 0x4a,
	0x61, 0x59, 0x5b, 0x9d, 0x32, 0x82, 0xa6, 0xa0, 0x60, 0xaf, 0xe6, 0x58, 0xe4, 0x51, 0xa5, 0xb8,
	0xac, 0xad, 0x16, 0x8d, 0xa0, 0x89, 0xde, 0x85, 0xdb, 0x7d, 0x4e, 0x4c, 0xd6, 0xfc, 0x26, 0x69,
	0x79, 0x66, 0xcf, 0xc6, 0x2d, 0xd2, 0x61, 0xb6, 0x45, 0x5c, 0xb3, 0x4d, 0x58, 0x97, 0x78, 0xee,
	0x49, 0x65, 0x62, 0x39, 0xb7, 0x3a, 0x65, 0xdc, 0xea, 0x73, 0xb2, 0x2f, 0x51, 0x07, 0x11, 0xe8,
	0x7d, 0x1f, 0xa3, 0xff, 0x47, 0x83, 0x17, 0xe2, 0x8a, 0xaa, 0x93, 0x38, 0x8c, 0xbf, 0xc7, 0xdc,
	0x06, 0x6e, 0x5f, 0x46, 0x5f, 0x77, 0xa0, 0x28, 0xd5, 0x91, 0xa1, 0x2b, 0x45, 0x14, 0x28, 0xea,
	0x1c, 0xb2, 0x2c, 0x1d, 0x29, 0x22, 0x42, 0x50, 0xf0, 0x70, 0x9b, 0xcb, 0x8d, 0x50, 0x32, 0xe4,
	0x7f, 0xf4, 0x12, 0x94, 0x98, 0x6d, 0x99, 0x6a, 0xf4, 0x44, 0xea, 0xe8, 0x29, 0x66, 0x5b, 0x35,
	0xc9, 0xe0, 0x26, 0x88, 0xff, 0xa6, 0x64, 0x52, 0x94, 0x4c, 0x26, 0x99, 0x6d, 0x89, 0x95, 0xe9,
	0x5f, 0xe4, 0xe1, 0xd9, 0xb8, 0x02, 0x0c, 0xd2, 0x65, 0xc7, 0x24, 0xf0, 0x94, 0xb1, 0x3b, 0xca,
	0xdb, 0x30, 0xc7, 0x99, 0xeb, 0x11, 0x6b, 0xfb, 0x0c, 0x77, 0x19, 0x86, 0xa1, 0xb7, 0x60, 0x2e,
	0xf0, 0xa0, 0x9a, 0x63, 0xd1, 0x16, 0x11, 0xfa, 0x11, 0xb3, 0x95, 0xe5, 0x48, 0xe9, 0x25, 0x75,
	0xe2, 0x19, 0xc3, 0x28, 0xb4, 0x0a, 0x73, 0x31, 0x77, 0x69, 0x44, 0x3a, 0x19, 0xee, 0x46, 0x4d,
	0x58, 0x11, 0xfa, 0x35, 0xfb, 0x9c, 0x3a, 0xed, 0x33, 0x5c, 0x4d, 0x4b, 0x91, 0x59, 0x17, 0xa3,
	0x3f, 0x10, 0x83, 0x33, 0x1d, 0x10, 0x1d, 0xc0, 0xf3, 0x16, 0xb5, 0xcc, 0x2e, 0xf6, 0x5a, 0x9d,
	0x53, 0xa7, 0x98, 0x94, 0x3b, 0xe3, 0x59, 0x8b, 0x5a, 0xbb, 0x02, 0x9b, 0xed, 0xd2, 0xdf, 0xcd,
	0xc1, 0xf3, 0x71, 0x8b, 0xee, 0xc6, 0xec, 0xf9, 0xf1, 0xbe, 0x6b, 0x11, 0x77, 0xec, 0x56, 0x3d,
	0x9f, 0x5b, 0xaf, 0xc3, 0x93, 0xc2, 0x2b, 0x99, 0x10, 0x89, 0x04, 0xae, 0x9c, 0x1e, 0xec, 0xe7,
	0x98, 0x6d, 0xed, 0x2b, 0x9c, 0xf2, 0xe8, 0xbb, 0x30, 0x49, 0x85, 0x85, 0x89, 0x30, 0x5e, 0x8a,
	0xd5, 0x03, 0xaa, 0xfe, 0x0f, 0x2d, 0xe9, 0xdf, 0x07, 0x22, 0xe4, 0x5f, 0x25, 0x10, 0xbe, 0x08,
	0x53, 0x2d, 0x45, 0xe0, 0x95, 0x5c, 0xfa, 0xbe, 0x0b, 0xe8, 0x51, 0x10, 0xc8, 0x9f, 0x16, 0x04,
	0x12, 0xc1, 0xb2, 0x70, 0x56, 0xb0, 0xbc, 0x03, 0xd0, 0xc1, 0xdc, 0x6c, 0xf6, 0xa9, 0x6d, 0x71,
	0x19, 0x15, 0xa7, 0xd6, 0x8b, 0x87, 0xd8, 0xe6, 0xc4, 0x28, 0x75, 0x30, 0xdf, 0x94, 0xfd, 0xfa,
	0x6f, 0xf3, 0xc9, 0x03, 0x40, 0x98, 0x45, 0xc4, 0x36, 0xff, 0x9c, 0x1d, 0xbb, 0x07, 0x9c, 0x76,
	0xc6, 0x1f, 0xc8, 0x68, 0xf4, 0x21, 0xb6, 0xfb, 0xc4, 0xdf, 0xb2, 0xaf, 0x57, 0x77, 0xf6, 0xaa,
	0x67, 0x8b, 0x5b, 0x0d, 0xda, 0x72, 0xac, 0x11, 0x72, 0x11, 0x1c, 0x1d, 0x32, 0x50, 0x1c, 0x8b,
	0x57, 0xe1, 0x18, 0x70, 0x59, 0xfa, 0xbe, 0x06, 0xe5, 0x04, 0x0d, 0xdd, 0x82, 0x52, 0x93, 0x31,
	0x5b, 0x4d, 0xa2, 0xc9, 0xcd, 0x18, 0x75, 0xa0, 0x55, 0x28, 0xd2, 0x2e, 0x6e, 0x0b, 0x4b, 0x8b,
	0x48, 0x80, 0xa4, 0x66, 0xb6, 0xb1, 0x87, 0xe3, 0x5e, 0x2f, 0x00, 0xe8, 0x0d, 0x98, 0xb5, 0xb0,
	0x87, 0x9b, 0x98, 0x13, 0x53, 0x0d, 0xc9, 0xa5, 0x06, 0x8f, 0x72, 0x80, 0xaa, 0x09, 0x90, 0xfe,
	0xa7, 0x3c, 0x3c, 0x35, 0x74, 0x50, 0xc9, 0x99, 0xc7, 0x76, 0x34, 0x9d, 0x66, 0xc1, 0xda, 0x88,
	0x05, 0x5f, 0x19, 0xd6, 0xf7, 0x90, 0x7c, 0x99, 0xa6, 0xab, 0x8d, 0x98, 0xee, 0xa2, 0xac, 0x82,
	0xe1, 0xe8, 0x75, 0x28, 0x33, 0xdb, 0x1f, 0xe2, 0x9d, 0xd8, 0x44, 0x5e, 0x00, 0x52, 0x14, 0x9b,
	0x00, 0x2d, 0x7d, 0xeb, 0x82, 0x96, 0x7e, 0x15, 0xa6, 0x55, 0x98, 0x56, 0xf4, 0x74, 0xe3, 0xc5,
	0x21, 0xe8, 0x0e, 0x14, 0x0e, 0xa9, 0x6d, 0xfb, 0xae, 0x31, 0x5f, 0x6d, 0xd4, 0xb7, 0xab, 0xef,
	0x51, 0xdb, 0x0e, 0xcc, 0x22, 0xa9, 0xfa, 0xef, 0xb5, 0x11, 0x03, 0x4b, 0x01, 0xc7, 0x66, 0xe0,
	0x35, 0x98, 0x96, 0x7f, 0x4c, 0x2e, 0x95, 0x95, 0x1e, 0xa2, 0x80, 0x87, 0x9a, 0x42, 0x6f, 0x82,
	0x08, 0xc3, 0x66, 0x7c, 0x50, 0xe1, 0x1c, 0x1a, 0xd6, 0x7f, 0xaa, 0xc1, 0x6a, 0xb0, 0xb2, 0x0e,
	0x1b, 0xec, 0x62, 0xf7, 0x68, 0xbf, 0xef, 0xed, 0x1f, 0xd6, 0x4f, 0x9c, 0x96, 0x41, 0x5a, 0xcc,
	0xb5, 0xa8, 0xd3, 0xbe, 0xc4, 0x32, 0x75, 0x28, 0xf0, 0x0e, 0x1b, 0x64, 0xac, 0x52, 0xd2, 0xd0,
	0x7d, 0xe9, 0x13, 0xa6, 0x1b, 0x4c, 0xe3, 0x1b, 0x61, 0x18, 0x3c, 0xc3, 0x6c, 0x2b, 0x14, 0x45,
	0xff, 0x71, 0xec, 0xcc, 0xe8, 0xb0, 0x81, 0xba, 0x12, 0x3d, 0x96, 0x92, 0xfe, 0x28, 0x76, 0xcf,
	0x97, 0x92, 0xca, 0xab, 0xc3, 0xb8, 0x45, 0xdd, 0x82, 0xeb, 0xae, 0x9a, 0xa9, 0x4b, 0x1c, 0x2f,
	0x21, 0x72, 0xda, 0xa0, 0x85, 0x18, 0x38, 0x14, 0x0d, 0xbd, 0x0e, 0x8b, 0x71, 0x26, 0xdc, 0xc3,
	0xae, 0x67, 0x7a, 0xb4, 0xab, 0x9c, 0x4a, 0x4b, 0x8c, 0xaa, 0x0b, 0x62, 0x83, 0x76, 0xc9, 0xa8,
	0x96, 0x8a, 0xe7, 0xd0, 0xd2, 0x9f, 0xf3, 0xb0, 0x14, 0xd3, 0xd2, 0x15, 0x42, 0xe7, 0x79, 0xb4,
	0x73, 0x7a, 0xe0, 0x94, 0xb7, 0xf6, 0xe3, 0x58, 0xe4, 0x7c, 0x39, 0x1e, 0xee, 0x46, 0xa5, 0x3b,
	0x25, 0x70, 0x96, 0x1c, 0x32, 0xf0, 0x59, 0x15, 0x2f, 0xc3, 0x2a, 0x3c, 0xec, 0x7e, 0x35, 0x12,
	0x02, 0x9f, 0x06, 0x10, 0x11, 0xcf, 0xe7, 0x3e, 0x12, 0x03, 0x9f, 0x85, 0x19, 0x8b, 0xf5, 0x9b,
	0x36, 0xf1, 0x01, 0x22, 0x08, 0x6a, 0xc6, 0xb4, 0xea, 0x53, 0x90, 0x4d, 0x98, 0x13, 0xda, 0x30,
	0xbb, 0xcc, 0x0a, 0x50, 0xc2, 0xa1, 0x67, 0xef, 0x2d, 0x09, 0x21, 0x85, 0x74, 0x81, 0x54, 0x3b,
	0x7b, 0x32, 0x2a, 0x30, 0x8b, 0x18, 0x65, 0xee, 0xff, 0x0b, 0x0e, 0x55, 0xe0, 0xf4, 0x13, 0x12,
	0xaa, 0x4b, 0x4b, 0x3e, 0xc1, 0x4b, 0x82, 0x28, 0x91, 0xfa, 0xa7, 0x79, 0x78, 0x3a, 0xb6, 0x70,
	0xf5, 0xdc, 0x95, 0x21, 0x68, 0x4c, 0x46, 0x4e, 0xdc, 0x86, 0xf2, 0x67, 0xdd, 0x86, 0x9e, 0x01,
	0x68, 0x75, 0xa8, 0x78, 0x8d, 0x89, 0x97, 0xac, 0xb0, 0x7b, 0xd9, 0x88, 0xf5, 0x88, 0x57, 0x50,
	0x0f, 0xbb, 0xc2, 0xd1, 0x43, 0x9e, 0xc5, 0x54, 0x9e, 0xc3, 0x30, 0xf4, 0x10, 0x0a, 0x47, 0xd4,
	0xb1, 0xe4, 0x03, 0x64, 0xf6, 0xde, 0xca, 0x90, 0x03, 0x8c, 0xea, 0xa1, 0xba, 0x43, 0x1d, 0x6b,
	0x7d, 0xfe, 0x48, 0xfc, 0xc4, 0xa8, 0x86, 0xe4, 0xa2, 0x7f, 0x03, 0x0a, 0x82, 0x80, 0x16, 0x60,
	0x04, 0x31, 0xff, 0x04, 0xba, 0x05, 0x95, 0xe1, 0xde, 0xf7, 0x98, 0x2b, 0x2f, 0xd4, 0xf3, 0x1a,
	0x5a, 0x86, 0x5b, 0x29, 0xd4, 0xed, 0x7e, 0xcf, 0xa6, 0x2d, 0xec, 0x91, 0xf9, 0x9c, 0xfe, 0xef,
	0xd8, 0x09, 0x27, 0xed, 0x7c, 0x4c, 0x1e, 0x1f, 0x13, 0xad, 0xc3, 0xfc, 0x90, 0x6e, 0xb3, 0xee,
	0xe2, 0x23, 0x38, 0xa4, 0xc3, 0x4c, 0x60, 0x4c, 0xf9, 0x0e, 0x15, 0xcf, 0xc9, 0xb2, 0x91, 0xe8,
	0xd3, 0xff, 0xa9, 0x25, 0x3c, 0x54, 0x9d, 0x29, 0x8f, 0xcf, 0xf2, 0x53, 0x3c, 0xb0, 0x70, 0x3e,
	0x0f, 0x4c, 0xfa, 0x76, 0x71, 0xd8, 0xb7, 0xf5, 0x9f, 0xe4, 0x12, 0x0b, 0xdf, 0xea, 0x60, 0xa7,
	0x4d, 0x1a, 0x1d, 0xd2, 0x1d, 0xd7, 0xc2, 0xef, 0x40, 0xd1, 0x13, 0xec, 0xb3, 0x1e, 0x5d, 0x92,
	0x18, 0xe4, 0x4f, 0x14, 0x32, 0x7d, 0xa9, 0x22, 0xd6, 0x4a, 0x41, 0xd1, 0x1a, 0x5c, 0xf3, 0x48,
	0xb7, 0x67, 0x63, 0x8f, 0x98, 0xd4, 0x22, 0x8e, 0x47, 0x0f, 0x29, 0x71, 0xe5, 0xd9, 0x53, 0x32,
	0x50, 0x40, 0xaa, 0x85, 0x14, 0xf4, 0x26, 0xdc, 0x90, 0xdc, 0x53, 0x06, 0x4d, 0xc8, 0x41, 0xd7,
	0x05, 0xef, 0x91, 0x71, 0xfa, 0xdf, 0x73, 0x70, 0xd3, 0x5f, 0xb9, 0xd8, 0x1e, 0xbb, 0x32, 0x3f,
	0x79, 0xc9, 0xf4, 0x93, 0x5a, 0x5a, 0xee, 0x34, 0x25, 0xdc, 0x87, 0xb2, 0x4a, 0x81, 0xaa, 0x4b,
	0x5d, 0xd6, 0x7b, 0x7d, 0x26, 0x96, 0x27, 0xe5, 0x68, 0x13, 0xae, 0xf7, 0x5c, 0x72, 0x4c, 0x59,
	0x9f, 0x9b, 0xfe, 0x2b, 0xdb, 0x3c, 0x22, 0x27, 0x59, 0xdb, 0xe5, 0x5a, 0x00, 0xae, 0x29, 0xec,
	0x0e, 0x39, 0xe1, 0x42, 0x3f, 0x23, 0x3c, 0x64, 0x94, 0x0f, 0x36, 0xcf, 0xf5, 0xa1, 0x51, 0x32,
	0xcc, 0x73, 0xf4, 0x00, 0x2a, 0x87, 0xd4, 0xc1, 0xb6, 0xe9, 0x8b, 0x8d, 0x5d, 0x57, 0xb8, 0x93,
	0xb8, 0x23, 0x64, 0x24, 0xc1, 0x16, 0x25, 0x5e, 0x29, 0x72, 0x23, 0x42, 0xeb, 0xdf, 0xce, 0x85,
	0x77, 0x02, 0x15, 0xb1, 0x02, 0xc8, 0x98, 0x54, 0xbd, 0x0e, 0x4f, 0xc6, 0x55, 0x6d, 0x3a, 0xd9,
	0xdb, 0x72, 0x6e, 0x28, 0x2d, 0x8d, 0xee, 0xc2, 0x1c, 0x95, 0x32, 0x52, 0xe6, 0x28, 0x75, 0xf9,
	0x67, 0xc8, 0x6c, 0xd8, 0xad, 0xce, 0x91, 0xfb, 0xb0, 0x38, 0xc0, 0x42, 0xa3, 0xa2, 0x97, 0x58,
	0xe6, 0x80, 0x7a, 0x1d, 0xd3, 0x72, 0x59, 0x4f, 0xee, 0xcb, 0x29, 0xe3, 0xda, 0x00, 0xf3, 0x9a,
	0x4f, 0xfc, 0x88, 0x7a, 0x9d, 0x6d, 0x97, 0xf5, 0xf4, 0x1f, 0x44, 0x9a, 0x50, 0x51, 0xe9, 0x31,
	0xd6, 0xc4, 0xf3, 0x30, 0x9b, 0xf4, 0x1b, 0x5f, 0x11, 0xe5, 0x84, 0xbb, 0xa0, 0x6d, 0x58, 0xf4,
	0xa7, 0x68, 0xc9, 0x70, 0x63, 0x86, 0x19, 0x9b, 0xf4, 0xeb, 0xe2, 0x82, 0x42, 0xab, 0xd8, 0xe4,
	0xaf, 0x8d, 0xeb, 0xbf, 0xd6, 0x62, 0x8a, 0x71, 0x70, 0xf7, 0xf2, 0x8a, 0x79, 0x0d, 0x66, 0xe2,
	0x4b, 0xce, 0xd0, 0xcf, 0x74, 0x6c, 0xb5, 0xe8, 0x36, 0xf8, 0x4d, 0x53, 0xcc, 0xec, 0x5f, 0x24,
	0x41, 0x75, 0xed, 0xe1, 0x2e, 0x41, 0x2b, 0xea, 0x35, 0x16, 0x07, 0x15, 0x24, 0x48, 0x5c, 0x90,
	0x77, 0x43, 0x9c, 0xfe, 0x37, 0x0d, 0x9e, 0x19, 0x2d, 0x05, 0xc8, 0x34, 0xd1, 0xd7, 0x91, 0x07,
	0x94, 0x79, 0xaa, 0xac, 0x50, 0x2c, 0x89, 0x68, 0x01, 0x8a, 0x71, 0x5b, 0xaa, 0x06, 0xaa, 0x02,
	0xe2, 0x1d, 0xd6, 0xb7, 0xad, 0x2d, 0x97, 0x60, 0x8f, 0x6c, 0x75, 0xfa, 0xce, 0x91, 0x9f, 0xef,
	0x32, 0x52, 0x28, 0xfa, 0xcf, 0x86, 0xd6, 0xa9, 0x7c, 0xf9, 0xb1, 0x5f, 0xa7, 0xfe, 0xb9, 0x06,
	0x6b, 0xc3, 0xe9, 0x5a, 0x29, 0xb5, 0xd8, 0xa0, 0xac, 0xef, 0xed, 0xb2, 0x63, 0xea, 0xb4, 0xd5,
	0x22, 0xc7, 0xbe, 0x90, 0x50, 0xc4, 0x7c, 0xdc, 0x14, 0x4b, 0xa0, 0x4a, 0x09, 0x91, 0xec, 0x61,
	0x5b, 0xff, 0x5e, 0xec, 0x5e, 0x93, 0x10, 0xff, 0x32, 0xc2, 0xae, 0xc0, 0x84, 0x9f, 0xd7, 0x4c,
	0xcf, 0xac, 0xfa, 0x54, 0x54, 0x81, 0x49, 0x8f, 0xd5, 0x7c, 0x41, 0xb5, 0xd5, 0xb2, 0x11, 0x34,
	0xc5, 0x9e, 0x7d, 0x2e, 0xc3, 0xdb, 0xa5, 0x0a, 0xc7, 0x96, 0x4d, 0x79, 0x03, 0xa0, 0x19, 0xce,
	0xe2, 0xfb, 0xc1, 0x75, 0x71, 0x1d, 0x1f, 0x99, 0xdb, 0x88, 0x01, 0x33, 0x7c, 0x62, 0x78, 0x15,
	0x31, 0x5f, 0xfe, 0x1f, 0x5a, 0xc5, 0x67, 0x43, 0xa9, 0xf7, 0xdd, 0xaf, 0x67, 0x0d, 0x17, 0xf7,
	0xe1, 0x4f, 0xb5, 0x64, 0xb2, 0x3c, 0x29, 0xe8, 0x65, 0x1c, 0xf9, 0x2d, 0x98, 0x8e, 0xd4, 0x13,
	0x78, 0x73, 0x86, 0x22, 0xe3, 0xc8, 0x53, 0x3c, 0xfb, 0xf3, 0x28, 0x01, 0x2c, 0x79, 0x5c, 0x2d,
	0x01, 0xac, 0xc2, 0x55, 0xee, 0xb4, 0x70, 0x75, 0x5a, 0x1e, 0xa3, 0x02, 0x93, 0xe4, 0xf0, 0x90,
	0xb4, 0xbc, 0xa0, 0x28, 0x19, 0x34, 0x85, 0xf6, 0xbd, 0x93, 0x1e, 0x09, 0x6a, 0x6a, 0xaa, 0x21,
	0x1e, 0x09, 0x16, 0xb1, 0xe9, 0x31, 0x71, 0xa9, 0x5f, 0x4c, 0x2f, 0x19, 0xb1, 0x1e, 0x49, 0xa7,
	0x2e, 0x69, 0x89, 0xab, 0x8c, 0xaa, 0x9a, 0x97, 0x8d, 0x58, 0x0f, 0xba, 0x05, 0x25, 0xab, 0xef,
	0x62, 0x45, 0x9e, 0x5a, 0xce, 0xaf, 0x6a, 0x46, 0xd4, 0x81, 0x16, 0x61, 0xc2, 0x22, 0x36, 0x3e,
	0xe1, 0x95, 0x92, 0x24, 0xf9, 0x2d, 0x74, 0x0f, 0x16, 0xe4, 0xbf, 0x8d, 0xbe, 0xc7, 0xba, 0xd8,
	0xa3, 0xad, 0x8d, 0x43, 0x71, 0x9d, 0xae, 0x80, 0x44, 0xa5, 0xd2, 0xd0, 0xab, 0x70, 0x2d, 0xd9,
	0x2f, 0xc2, 0x30, 0xaf, 0x4c, 0xcb, 0x21, 0x69, 0x24, 0x74, 0x07, 0xca, 0xe4, 0x98, 0x38, 0x5e,
	0xc3, 0xa5, 0xed, 0xb6, 0x60, 0x3f, 0xb3, 0x9c, 0x5f, 0x9d, 0x32, 0x92, 0x9d, 0xfa, 0x2f, 0x72,
	0xb0, 0x1c, 0x37, 0x9f, 0xb4, 0xf7, 0x15, 0x6c, 0x98, 0xdc, 0xa9, 0xb9, 0xf3, 0xee, 0xd4, 0xd3,
	0x8c, 0x7a, 0x0b, 0x4a, 0xae, 0x72, 0x02, 0xdf, 0xac, 0x65, 0x23, 0xea, 0x10, 0x26, 0xc2, 0xc1,
	0xc2, 0x95, 0x75, 0xa7, 0x8c, 0x58, 0x4f, 0xd2, 0x44, 0x13, 0xd9, 0x26, 0x9a, 0x4c, 0x98, 0x48,
	0x87, 0x19, 0x66, 0x5b, 0xfb, 0x03, 0x47, 0xdd, 0xf0, 0x2b, 0x53, 0xf2, 0x7c, 0x4f, 0xf4, 0xe9,
	0xff, 0x8a, 0x54, 0xd7, 0x70, 0xb1, 0xc3, 0xa9, 0x60, 0x79, 0x05, 0xd5, 0x7d, 0x75, 0x95, 0xac,
	0xec, 0x6d, 0xb0, 0x08, 0x13, 0x7d, 0xa7, 0xcf, 0x89, 0xe5, 0xef, 0x03, 0xbf, 0x25, 0x46, 0xa8,
	0x7f, 0xf7, 0xfc, 0x5d, 0x10, 0x34, 0x23, 0xca, 0x7d, 0xa9, 0xa2, 0x90, 0x72, 0xff, 0x0c, 0xe7,
	0x4f, 0x6e, 0x9d, 0xd2, 0xc8, 0xd6, 0xd1, 0x61, 0x86, 0xf2, 0x8d, 0xc8, 0x72, 0x20, 0x2d, 0x97,
	0xe8, 0x8b, 0x59, 0x67, 0x3a, 0x6e, 0x1d, 0xfd, 0x2f, 0x1a, 0xbc, 0x98, 0xcc, 0x27, 0xaa, 0xab,
	0x78, 0xbf, 0xdb, 0x24, 0xee, 0x87, 0x94, 0xd3, 0x26, 0xb5, 0xe9, 0xa5, 0xaa, 0x89, 0xe7, 0x79,
	0xc8, 0xbf, 0x0a, 0xd7, 0x78, 0x34, 0x1d, 0x97, 0xf3, 0xf9, 0x85, 0x8a, 0x29, 0x23, 0x8d, 0x84,
	0xee, 0xc1, 0x4c, 0xcf, 0x65, 0xc7, 0xd4, 0x22, 0xee, 0x07, 0x8e, 0xc5, 0xfc, 0x94, 0xe1, 0xc8,
	0x73, 0x36, 0x8e, 0xd1, 0x7b, 0x61, 0x58, 0x55, 0x97, 0x66, 0x83, 0xf0, 0x16, 0xbe, 0x54, 0xd9,
	0x65, 0x05, 0x26, 0xd4, 0x6d, 0x3c, 0x63, 0x55, 0x3e, 0x55, 0xff, 0x8d, 0x06, 0x77, 0x12, 0x53,
	0xd6, 0x89, 0xd7, 0x08, 0xbe, 0x26, 0x6a, 0x90, 0x47, 0xde, 0xf8, 0xe6, 0x46, 0x37, 0x60, 0x92,
	0x72, 0xb3, 0xc9, 0xac, 0x13, 0x5f, 0x8f, 0x13, 0x94, 0x6f, 0x32, 0xeb, 0x04, 0xdd, 0x94, 0x75,
	0x38, 0xd3, 0x23, 0x8f, 0x3c, 0xa9, 0xb6, 0x92, 0x31, 0xe9, 0x90, 0x81, 0x90, 0x26, 0xfc, 0x7a,
	0x44, 0x90, 0x54, 0xca, 0x43, 0x7e, 0x3d, 0x42, 0x1e, 0x79, 0xfa, 0x97, 0xb9, 0xf0, 0x88, 0x0f,
	0x97, 0x22, 0xd8, 0xc9, 0xc2, 0x0f, 0x1f, 0xe3, 0x3a, 0xde, 0x81, 0x05, 0x21, 0x6e, 0x0f, 0xbb,
	0xb8, 0xed, 0xe2, 0x5e, 0x47, 0xd5, 0xa3, 0xb2, 0x12, 0x18, 0xc8, 0x21, 0x83, 0x83, 0x00, 0xaa,
	0x64, 0x43, 0x6f, 0xc2, 0x9c, 0xe0, 0x60, 0x53, 0xee, 0x05, 0x83, 0xd3, 0x13, 0x18, 0x65, 0x87,
	0x0c, 0x1e, 0x52, 0xee, 0xf9, 0xe3, 0xde, 0x81, 0x05, 0xa1, 0x8d, 0x91, 0x99, 0xd3, 0x3f, 0x31,
	0x43, 0xcc, 0xb6, 0x52, 0x66, 0x16, 0x1c, 0xe2, 0x33, 0xa7, 0xe7, 0x2e, 0xc4, 0x4b, 0x2e, 0x9a,
	0x59, 0xff, 0xce, 0xd0, 0x55, 0x5b, 0x7e, 0xab, 0x96, 0xc8, 0xa4, 0xbd, 0x9d, 0x54, 0xb4, 0x5e,
	0x6d, 0xd4, 0xeb, 0xd5, 0x08, 0xb6, 0xd5, 0x11, 0xe7, 0x40, 0xaa, 0xde, 0xd7, 0xa0, 0xd0, 0xb4,
	0x59, 0xd3, 0xd7, 0xfa, 0x53, 0xe2, 0x20, 0xd9, 0x8d, 0xbd, 0x89, 0x37, 0x6d, 0xd6, 0x0c, 0xcb,
	0x95, 0x02, 0xa8, 0xff, 0x51, 0x83, 0xdb, 0x3e, 0x2b, 0x05, 0xd9, 0x8d, 0x1e, 0xaf, 0x63, 0xbb,
	0xda, 0x45, 0xde, 0x91, 0x3f, 0xd5, 0x3b, 0x36, 0x60, 0x21, 0xfe, 0x0d, 0x4d, 0xf8, 0xfa, 0x4f,
	0xcf, 0xf3, 0x5d, 0x8b, 0x61, 0xc3, 0xc7, 0xff, 0x17, 0x5a, 0xf2, 0x2b, 0x9a, 0x03, 0x97, 0x76,
	0xa9, 0x47, 0x8f, 0x49, 0x9d, 0x5c, 0x29, 0x55, 0xf4, 0x15, 0xae, 0xf2, 0x15, 0x80, 0x28, 0x03,
	0x90, 0xb1, 0xb6, 0x52, 0x98, 0x0c, 0xd0, 0x7f, 0xa8, 0x85, 0xc7, 0xa8, 0xff, 0xa8, 0xc0, 0xc2,
	0x33, 0x2e, 0xbd, 0x98, 0x3d, 0x78, 0xca, 0x55, 0x2c, 0x4c, 0xdc, 0x6a, 0xf5, 0xbb, 0x7d, 0x1b,
	0x7b, 0xc4, 0x0a, 0x94, 0x9d, 0xb1, 0xc4, 0x9b, 0xfe, 0x90, 0x8d, 0x68, 0x84, 0xcf, 0x5d, 0xff,
	0x9d, 0x06, 0x95, 0xa1, 0xc3, 0x86, 0xf5, 0x1d, 0xcb, 0x73, 0x71, 0xeb, 0xe8, 0x72, 0x47, 0x8b,
	0x96, 0x79, 0xb4, 0x54, 0x01, 0x78, 0xc8, 0x3c, 0xa3, 0xd2, 0x1a, 0x43, 0xa0, 0x37, 0x60, 0x56,
	0x96, 0xbe, 0xa3, 0x31, 0xe9, 0x47, 0x8b, 0xac, 0x7c, 0x87, 0x20, 0xfd, 0xaf, 0xf9, 0x30, 0x9d,
	0x1b, 0xf5, 0x06, 0x37, 0x97, 0x8b, 0xac, 0x29, 0x29, 0x6f, 0xee, 0x4c, 0x79, 0x93, 0x97, 0x16,
	0x2d, 0x71, 0x69, 0x79, 0x90, 0xac, 0x41, 0x0a, 0x56, 0x2f, 0xc5, 0xeb, 0x46, 0x23, 0x82, 0x66,
	0x96, 0x20, 0x1f, 0x24, 0x4b, 0x90, 0x17, 0xe7, 0x14, 0x56, 0x20, 0x7f, 0x39, 0x52, 0x81, 0x1c,
	0x2e, 0x31, 0x6a, 0xa3, 0x25, 0xc6, 0xff, 0x03, 0x88, 0x55, 0x17, 0x73, 0xb2, 0x02, 0xf6, 0xb4,
	0xac, 0x2e, 0x86, 0x13, 0xc7, 0xfe, 0xca, 0x02, 0x63, 0xa9, 0x1b, 0x16, 0x17, 0x1f, 0xc0, 0x62,
	0x97, 0x58, 0x14, 0x9b, 0x6e, 0xa0, 0xc1, 0x20, 0x03, 0xad, 0xce, 0x90, 0xb4, 0x4f, 0x78, 0x16,
	0xe4, 0x88, 0xb0, 0xad, 0x92, 0xd2, 0xfa, 0x97, 0x79, 0xa8, 0xca, 0x1d, 0xb5, 0xc5, 0x6c, 0x5b,
	0x5d, 0xbb, 0x02, 0x0d, 0x10, 0xbf, 0xbd, 0x49, 0x3a, 0xf8, 0x98, 0xb2, 0x70, 0x9b, 0x6d, 0xc3,
	0x22, 0x56, 0x7f, 0x2d, 0x53, 0xa8, 0x90, 0x07, 0x40, 0xb9, 0xce, 0x94, 0x04, 0x65, 0x80, 0xde,
	0x23, 0x83, 0x90, 0x69, 0x82, 0x8b, 0x74, 0xcf, 0x90, 0x4b, 0xee, 0x74, 0x2e, 0xfb, 0x76, 0x24,
	0x1a, 0xe2, 0x50, 0x10, 0x8f, 0x34, 0xbf, 0x3c, 0xfb, 0x96, 0x54, 0xe0, 0x85, 0x56, 0x53, 0x6d,
	0x9c, 0xf4, 0xc8, 0xfa, 0x8a, 0xac, 0xfe, 0xf9, 0x9f, 0xae, 0x0c, 0x01, 0x05, 0xe0, 0x7d, 0xe2,
	0x10, 0x17, 0xdb, 0x86, 0x9c, 0x4c, 0xff, 0xb9, 0x06, 0x05, 0xd1, 0x8b, 0x5e, 0x84, 0x73, 0x0e,
	0x9c, 0x7f, 0x02, 0xbd, 0x0c, 0xab, 0x67, 0x60, 0x6b, 0x41, 0x3e, 0x7c, 0x5e, 0x43, 0x2f, 0xc1,
	0xdd, 0x33, 0xd0, 0xdb, 0xc4, 0x26, 0x12, 0x9c, 0x43, 0x77, 0xe1, 0xb9, 0x33, 0xc0, 0xbb, 0xec,
	0x98, 0xcc, 0xe7, 0xf5, 0x87, 0x70, 0x7b, 0xab, 0x83, 0x5d, 0xaf, 0xe6, 0x1c, 0xb2, 0xe0, 0x93,
	0xcb, 0xe4, 0x9e, 0xbd, 0xc0, 0xbe, 0xde, 0x5c, 0xf9, 0xf8, 0x4e, 0x9b, 0x7a, 0x9d, 0x7e, 0xb3,
	0xda, 0x62, 0xdd, 0xb5, 0x4f, 0x68, 0xb7, 0x89, 0x9b, 0x98, 0xad, 0x59, 0xac, 0xd5, 0x62, 0xce,
	0xf1, 0x1a, 0xfd, 0x88, 0xb9, 0x47, 0x6b, 0x3b, 0x7b, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xca,
	0x88, 0xe0, 0xb1, 0x27, 0x30, 0x00, 0x00,
}
